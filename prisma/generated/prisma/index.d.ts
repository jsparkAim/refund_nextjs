
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model aim_example_test
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type aim_example_test = $Result.DefaultSelection<Prisma.$aim_example_testPayload>
/**
 * Model sc_mbr
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sc_mbr = $Result.DefaultSelection<Prisma.$sc_mbrPayload>
/**
 * Model sc_mbr_lgn_hist
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sc_mbr_lgn_hist = $Result.DefaultSelection<Prisma.$sc_mbr_lgn_histPayload>
/**
 * Model sc_mbr_log
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sc_mbr_log = $Result.DefaultSelection<Prisma.$sc_mbr_logPayload>
/**
 * Model sc_mbr_prjt
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sc_mbr_prjt = $Result.DefaultSelection<Prisma.$sc_mbr_prjtPayload>
/**
 * Model sc_mbr_trms_agr_hist
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sc_mbr_trms_agr_hist = $Result.DefaultSelection<Prisma.$sc_mbr_trms_agr_histPayload>
/**
 * Model sc_mbr_trms_agr_scr_hist
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sc_mbr_trms_agr_scr_hist = $Result.DefaultSelection<Prisma.$sc_mbr_trms_agr_scr_histPayload>
/**
 * Model sc_prjt
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sc_prjt = $Result.DefaultSelection<Prisma.$sc_prjtPayload>
/**
 * Model sc_token_hist
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sc_token_hist = $Result.DefaultSelection<Prisma.$sc_token_histPayload>
/**
 * Model sv_faq
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_faq = $Result.DefaultSelection<Prisma.$sv_faqPayload>
/**
 * Model sv_faq_atch_file
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_faq_atch_file = $Result.DefaultSelection<Prisma.$sv_faq_atch_filePayload>
/**
 * Model sv_faq_cate_cd
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_faq_cate_cd = $Result.DefaultSelection<Prisma.$sv_faq_cate_cdPayload>
/**
 * Model sv_faq_keyword
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_faq_keyword = $Result.DefaultSelection<Prisma.$sv_faq_keywordPayload>
/**
 * Model sv_faq_rel_faq
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_faq_rel_faq = $Result.DefaultSelection<Prisma.$sv_faq_rel_faqPayload>
/**
 * Model sv_inq
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_inq = $Result.DefaultSelection<Prisma.$sv_inqPayload>
/**
 * Model sv_inq_ans
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_inq_ans = $Result.DefaultSelection<Prisma.$sv_inq_ansPayload>
/**
 * Model sv_inq_atch_file
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_inq_atch_file = $Result.DefaultSelection<Prisma.$sv_inq_atch_filePayload>
/**
 * Model sv_inq_clsf
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_inq_clsf = $Result.DefaultSelection<Prisma.$sv_inq_clsfPayload>
/**
 * Model sv_ntc
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_ntc = $Result.DefaultSelection<Prisma.$sv_ntcPayload>
/**
 * Model sv_ntc_atch_file
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_ntc_atch_file = $Result.DefaultSelection<Prisma.$sv_ntc_atch_filePayload>
/**
 * Model sv_popup
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_popup = $Result.DefaultSelection<Prisma.$sv_popupPayload>
/**
 * Model sv_progm
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_progm = $Result.DefaultSelection<Prisma.$sv_progmPayload>
/**
 * Model sv_sms_sndng
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_sms_sndng = $Result.DefaultSelection<Prisma.$sv_sms_sndngPayload>
/**
 * Model sv_sms_tmpl
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_sms_tmpl = $Result.DefaultSelection<Prisma.$sv_sms_tmplPayload>
/**
 * Model sv_trms
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_trms = $Result.DefaultSelection<Prisma.$sv_trmsPayload>
/**
 * Model sv_trms_hist
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sv_trms_hist = $Result.DefaultSelection<Prisma.$sv_trms_histPayload>
/**
 * Model sy_atch_file_mng
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_atch_file_mng = $Result.DefaultSelection<Prisma.$sy_atch_file_mngPayload>
/**
 * Model sy_auth
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_auth = $Result.DefaultSelection<Prisma.$sy_authPayload>
/**
 * Model sy_auth_grp
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_auth_grp = $Result.DefaultSelection<Prisma.$sy_auth_grpPayload>
/**
 * Model sy_clco
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_clco = $Result.DefaultSelection<Prisma.$sy_clcoPayload>
/**
 * Model sy_clco_dept
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_clco_dept = $Result.DefaultSelection<Prisma.$sy_clco_deptPayload>
/**
 * Model sy_dtl_cd
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_dtl_cd = $Result.DefaultSelection<Prisma.$sy_dtl_cdPayload>
/**
 * Model sy_excel_hist
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_excel_hist = $Result.DefaultSelection<Prisma.$sy_excel_histPayload>
/**
 * Model sy_grp_cd
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_grp_cd = $Result.DefaultSelection<Prisma.$sy_grp_cdPayload>
/**
 * Model sy_menu
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_menu = $Result.DefaultSelection<Prisma.$sy_menuPayload>
/**
 * Model sy_mngr
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_mngr = $Result.DefaultSelection<Prisma.$sy_mngrPayload>
/**
 * Model sy_mngr_auth_grp
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_mngr_auth_grp = $Result.DefaultSelection<Prisma.$sy_mngr_auth_grpPayload>
/**
 * Model sy_mngr_auth_grp_hist
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_mngr_auth_grp_hist = $Result.DefaultSelection<Prisma.$sy_mngr_auth_grp_histPayload>
/**
 * Model sy_mngr_lgn_hist
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_mngr_lgn_hist = $Result.DefaultSelection<Prisma.$sy_mngr_lgn_histPayload>
/**
 * Model sy_mngr_pwd_hist
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_mngr_pwd_hist = $Result.DefaultSelection<Prisma.$sy_mngr_pwd_histPayload>
/**
 * Model sy_mngr_req_hist
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sy_mngr_req_hist = $Result.DefaultSelection<Prisma.$sy_mngr_req_histPayload>
/**
 * Model test_user
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type test_user = $Result.DefaultSelection<Prisma.$test_userPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const test_user_gender: {
  M: 'M',
  W: 'W',
  U: 'U'
};

export type test_user_gender = (typeof test_user_gender)[keyof typeof test_user_gender]

}

export type test_user_gender = $Enums.test_user_gender

export const test_user_gender: typeof $Enums.test_user_gender

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Aim_example_tests
 * const aim_example_tests = await prisma.aim_example_test.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Aim_example_tests
   * const aim_example_tests = await prisma.aim_example_test.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.aim_example_test`: Exposes CRUD operations for the **aim_example_test** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Aim_example_tests
    * const aim_example_tests = await prisma.aim_example_test.findMany()
    * ```
    */
  get aim_example_test(): Prisma.aim_example_testDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sc_mbr`: Exposes CRUD operations for the **sc_mbr** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sc_mbrs
    * const sc_mbrs = await prisma.sc_mbr.findMany()
    * ```
    */
  get sc_mbr(): Prisma.sc_mbrDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sc_mbr_lgn_hist`: Exposes CRUD operations for the **sc_mbr_lgn_hist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sc_mbr_lgn_hists
    * const sc_mbr_lgn_hists = await prisma.sc_mbr_lgn_hist.findMany()
    * ```
    */
  get sc_mbr_lgn_hist(): Prisma.sc_mbr_lgn_histDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sc_mbr_log`: Exposes CRUD operations for the **sc_mbr_log** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sc_mbr_logs
    * const sc_mbr_logs = await prisma.sc_mbr_log.findMany()
    * ```
    */
  get sc_mbr_log(): Prisma.sc_mbr_logDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sc_mbr_prjt`: Exposes CRUD operations for the **sc_mbr_prjt** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sc_mbr_prjts
    * const sc_mbr_prjts = await prisma.sc_mbr_prjt.findMany()
    * ```
    */
  get sc_mbr_prjt(): Prisma.sc_mbr_prjtDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sc_mbr_trms_agr_hist`: Exposes CRUD operations for the **sc_mbr_trms_agr_hist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sc_mbr_trms_agr_hists
    * const sc_mbr_trms_agr_hists = await prisma.sc_mbr_trms_agr_hist.findMany()
    * ```
    */
  get sc_mbr_trms_agr_hist(): Prisma.sc_mbr_trms_agr_histDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sc_mbr_trms_agr_scr_hist`: Exposes CRUD operations for the **sc_mbr_trms_agr_scr_hist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sc_mbr_trms_agr_scr_hists
    * const sc_mbr_trms_agr_scr_hists = await prisma.sc_mbr_trms_agr_scr_hist.findMany()
    * ```
    */
  get sc_mbr_trms_agr_scr_hist(): Prisma.sc_mbr_trms_agr_scr_histDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sc_prjt`: Exposes CRUD operations for the **sc_prjt** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sc_prjts
    * const sc_prjts = await prisma.sc_prjt.findMany()
    * ```
    */
  get sc_prjt(): Prisma.sc_prjtDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sc_token_hist`: Exposes CRUD operations for the **sc_token_hist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sc_token_hists
    * const sc_token_hists = await prisma.sc_token_hist.findMany()
    * ```
    */
  get sc_token_hist(): Prisma.sc_token_histDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_faq`: Exposes CRUD operations for the **sv_faq** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_faqs
    * const sv_faqs = await prisma.sv_faq.findMany()
    * ```
    */
  get sv_faq(): Prisma.sv_faqDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_faq_atch_file`: Exposes CRUD operations for the **sv_faq_atch_file** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_faq_atch_files
    * const sv_faq_atch_files = await prisma.sv_faq_atch_file.findMany()
    * ```
    */
  get sv_faq_atch_file(): Prisma.sv_faq_atch_fileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_faq_cate_cd`: Exposes CRUD operations for the **sv_faq_cate_cd** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_faq_cate_cds
    * const sv_faq_cate_cds = await prisma.sv_faq_cate_cd.findMany()
    * ```
    */
  get sv_faq_cate_cd(): Prisma.sv_faq_cate_cdDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_faq_keyword`: Exposes CRUD operations for the **sv_faq_keyword** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_faq_keywords
    * const sv_faq_keywords = await prisma.sv_faq_keyword.findMany()
    * ```
    */
  get sv_faq_keyword(): Prisma.sv_faq_keywordDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_faq_rel_faq`: Exposes CRUD operations for the **sv_faq_rel_faq** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_faq_rel_faqs
    * const sv_faq_rel_faqs = await prisma.sv_faq_rel_faq.findMany()
    * ```
    */
  get sv_faq_rel_faq(): Prisma.sv_faq_rel_faqDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_inq`: Exposes CRUD operations for the **sv_inq** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_inqs
    * const sv_inqs = await prisma.sv_inq.findMany()
    * ```
    */
  get sv_inq(): Prisma.sv_inqDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_inq_ans`: Exposes CRUD operations for the **sv_inq_ans** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_inq_ans
    * const sv_inq_ans = await prisma.sv_inq_ans.findMany()
    * ```
    */
  get sv_inq_ans(): Prisma.sv_inq_ansDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_inq_atch_file`: Exposes CRUD operations for the **sv_inq_atch_file** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_inq_atch_files
    * const sv_inq_atch_files = await prisma.sv_inq_atch_file.findMany()
    * ```
    */
  get sv_inq_atch_file(): Prisma.sv_inq_atch_fileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_inq_clsf`: Exposes CRUD operations for the **sv_inq_clsf** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_inq_clsfs
    * const sv_inq_clsfs = await prisma.sv_inq_clsf.findMany()
    * ```
    */
  get sv_inq_clsf(): Prisma.sv_inq_clsfDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_ntc`: Exposes CRUD operations for the **sv_ntc** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_ntcs
    * const sv_ntcs = await prisma.sv_ntc.findMany()
    * ```
    */
  get sv_ntc(): Prisma.sv_ntcDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_ntc_atch_file`: Exposes CRUD operations for the **sv_ntc_atch_file** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_ntc_atch_files
    * const sv_ntc_atch_files = await prisma.sv_ntc_atch_file.findMany()
    * ```
    */
  get sv_ntc_atch_file(): Prisma.sv_ntc_atch_fileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_popup`: Exposes CRUD operations for the **sv_popup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_popups
    * const sv_popups = await prisma.sv_popup.findMany()
    * ```
    */
  get sv_popup(): Prisma.sv_popupDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_progm`: Exposes CRUD operations for the **sv_progm** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_progms
    * const sv_progms = await prisma.sv_progm.findMany()
    * ```
    */
  get sv_progm(): Prisma.sv_progmDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_sms_sndng`: Exposes CRUD operations for the **sv_sms_sndng** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_sms_sndngs
    * const sv_sms_sndngs = await prisma.sv_sms_sndng.findMany()
    * ```
    */
  get sv_sms_sndng(): Prisma.sv_sms_sndngDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_sms_tmpl`: Exposes CRUD operations for the **sv_sms_tmpl** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_sms_tmpls
    * const sv_sms_tmpls = await prisma.sv_sms_tmpl.findMany()
    * ```
    */
  get sv_sms_tmpl(): Prisma.sv_sms_tmplDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_trms`: Exposes CRUD operations for the **sv_trms** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_trms
    * const sv_trms = await prisma.sv_trms.findMany()
    * ```
    */
  get sv_trms(): Prisma.sv_trmsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sv_trms_hist`: Exposes CRUD operations for the **sv_trms_hist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sv_trms_hists
    * const sv_trms_hists = await prisma.sv_trms_hist.findMany()
    * ```
    */
  get sv_trms_hist(): Prisma.sv_trms_histDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_atch_file_mng`: Exposes CRUD operations for the **sy_atch_file_mng** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_atch_file_mngs
    * const sy_atch_file_mngs = await prisma.sy_atch_file_mng.findMany()
    * ```
    */
  get sy_atch_file_mng(): Prisma.sy_atch_file_mngDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_auth`: Exposes CRUD operations for the **sy_auth** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_auths
    * const sy_auths = await prisma.sy_auth.findMany()
    * ```
    */
  get sy_auth(): Prisma.sy_authDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_auth_grp`: Exposes CRUD operations for the **sy_auth_grp** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_auth_grps
    * const sy_auth_grps = await prisma.sy_auth_grp.findMany()
    * ```
    */
  get sy_auth_grp(): Prisma.sy_auth_grpDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_clco`: Exposes CRUD operations for the **sy_clco** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_clcos
    * const sy_clcos = await prisma.sy_clco.findMany()
    * ```
    */
  get sy_clco(): Prisma.sy_clcoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_clco_dept`: Exposes CRUD operations for the **sy_clco_dept** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_clco_depts
    * const sy_clco_depts = await prisma.sy_clco_dept.findMany()
    * ```
    */
  get sy_clco_dept(): Prisma.sy_clco_deptDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_dtl_cd`: Exposes CRUD operations for the **sy_dtl_cd** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_dtl_cds
    * const sy_dtl_cds = await prisma.sy_dtl_cd.findMany()
    * ```
    */
  get sy_dtl_cd(): Prisma.sy_dtl_cdDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_excel_hist`: Exposes CRUD operations for the **sy_excel_hist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_excel_hists
    * const sy_excel_hists = await prisma.sy_excel_hist.findMany()
    * ```
    */
  get sy_excel_hist(): Prisma.sy_excel_histDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_grp_cd`: Exposes CRUD operations for the **sy_grp_cd** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_grp_cds
    * const sy_grp_cds = await prisma.sy_grp_cd.findMany()
    * ```
    */
  get sy_grp_cd(): Prisma.sy_grp_cdDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_menu`: Exposes CRUD operations for the **sy_menu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_menus
    * const sy_menus = await prisma.sy_menu.findMany()
    * ```
    */
  get sy_menu(): Prisma.sy_menuDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_mngr`: Exposes CRUD operations for the **sy_mngr** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_mngrs
    * const sy_mngrs = await prisma.sy_mngr.findMany()
    * ```
    */
  get sy_mngr(): Prisma.sy_mngrDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_mngr_auth_grp`: Exposes CRUD operations for the **sy_mngr_auth_grp** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_mngr_auth_grps
    * const sy_mngr_auth_grps = await prisma.sy_mngr_auth_grp.findMany()
    * ```
    */
  get sy_mngr_auth_grp(): Prisma.sy_mngr_auth_grpDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_mngr_auth_grp_hist`: Exposes CRUD operations for the **sy_mngr_auth_grp_hist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_mngr_auth_grp_hists
    * const sy_mngr_auth_grp_hists = await prisma.sy_mngr_auth_grp_hist.findMany()
    * ```
    */
  get sy_mngr_auth_grp_hist(): Prisma.sy_mngr_auth_grp_histDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_mngr_lgn_hist`: Exposes CRUD operations for the **sy_mngr_lgn_hist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_mngr_lgn_hists
    * const sy_mngr_lgn_hists = await prisma.sy_mngr_lgn_hist.findMany()
    * ```
    */
  get sy_mngr_lgn_hist(): Prisma.sy_mngr_lgn_histDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_mngr_pwd_hist`: Exposes CRUD operations for the **sy_mngr_pwd_hist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_mngr_pwd_hists
    * const sy_mngr_pwd_hists = await prisma.sy_mngr_pwd_hist.findMany()
    * ```
    */
  get sy_mngr_pwd_hist(): Prisma.sy_mngr_pwd_histDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sy_mngr_req_hist`: Exposes CRUD operations for the **sy_mngr_req_hist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sy_mngr_req_hists
    * const sy_mngr_req_hists = await prisma.sy_mngr_req_hist.findMany()
    * ```
    */
  get sy_mngr_req_hist(): Prisma.sy_mngr_req_histDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.test_user`: Exposes CRUD operations for the **test_user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Test_users
    * const test_users = await prisma.test_user.findMany()
    * ```
    */
  get test_user(): Prisma.test_userDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.8.2
   * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    aim_example_test: 'aim_example_test',
    sc_mbr: 'sc_mbr',
    sc_mbr_lgn_hist: 'sc_mbr_lgn_hist',
    sc_mbr_log: 'sc_mbr_log',
    sc_mbr_prjt: 'sc_mbr_prjt',
    sc_mbr_trms_agr_hist: 'sc_mbr_trms_agr_hist',
    sc_mbr_trms_agr_scr_hist: 'sc_mbr_trms_agr_scr_hist',
    sc_prjt: 'sc_prjt',
    sc_token_hist: 'sc_token_hist',
    sv_faq: 'sv_faq',
    sv_faq_atch_file: 'sv_faq_atch_file',
    sv_faq_cate_cd: 'sv_faq_cate_cd',
    sv_faq_keyword: 'sv_faq_keyword',
    sv_faq_rel_faq: 'sv_faq_rel_faq',
    sv_inq: 'sv_inq',
    sv_inq_ans: 'sv_inq_ans',
    sv_inq_atch_file: 'sv_inq_atch_file',
    sv_inq_clsf: 'sv_inq_clsf',
    sv_ntc: 'sv_ntc',
    sv_ntc_atch_file: 'sv_ntc_atch_file',
    sv_popup: 'sv_popup',
    sv_progm: 'sv_progm',
    sv_sms_sndng: 'sv_sms_sndng',
    sv_sms_tmpl: 'sv_sms_tmpl',
    sv_trms: 'sv_trms',
    sv_trms_hist: 'sv_trms_hist',
    sy_atch_file_mng: 'sy_atch_file_mng',
    sy_auth: 'sy_auth',
    sy_auth_grp: 'sy_auth_grp',
    sy_clco: 'sy_clco',
    sy_clco_dept: 'sy_clco_dept',
    sy_dtl_cd: 'sy_dtl_cd',
    sy_excel_hist: 'sy_excel_hist',
    sy_grp_cd: 'sy_grp_cd',
    sy_menu: 'sy_menu',
    sy_mngr: 'sy_mngr',
    sy_mngr_auth_grp: 'sy_mngr_auth_grp',
    sy_mngr_auth_grp_hist: 'sy_mngr_auth_grp_hist',
    sy_mngr_lgn_hist: 'sy_mngr_lgn_hist',
    sy_mngr_pwd_hist: 'sy_mngr_pwd_hist',
    sy_mngr_req_hist: 'sy_mngr_req_hist',
    test_user: 'test_user'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "aim_example_test" | "sc_mbr" | "sc_mbr_lgn_hist" | "sc_mbr_log" | "sc_mbr_prjt" | "sc_mbr_trms_agr_hist" | "sc_mbr_trms_agr_scr_hist" | "sc_prjt" | "sc_token_hist" | "sv_faq" | "sv_faq_atch_file" | "sv_faq_cate_cd" | "sv_faq_keyword" | "sv_faq_rel_faq" | "sv_inq" | "sv_inq_ans" | "sv_inq_atch_file" | "sv_inq_clsf" | "sv_ntc" | "sv_ntc_atch_file" | "sv_popup" | "sv_progm" | "sv_sms_sndng" | "sv_sms_tmpl" | "sv_trms" | "sv_trms_hist" | "sy_atch_file_mng" | "sy_auth" | "sy_auth_grp" | "sy_clco" | "sy_clco_dept" | "sy_dtl_cd" | "sy_excel_hist" | "sy_grp_cd" | "sy_menu" | "sy_mngr" | "sy_mngr_auth_grp" | "sy_mngr_auth_grp_hist" | "sy_mngr_lgn_hist" | "sy_mngr_pwd_hist" | "sy_mngr_req_hist" | "test_user"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      aim_example_test: {
        payload: Prisma.$aim_example_testPayload<ExtArgs>
        fields: Prisma.aim_example_testFieldRefs
        operations: {
          findUnique: {
            args: Prisma.aim_example_testFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aim_example_testPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.aim_example_testFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aim_example_testPayload>
          }
          findFirst: {
            args: Prisma.aim_example_testFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aim_example_testPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.aim_example_testFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aim_example_testPayload>
          }
          findMany: {
            args: Prisma.aim_example_testFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aim_example_testPayload>[]
          }
          create: {
            args: Prisma.aim_example_testCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aim_example_testPayload>
          }
          createMany: {
            args: Prisma.aim_example_testCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.aim_example_testDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aim_example_testPayload>
          }
          update: {
            args: Prisma.aim_example_testUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aim_example_testPayload>
          }
          deleteMany: {
            args: Prisma.aim_example_testDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.aim_example_testUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.aim_example_testUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aim_example_testPayload>
          }
          aggregate: {
            args: Prisma.Aim_example_testAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAim_example_test>
          }
          groupBy: {
            args: Prisma.aim_example_testGroupByArgs<ExtArgs>
            result: $Utils.Optional<Aim_example_testGroupByOutputType>[]
          }
          count: {
            args: Prisma.aim_example_testCountArgs<ExtArgs>
            result: $Utils.Optional<Aim_example_testCountAggregateOutputType> | number
          }
        }
      }
      sc_mbr: {
        payload: Prisma.$sc_mbrPayload<ExtArgs>
        fields: Prisma.sc_mbrFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sc_mbrFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbrPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sc_mbrFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbrPayload>
          }
          findFirst: {
            args: Prisma.sc_mbrFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbrPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sc_mbrFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbrPayload>
          }
          findMany: {
            args: Prisma.sc_mbrFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbrPayload>[]
          }
          create: {
            args: Prisma.sc_mbrCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbrPayload>
          }
          createMany: {
            args: Prisma.sc_mbrCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sc_mbrDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbrPayload>
          }
          update: {
            args: Prisma.sc_mbrUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbrPayload>
          }
          deleteMany: {
            args: Prisma.sc_mbrDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sc_mbrUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sc_mbrUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbrPayload>
          }
          aggregate: {
            args: Prisma.Sc_mbrAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSc_mbr>
          }
          groupBy: {
            args: Prisma.sc_mbrGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sc_mbrGroupByOutputType>[]
          }
          count: {
            args: Prisma.sc_mbrCountArgs<ExtArgs>
            result: $Utils.Optional<Sc_mbrCountAggregateOutputType> | number
          }
        }
      }
      sc_mbr_lgn_hist: {
        payload: Prisma.$sc_mbr_lgn_histPayload<ExtArgs>
        fields: Prisma.sc_mbr_lgn_histFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sc_mbr_lgn_histFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_lgn_histPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sc_mbr_lgn_histFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_lgn_histPayload>
          }
          findFirst: {
            args: Prisma.sc_mbr_lgn_histFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_lgn_histPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sc_mbr_lgn_histFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_lgn_histPayload>
          }
          findMany: {
            args: Prisma.sc_mbr_lgn_histFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_lgn_histPayload>[]
          }
          create: {
            args: Prisma.sc_mbr_lgn_histCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_lgn_histPayload>
          }
          createMany: {
            args: Prisma.sc_mbr_lgn_histCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sc_mbr_lgn_histDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_lgn_histPayload>
          }
          update: {
            args: Prisma.sc_mbr_lgn_histUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_lgn_histPayload>
          }
          deleteMany: {
            args: Prisma.sc_mbr_lgn_histDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sc_mbr_lgn_histUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sc_mbr_lgn_histUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_lgn_histPayload>
          }
          aggregate: {
            args: Prisma.Sc_mbr_lgn_histAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSc_mbr_lgn_hist>
          }
          groupBy: {
            args: Prisma.sc_mbr_lgn_histGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sc_mbr_lgn_histGroupByOutputType>[]
          }
          count: {
            args: Prisma.sc_mbr_lgn_histCountArgs<ExtArgs>
            result: $Utils.Optional<Sc_mbr_lgn_histCountAggregateOutputType> | number
          }
        }
      }
      sc_mbr_log: {
        payload: Prisma.$sc_mbr_logPayload<ExtArgs>
        fields: Prisma.sc_mbr_logFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sc_mbr_logFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_logPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sc_mbr_logFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_logPayload>
          }
          findFirst: {
            args: Prisma.sc_mbr_logFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_logPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sc_mbr_logFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_logPayload>
          }
          findMany: {
            args: Prisma.sc_mbr_logFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_logPayload>[]
          }
          create: {
            args: Prisma.sc_mbr_logCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_logPayload>
          }
          createMany: {
            args: Prisma.sc_mbr_logCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sc_mbr_logDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_logPayload>
          }
          update: {
            args: Prisma.sc_mbr_logUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_logPayload>
          }
          deleteMany: {
            args: Prisma.sc_mbr_logDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sc_mbr_logUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sc_mbr_logUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_logPayload>
          }
          aggregate: {
            args: Prisma.Sc_mbr_logAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSc_mbr_log>
          }
          groupBy: {
            args: Prisma.sc_mbr_logGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sc_mbr_logGroupByOutputType>[]
          }
          count: {
            args: Prisma.sc_mbr_logCountArgs<ExtArgs>
            result: $Utils.Optional<Sc_mbr_logCountAggregateOutputType> | number
          }
        }
      }
      sc_mbr_prjt: {
        payload: Prisma.$sc_mbr_prjtPayload<ExtArgs>
        fields: Prisma.sc_mbr_prjtFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sc_mbr_prjtFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_prjtPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sc_mbr_prjtFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_prjtPayload>
          }
          findFirst: {
            args: Prisma.sc_mbr_prjtFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_prjtPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sc_mbr_prjtFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_prjtPayload>
          }
          findMany: {
            args: Prisma.sc_mbr_prjtFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_prjtPayload>[]
          }
          create: {
            args: Prisma.sc_mbr_prjtCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_prjtPayload>
          }
          createMany: {
            args: Prisma.sc_mbr_prjtCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sc_mbr_prjtDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_prjtPayload>
          }
          update: {
            args: Prisma.sc_mbr_prjtUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_prjtPayload>
          }
          deleteMany: {
            args: Prisma.sc_mbr_prjtDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sc_mbr_prjtUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sc_mbr_prjtUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_prjtPayload>
          }
          aggregate: {
            args: Prisma.Sc_mbr_prjtAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSc_mbr_prjt>
          }
          groupBy: {
            args: Prisma.sc_mbr_prjtGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sc_mbr_prjtGroupByOutputType>[]
          }
          count: {
            args: Prisma.sc_mbr_prjtCountArgs<ExtArgs>
            result: $Utils.Optional<Sc_mbr_prjtCountAggregateOutputType> | number
          }
        }
      }
      sc_mbr_trms_agr_hist: {
        payload: Prisma.$sc_mbr_trms_agr_histPayload<ExtArgs>
        fields: Prisma.sc_mbr_trms_agr_histFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sc_mbr_trms_agr_histFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_histPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sc_mbr_trms_agr_histFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_histPayload>
          }
          findFirst: {
            args: Prisma.sc_mbr_trms_agr_histFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_histPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sc_mbr_trms_agr_histFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_histPayload>
          }
          findMany: {
            args: Prisma.sc_mbr_trms_agr_histFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_histPayload>[]
          }
          create: {
            args: Prisma.sc_mbr_trms_agr_histCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_histPayload>
          }
          createMany: {
            args: Prisma.sc_mbr_trms_agr_histCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sc_mbr_trms_agr_histDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_histPayload>
          }
          update: {
            args: Prisma.sc_mbr_trms_agr_histUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_histPayload>
          }
          deleteMany: {
            args: Prisma.sc_mbr_trms_agr_histDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sc_mbr_trms_agr_histUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sc_mbr_trms_agr_histUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_histPayload>
          }
          aggregate: {
            args: Prisma.Sc_mbr_trms_agr_histAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSc_mbr_trms_agr_hist>
          }
          groupBy: {
            args: Prisma.sc_mbr_trms_agr_histGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sc_mbr_trms_agr_histGroupByOutputType>[]
          }
          count: {
            args: Prisma.sc_mbr_trms_agr_histCountArgs<ExtArgs>
            result: $Utils.Optional<Sc_mbr_trms_agr_histCountAggregateOutputType> | number
          }
        }
      }
      sc_mbr_trms_agr_scr_hist: {
        payload: Prisma.$sc_mbr_trms_agr_scr_histPayload<ExtArgs>
        fields: Prisma.sc_mbr_trms_agr_scr_histFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sc_mbr_trms_agr_scr_histFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_scr_histPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sc_mbr_trms_agr_scr_histFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_scr_histPayload>
          }
          findFirst: {
            args: Prisma.sc_mbr_trms_agr_scr_histFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_scr_histPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sc_mbr_trms_agr_scr_histFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_scr_histPayload>
          }
          findMany: {
            args: Prisma.sc_mbr_trms_agr_scr_histFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_scr_histPayload>[]
          }
          create: {
            args: Prisma.sc_mbr_trms_agr_scr_histCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_scr_histPayload>
          }
          createMany: {
            args: Prisma.sc_mbr_trms_agr_scr_histCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sc_mbr_trms_agr_scr_histDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_scr_histPayload>
          }
          update: {
            args: Prisma.sc_mbr_trms_agr_scr_histUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_scr_histPayload>
          }
          deleteMany: {
            args: Prisma.sc_mbr_trms_agr_scr_histDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sc_mbr_trms_agr_scr_histUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sc_mbr_trms_agr_scr_histUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_mbr_trms_agr_scr_histPayload>
          }
          aggregate: {
            args: Prisma.Sc_mbr_trms_agr_scr_histAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSc_mbr_trms_agr_scr_hist>
          }
          groupBy: {
            args: Prisma.sc_mbr_trms_agr_scr_histGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sc_mbr_trms_agr_scr_histGroupByOutputType>[]
          }
          count: {
            args: Prisma.sc_mbr_trms_agr_scr_histCountArgs<ExtArgs>
            result: $Utils.Optional<Sc_mbr_trms_agr_scr_histCountAggregateOutputType> | number
          }
        }
      }
      sc_prjt: {
        payload: Prisma.$sc_prjtPayload<ExtArgs>
        fields: Prisma.sc_prjtFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sc_prjtFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_prjtPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sc_prjtFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_prjtPayload>
          }
          findFirst: {
            args: Prisma.sc_prjtFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_prjtPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sc_prjtFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_prjtPayload>
          }
          findMany: {
            args: Prisma.sc_prjtFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_prjtPayload>[]
          }
          create: {
            args: Prisma.sc_prjtCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_prjtPayload>
          }
          createMany: {
            args: Prisma.sc_prjtCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sc_prjtDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_prjtPayload>
          }
          update: {
            args: Prisma.sc_prjtUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_prjtPayload>
          }
          deleteMany: {
            args: Prisma.sc_prjtDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sc_prjtUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sc_prjtUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_prjtPayload>
          }
          aggregate: {
            args: Prisma.Sc_prjtAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSc_prjt>
          }
          groupBy: {
            args: Prisma.sc_prjtGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sc_prjtGroupByOutputType>[]
          }
          count: {
            args: Prisma.sc_prjtCountArgs<ExtArgs>
            result: $Utils.Optional<Sc_prjtCountAggregateOutputType> | number
          }
        }
      }
      sc_token_hist: {
        payload: Prisma.$sc_token_histPayload<ExtArgs>
        fields: Prisma.sc_token_histFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sc_token_histFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_token_histPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sc_token_histFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_token_histPayload>
          }
          findFirst: {
            args: Prisma.sc_token_histFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_token_histPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sc_token_histFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_token_histPayload>
          }
          findMany: {
            args: Prisma.sc_token_histFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_token_histPayload>[]
          }
          create: {
            args: Prisma.sc_token_histCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_token_histPayload>
          }
          createMany: {
            args: Prisma.sc_token_histCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sc_token_histDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_token_histPayload>
          }
          update: {
            args: Prisma.sc_token_histUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_token_histPayload>
          }
          deleteMany: {
            args: Prisma.sc_token_histDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sc_token_histUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sc_token_histUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sc_token_histPayload>
          }
          aggregate: {
            args: Prisma.Sc_token_histAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSc_token_hist>
          }
          groupBy: {
            args: Prisma.sc_token_histGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sc_token_histGroupByOutputType>[]
          }
          count: {
            args: Prisma.sc_token_histCountArgs<ExtArgs>
            result: $Utils.Optional<Sc_token_histCountAggregateOutputType> | number
          }
        }
      }
      sv_faq: {
        payload: Prisma.$sv_faqPayload<ExtArgs>
        fields: Prisma.sv_faqFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_faqFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faqPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_faqFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faqPayload>
          }
          findFirst: {
            args: Prisma.sv_faqFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faqPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_faqFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faqPayload>
          }
          findMany: {
            args: Prisma.sv_faqFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faqPayload>[]
          }
          create: {
            args: Prisma.sv_faqCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faqPayload>
          }
          createMany: {
            args: Prisma.sv_faqCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_faqDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faqPayload>
          }
          update: {
            args: Prisma.sv_faqUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faqPayload>
          }
          deleteMany: {
            args: Prisma.sv_faqDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_faqUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_faqUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faqPayload>
          }
          aggregate: {
            args: Prisma.Sv_faqAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_faq>
          }
          groupBy: {
            args: Prisma.sv_faqGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_faqGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_faqCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_faqCountAggregateOutputType> | number
          }
        }
      }
      sv_faq_atch_file: {
        payload: Prisma.$sv_faq_atch_filePayload<ExtArgs>
        fields: Prisma.sv_faq_atch_fileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_faq_atch_fileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_atch_filePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_faq_atch_fileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_atch_filePayload>
          }
          findFirst: {
            args: Prisma.sv_faq_atch_fileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_atch_filePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_faq_atch_fileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_atch_filePayload>
          }
          findMany: {
            args: Prisma.sv_faq_atch_fileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_atch_filePayload>[]
          }
          create: {
            args: Prisma.sv_faq_atch_fileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_atch_filePayload>
          }
          createMany: {
            args: Prisma.sv_faq_atch_fileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_faq_atch_fileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_atch_filePayload>
          }
          update: {
            args: Prisma.sv_faq_atch_fileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_atch_filePayload>
          }
          deleteMany: {
            args: Prisma.sv_faq_atch_fileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_faq_atch_fileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_faq_atch_fileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_atch_filePayload>
          }
          aggregate: {
            args: Prisma.Sv_faq_atch_fileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_faq_atch_file>
          }
          groupBy: {
            args: Prisma.sv_faq_atch_fileGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_faq_atch_fileGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_faq_atch_fileCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_faq_atch_fileCountAggregateOutputType> | number
          }
        }
      }
      sv_faq_cate_cd: {
        payload: Prisma.$sv_faq_cate_cdPayload<ExtArgs>
        fields: Prisma.sv_faq_cate_cdFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_faq_cate_cdFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_cate_cdPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_faq_cate_cdFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_cate_cdPayload>
          }
          findFirst: {
            args: Prisma.sv_faq_cate_cdFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_cate_cdPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_faq_cate_cdFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_cate_cdPayload>
          }
          findMany: {
            args: Prisma.sv_faq_cate_cdFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_cate_cdPayload>[]
          }
          create: {
            args: Prisma.sv_faq_cate_cdCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_cate_cdPayload>
          }
          createMany: {
            args: Prisma.sv_faq_cate_cdCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_faq_cate_cdDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_cate_cdPayload>
          }
          update: {
            args: Prisma.sv_faq_cate_cdUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_cate_cdPayload>
          }
          deleteMany: {
            args: Prisma.sv_faq_cate_cdDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_faq_cate_cdUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_faq_cate_cdUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_cate_cdPayload>
          }
          aggregate: {
            args: Prisma.Sv_faq_cate_cdAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_faq_cate_cd>
          }
          groupBy: {
            args: Prisma.sv_faq_cate_cdGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_faq_cate_cdGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_faq_cate_cdCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_faq_cate_cdCountAggregateOutputType> | number
          }
        }
      }
      sv_faq_keyword: {
        payload: Prisma.$sv_faq_keywordPayload<ExtArgs>
        fields: Prisma.sv_faq_keywordFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_faq_keywordFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_keywordPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_faq_keywordFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_keywordPayload>
          }
          findFirst: {
            args: Prisma.sv_faq_keywordFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_keywordPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_faq_keywordFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_keywordPayload>
          }
          findMany: {
            args: Prisma.sv_faq_keywordFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_keywordPayload>[]
          }
          create: {
            args: Prisma.sv_faq_keywordCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_keywordPayload>
          }
          createMany: {
            args: Prisma.sv_faq_keywordCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_faq_keywordDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_keywordPayload>
          }
          update: {
            args: Prisma.sv_faq_keywordUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_keywordPayload>
          }
          deleteMany: {
            args: Prisma.sv_faq_keywordDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_faq_keywordUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_faq_keywordUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_keywordPayload>
          }
          aggregate: {
            args: Prisma.Sv_faq_keywordAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_faq_keyword>
          }
          groupBy: {
            args: Prisma.sv_faq_keywordGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_faq_keywordGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_faq_keywordCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_faq_keywordCountAggregateOutputType> | number
          }
        }
      }
      sv_faq_rel_faq: {
        payload: Prisma.$sv_faq_rel_faqPayload<ExtArgs>
        fields: Prisma.sv_faq_rel_faqFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_faq_rel_faqFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_rel_faqPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_faq_rel_faqFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_rel_faqPayload>
          }
          findFirst: {
            args: Prisma.sv_faq_rel_faqFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_rel_faqPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_faq_rel_faqFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_rel_faqPayload>
          }
          findMany: {
            args: Prisma.sv_faq_rel_faqFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_rel_faqPayload>[]
          }
          create: {
            args: Prisma.sv_faq_rel_faqCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_rel_faqPayload>
          }
          createMany: {
            args: Prisma.sv_faq_rel_faqCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_faq_rel_faqDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_rel_faqPayload>
          }
          update: {
            args: Prisma.sv_faq_rel_faqUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_rel_faqPayload>
          }
          deleteMany: {
            args: Prisma.sv_faq_rel_faqDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_faq_rel_faqUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_faq_rel_faqUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_faq_rel_faqPayload>
          }
          aggregate: {
            args: Prisma.Sv_faq_rel_faqAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_faq_rel_faq>
          }
          groupBy: {
            args: Prisma.sv_faq_rel_faqGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_faq_rel_faqGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_faq_rel_faqCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_faq_rel_faqCountAggregateOutputType> | number
          }
        }
      }
      sv_inq: {
        payload: Prisma.$sv_inqPayload<ExtArgs>
        fields: Prisma.sv_inqFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_inqFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inqPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_inqFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inqPayload>
          }
          findFirst: {
            args: Prisma.sv_inqFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inqPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_inqFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inqPayload>
          }
          findMany: {
            args: Prisma.sv_inqFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inqPayload>[]
          }
          create: {
            args: Prisma.sv_inqCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inqPayload>
          }
          createMany: {
            args: Prisma.sv_inqCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_inqDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inqPayload>
          }
          update: {
            args: Prisma.sv_inqUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inqPayload>
          }
          deleteMany: {
            args: Prisma.sv_inqDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_inqUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_inqUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inqPayload>
          }
          aggregate: {
            args: Prisma.Sv_inqAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_inq>
          }
          groupBy: {
            args: Prisma.sv_inqGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_inqGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_inqCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_inqCountAggregateOutputType> | number
          }
        }
      }
      sv_inq_ans: {
        payload: Prisma.$sv_inq_ansPayload<ExtArgs>
        fields: Prisma.sv_inq_ansFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_inq_ansFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_ansPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_inq_ansFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_ansPayload>
          }
          findFirst: {
            args: Prisma.sv_inq_ansFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_ansPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_inq_ansFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_ansPayload>
          }
          findMany: {
            args: Prisma.sv_inq_ansFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_ansPayload>[]
          }
          create: {
            args: Prisma.sv_inq_ansCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_ansPayload>
          }
          createMany: {
            args: Prisma.sv_inq_ansCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_inq_ansDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_ansPayload>
          }
          update: {
            args: Prisma.sv_inq_ansUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_ansPayload>
          }
          deleteMany: {
            args: Prisma.sv_inq_ansDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_inq_ansUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_inq_ansUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_ansPayload>
          }
          aggregate: {
            args: Prisma.Sv_inq_ansAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_inq_ans>
          }
          groupBy: {
            args: Prisma.sv_inq_ansGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_inq_ansGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_inq_ansCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_inq_ansCountAggregateOutputType> | number
          }
        }
      }
      sv_inq_atch_file: {
        payload: Prisma.$sv_inq_atch_filePayload<ExtArgs>
        fields: Prisma.sv_inq_atch_fileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_inq_atch_fileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_atch_filePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_inq_atch_fileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_atch_filePayload>
          }
          findFirst: {
            args: Prisma.sv_inq_atch_fileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_atch_filePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_inq_atch_fileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_atch_filePayload>
          }
          findMany: {
            args: Prisma.sv_inq_atch_fileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_atch_filePayload>[]
          }
          create: {
            args: Prisma.sv_inq_atch_fileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_atch_filePayload>
          }
          createMany: {
            args: Prisma.sv_inq_atch_fileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_inq_atch_fileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_atch_filePayload>
          }
          update: {
            args: Prisma.sv_inq_atch_fileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_atch_filePayload>
          }
          deleteMany: {
            args: Prisma.sv_inq_atch_fileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_inq_atch_fileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_inq_atch_fileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_atch_filePayload>
          }
          aggregate: {
            args: Prisma.Sv_inq_atch_fileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_inq_atch_file>
          }
          groupBy: {
            args: Prisma.sv_inq_atch_fileGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_inq_atch_fileGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_inq_atch_fileCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_inq_atch_fileCountAggregateOutputType> | number
          }
        }
      }
      sv_inq_clsf: {
        payload: Prisma.$sv_inq_clsfPayload<ExtArgs>
        fields: Prisma.sv_inq_clsfFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_inq_clsfFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_clsfPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_inq_clsfFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_clsfPayload>
          }
          findFirst: {
            args: Prisma.sv_inq_clsfFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_clsfPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_inq_clsfFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_clsfPayload>
          }
          findMany: {
            args: Prisma.sv_inq_clsfFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_clsfPayload>[]
          }
          create: {
            args: Prisma.sv_inq_clsfCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_clsfPayload>
          }
          createMany: {
            args: Prisma.sv_inq_clsfCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_inq_clsfDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_clsfPayload>
          }
          update: {
            args: Prisma.sv_inq_clsfUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_clsfPayload>
          }
          deleteMany: {
            args: Prisma.sv_inq_clsfDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_inq_clsfUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_inq_clsfUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_inq_clsfPayload>
          }
          aggregate: {
            args: Prisma.Sv_inq_clsfAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_inq_clsf>
          }
          groupBy: {
            args: Prisma.sv_inq_clsfGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_inq_clsfGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_inq_clsfCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_inq_clsfCountAggregateOutputType> | number
          }
        }
      }
      sv_ntc: {
        payload: Prisma.$sv_ntcPayload<ExtArgs>
        fields: Prisma.sv_ntcFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_ntcFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntcPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_ntcFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntcPayload>
          }
          findFirst: {
            args: Prisma.sv_ntcFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntcPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_ntcFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntcPayload>
          }
          findMany: {
            args: Prisma.sv_ntcFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntcPayload>[]
          }
          create: {
            args: Prisma.sv_ntcCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntcPayload>
          }
          createMany: {
            args: Prisma.sv_ntcCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_ntcDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntcPayload>
          }
          update: {
            args: Prisma.sv_ntcUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntcPayload>
          }
          deleteMany: {
            args: Prisma.sv_ntcDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_ntcUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_ntcUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntcPayload>
          }
          aggregate: {
            args: Prisma.Sv_ntcAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_ntc>
          }
          groupBy: {
            args: Prisma.sv_ntcGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_ntcGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_ntcCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_ntcCountAggregateOutputType> | number
          }
        }
      }
      sv_ntc_atch_file: {
        payload: Prisma.$sv_ntc_atch_filePayload<ExtArgs>
        fields: Prisma.sv_ntc_atch_fileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_ntc_atch_fileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntc_atch_filePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_ntc_atch_fileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntc_atch_filePayload>
          }
          findFirst: {
            args: Prisma.sv_ntc_atch_fileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntc_atch_filePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_ntc_atch_fileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntc_atch_filePayload>
          }
          findMany: {
            args: Prisma.sv_ntc_atch_fileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntc_atch_filePayload>[]
          }
          create: {
            args: Prisma.sv_ntc_atch_fileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntc_atch_filePayload>
          }
          createMany: {
            args: Prisma.sv_ntc_atch_fileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_ntc_atch_fileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntc_atch_filePayload>
          }
          update: {
            args: Prisma.sv_ntc_atch_fileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntc_atch_filePayload>
          }
          deleteMany: {
            args: Prisma.sv_ntc_atch_fileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_ntc_atch_fileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_ntc_atch_fileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_ntc_atch_filePayload>
          }
          aggregate: {
            args: Prisma.Sv_ntc_atch_fileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_ntc_atch_file>
          }
          groupBy: {
            args: Prisma.sv_ntc_atch_fileGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_ntc_atch_fileGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_ntc_atch_fileCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_ntc_atch_fileCountAggregateOutputType> | number
          }
        }
      }
      sv_popup: {
        payload: Prisma.$sv_popupPayload<ExtArgs>
        fields: Prisma.sv_popupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_popupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_popupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_popupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_popupPayload>
          }
          findFirst: {
            args: Prisma.sv_popupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_popupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_popupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_popupPayload>
          }
          findMany: {
            args: Prisma.sv_popupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_popupPayload>[]
          }
          create: {
            args: Prisma.sv_popupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_popupPayload>
          }
          createMany: {
            args: Prisma.sv_popupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_popupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_popupPayload>
          }
          update: {
            args: Prisma.sv_popupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_popupPayload>
          }
          deleteMany: {
            args: Prisma.sv_popupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_popupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_popupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_popupPayload>
          }
          aggregate: {
            args: Prisma.Sv_popupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_popup>
          }
          groupBy: {
            args: Prisma.sv_popupGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_popupGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_popupCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_popupCountAggregateOutputType> | number
          }
        }
      }
      sv_progm: {
        payload: Prisma.$sv_progmPayload<ExtArgs>
        fields: Prisma.sv_progmFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_progmFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_progmPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_progmFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_progmPayload>
          }
          findFirst: {
            args: Prisma.sv_progmFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_progmPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_progmFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_progmPayload>
          }
          findMany: {
            args: Prisma.sv_progmFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_progmPayload>[]
          }
          create: {
            args: Prisma.sv_progmCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_progmPayload>
          }
          createMany: {
            args: Prisma.sv_progmCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_progmDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_progmPayload>
          }
          update: {
            args: Prisma.sv_progmUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_progmPayload>
          }
          deleteMany: {
            args: Prisma.sv_progmDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_progmUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_progmUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_progmPayload>
          }
          aggregate: {
            args: Prisma.Sv_progmAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_progm>
          }
          groupBy: {
            args: Prisma.sv_progmGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_progmGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_progmCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_progmCountAggregateOutputType> | number
          }
        }
      }
      sv_sms_sndng: {
        payload: Prisma.$sv_sms_sndngPayload<ExtArgs>
        fields: Prisma.sv_sms_sndngFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_sms_sndngFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_sndngPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_sms_sndngFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_sndngPayload>
          }
          findFirst: {
            args: Prisma.sv_sms_sndngFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_sndngPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_sms_sndngFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_sndngPayload>
          }
          findMany: {
            args: Prisma.sv_sms_sndngFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_sndngPayload>[]
          }
          create: {
            args: Prisma.sv_sms_sndngCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_sndngPayload>
          }
          createMany: {
            args: Prisma.sv_sms_sndngCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_sms_sndngDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_sndngPayload>
          }
          update: {
            args: Prisma.sv_sms_sndngUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_sndngPayload>
          }
          deleteMany: {
            args: Prisma.sv_sms_sndngDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_sms_sndngUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_sms_sndngUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_sndngPayload>
          }
          aggregate: {
            args: Prisma.Sv_sms_sndngAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_sms_sndng>
          }
          groupBy: {
            args: Prisma.sv_sms_sndngGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_sms_sndngGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_sms_sndngCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_sms_sndngCountAggregateOutputType> | number
          }
        }
      }
      sv_sms_tmpl: {
        payload: Prisma.$sv_sms_tmplPayload<ExtArgs>
        fields: Prisma.sv_sms_tmplFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_sms_tmplFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_tmplPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_sms_tmplFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_tmplPayload>
          }
          findFirst: {
            args: Prisma.sv_sms_tmplFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_tmplPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_sms_tmplFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_tmplPayload>
          }
          findMany: {
            args: Prisma.sv_sms_tmplFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_tmplPayload>[]
          }
          create: {
            args: Prisma.sv_sms_tmplCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_tmplPayload>
          }
          createMany: {
            args: Prisma.sv_sms_tmplCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_sms_tmplDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_tmplPayload>
          }
          update: {
            args: Prisma.sv_sms_tmplUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_tmplPayload>
          }
          deleteMany: {
            args: Prisma.sv_sms_tmplDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_sms_tmplUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_sms_tmplUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_sms_tmplPayload>
          }
          aggregate: {
            args: Prisma.Sv_sms_tmplAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_sms_tmpl>
          }
          groupBy: {
            args: Prisma.sv_sms_tmplGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_sms_tmplGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_sms_tmplCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_sms_tmplCountAggregateOutputType> | number
          }
        }
      }
      sv_trms: {
        payload: Prisma.$sv_trmsPayload<ExtArgs>
        fields: Prisma.sv_trmsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_trmsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trmsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_trmsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trmsPayload>
          }
          findFirst: {
            args: Prisma.sv_trmsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trmsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_trmsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trmsPayload>
          }
          findMany: {
            args: Prisma.sv_trmsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trmsPayload>[]
          }
          create: {
            args: Prisma.sv_trmsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trmsPayload>
          }
          createMany: {
            args: Prisma.sv_trmsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_trmsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trmsPayload>
          }
          update: {
            args: Prisma.sv_trmsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trmsPayload>
          }
          deleteMany: {
            args: Prisma.sv_trmsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_trmsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_trmsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trmsPayload>
          }
          aggregate: {
            args: Prisma.Sv_trmsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_trms>
          }
          groupBy: {
            args: Prisma.sv_trmsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_trmsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_trmsCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_trmsCountAggregateOutputType> | number
          }
        }
      }
      sv_trms_hist: {
        payload: Prisma.$sv_trms_histPayload<ExtArgs>
        fields: Prisma.sv_trms_histFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sv_trms_histFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trms_histPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sv_trms_histFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trms_histPayload>
          }
          findFirst: {
            args: Prisma.sv_trms_histFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trms_histPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sv_trms_histFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trms_histPayload>
          }
          findMany: {
            args: Prisma.sv_trms_histFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trms_histPayload>[]
          }
          create: {
            args: Prisma.sv_trms_histCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trms_histPayload>
          }
          createMany: {
            args: Prisma.sv_trms_histCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sv_trms_histDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trms_histPayload>
          }
          update: {
            args: Prisma.sv_trms_histUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trms_histPayload>
          }
          deleteMany: {
            args: Prisma.sv_trms_histDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sv_trms_histUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sv_trms_histUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sv_trms_histPayload>
          }
          aggregate: {
            args: Prisma.Sv_trms_histAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSv_trms_hist>
          }
          groupBy: {
            args: Prisma.sv_trms_histGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sv_trms_histGroupByOutputType>[]
          }
          count: {
            args: Prisma.sv_trms_histCountArgs<ExtArgs>
            result: $Utils.Optional<Sv_trms_histCountAggregateOutputType> | number
          }
        }
      }
      sy_atch_file_mng: {
        payload: Prisma.$sy_atch_file_mngPayload<ExtArgs>
        fields: Prisma.sy_atch_file_mngFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_atch_file_mngFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_atch_file_mngPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_atch_file_mngFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_atch_file_mngPayload>
          }
          findFirst: {
            args: Prisma.sy_atch_file_mngFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_atch_file_mngPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_atch_file_mngFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_atch_file_mngPayload>
          }
          findMany: {
            args: Prisma.sy_atch_file_mngFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_atch_file_mngPayload>[]
          }
          create: {
            args: Prisma.sy_atch_file_mngCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_atch_file_mngPayload>
          }
          createMany: {
            args: Prisma.sy_atch_file_mngCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_atch_file_mngDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_atch_file_mngPayload>
          }
          update: {
            args: Prisma.sy_atch_file_mngUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_atch_file_mngPayload>
          }
          deleteMany: {
            args: Prisma.sy_atch_file_mngDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_atch_file_mngUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_atch_file_mngUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_atch_file_mngPayload>
          }
          aggregate: {
            args: Prisma.Sy_atch_file_mngAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_atch_file_mng>
          }
          groupBy: {
            args: Prisma.sy_atch_file_mngGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_atch_file_mngGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_atch_file_mngCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_atch_file_mngCountAggregateOutputType> | number
          }
        }
      }
      sy_auth: {
        payload: Prisma.$sy_authPayload<ExtArgs>
        fields: Prisma.sy_authFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_authFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_authPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_authFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_authPayload>
          }
          findFirst: {
            args: Prisma.sy_authFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_authPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_authFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_authPayload>
          }
          findMany: {
            args: Prisma.sy_authFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_authPayload>[]
          }
          create: {
            args: Prisma.sy_authCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_authPayload>
          }
          createMany: {
            args: Prisma.sy_authCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_authDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_authPayload>
          }
          update: {
            args: Prisma.sy_authUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_authPayload>
          }
          deleteMany: {
            args: Prisma.sy_authDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_authUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_authUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_authPayload>
          }
          aggregate: {
            args: Prisma.Sy_authAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_auth>
          }
          groupBy: {
            args: Prisma.sy_authGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_authGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_authCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_authCountAggregateOutputType> | number
          }
        }
      }
      sy_auth_grp: {
        payload: Prisma.$sy_auth_grpPayload<ExtArgs>
        fields: Prisma.sy_auth_grpFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_auth_grpFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_auth_grpPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_auth_grpFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_auth_grpPayload>
          }
          findFirst: {
            args: Prisma.sy_auth_grpFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_auth_grpPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_auth_grpFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_auth_grpPayload>
          }
          findMany: {
            args: Prisma.sy_auth_grpFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_auth_grpPayload>[]
          }
          create: {
            args: Prisma.sy_auth_grpCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_auth_grpPayload>
          }
          createMany: {
            args: Prisma.sy_auth_grpCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_auth_grpDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_auth_grpPayload>
          }
          update: {
            args: Prisma.sy_auth_grpUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_auth_grpPayload>
          }
          deleteMany: {
            args: Prisma.sy_auth_grpDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_auth_grpUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_auth_grpUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_auth_grpPayload>
          }
          aggregate: {
            args: Prisma.Sy_auth_grpAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_auth_grp>
          }
          groupBy: {
            args: Prisma.sy_auth_grpGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_auth_grpGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_auth_grpCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_auth_grpCountAggregateOutputType> | number
          }
        }
      }
      sy_clco: {
        payload: Prisma.$sy_clcoPayload<ExtArgs>
        fields: Prisma.sy_clcoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_clcoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clcoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_clcoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clcoPayload>
          }
          findFirst: {
            args: Prisma.sy_clcoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clcoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_clcoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clcoPayload>
          }
          findMany: {
            args: Prisma.sy_clcoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clcoPayload>[]
          }
          create: {
            args: Prisma.sy_clcoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clcoPayload>
          }
          createMany: {
            args: Prisma.sy_clcoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_clcoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clcoPayload>
          }
          update: {
            args: Prisma.sy_clcoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clcoPayload>
          }
          deleteMany: {
            args: Prisma.sy_clcoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_clcoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_clcoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clcoPayload>
          }
          aggregate: {
            args: Prisma.Sy_clcoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_clco>
          }
          groupBy: {
            args: Prisma.sy_clcoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_clcoGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_clcoCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_clcoCountAggregateOutputType> | number
          }
        }
      }
      sy_clco_dept: {
        payload: Prisma.$sy_clco_deptPayload<ExtArgs>
        fields: Prisma.sy_clco_deptFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_clco_deptFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clco_deptPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_clco_deptFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clco_deptPayload>
          }
          findFirst: {
            args: Prisma.sy_clco_deptFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clco_deptPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_clco_deptFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clco_deptPayload>
          }
          findMany: {
            args: Prisma.sy_clco_deptFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clco_deptPayload>[]
          }
          create: {
            args: Prisma.sy_clco_deptCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clco_deptPayload>
          }
          createMany: {
            args: Prisma.sy_clco_deptCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_clco_deptDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clco_deptPayload>
          }
          update: {
            args: Prisma.sy_clco_deptUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clco_deptPayload>
          }
          deleteMany: {
            args: Prisma.sy_clco_deptDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_clco_deptUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_clco_deptUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_clco_deptPayload>
          }
          aggregate: {
            args: Prisma.Sy_clco_deptAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_clco_dept>
          }
          groupBy: {
            args: Prisma.sy_clco_deptGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_clco_deptGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_clco_deptCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_clco_deptCountAggregateOutputType> | number
          }
        }
      }
      sy_dtl_cd: {
        payload: Prisma.$sy_dtl_cdPayload<ExtArgs>
        fields: Prisma.sy_dtl_cdFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_dtl_cdFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_dtl_cdPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_dtl_cdFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_dtl_cdPayload>
          }
          findFirst: {
            args: Prisma.sy_dtl_cdFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_dtl_cdPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_dtl_cdFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_dtl_cdPayload>
          }
          findMany: {
            args: Prisma.sy_dtl_cdFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_dtl_cdPayload>[]
          }
          create: {
            args: Prisma.sy_dtl_cdCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_dtl_cdPayload>
          }
          createMany: {
            args: Prisma.sy_dtl_cdCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_dtl_cdDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_dtl_cdPayload>
          }
          update: {
            args: Prisma.sy_dtl_cdUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_dtl_cdPayload>
          }
          deleteMany: {
            args: Prisma.sy_dtl_cdDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_dtl_cdUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_dtl_cdUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_dtl_cdPayload>
          }
          aggregate: {
            args: Prisma.Sy_dtl_cdAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_dtl_cd>
          }
          groupBy: {
            args: Prisma.sy_dtl_cdGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_dtl_cdGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_dtl_cdCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_dtl_cdCountAggregateOutputType> | number
          }
        }
      }
      sy_excel_hist: {
        payload: Prisma.$sy_excel_histPayload<ExtArgs>
        fields: Prisma.sy_excel_histFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_excel_histFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_excel_histPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_excel_histFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_excel_histPayload>
          }
          findFirst: {
            args: Prisma.sy_excel_histFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_excel_histPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_excel_histFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_excel_histPayload>
          }
          findMany: {
            args: Prisma.sy_excel_histFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_excel_histPayload>[]
          }
          create: {
            args: Prisma.sy_excel_histCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_excel_histPayload>
          }
          createMany: {
            args: Prisma.sy_excel_histCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_excel_histDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_excel_histPayload>
          }
          update: {
            args: Prisma.sy_excel_histUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_excel_histPayload>
          }
          deleteMany: {
            args: Prisma.sy_excel_histDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_excel_histUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_excel_histUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_excel_histPayload>
          }
          aggregate: {
            args: Prisma.Sy_excel_histAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_excel_hist>
          }
          groupBy: {
            args: Prisma.sy_excel_histGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_excel_histGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_excel_histCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_excel_histCountAggregateOutputType> | number
          }
        }
      }
      sy_grp_cd: {
        payload: Prisma.$sy_grp_cdPayload<ExtArgs>
        fields: Prisma.sy_grp_cdFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_grp_cdFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_grp_cdPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_grp_cdFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_grp_cdPayload>
          }
          findFirst: {
            args: Prisma.sy_grp_cdFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_grp_cdPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_grp_cdFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_grp_cdPayload>
          }
          findMany: {
            args: Prisma.sy_grp_cdFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_grp_cdPayload>[]
          }
          create: {
            args: Prisma.sy_grp_cdCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_grp_cdPayload>
          }
          createMany: {
            args: Prisma.sy_grp_cdCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_grp_cdDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_grp_cdPayload>
          }
          update: {
            args: Prisma.sy_grp_cdUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_grp_cdPayload>
          }
          deleteMany: {
            args: Prisma.sy_grp_cdDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_grp_cdUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_grp_cdUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_grp_cdPayload>
          }
          aggregate: {
            args: Prisma.Sy_grp_cdAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_grp_cd>
          }
          groupBy: {
            args: Prisma.sy_grp_cdGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_grp_cdGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_grp_cdCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_grp_cdCountAggregateOutputType> | number
          }
        }
      }
      sy_menu: {
        payload: Prisma.$sy_menuPayload<ExtArgs>
        fields: Prisma.sy_menuFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_menuFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_menuPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_menuFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_menuPayload>
          }
          findFirst: {
            args: Prisma.sy_menuFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_menuPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_menuFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_menuPayload>
          }
          findMany: {
            args: Prisma.sy_menuFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_menuPayload>[]
          }
          create: {
            args: Prisma.sy_menuCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_menuPayload>
          }
          createMany: {
            args: Prisma.sy_menuCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_menuDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_menuPayload>
          }
          update: {
            args: Prisma.sy_menuUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_menuPayload>
          }
          deleteMany: {
            args: Prisma.sy_menuDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_menuUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_menuUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_menuPayload>
          }
          aggregate: {
            args: Prisma.Sy_menuAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_menu>
          }
          groupBy: {
            args: Prisma.sy_menuGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_menuGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_menuCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_menuCountAggregateOutputType> | number
          }
        }
      }
      sy_mngr: {
        payload: Prisma.$sy_mngrPayload<ExtArgs>
        fields: Prisma.sy_mngrFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_mngrFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngrPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_mngrFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngrPayload>
          }
          findFirst: {
            args: Prisma.sy_mngrFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngrPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_mngrFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngrPayload>
          }
          findMany: {
            args: Prisma.sy_mngrFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngrPayload>[]
          }
          create: {
            args: Prisma.sy_mngrCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngrPayload>
          }
          createMany: {
            args: Prisma.sy_mngrCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_mngrDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngrPayload>
          }
          update: {
            args: Prisma.sy_mngrUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngrPayload>
          }
          deleteMany: {
            args: Prisma.sy_mngrDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_mngrUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_mngrUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngrPayload>
          }
          aggregate: {
            args: Prisma.Sy_mngrAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_mngr>
          }
          groupBy: {
            args: Prisma.sy_mngrGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_mngrGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_mngrCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_mngrCountAggregateOutputType> | number
          }
        }
      }
      sy_mngr_auth_grp: {
        payload: Prisma.$sy_mngr_auth_grpPayload<ExtArgs>
        fields: Prisma.sy_mngr_auth_grpFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_mngr_auth_grpFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grpPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_mngr_auth_grpFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grpPayload>
          }
          findFirst: {
            args: Prisma.sy_mngr_auth_grpFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grpPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_mngr_auth_grpFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grpPayload>
          }
          findMany: {
            args: Prisma.sy_mngr_auth_grpFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grpPayload>[]
          }
          create: {
            args: Prisma.sy_mngr_auth_grpCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grpPayload>
          }
          createMany: {
            args: Prisma.sy_mngr_auth_grpCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_mngr_auth_grpDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grpPayload>
          }
          update: {
            args: Prisma.sy_mngr_auth_grpUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grpPayload>
          }
          deleteMany: {
            args: Prisma.sy_mngr_auth_grpDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_mngr_auth_grpUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_mngr_auth_grpUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grpPayload>
          }
          aggregate: {
            args: Prisma.Sy_mngr_auth_grpAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_mngr_auth_grp>
          }
          groupBy: {
            args: Prisma.sy_mngr_auth_grpGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_mngr_auth_grpGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_mngr_auth_grpCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_mngr_auth_grpCountAggregateOutputType> | number
          }
        }
      }
      sy_mngr_auth_grp_hist: {
        payload: Prisma.$sy_mngr_auth_grp_histPayload<ExtArgs>
        fields: Prisma.sy_mngr_auth_grp_histFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_mngr_auth_grp_histFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grp_histPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_mngr_auth_grp_histFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grp_histPayload>
          }
          findFirst: {
            args: Prisma.sy_mngr_auth_grp_histFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grp_histPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_mngr_auth_grp_histFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grp_histPayload>
          }
          findMany: {
            args: Prisma.sy_mngr_auth_grp_histFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grp_histPayload>[]
          }
          create: {
            args: Prisma.sy_mngr_auth_grp_histCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grp_histPayload>
          }
          createMany: {
            args: Prisma.sy_mngr_auth_grp_histCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_mngr_auth_grp_histDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grp_histPayload>
          }
          update: {
            args: Prisma.sy_mngr_auth_grp_histUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grp_histPayload>
          }
          deleteMany: {
            args: Prisma.sy_mngr_auth_grp_histDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_mngr_auth_grp_histUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_mngr_auth_grp_histUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_auth_grp_histPayload>
          }
          aggregate: {
            args: Prisma.Sy_mngr_auth_grp_histAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_mngr_auth_grp_hist>
          }
          groupBy: {
            args: Prisma.sy_mngr_auth_grp_histGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_mngr_auth_grp_histGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_mngr_auth_grp_histCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_mngr_auth_grp_histCountAggregateOutputType> | number
          }
        }
      }
      sy_mngr_lgn_hist: {
        payload: Prisma.$sy_mngr_lgn_histPayload<ExtArgs>
        fields: Prisma.sy_mngr_lgn_histFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_mngr_lgn_histFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_lgn_histPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_mngr_lgn_histFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_lgn_histPayload>
          }
          findFirst: {
            args: Prisma.sy_mngr_lgn_histFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_lgn_histPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_mngr_lgn_histFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_lgn_histPayload>
          }
          findMany: {
            args: Prisma.sy_mngr_lgn_histFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_lgn_histPayload>[]
          }
          create: {
            args: Prisma.sy_mngr_lgn_histCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_lgn_histPayload>
          }
          createMany: {
            args: Prisma.sy_mngr_lgn_histCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_mngr_lgn_histDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_lgn_histPayload>
          }
          update: {
            args: Prisma.sy_mngr_lgn_histUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_lgn_histPayload>
          }
          deleteMany: {
            args: Prisma.sy_mngr_lgn_histDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_mngr_lgn_histUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_mngr_lgn_histUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_lgn_histPayload>
          }
          aggregate: {
            args: Prisma.Sy_mngr_lgn_histAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_mngr_lgn_hist>
          }
          groupBy: {
            args: Prisma.sy_mngr_lgn_histGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_mngr_lgn_histGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_mngr_lgn_histCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_mngr_lgn_histCountAggregateOutputType> | number
          }
        }
      }
      sy_mngr_pwd_hist: {
        payload: Prisma.$sy_mngr_pwd_histPayload<ExtArgs>
        fields: Prisma.sy_mngr_pwd_histFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_mngr_pwd_histFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_pwd_histPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_mngr_pwd_histFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_pwd_histPayload>
          }
          findFirst: {
            args: Prisma.sy_mngr_pwd_histFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_pwd_histPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_mngr_pwd_histFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_pwd_histPayload>
          }
          findMany: {
            args: Prisma.sy_mngr_pwd_histFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_pwd_histPayload>[]
          }
          create: {
            args: Prisma.sy_mngr_pwd_histCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_pwd_histPayload>
          }
          createMany: {
            args: Prisma.sy_mngr_pwd_histCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_mngr_pwd_histDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_pwd_histPayload>
          }
          update: {
            args: Prisma.sy_mngr_pwd_histUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_pwd_histPayload>
          }
          deleteMany: {
            args: Prisma.sy_mngr_pwd_histDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_mngr_pwd_histUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_mngr_pwd_histUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_pwd_histPayload>
          }
          aggregate: {
            args: Prisma.Sy_mngr_pwd_histAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_mngr_pwd_hist>
          }
          groupBy: {
            args: Prisma.sy_mngr_pwd_histGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_mngr_pwd_histGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_mngr_pwd_histCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_mngr_pwd_histCountAggregateOutputType> | number
          }
        }
      }
      sy_mngr_req_hist: {
        payload: Prisma.$sy_mngr_req_histPayload<ExtArgs>
        fields: Prisma.sy_mngr_req_histFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sy_mngr_req_histFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_req_histPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sy_mngr_req_histFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_req_histPayload>
          }
          findFirst: {
            args: Prisma.sy_mngr_req_histFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_req_histPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sy_mngr_req_histFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_req_histPayload>
          }
          findMany: {
            args: Prisma.sy_mngr_req_histFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_req_histPayload>[]
          }
          create: {
            args: Prisma.sy_mngr_req_histCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_req_histPayload>
          }
          createMany: {
            args: Prisma.sy_mngr_req_histCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sy_mngr_req_histDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_req_histPayload>
          }
          update: {
            args: Prisma.sy_mngr_req_histUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_req_histPayload>
          }
          deleteMany: {
            args: Prisma.sy_mngr_req_histDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sy_mngr_req_histUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sy_mngr_req_histUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sy_mngr_req_histPayload>
          }
          aggregate: {
            args: Prisma.Sy_mngr_req_histAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSy_mngr_req_hist>
          }
          groupBy: {
            args: Prisma.sy_mngr_req_histGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sy_mngr_req_histGroupByOutputType>[]
          }
          count: {
            args: Prisma.sy_mngr_req_histCountArgs<ExtArgs>
            result: $Utils.Optional<Sy_mngr_req_histCountAggregateOutputType> | number
          }
        }
      }
      test_user: {
        payload: Prisma.$test_userPayload<ExtArgs>
        fields: Prisma.test_userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.test_userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.test_userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_userPayload>
          }
          findFirst: {
            args: Prisma.test_userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.test_userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_userPayload>
          }
          findMany: {
            args: Prisma.test_userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_userPayload>[]
          }
          create: {
            args: Prisma.test_userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_userPayload>
          }
          createMany: {
            args: Prisma.test_userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.test_userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_userPayload>
          }
          update: {
            args: Prisma.test_userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_userPayload>
          }
          deleteMany: {
            args: Prisma.test_userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.test_userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.test_userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_userPayload>
          }
          aggregate: {
            args: Prisma.Test_userAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTest_user>
          }
          groupBy: {
            args: Prisma.test_userGroupByArgs<ExtArgs>
            result: $Utils.Optional<Test_userGroupByOutputType>[]
          }
          count: {
            args: Prisma.test_userCountArgs<ExtArgs>
            result: $Utils.Optional<Test_userCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    aim_example_test?: aim_example_testOmit
    sc_mbr?: sc_mbrOmit
    sc_mbr_lgn_hist?: sc_mbr_lgn_histOmit
    sc_mbr_log?: sc_mbr_logOmit
    sc_mbr_prjt?: sc_mbr_prjtOmit
    sc_mbr_trms_agr_hist?: sc_mbr_trms_agr_histOmit
    sc_mbr_trms_agr_scr_hist?: sc_mbr_trms_agr_scr_histOmit
    sc_prjt?: sc_prjtOmit
    sc_token_hist?: sc_token_histOmit
    sv_faq?: sv_faqOmit
    sv_faq_atch_file?: sv_faq_atch_fileOmit
    sv_faq_cate_cd?: sv_faq_cate_cdOmit
    sv_faq_keyword?: sv_faq_keywordOmit
    sv_faq_rel_faq?: sv_faq_rel_faqOmit
    sv_inq?: sv_inqOmit
    sv_inq_ans?: sv_inq_ansOmit
    sv_inq_atch_file?: sv_inq_atch_fileOmit
    sv_inq_clsf?: sv_inq_clsfOmit
    sv_ntc?: sv_ntcOmit
    sv_ntc_atch_file?: sv_ntc_atch_fileOmit
    sv_popup?: sv_popupOmit
    sv_progm?: sv_progmOmit
    sv_sms_sndng?: sv_sms_sndngOmit
    sv_sms_tmpl?: sv_sms_tmplOmit
    sv_trms?: sv_trmsOmit
    sv_trms_hist?: sv_trms_histOmit
    sy_atch_file_mng?: sy_atch_file_mngOmit
    sy_auth?: sy_authOmit
    sy_auth_grp?: sy_auth_grpOmit
    sy_clco?: sy_clcoOmit
    sy_clco_dept?: sy_clco_deptOmit
    sy_dtl_cd?: sy_dtl_cdOmit
    sy_excel_hist?: sy_excel_histOmit
    sy_grp_cd?: sy_grp_cdOmit
    sy_menu?: sy_menuOmit
    sy_mngr?: sy_mngrOmit
    sy_mngr_auth_grp?: sy_mngr_auth_grpOmit
    sy_mngr_auth_grp_hist?: sy_mngr_auth_grp_histOmit
    sy_mngr_lgn_hist?: sy_mngr_lgn_histOmit
    sy_mngr_pwd_hist?: sy_mngr_pwd_histOmit
    sy_mngr_req_hist?: sy_mngr_req_histOmit
    test_user?: test_userOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model aim_example_test
   */

  export type AggregateAim_example_test = {
    _count: Aim_example_testCountAggregateOutputType | null
    _avg: Aim_example_testAvgAggregateOutputType | null
    _sum: Aim_example_testSumAggregateOutputType | null
    _min: Aim_example_testMinAggregateOutputType | null
    _max: Aim_example_testMaxAggregateOutputType | null
  }

  export type Aim_example_testAvgAggregateOutputType = {
    no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Aim_example_testSumAggregateOutputType = {
    no: number | null
    regr_no: bigint | null
    modr_no: bigint | null
  }

  export type Aim_example_testMinAggregateOutputType = {
    no: number | null
    col1: string | null
    col2: string | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Aim_example_testMaxAggregateOutputType = {
    no: number | null
    col1: string | null
    col2: string | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Aim_example_testCountAggregateOutputType = {
    no: number
    col1: number
    col2: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Aim_example_testAvgAggregateInputType = {
    no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Aim_example_testSumAggregateInputType = {
    no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Aim_example_testMinAggregateInputType = {
    no?: true
    col1?: true
    col2?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Aim_example_testMaxAggregateInputType = {
    no?: true
    col1?: true
    col2?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Aim_example_testCountAggregateInputType = {
    no?: true
    col1?: true
    col2?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Aim_example_testAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which aim_example_test to aggregate.
     */
    where?: aim_example_testWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aim_example_tests to fetch.
     */
    orderBy?: aim_example_testOrderByWithRelationInput | aim_example_testOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: aim_example_testWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aim_example_tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aim_example_tests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned aim_example_tests
    **/
    _count?: true | Aim_example_testCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Aim_example_testAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Aim_example_testSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Aim_example_testMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Aim_example_testMaxAggregateInputType
  }

  export type GetAim_example_testAggregateType<T extends Aim_example_testAggregateArgs> = {
        [P in keyof T & keyof AggregateAim_example_test]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAim_example_test[P]>
      : GetScalarType<T[P], AggregateAim_example_test[P]>
  }




  export type aim_example_testGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: aim_example_testWhereInput
    orderBy?: aim_example_testOrderByWithAggregationInput | aim_example_testOrderByWithAggregationInput[]
    by: Aim_example_testScalarFieldEnum[] | Aim_example_testScalarFieldEnum
    having?: aim_example_testScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Aim_example_testCountAggregateInputType | true
    _avg?: Aim_example_testAvgAggregateInputType
    _sum?: Aim_example_testSumAggregateInputType
    _min?: Aim_example_testMinAggregateInputType
    _max?: Aim_example_testMaxAggregateInputType
  }

  export type Aim_example_testGroupByOutputType = {
    no: number
    col1: string | null
    col2: string | null
    regr_no: bigint
    reg_dt: Date
    modr_no: bigint
    mod_dt: Date
    _count: Aim_example_testCountAggregateOutputType | null
    _avg: Aim_example_testAvgAggregateOutputType | null
    _sum: Aim_example_testSumAggregateOutputType | null
    _min: Aim_example_testMinAggregateOutputType | null
    _max: Aim_example_testMaxAggregateOutputType | null
  }

  type GetAim_example_testGroupByPayload<T extends aim_example_testGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Aim_example_testGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Aim_example_testGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Aim_example_testGroupByOutputType[P]>
            : GetScalarType<T[P], Aim_example_testGroupByOutputType[P]>
        }
      >
    >


  export type aim_example_testSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    no?: boolean
    col1?: boolean
    col2?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["aim_example_test"]>



  export type aim_example_testSelectScalar = {
    no?: boolean
    col1?: boolean
    col2?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type aim_example_testOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"no" | "col1" | "col2" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["aim_example_test"]>

  export type $aim_example_testPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "aim_example_test"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      no: number
      col1: string | null
      col2: string | null
      regr_no: bigint
      reg_dt: Date
      modr_no: bigint
      mod_dt: Date
    }, ExtArgs["result"]["aim_example_test"]>
    composites: {}
  }

  type aim_example_testGetPayload<S extends boolean | null | undefined | aim_example_testDefaultArgs> = $Result.GetResult<Prisma.$aim_example_testPayload, S>

  type aim_example_testCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<aim_example_testFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Aim_example_testCountAggregateInputType | true
    }

  export interface aim_example_testDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['aim_example_test'], meta: { name: 'aim_example_test' } }
    /**
     * Find zero or one Aim_example_test that matches the filter.
     * @param {aim_example_testFindUniqueArgs} args - Arguments to find a Aim_example_test
     * @example
     * // Get one Aim_example_test
     * const aim_example_test = await prisma.aim_example_test.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends aim_example_testFindUniqueArgs>(args: SelectSubset<T, aim_example_testFindUniqueArgs<ExtArgs>>): Prisma__aim_example_testClient<$Result.GetResult<Prisma.$aim_example_testPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Aim_example_test that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {aim_example_testFindUniqueOrThrowArgs} args - Arguments to find a Aim_example_test
     * @example
     * // Get one Aim_example_test
     * const aim_example_test = await prisma.aim_example_test.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends aim_example_testFindUniqueOrThrowArgs>(args: SelectSubset<T, aim_example_testFindUniqueOrThrowArgs<ExtArgs>>): Prisma__aim_example_testClient<$Result.GetResult<Prisma.$aim_example_testPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Aim_example_test that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aim_example_testFindFirstArgs} args - Arguments to find a Aim_example_test
     * @example
     * // Get one Aim_example_test
     * const aim_example_test = await prisma.aim_example_test.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends aim_example_testFindFirstArgs>(args?: SelectSubset<T, aim_example_testFindFirstArgs<ExtArgs>>): Prisma__aim_example_testClient<$Result.GetResult<Prisma.$aim_example_testPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Aim_example_test that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aim_example_testFindFirstOrThrowArgs} args - Arguments to find a Aim_example_test
     * @example
     * // Get one Aim_example_test
     * const aim_example_test = await prisma.aim_example_test.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends aim_example_testFindFirstOrThrowArgs>(args?: SelectSubset<T, aim_example_testFindFirstOrThrowArgs<ExtArgs>>): Prisma__aim_example_testClient<$Result.GetResult<Prisma.$aim_example_testPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Aim_example_tests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aim_example_testFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Aim_example_tests
     * const aim_example_tests = await prisma.aim_example_test.findMany()
     * 
     * // Get first 10 Aim_example_tests
     * const aim_example_tests = await prisma.aim_example_test.findMany({ take: 10 })
     * 
     * // Only select the `no`
     * const aim_example_testWithNoOnly = await prisma.aim_example_test.findMany({ select: { no: true } })
     * 
     */
    findMany<T extends aim_example_testFindManyArgs>(args?: SelectSubset<T, aim_example_testFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$aim_example_testPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Aim_example_test.
     * @param {aim_example_testCreateArgs} args - Arguments to create a Aim_example_test.
     * @example
     * // Create one Aim_example_test
     * const Aim_example_test = await prisma.aim_example_test.create({
     *   data: {
     *     // ... data to create a Aim_example_test
     *   }
     * })
     * 
     */
    create<T extends aim_example_testCreateArgs>(args: SelectSubset<T, aim_example_testCreateArgs<ExtArgs>>): Prisma__aim_example_testClient<$Result.GetResult<Prisma.$aim_example_testPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Aim_example_tests.
     * @param {aim_example_testCreateManyArgs} args - Arguments to create many Aim_example_tests.
     * @example
     * // Create many Aim_example_tests
     * const aim_example_test = await prisma.aim_example_test.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends aim_example_testCreateManyArgs>(args?: SelectSubset<T, aim_example_testCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Aim_example_test.
     * @param {aim_example_testDeleteArgs} args - Arguments to delete one Aim_example_test.
     * @example
     * // Delete one Aim_example_test
     * const Aim_example_test = await prisma.aim_example_test.delete({
     *   where: {
     *     // ... filter to delete one Aim_example_test
     *   }
     * })
     * 
     */
    delete<T extends aim_example_testDeleteArgs>(args: SelectSubset<T, aim_example_testDeleteArgs<ExtArgs>>): Prisma__aim_example_testClient<$Result.GetResult<Prisma.$aim_example_testPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Aim_example_test.
     * @param {aim_example_testUpdateArgs} args - Arguments to update one Aim_example_test.
     * @example
     * // Update one Aim_example_test
     * const aim_example_test = await prisma.aim_example_test.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends aim_example_testUpdateArgs>(args: SelectSubset<T, aim_example_testUpdateArgs<ExtArgs>>): Prisma__aim_example_testClient<$Result.GetResult<Prisma.$aim_example_testPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Aim_example_tests.
     * @param {aim_example_testDeleteManyArgs} args - Arguments to filter Aim_example_tests to delete.
     * @example
     * // Delete a few Aim_example_tests
     * const { count } = await prisma.aim_example_test.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends aim_example_testDeleteManyArgs>(args?: SelectSubset<T, aim_example_testDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Aim_example_tests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aim_example_testUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Aim_example_tests
     * const aim_example_test = await prisma.aim_example_test.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends aim_example_testUpdateManyArgs>(args: SelectSubset<T, aim_example_testUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Aim_example_test.
     * @param {aim_example_testUpsertArgs} args - Arguments to update or create a Aim_example_test.
     * @example
     * // Update or create a Aim_example_test
     * const aim_example_test = await prisma.aim_example_test.upsert({
     *   create: {
     *     // ... data to create a Aim_example_test
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Aim_example_test we want to update
     *   }
     * })
     */
    upsert<T extends aim_example_testUpsertArgs>(args: SelectSubset<T, aim_example_testUpsertArgs<ExtArgs>>): Prisma__aim_example_testClient<$Result.GetResult<Prisma.$aim_example_testPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Aim_example_tests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aim_example_testCountArgs} args - Arguments to filter Aim_example_tests to count.
     * @example
     * // Count the number of Aim_example_tests
     * const count = await prisma.aim_example_test.count({
     *   where: {
     *     // ... the filter for the Aim_example_tests we want to count
     *   }
     * })
    **/
    count<T extends aim_example_testCountArgs>(
      args?: Subset<T, aim_example_testCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Aim_example_testCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Aim_example_test.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Aim_example_testAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Aim_example_testAggregateArgs>(args: Subset<T, Aim_example_testAggregateArgs>): Prisma.PrismaPromise<GetAim_example_testAggregateType<T>>

    /**
     * Group by Aim_example_test.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aim_example_testGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends aim_example_testGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: aim_example_testGroupByArgs['orderBy'] }
        : { orderBy?: aim_example_testGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, aim_example_testGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAim_example_testGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the aim_example_test model
   */
  readonly fields: aim_example_testFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for aim_example_test.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__aim_example_testClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the aim_example_test model
   */
  interface aim_example_testFieldRefs {
    readonly no: FieldRef<"aim_example_test", 'Int'>
    readonly col1: FieldRef<"aim_example_test", 'String'>
    readonly col2: FieldRef<"aim_example_test", 'String'>
    readonly regr_no: FieldRef<"aim_example_test", 'BigInt'>
    readonly reg_dt: FieldRef<"aim_example_test", 'DateTime'>
    readonly modr_no: FieldRef<"aim_example_test", 'BigInt'>
    readonly mod_dt: FieldRef<"aim_example_test", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * aim_example_test findUnique
   */
  export type aim_example_testFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aim_example_test
     */
    select?: aim_example_testSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aim_example_test
     */
    omit?: aim_example_testOmit<ExtArgs> | null
    /**
     * Filter, which aim_example_test to fetch.
     */
    where: aim_example_testWhereUniqueInput
  }

  /**
   * aim_example_test findUniqueOrThrow
   */
  export type aim_example_testFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aim_example_test
     */
    select?: aim_example_testSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aim_example_test
     */
    omit?: aim_example_testOmit<ExtArgs> | null
    /**
     * Filter, which aim_example_test to fetch.
     */
    where: aim_example_testWhereUniqueInput
  }

  /**
   * aim_example_test findFirst
   */
  export type aim_example_testFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aim_example_test
     */
    select?: aim_example_testSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aim_example_test
     */
    omit?: aim_example_testOmit<ExtArgs> | null
    /**
     * Filter, which aim_example_test to fetch.
     */
    where?: aim_example_testWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aim_example_tests to fetch.
     */
    orderBy?: aim_example_testOrderByWithRelationInput | aim_example_testOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for aim_example_tests.
     */
    cursor?: aim_example_testWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aim_example_tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aim_example_tests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of aim_example_tests.
     */
    distinct?: Aim_example_testScalarFieldEnum | Aim_example_testScalarFieldEnum[]
  }

  /**
   * aim_example_test findFirstOrThrow
   */
  export type aim_example_testFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aim_example_test
     */
    select?: aim_example_testSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aim_example_test
     */
    omit?: aim_example_testOmit<ExtArgs> | null
    /**
     * Filter, which aim_example_test to fetch.
     */
    where?: aim_example_testWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aim_example_tests to fetch.
     */
    orderBy?: aim_example_testOrderByWithRelationInput | aim_example_testOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for aim_example_tests.
     */
    cursor?: aim_example_testWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aim_example_tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aim_example_tests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of aim_example_tests.
     */
    distinct?: Aim_example_testScalarFieldEnum | Aim_example_testScalarFieldEnum[]
  }

  /**
   * aim_example_test findMany
   */
  export type aim_example_testFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aim_example_test
     */
    select?: aim_example_testSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aim_example_test
     */
    omit?: aim_example_testOmit<ExtArgs> | null
    /**
     * Filter, which aim_example_tests to fetch.
     */
    where?: aim_example_testWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aim_example_tests to fetch.
     */
    orderBy?: aim_example_testOrderByWithRelationInput | aim_example_testOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing aim_example_tests.
     */
    cursor?: aim_example_testWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aim_example_tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aim_example_tests.
     */
    skip?: number
    distinct?: Aim_example_testScalarFieldEnum | Aim_example_testScalarFieldEnum[]
  }

  /**
   * aim_example_test create
   */
  export type aim_example_testCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aim_example_test
     */
    select?: aim_example_testSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aim_example_test
     */
    omit?: aim_example_testOmit<ExtArgs> | null
    /**
     * The data needed to create a aim_example_test.
     */
    data: XOR<aim_example_testCreateInput, aim_example_testUncheckedCreateInput>
  }

  /**
   * aim_example_test createMany
   */
  export type aim_example_testCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many aim_example_tests.
     */
    data: aim_example_testCreateManyInput | aim_example_testCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * aim_example_test update
   */
  export type aim_example_testUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aim_example_test
     */
    select?: aim_example_testSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aim_example_test
     */
    omit?: aim_example_testOmit<ExtArgs> | null
    /**
     * The data needed to update a aim_example_test.
     */
    data: XOR<aim_example_testUpdateInput, aim_example_testUncheckedUpdateInput>
    /**
     * Choose, which aim_example_test to update.
     */
    where: aim_example_testWhereUniqueInput
  }

  /**
   * aim_example_test updateMany
   */
  export type aim_example_testUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update aim_example_tests.
     */
    data: XOR<aim_example_testUpdateManyMutationInput, aim_example_testUncheckedUpdateManyInput>
    /**
     * Filter which aim_example_tests to update
     */
    where?: aim_example_testWhereInput
    /**
     * Limit how many aim_example_tests to update.
     */
    limit?: number
  }

  /**
   * aim_example_test upsert
   */
  export type aim_example_testUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aim_example_test
     */
    select?: aim_example_testSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aim_example_test
     */
    omit?: aim_example_testOmit<ExtArgs> | null
    /**
     * The filter to search for the aim_example_test to update in case it exists.
     */
    where: aim_example_testWhereUniqueInput
    /**
     * In case the aim_example_test found by the `where` argument doesn't exist, create a new aim_example_test with this data.
     */
    create: XOR<aim_example_testCreateInput, aim_example_testUncheckedCreateInput>
    /**
     * In case the aim_example_test was found with the provided `where` argument, update it with this data.
     */
    update: XOR<aim_example_testUpdateInput, aim_example_testUncheckedUpdateInput>
  }

  /**
   * aim_example_test delete
   */
  export type aim_example_testDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aim_example_test
     */
    select?: aim_example_testSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aim_example_test
     */
    omit?: aim_example_testOmit<ExtArgs> | null
    /**
     * Filter which aim_example_test to delete.
     */
    where: aim_example_testWhereUniqueInput
  }

  /**
   * aim_example_test deleteMany
   */
  export type aim_example_testDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which aim_example_tests to delete
     */
    where?: aim_example_testWhereInput
    /**
     * Limit how many aim_example_tests to delete.
     */
    limit?: number
  }

  /**
   * aim_example_test without action
   */
  export type aim_example_testDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aim_example_test
     */
    select?: aim_example_testSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aim_example_test
     */
    omit?: aim_example_testOmit<ExtArgs> | null
  }


  /**
   * Model sc_mbr
   */

  export type AggregateSc_mbr = {
    _count: Sc_mbrCountAggregateOutputType | null
    _avg: Sc_mbrAvgAggregateOutputType | null
    _sum: Sc_mbrSumAggregateOutputType | null
    _min: Sc_mbrMinAggregateOutputType | null
    _max: Sc_mbrMaxAggregateOutputType | null
  }

  export type Sc_mbrAvgAggregateOutputType = {
    mbr_no: number | null
    clco_no: number | null
    fail_pswd_cnt: number | null
    aos_permission: number | null
    push_status: number | null
    mbr_photo_file_mng_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sc_mbrSumAggregateOutputType = {
    mbr_no: bigint | null
    clco_no: bigint | null
    fail_pswd_cnt: number | null
    aos_permission: number | null
    push_status: number | null
    mbr_photo_file_mng_no: bigint | null
    regr_no: bigint | null
    modr_no: bigint | null
  }

  export type Sc_mbrMinAggregateOutputType = {
    mbr_no: bigint | null
    clco_no: bigint | null
    clco_dept_cd: string | null
    emp_no: string | null
    mbr_id: string | null
    mbr_pswd: string | null
    mbr_nm: string | null
    brdt: Date | null
    gen_cd: string | null
    mbph_no: string | null
    email_addr: string | null
    fail_pswd_cnt: number | null
    join_dt: Date | null
    rcnt_cntn_dt: Date | null
    drmc_cnvs_dt: Date | null
    chge_pswd_dt: Date | null
    mbr_stts_cd: string | null
    tmnl_tkn_val: string | null
    tmnl_os_nm: string | null
    tmnl_app_ver_nm: string | null
    last_tmnl_sync_dt: Date | null
    aos_permission: number | null
    push_status: number | null
    mbr_photo_file_mng_no: bigint | null
    app_prgrs_stag_val: string | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
    out_tp_cd: string | null
    out_tp_ttl: string | null
    out_join_dt: Date | null
    mbr_sctn_cd: string | null
  }

  export type Sc_mbrMaxAggregateOutputType = {
    mbr_no: bigint | null
    clco_no: bigint | null
    clco_dept_cd: string | null
    emp_no: string | null
    mbr_id: string | null
    mbr_pswd: string | null
    mbr_nm: string | null
    brdt: Date | null
    gen_cd: string | null
    mbph_no: string | null
    email_addr: string | null
    fail_pswd_cnt: number | null
    join_dt: Date | null
    rcnt_cntn_dt: Date | null
    drmc_cnvs_dt: Date | null
    chge_pswd_dt: Date | null
    mbr_stts_cd: string | null
    tmnl_tkn_val: string | null
    tmnl_os_nm: string | null
    tmnl_app_ver_nm: string | null
    last_tmnl_sync_dt: Date | null
    aos_permission: number | null
    push_status: number | null
    mbr_photo_file_mng_no: bigint | null
    app_prgrs_stag_val: string | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
    out_tp_cd: string | null
    out_tp_ttl: string | null
    out_join_dt: Date | null
    mbr_sctn_cd: string | null
  }

  export type Sc_mbrCountAggregateOutputType = {
    mbr_no: number
    clco_no: number
    clco_dept_cd: number
    emp_no: number
    mbr_id: number
    mbr_pswd: number
    mbr_nm: number
    brdt: number
    gen_cd: number
    mbph_no: number
    email_addr: number
    fail_pswd_cnt: number
    join_dt: number
    rcnt_cntn_dt: number
    drmc_cnvs_dt: number
    chge_pswd_dt: number
    mbr_stts_cd: number
    tmnl_tkn_val: number
    tmnl_os_nm: number
    tmnl_app_ver_nm: number
    last_tmnl_sync_dt: number
    aos_permission: number
    push_status: number
    mbr_photo_file_mng_no: number
    app_prgrs_stag_val: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    out_tp_cd: number
    out_tp_ttl: number
    out_join_dt: number
    mbr_sctn_cd: number
    _all: number
  }


  export type Sc_mbrAvgAggregateInputType = {
    mbr_no?: true
    clco_no?: true
    fail_pswd_cnt?: true
    aos_permission?: true
    push_status?: true
    mbr_photo_file_mng_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sc_mbrSumAggregateInputType = {
    mbr_no?: true
    clco_no?: true
    fail_pswd_cnt?: true
    aos_permission?: true
    push_status?: true
    mbr_photo_file_mng_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sc_mbrMinAggregateInputType = {
    mbr_no?: true
    clco_no?: true
    clco_dept_cd?: true
    emp_no?: true
    mbr_id?: true
    mbr_pswd?: true
    mbr_nm?: true
    brdt?: true
    gen_cd?: true
    mbph_no?: true
    email_addr?: true
    fail_pswd_cnt?: true
    join_dt?: true
    rcnt_cntn_dt?: true
    drmc_cnvs_dt?: true
    chge_pswd_dt?: true
    mbr_stts_cd?: true
    tmnl_tkn_val?: true
    tmnl_os_nm?: true
    tmnl_app_ver_nm?: true
    last_tmnl_sync_dt?: true
    aos_permission?: true
    push_status?: true
    mbr_photo_file_mng_no?: true
    app_prgrs_stag_val?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    out_tp_cd?: true
    out_tp_ttl?: true
    out_join_dt?: true
    mbr_sctn_cd?: true
  }

  export type Sc_mbrMaxAggregateInputType = {
    mbr_no?: true
    clco_no?: true
    clco_dept_cd?: true
    emp_no?: true
    mbr_id?: true
    mbr_pswd?: true
    mbr_nm?: true
    brdt?: true
    gen_cd?: true
    mbph_no?: true
    email_addr?: true
    fail_pswd_cnt?: true
    join_dt?: true
    rcnt_cntn_dt?: true
    drmc_cnvs_dt?: true
    chge_pswd_dt?: true
    mbr_stts_cd?: true
    tmnl_tkn_val?: true
    tmnl_os_nm?: true
    tmnl_app_ver_nm?: true
    last_tmnl_sync_dt?: true
    aos_permission?: true
    push_status?: true
    mbr_photo_file_mng_no?: true
    app_prgrs_stag_val?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    out_tp_cd?: true
    out_tp_ttl?: true
    out_join_dt?: true
    mbr_sctn_cd?: true
  }

  export type Sc_mbrCountAggregateInputType = {
    mbr_no?: true
    clco_no?: true
    clco_dept_cd?: true
    emp_no?: true
    mbr_id?: true
    mbr_pswd?: true
    mbr_nm?: true
    brdt?: true
    gen_cd?: true
    mbph_no?: true
    email_addr?: true
    fail_pswd_cnt?: true
    join_dt?: true
    rcnt_cntn_dt?: true
    drmc_cnvs_dt?: true
    chge_pswd_dt?: true
    mbr_stts_cd?: true
    tmnl_tkn_val?: true
    tmnl_os_nm?: true
    tmnl_app_ver_nm?: true
    last_tmnl_sync_dt?: true
    aos_permission?: true
    push_status?: true
    mbr_photo_file_mng_no?: true
    app_prgrs_stag_val?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    out_tp_cd?: true
    out_tp_ttl?: true
    out_join_dt?: true
    mbr_sctn_cd?: true
    _all?: true
  }

  export type Sc_mbrAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_mbr to aggregate.
     */
    where?: sc_mbrWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbrs to fetch.
     */
    orderBy?: sc_mbrOrderByWithRelationInput | sc_mbrOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sc_mbrWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbrs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbrs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sc_mbrs
    **/
    _count?: true | Sc_mbrCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sc_mbrAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sc_mbrSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sc_mbrMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sc_mbrMaxAggregateInputType
  }

  export type GetSc_mbrAggregateType<T extends Sc_mbrAggregateArgs> = {
        [P in keyof T & keyof AggregateSc_mbr]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSc_mbr[P]>
      : GetScalarType<T[P], AggregateSc_mbr[P]>
  }




  export type sc_mbrGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sc_mbrWhereInput
    orderBy?: sc_mbrOrderByWithAggregationInput | sc_mbrOrderByWithAggregationInput[]
    by: Sc_mbrScalarFieldEnum[] | Sc_mbrScalarFieldEnum
    having?: sc_mbrScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sc_mbrCountAggregateInputType | true
    _avg?: Sc_mbrAvgAggregateInputType
    _sum?: Sc_mbrSumAggregateInputType
    _min?: Sc_mbrMinAggregateInputType
    _max?: Sc_mbrMaxAggregateInputType
  }

  export type Sc_mbrGroupByOutputType = {
    mbr_no: bigint
    clco_no: bigint
    clco_dept_cd: string | null
    emp_no: string
    mbr_id: string
    mbr_pswd: string
    mbr_nm: string
    brdt: Date
    gen_cd: string
    mbph_no: string
    email_addr: string
    fail_pswd_cnt: number | null
    join_dt: Date
    rcnt_cntn_dt: Date | null
    drmc_cnvs_dt: Date | null
    chge_pswd_dt: Date | null
    mbr_stts_cd: string
    tmnl_tkn_val: string | null
    tmnl_os_nm: string | null
    tmnl_app_ver_nm: string | null
    last_tmnl_sync_dt: Date | null
    aos_permission: number | null
    push_status: number | null
    mbr_photo_file_mng_no: bigint | null
    app_prgrs_stag_val: string | null
    regr_no: bigint
    reg_dt: Date
    modr_no: bigint
    mod_dt: Date
    out_tp_cd: string | null
    out_tp_ttl: string | null
    out_join_dt: Date | null
    mbr_sctn_cd: string | null
    _count: Sc_mbrCountAggregateOutputType | null
    _avg: Sc_mbrAvgAggregateOutputType | null
    _sum: Sc_mbrSumAggregateOutputType | null
    _min: Sc_mbrMinAggregateOutputType | null
    _max: Sc_mbrMaxAggregateOutputType | null
  }

  type GetSc_mbrGroupByPayload<T extends sc_mbrGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sc_mbrGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sc_mbrGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sc_mbrGroupByOutputType[P]>
            : GetScalarType<T[P], Sc_mbrGroupByOutputType[P]>
        }
      >
    >


  export type sc_mbrSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    mbr_no?: boolean
    clco_no?: boolean
    clco_dept_cd?: boolean
    emp_no?: boolean
    mbr_id?: boolean
    mbr_pswd?: boolean
    mbr_nm?: boolean
    brdt?: boolean
    gen_cd?: boolean
    mbph_no?: boolean
    email_addr?: boolean
    fail_pswd_cnt?: boolean
    join_dt?: boolean
    rcnt_cntn_dt?: boolean
    drmc_cnvs_dt?: boolean
    chge_pswd_dt?: boolean
    mbr_stts_cd?: boolean
    tmnl_tkn_val?: boolean
    tmnl_os_nm?: boolean
    tmnl_app_ver_nm?: boolean
    last_tmnl_sync_dt?: boolean
    aos_permission?: boolean
    push_status?: boolean
    mbr_photo_file_mng_no?: boolean
    app_prgrs_stag_val?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
    out_tp_cd?: boolean
    out_tp_ttl?: boolean
    out_join_dt?: boolean
    mbr_sctn_cd?: boolean
  }, ExtArgs["result"]["sc_mbr"]>



  export type sc_mbrSelectScalar = {
    mbr_no?: boolean
    clco_no?: boolean
    clco_dept_cd?: boolean
    emp_no?: boolean
    mbr_id?: boolean
    mbr_pswd?: boolean
    mbr_nm?: boolean
    brdt?: boolean
    gen_cd?: boolean
    mbph_no?: boolean
    email_addr?: boolean
    fail_pswd_cnt?: boolean
    join_dt?: boolean
    rcnt_cntn_dt?: boolean
    drmc_cnvs_dt?: boolean
    chge_pswd_dt?: boolean
    mbr_stts_cd?: boolean
    tmnl_tkn_val?: boolean
    tmnl_os_nm?: boolean
    tmnl_app_ver_nm?: boolean
    last_tmnl_sync_dt?: boolean
    aos_permission?: boolean
    push_status?: boolean
    mbr_photo_file_mng_no?: boolean
    app_prgrs_stag_val?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
    out_tp_cd?: boolean
    out_tp_ttl?: boolean
    out_join_dt?: boolean
    mbr_sctn_cd?: boolean
  }

  export type sc_mbrOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"mbr_no" | "clco_no" | "clco_dept_cd" | "emp_no" | "mbr_id" | "mbr_pswd" | "mbr_nm" | "brdt" | "gen_cd" | "mbph_no" | "email_addr" | "fail_pswd_cnt" | "join_dt" | "rcnt_cntn_dt" | "drmc_cnvs_dt" | "chge_pswd_dt" | "mbr_stts_cd" | "tmnl_tkn_val" | "tmnl_os_nm" | "tmnl_app_ver_nm" | "last_tmnl_sync_dt" | "aos_permission" | "push_status" | "mbr_photo_file_mng_no" | "app_prgrs_stag_val" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt" | "out_tp_cd" | "out_tp_ttl" | "out_join_dt" | "mbr_sctn_cd", ExtArgs["result"]["sc_mbr"]>

  export type $sc_mbrPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sc_mbr"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      mbr_no: bigint
      clco_no: bigint
      clco_dept_cd: string | null
      emp_no: string
      mbr_id: string
      mbr_pswd: string
      mbr_nm: string
      brdt: Date
      gen_cd: string
      mbph_no: string
      email_addr: string
      fail_pswd_cnt: number | null
      join_dt: Date
      rcnt_cntn_dt: Date | null
      drmc_cnvs_dt: Date | null
      chge_pswd_dt: Date | null
      mbr_stts_cd: string
      tmnl_tkn_val: string | null
      tmnl_os_nm: string | null
      tmnl_app_ver_nm: string | null
      last_tmnl_sync_dt: Date | null
      aos_permission: number | null
      push_status: number | null
      mbr_photo_file_mng_no: bigint | null
      app_prgrs_stag_val: string | null
      regr_no: bigint
      reg_dt: Date
      modr_no: bigint
      mod_dt: Date
      out_tp_cd: string | null
      out_tp_ttl: string | null
      out_join_dt: Date | null
      mbr_sctn_cd: string | null
    }, ExtArgs["result"]["sc_mbr"]>
    composites: {}
  }

  type sc_mbrGetPayload<S extends boolean | null | undefined | sc_mbrDefaultArgs> = $Result.GetResult<Prisma.$sc_mbrPayload, S>

  type sc_mbrCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sc_mbrFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sc_mbrCountAggregateInputType | true
    }

  export interface sc_mbrDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sc_mbr'], meta: { name: 'sc_mbr' } }
    /**
     * Find zero or one Sc_mbr that matches the filter.
     * @param {sc_mbrFindUniqueArgs} args - Arguments to find a Sc_mbr
     * @example
     * // Get one Sc_mbr
     * const sc_mbr = await prisma.sc_mbr.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sc_mbrFindUniqueArgs>(args: SelectSubset<T, sc_mbrFindUniqueArgs<ExtArgs>>): Prisma__sc_mbrClient<$Result.GetResult<Prisma.$sc_mbrPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sc_mbr that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sc_mbrFindUniqueOrThrowArgs} args - Arguments to find a Sc_mbr
     * @example
     * // Get one Sc_mbr
     * const sc_mbr = await prisma.sc_mbr.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sc_mbrFindUniqueOrThrowArgs>(args: SelectSubset<T, sc_mbrFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sc_mbrClient<$Result.GetResult<Prisma.$sc_mbrPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_mbr that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbrFindFirstArgs} args - Arguments to find a Sc_mbr
     * @example
     * // Get one Sc_mbr
     * const sc_mbr = await prisma.sc_mbr.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sc_mbrFindFirstArgs>(args?: SelectSubset<T, sc_mbrFindFirstArgs<ExtArgs>>): Prisma__sc_mbrClient<$Result.GetResult<Prisma.$sc_mbrPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_mbr that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbrFindFirstOrThrowArgs} args - Arguments to find a Sc_mbr
     * @example
     * // Get one Sc_mbr
     * const sc_mbr = await prisma.sc_mbr.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sc_mbrFindFirstOrThrowArgs>(args?: SelectSubset<T, sc_mbrFindFirstOrThrowArgs<ExtArgs>>): Prisma__sc_mbrClient<$Result.GetResult<Prisma.$sc_mbrPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sc_mbrs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbrFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sc_mbrs
     * const sc_mbrs = await prisma.sc_mbr.findMany()
     * 
     * // Get first 10 Sc_mbrs
     * const sc_mbrs = await prisma.sc_mbr.findMany({ take: 10 })
     * 
     * // Only select the `mbr_no`
     * const sc_mbrWithMbr_noOnly = await prisma.sc_mbr.findMany({ select: { mbr_no: true } })
     * 
     */
    findMany<T extends sc_mbrFindManyArgs>(args?: SelectSubset<T, sc_mbrFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sc_mbrPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sc_mbr.
     * @param {sc_mbrCreateArgs} args - Arguments to create a Sc_mbr.
     * @example
     * // Create one Sc_mbr
     * const Sc_mbr = await prisma.sc_mbr.create({
     *   data: {
     *     // ... data to create a Sc_mbr
     *   }
     * })
     * 
     */
    create<T extends sc_mbrCreateArgs>(args: SelectSubset<T, sc_mbrCreateArgs<ExtArgs>>): Prisma__sc_mbrClient<$Result.GetResult<Prisma.$sc_mbrPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sc_mbrs.
     * @param {sc_mbrCreateManyArgs} args - Arguments to create many Sc_mbrs.
     * @example
     * // Create many Sc_mbrs
     * const sc_mbr = await prisma.sc_mbr.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sc_mbrCreateManyArgs>(args?: SelectSubset<T, sc_mbrCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sc_mbr.
     * @param {sc_mbrDeleteArgs} args - Arguments to delete one Sc_mbr.
     * @example
     * // Delete one Sc_mbr
     * const Sc_mbr = await prisma.sc_mbr.delete({
     *   where: {
     *     // ... filter to delete one Sc_mbr
     *   }
     * })
     * 
     */
    delete<T extends sc_mbrDeleteArgs>(args: SelectSubset<T, sc_mbrDeleteArgs<ExtArgs>>): Prisma__sc_mbrClient<$Result.GetResult<Prisma.$sc_mbrPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sc_mbr.
     * @param {sc_mbrUpdateArgs} args - Arguments to update one Sc_mbr.
     * @example
     * // Update one Sc_mbr
     * const sc_mbr = await prisma.sc_mbr.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sc_mbrUpdateArgs>(args: SelectSubset<T, sc_mbrUpdateArgs<ExtArgs>>): Prisma__sc_mbrClient<$Result.GetResult<Prisma.$sc_mbrPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sc_mbrs.
     * @param {sc_mbrDeleteManyArgs} args - Arguments to filter Sc_mbrs to delete.
     * @example
     * // Delete a few Sc_mbrs
     * const { count } = await prisma.sc_mbr.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sc_mbrDeleteManyArgs>(args?: SelectSubset<T, sc_mbrDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sc_mbrs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbrUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sc_mbrs
     * const sc_mbr = await prisma.sc_mbr.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sc_mbrUpdateManyArgs>(args: SelectSubset<T, sc_mbrUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sc_mbr.
     * @param {sc_mbrUpsertArgs} args - Arguments to update or create a Sc_mbr.
     * @example
     * // Update or create a Sc_mbr
     * const sc_mbr = await prisma.sc_mbr.upsert({
     *   create: {
     *     // ... data to create a Sc_mbr
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sc_mbr we want to update
     *   }
     * })
     */
    upsert<T extends sc_mbrUpsertArgs>(args: SelectSubset<T, sc_mbrUpsertArgs<ExtArgs>>): Prisma__sc_mbrClient<$Result.GetResult<Prisma.$sc_mbrPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sc_mbrs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbrCountArgs} args - Arguments to filter Sc_mbrs to count.
     * @example
     * // Count the number of Sc_mbrs
     * const count = await prisma.sc_mbr.count({
     *   where: {
     *     // ... the filter for the Sc_mbrs we want to count
     *   }
     * })
    **/
    count<T extends sc_mbrCountArgs>(
      args?: Subset<T, sc_mbrCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sc_mbrCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sc_mbr.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sc_mbrAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sc_mbrAggregateArgs>(args: Subset<T, Sc_mbrAggregateArgs>): Prisma.PrismaPromise<GetSc_mbrAggregateType<T>>

    /**
     * Group by Sc_mbr.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbrGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sc_mbrGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sc_mbrGroupByArgs['orderBy'] }
        : { orderBy?: sc_mbrGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sc_mbrGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSc_mbrGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sc_mbr model
   */
  readonly fields: sc_mbrFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sc_mbr.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sc_mbrClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sc_mbr model
   */
  interface sc_mbrFieldRefs {
    readonly mbr_no: FieldRef<"sc_mbr", 'BigInt'>
    readonly clco_no: FieldRef<"sc_mbr", 'BigInt'>
    readonly clco_dept_cd: FieldRef<"sc_mbr", 'String'>
    readonly emp_no: FieldRef<"sc_mbr", 'String'>
    readonly mbr_id: FieldRef<"sc_mbr", 'String'>
    readonly mbr_pswd: FieldRef<"sc_mbr", 'String'>
    readonly mbr_nm: FieldRef<"sc_mbr", 'String'>
    readonly brdt: FieldRef<"sc_mbr", 'DateTime'>
    readonly gen_cd: FieldRef<"sc_mbr", 'String'>
    readonly mbph_no: FieldRef<"sc_mbr", 'String'>
    readonly email_addr: FieldRef<"sc_mbr", 'String'>
    readonly fail_pswd_cnt: FieldRef<"sc_mbr", 'Int'>
    readonly join_dt: FieldRef<"sc_mbr", 'DateTime'>
    readonly rcnt_cntn_dt: FieldRef<"sc_mbr", 'DateTime'>
    readonly drmc_cnvs_dt: FieldRef<"sc_mbr", 'DateTime'>
    readonly chge_pswd_dt: FieldRef<"sc_mbr", 'DateTime'>
    readonly mbr_stts_cd: FieldRef<"sc_mbr", 'String'>
    readonly tmnl_tkn_val: FieldRef<"sc_mbr", 'String'>
    readonly tmnl_os_nm: FieldRef<"sc_mbr", 'String'>
    readonly tmnl_app_ver_nm: FieldRef<"sc_mbr", 'String'>
    readonly last_tmnl_sync_dt: FieldRef<"sc_mbr", 'DateTime'>
    readonly aos_permission: FieldRef<"sc_mbr", 'Int'>
    readonly push_status: FieldRef<"sc_mbr", 'Int'>
    readonly mbr_photo_file_mng_no: FieldRef<"sc_mbr", 'BigInt'>
    readonly app_prgrs_stag_val: FieldRef<"sc_mbr", 'String'>
    readonly regr_no: FieldRef<"sc_mbr", 'BigInt'>
    readonly reg_dt: FieldRef<"sc_mbr", 'DateTime'>
    readonly modr_no: FieldRef<"sc_mbr", 'BigInt'>
    readonly mod_dt: FieldRef<"sc_mbr", 'DateTime'>
    readonly out_tp_cd: FieldRef<"sc_mbr", 'String'>
    readonly out_tp_ttl: FieldRef<"sc_mbr", 'String'>
    readonly out_join_dt: FieldRef<"sc_mbr", 'DateTime'>
    readonly mbr_sctn_cd: FieldRef<"sc_mbr", 'String'>
  }
    

  // Custom InputTypes
  /**
   * sc_mbr findUnique
   */
  export type sc_mbrFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr
     */
    select?: sc_mbrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr
     */
    omit?: sc_mbrOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr to fetch.
     */
    where: sc_mbrWhereUniqueInput
  }

  /**
   * sc_mbr findUniqueOrThrow
   */
  export type sc_mbrFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr
     */
    select?: sc_mbrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr
     */
    omit?: sc_mbrOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr to fetch.
     */
    where: sc_mbrWhereUniqueInput
  }

  /**
   * sc_mbr findFirst
   */
  export type sc_mbrFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr
     */
    select?: sc_mbrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr
     */
    omit?: sc_mbrOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr to fetch.
     */
    where?: sc_mbrWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbrs to fetch.
     */
    orderBy?: sc_mbrOrderByWithRelationInput | sc_mbrOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_mbrs.
     */
    cursor?: sc_mbrWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbrs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbrs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_mbrs.
     */
    distinct?: Sc_mbrScalarFieldEnum | Sc_mbrScalarFieldEnum[]
  }

  /**
   * sc_mbr findFirstOrThrow
   */
  export type sc_mbrFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr
     */
    select?: sc_mbrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr
     */
    omit?: sc_mbrOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr to fetch.
     */
    where?: sc_mbrWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbrs to fetch.
     */
    orderBy?: sc_mbrOrderByWithRelationInput | sc_mbrOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_mbrs.
     */
    cursor?: sc_mbrWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbrs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbrs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_mbrs.
     */
    distinct?: Sc_mbrScalarFieldEnum | Sc_mbrScalarFieldEnum[]
  }

  /**
   * sc_mbr findMany
   */
  export type sc_mbrFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr
     */
    select?: sc_mbrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr
     */
    omit?: sc_mbrOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbrs to fetch.
     */
    where?: sc_mbrWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbrs to fetch.
     */
    orderBy?: sc_mbrOrderByWithRelationInput | sc_mbrOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sc_mbrs.
     */
    cursor?: sc_mbrWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbrs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbrs.
     */
    skip?: number
    distinct?: Sc_mbrScalarFieldEnum | Sc_mbrScalarFieldEnum[]
  }

  /**
   * sc_mbr create
   */
  export type sc_mbrCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr
     */
    select?: sc_mbrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr
     */
    omit?: sc_mbrOmit<ExtArgs> | null
    /**
     * The data needed to create a sc_mbr.
     */
    data: XOR<sc_mbrCreateInput, sc_mbrUncheckedCreateInput>
  }

  /**
   * sc_mbr createMany
   */
  export type sc_mbrCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sc_mbrs.
     */
    data: sc_mbrCreateManyInput | sc_mbrCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sc_mbr update
   */
  export type sc_mbrUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr
     */
    select?: sc_mbrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr
     */
    omit?: sc_mbrOmit<ExtArgs> | null
    /**
     * The data needed to update a sc_mbr.
     */
    data: XOR<sc_mbrUpdateInput, sc_mbrUncheckedUpdateInput>
    /**
     * Choose, which sc_mbr to update.
     */
    where: sc_mbrWhereUniqueInput
  }

  /**
   * sc_mbr updateMany
   */
  export type sc_mbrUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sc_mbrs.
     */
    data: XOR<sc_mbrUpdateManyMutationInput, sc_mbrUncheckedUpdateManyInput>
    /**
     * Filter which sc_mbrs to update
     */
    where?: sc_mbrWhereInput
    /**
     * Limit how many sc_mbrs to update.
     */
    limit?: number
  }

  /**
   * sc_mbr upsert
   */
  export type sc_mbrUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr
     */
    select?: sc_mbrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr
     */
    omit?: sc_mbrOmit<ExtArgs> | null
    /**
     * The filter to search for the sc_mbr to update in case it exists.
     */
    where: sc_mbrWhereUniqueInput
    /**
     * In case the sc_mbr found by the `where` argument doesn't exist, create a new sc_mbr with this data.
     */
    create: XOR<sc_mbrCreateInput, sc_mbrUncheckedCreateInput>
    /**
     * In case the sc_mbr was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sc_mbrUpdateInput, sc_mbrUncheckedUpdateInput>
  }

  /**
   * sc_mbr delete
   */
  export type sc_mbrDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr
     */
    select?: sc_mbrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr
     */
    omit?: sc_mbrOmit<ExtArgs> | null
    /**
     * Filter which sc_mbr to delete.
     */
    where: sc_mbrWhereUniqueInput
  }

  /**
   * sc_mbr deleteMany
   */
  export type sc_mbrDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_mbrs to delete
     */
    where?: sc_mbrWhereInput
    /**
     * Limit how many sc_mbrs to delete.
     */
    limit?: number
  }

  /**
   * sc_mbr without action
   */
  export type sc_mbrDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr
     */
    select?: sc_mbrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr
     */
    omit?: sc_mbrOmit<ExtArgs> | null
  }


  /**
   * Model sc_mbr_lgn_hist
   */

  export type AggregateSc_mbr_lgn_hist = {
    _count: Sc_mbr_lgn_histCountAggregateOutputType | null
    _avg: Sc_mbr_lgn_histAvgAggregateOutputType | null
    _sum: Sc_mbr_lgn_histSumAggregateOutputType | null
    _min: Sc_mbr_lgn_histMinAggregateOutputType | null
    _max: Sc_mbr_lgn_histMaxAggregateOutputType | null
  }

  export type Sc_mbr_lgn_histAvgAggregateOutputType = {
    hist_no: number | null
    mbr_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sc_mbr_lgn_histSumAggregateOutputType = {
    hist_no: bigint | null
    mbr_no: bigint | null
    regr_no: bigint | null
    modr_no: bigint | null
  }

  export type Sc_mbr_lgn_histMinAggregateOutputType = {
    hist_no: bigint | null
    mbr_no: bigint | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sc_mbr_lgn_histMaxAggregateOutputType = {
    hist_no: bigint | null
    mbr_no: bigint | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sc_mbr_lgn_histCountAggregateOutputType = {
    hist_no: number
    mbr_no: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sc_mbr_lgn_histAvgAggregateInputType = {
    hist_no?: true
    mbr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sc_mbr_lgn_histSumAggregateInputType = {
    hist_no?: true
    mbr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sc_mbr_lgn_histMinAggregateInputType = {
    hist_no?: true
    mbr_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sc_mbr_lgn_histMaxAggregateInputType = {
    hist_no?: true
    mbr_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sc_mbr_lgn_histCountAggregateInputType = {
    hist_no?: true
    mbr_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sc_mbr_lgn_histAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_mbr_lgn_hist to aggregate.
     */
    where?: sc_mbr_lgn_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_lgn_hists to fetch.
     */
    orderBy?: sc_mbr_lgn_histOrderByWithRelationInput | sc_mbr_lgn_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sc_mbr_lgn_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_lgn_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_lgn_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sc_mbr_lgn_hists
    **/
    _count?: true | Sc_mbr_lgn_histCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sc_mbr_lgn_histAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sc_mbr_lgn_histSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sc_mbr_lgn_histMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sc_mbr_lgn_histMaxAggregateInputType
  }

  export type GetSc_mbr_lgn_histAggregateType<T extends Sc_mbr_lgn_histAggregateArgs> = {
        [P in keyof T & keyof AggregateSc_mbr_lgn_hist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSc_mbr_lgn_hist[P]>
      : GetScalarType<T[P], AggregateSc_mbr_lgn_hist[P]>
  }




  export type sc_mbr_lgn_histGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sc_mbr_lgn_histWhereInput
    orderBy?: sc_mbr_lgn_histOrderByWithAggregationInput | sc_mbr_lgn_histOrderByWithAggregationInput[]
    by: Sc_mbr_lgn_histScalarFieldEnum[] | Sc_mbr_lgn_histScalarFieldEnum
    having?: sc_mbr_lgn_histScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sc_mbr_lgn_histCountAggregateInputType | true
    _avg?: Sc_mbr_lgn_histAvgAggregateInputType
    _sum?: Sc_mbr_lgn_histSumAggregateInputType
    _min?: Sc_mbr_lgn_histMinAggregateInputType
    _max?: Sc_mbr_lgn_histMaxAggregateInputType
  }

  export type Sc_mbr_lgn_histGroupByOutputType = {
    hist_no: bigint
    mbr_no: bigint
    regr_no: bigint
    reg_dt: Date
    modr_no: bigint
    mod_dt: Date
    _count: Sc_mbr_lgn_histCountAggregateOutputType | null
    _avg: Sc_mbr_lgn_histAvgAggregateOutputType | null
    _sum: Sc_mbr_lgn_histSumAggregateOutputType | null
    _min: Sc_mbr_lgn_histMinAggregateOutputType | null
    _max: Sc_mbr_lgn_histMaxAggregateOutputType | null
  }

  type GetSc_mbr_lgn_histGroupByPayload<T extends sc_mbr_lgn_histGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sc_mbr_lgn_histGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sc_mbr_lgn_histGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sc_mbr_lgn_histGroupByOutputType[P]>
            : GetScalarType<T[P], Sc_mbr_lgn_histGroupByOutputType[P]>
        }
      >
    >


  export type sc_mbr_lgn_histSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    hist_no?: boolean
    mbr_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sc_mbr_lgn_hist"]>



  export type sc_mbr_lgn_histSelectScalar = {
    hist_no?: boolean
    mbr_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sc_mbr_lgn_histOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"hist_no" | "mbr_no" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sc_mbr_lgn_hist"]>

  export type $sc_mbr_lgn_histPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sc_mbr_lgn_hist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      hist_no: bigint
      mbr_no: bigint
      regr_no: bigint
      reg_dt: Date
      modr_no: bigint
      mod_dt: Date
    }, ExtArgs["result"]["sc_mbr_lgn_hist"]>
    composites: {}
  }

  type sc_mbr_lgn_histGetPayload<S extends boolean | null | undefined | sc_mbr_lgn_histDefaultArgs> = $Result.GetResult<Prisma.$sc_mbr_lgn_histPayload, S>

  type sc_mbr_lgn_histCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sc_mbr_lgn_histFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sc_mbr_lgn_histCountAggregateInputType | true
    }

  export interface sc_mbr_lgn_histDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sc_mbr_lgn_hist'], meta: { name: 'sc_mbr_lgn_hist' } }
    /**
     * Find zero or one Sc_mbr_lgn_hist that matches the filter.
     * @param {sc_mbr_lgn_histFindUniqueArgs} args - Arguments to find a Sc_mbr_lgn_hist
     * @example
     * // Get one Sc_mbr_lgn_hist
     * const sc_mbr_lgn_hist = await prisma.sc_mbr_lgn_hist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sc_mbr_lgn_histFindUniqueArgs>(args: SelectSubset<T, sc_mbr_lgn_histFindUniqueArgs<ExtArgs>>): Prisma__sc_mbr_lgn_histClient<$Result.GetResult<Prisma.$sc_mbr_lgn_histPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sc_mbr_lgn_hist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sc_mbr_lgn_histFindUniqueOrThrowArgs} args - Arguments to find a Sc_mbr_lgn_hist
     * @example
     * // Get one Sc_mbr_lgn_hist
     * const sc_mbr_lgn_hist = await prisma.sc_mbr_lgn_hist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sc_mbr_lgn_histFindUniqueOrThrowArgs>(args: SelectSubset<T, sc_mbr_lgn_histFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sc_mbr_lgn_histClient<$Result.GetResult<Prisma.$sc_mbr_lgn_histPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_mbr_lgn_hist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_lgn_histFindFirstArgs} args - Arguments to find a Sc_mbr_lgn_hist
     * @example
     * // Get one Sc_mbr_lgn_hist
     * const sc_mbr_lgn_hist = await prisma.sc_mbr_lgn_hist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sc_mbr_lgn_histFindFirstArgs>(args?: SelectSubset<T, sc_mbr_lgn_histFindFirstArgs<ExtArgs>>): Prisma__sc_mbr_lgn_histClient<$Result.GetResult<Prisma.$sc_mbr_lgn_histPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_mbr_lgn_hist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_lgn_histFindFirstOrThrowArgs} args - Arguments to find a Sc_mbr_lgn_hist
     * @example
     * // Get one Sc_mbr_lgn_hist
     * const sc_mbr_lgn_hist = await prisma.sc_mbr_lgn_hist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sc_mbr_lgn_histFindFirstOrThrowArgs>(args?: SelectSubset<T, sc_mbr_lgn_histFindFirstOrThrowArgs<ExtArgs>>): Prisma__sc_mbr_lgn_histClient<$Result.GetResult<Prisma.$sc_mbr_lgn_histPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sc_mbr_lgn_hists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_lgn_histFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sc_mbr_lgn_hists
     * const sc_mbr_lgn_hists = await prisma.sc_mbr_lgn_hist.findMany()
     * 
     * // Get first 10 Sc_mbr_lgn_hists
     * const sc_mbr_lgn_hists = await prisma.sc_mbr_lgn_hist.findMany({ take: 10 })
     * 
     * // Only select the `hist_no`
     * const sc_mbr_lgn_histWithHist_noOnly = await prisma.sc_mbr_lgn_hist.findMany({ select: { hist_no: true } })
     * 
     */
    findMany<T extends sc_mbr_lgn_histFindManyArgs>(args?: SelectSubset<T, sc_mbr_lgn_histFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sc_mbr_lgn_histPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sc_mbr_lgn_hist.
     * @param {sc_mbr_lgn_histCreateArgs} args - Arguments to create a Sc_mbr_lgn_hist.
     * @example
     * // Create one Sc_mbr_lgn_hist
     * const Sc_mbr_lgn_hist = await prisma.sc_mbr_lgn_hist.create({
     *   data: {
     *     // ... data to create a Sc_mbr_lgn_hist
     *   }
     * })
     * 
     */
    create<T extends sc_mbr_lgn_histCreateArgs>(args: SelectSubset<T, sc_mbr_lgn_histCreateArgs<ExtArgs>>): Prisma__sc_mbr_lgn_histClient<$Result.GetResult<Prisma.$sc_mbr_lgn_histPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sc_mbr_lgn_hists.
     * @param {sc_mbr_lgn_histCreateManyArgs} args - Arguments to create many Sc_mbr_lgn_hists.
     * @example
     * // Create many Sc_mbr_lgn_hists
     * const sc_mbr_lgn_hist = await prisma.sc_mbr_lgn_hist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sc_mbr_lgn_histCreateManyArgs>(args?: SelectSubset<T, sc_mbr_lgn_histCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sc_mbr_lgn_hist.
     * @param {sc_mbr_lgn_histDeleteArgs} args - Arguments to delete one Sc_mbr_lgn_hist.
     * @example
     * // Delete one Sc_mbr_lgn_hist
     * const Sc_mbr_lgn_hist = await prisma.sc_mbr_lgn_hist.delete({
     *   where: {
     *     // ... filter to delete one Sc_mbr_lgn_hist
     *   }
     * })
     * 
     */
    delete<T extends sc_mbr_lgn_histDeleteArgs>(args: SelectSubset<T, sc_mbr_lgn_histDeleteArgs<ExtArgs>>): Prisma__sc_mbr_lgn_histClient<$Result.GetResult<Prisma.$sc_mbr_lgn_histPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sc_mbr_lgn_hist.
     * @param {sc_mbr_lgn_histUpdateArgs} args - Arguments to update one Sc_mbr_lgn_hist.
     * @example
     * // Update one Sc_mbr_lgn_hist
     * const sc_mbr_lgn_hist = await prisma.sc_mbr_lgn_hist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sc_mbr_lgn_histUpdateArgs>(args: SelectSubset<T, sc_mbr_lgn_histUpdateArgs<ExtArgs>>): Prisma__sc_mbr_lgn_histClient<$Result.GetResult<Prisma.$sc_mbr_lgn_histPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sc_mbr_lgn_hists.
     * @param {sc_mbr_lgn_histDeleteManyArgs} args - Arguments to filter Sc_mbr_lgn_hists to delete.
     * @example
     * // Delete a few Sc_mbr_lgn_hists
     * const { count } = await prisma.sc_mbr_lgn_hist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sc_mbr_lgn_histDeleteManyArgs>(args?: SelectSubset<T, sc_mbr_lgn_histDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sc_mbr_lgn_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_lgn_histUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sc_mbr_lgn_hists
     * const sc_mbr_lgn_hist = await prisma.sc_mbr_lgn_hist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sc_mbr_lgn_histUpdateManyArgs>(args: SelectSubset<T, sc_mbr_lgn_histUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sc_mbr_lgn_hist.
     * @param {sc_mbr_lgn_histUpsertArgs} args - Arguments to update or create a Sc_mbr_lgn_hist.
     * @example
     * // Update or create a Sc_mbr_lgn_hist
     * const sc_mbr_lgn_hist = await prisma.sc_mbr_lgn_hist.upsert({
     *   create: {
     *     // ... data to create a Sc_mbr_lgn_hist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sc_mbr_lgn_hist we want to update
     *   }
     * })
     */
    upsert<T extends sc_mbr_lgn_histUpsertArgs>(args: SelectSubset<T, sc_mbr_lgn_histUpsertArgs<ExtArgs>>): Prisma__sc_mbr_lgn_histClient<$Result.GetResult<Prisma.$sc_mbr_lgn_histPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sc_mbr_lgn_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_lgn_histCountArgs} args - Arguments to filter Sc_mbr_lgn_hists to count.
     * @example
     * // Count the number of Sc_mbr_lgn_hists
     * const count = await prisma.sc_mbr_lgn_hist.count({
     *   where: {
     *     // ... the filter for the Sc_mbr_lgn_hists we want to count
     *   }
     * })
    **/
    count<T extends sc_mbr_lgn_histCountArgs>(
      args?: Subset<T, sc_mbr_lgn_histCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sc_mbr_lgn_histCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sc_mbr_lgn_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sc_mbr_lgn_histAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sc_mbr_lgn_histAggregateArgs>(args: Subset<T, Sc_mbr_lgn_histAggregateArgs>): Prisma.PrismaPromise<GetSc_mbr_lgn_histAggregateType<T>>

    /**
     * Group by Sc_mbr_lgn_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_lgn_histGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sc_mbr_lgn_histGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sc_mbr_lgn_histGroupByArgs['orderBy'] }
        : { orderBy?: sc_mbr_lgn_histGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sc_mbr_lgn_histGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSc_mbr_lgn_histGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sc_mbr_lgn_hist model
   */
  readonly fields: sc_mbr_lgn_histFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sc_mbr_lgn_hist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sc_mbr_lgn_histClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sc_mbr_lgn_hist model
   */
  interface sc_mbr_lgn_histFieldRefs {
    readonly hist_no: FieldRef<"sc_mbr_lgn_hist", 'BigInt'>
    readonly mbr_no: FieldRef<"sc_mbr_lgn_hist", 'BigInt'>
    readonly regr_no: FieldRef<"sc_mbr_lgn_hist", 'BigInt'>
    readonly reg_dt: FieldRef<"sc_mbr_lgn_hist", 'DateTime'>
    readonly modr_no: FieldRef<"sc_mbr_lgn_hist", 'BigInt'>
    readonly mod_dt: FieldRef<"sc_mbr_lgn_hist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sc_mbr_lgn_hist findUnique
   */
  export type sc_mbr_lgn_histFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_lgn_hist
     */
    select?: sc_mbr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_lgn_hist
     */
    omit?: sc_mbr_lgn_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_lgn_hist to fetch.
     */
    where: sc_mbr_lgn_histWhereUniqueInput
  }

  /**
   * sc_mbr_lgn_hist findUniqueOrThrow
   */
  export type sc_mbr_lgn_histFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_lgn_hist
     */
    select?: sc_mbr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_lgn_hist
     */
    omit?: sc_mbr_lgn_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_lgn_hist to fetch.
     */
    where: sc_mbr_lgn_histWhereUniqueInput
  }

  /**
   * sc_mbr_lgn_hist findFirst
   */
  export type sc_mbr_lgn_histFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_lgn_hist
     */
    select?: sc_mbr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_lgn_hist
     */
    omit?: sc_mbr_lgn_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_lgn_hist to fetch.
     */
    where?: sc_mbr_lgn_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_lgn_hists to fetch.
     */
    orderBy?: sc_mbr_lgn_histOrderByWithRelationInput | sc_mbr_lgn_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_mbr_lgn_hists.
     */
    cursor?: sc_mbr_lgn_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_lgn_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_lgn_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_mbr_lgn_hists.
     */
    distinct?: Sc_mbr_lgn_histScalarFieldEnum | Sc_mbr_lgn_histScalarFieldEnum[]
  }

  /**
   * sc_mbr_lgn_hist findFirstOrThrow
   */
  export type sc_mbr_lgn_histFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_lgn_hist
     */
    select?: sc_mbr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_lgn_hist
     */
    omit?: sc_mbr_lgn_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_lgn_hist to fetch.
     */
    where?: sc_mbr_lgn_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_lgn_hists to fetch.
     */
    orderBy?: sc_mbr_lgn_histOrderByWithRelationInput | sc_mbr_lgn_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_mbr_lgn_hists.
     */
    cursor?: sc_mbr_lgn_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_lgn_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_lgn_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_mbr_lgn_hists.
     */
    distinct?: Sc_mbr_lgn_histScalarFieldEnum | Sc_mbr_lgn_histScalarFieldEnum[]
  }

  /**
   * sc_mbr_lgn_hist findMany
   */
  export type sc_mbr_lgn_histFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_lgn_hist
     */
    select?: sc_mbr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_lgn_hist
     */
    omit?: sc_mbr_lgn_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_lgn_hists to fetch.
     */
    where?: sc_mbr_lgn_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_lgn_hists to fetch.
     */
    orderBy?: sc_mbr_lgn_histOrderByWithRelationInput | sc_mbr_lgn_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sc_mbr_lgn_hists.
     */
    cursor?: sc_mbr_lgn_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_lgn_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_lgn_hists.
     */
    skip?: number
    distinct?: Sc_mbr_lgn_histScalarFieldEnum | Sc_mbr_lgn_histScalarFieldEnum[]
  }

  /**
   * sc_mbr_lgn_hist create
   */
  export type sc_mbr_lgn_histCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_lgn_hist
     */
    select?: sc_mbr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_lgn_hist
     */
    omit?: sc_mbr_lgn_histOmit<ExtArgs> | null
    /**
     * The data needed to create a sc_mbr_lgn_hist.
     */
    data: XOR<sc_mbr_lgn_histCreateInput, sc_mbr_lgn_histUncheckedCreateInput>
  }

  /**
   * sc_mbr_lgn_hist createMany
   */
  export type sc_mbr_lgn_histCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sc_mbr_lgn_hists.
     */
    data: sc_mbr_lgn_histCreateManyInput | sc_mbr_lgn_histCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sc_mbr_lgn_hist update
   */
  export type sc_mbr_lgn_histUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_lgn_hist
     */
    select?: sc_mbr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_lgn_hist
     */
    omit?: sc_mbr_lgn_histOmit<ExtArgs> | null
    /**
     * The data needed to update a sc_mbr_lgn_hist.
     */
    data: XOR<sc_mbr_lgn_histUpdateInput, sc_mbr_lgn_histUncheckedUpdateInput>
    /**
     * Choose, which sc_mbr_lgn_hist to update.
     */
    where: sc_mbr_lgn_histWhereUniqueInput
  }

  /**
   * sc_mbr_lgn_hist updateMany
   */
  export type sc_mbr_lgn_histUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sc_mbr_lgn_hists.
     */
    data: XOR<sc_mbr_lgn_histUpdateManyMutationInput, sc_mbr_lgn_histUncheckedUpdateManyInput>
    /**
     * Filter which sc_mbr_lgn_hists to update
     */
    where?: sc_mbr_lgn_histWhereInput
    /**
     * Limit how many sc_mbr_lgn_hists to update.
     */
    limit?: number
  }

  /**
   * sc_mbr_lgn_hist upsert
   */
  export type sc_mbr_lgn_histUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_lgn_hist
     */
    select?: sc_mbr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_lgn_hist
     */
    omit?: sc_mbr_lgn_histOmit<ExtArgs> | null
    /**
     * The filter to search for the sc_mbr_lgn_hist to update in case it exists.
     */
    where: sc_mbr_lgn_histWhereUniqueInput
    /**
     * In case the sc_mbr_lgn_hist found by the `where` argument doesn't exist, create a new sc_mbr_lgn_hist with this data.
     */
    create: XOR<sc_mbr_lgn_histCreateInput, sc_mbr_lgn_histUncheckedCreateInput>
    /**
     * In case the sc_mbr_lgn_hist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sc_mbr_lgn_histUpdateInput, sc_mbr_lgn_histUncheckedUpdateInput>
  }

  /**
   * sc_mbr_lgn_hist delete
   */
  export type sc_mbr_lgn_histDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_lgn_hist
     */
    select?: sc_mbr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_lgn_hist
     */
    omit?: sc_mbr_lgn_histOmit<ExtArgs> | null
    /**
     * Filter which sc_mbr_lgn_hist to delete.
     */
    where: sc_mbr_lgn_histWhereUniqueInput
  }

  /**
   * sc_mbr_lgn_hist deleteMany
   */
  export type sc_mbr_lgn_histDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_mbr_lgn_hists to delete
     */
    where?: sc_mbr_lgn_histWhereInput
    /**
     * Limit how many sc_mbr_lgn_hists to delete.
     */
    limit?: number
  }

  /**
   * sc_mbr_lgn_hist without action
   */
  export type sc_mbr_lgn_histDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_lgn_hist
     */
    select?: sc_mbr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_lgn_hist
     */
    omit?: sc_mbr_lgn_histOmit<ExtArgs> | null
  }


  /**
   * Model sc_mbr_log
   */

  export type AggregateSc_mbr_log = {
    _count: Sc_mbr_logCountAggregateOutputType | null
    _avg: Sc_mbr_logAvgAggregateOutputType | null
    _sum: Sc_mbr_logSumAggregateOutputType | null
    _min: Sc_mbr_logMinAggregateOutputType | null
    _max: Sc_mbr_logMaxAggregateOutputType | null
  }

  export type Sc_mbr_logAvgAggregateOutputType = {
    log_no: number | null
    mbr_no: number | null
  }

  export type Sc_mbr_logSumAggregateOutputType = {
    log_no: bigint | null
    mbr_no: bigint | null
  }

  export type Sc_mbr_logMinAggregateOutputType = {
    log_no: bigint | null
    log_cd: string | null
    mbr_no: bigint | null
    uri: string | null
    origin: string | null
    desc: string | null
    reg_dt: Date | null
  }

  export type Sc_mbr_logMaxAggregateOutputType = {
    log_no: bigint | null
    log_cd: string | null
    mbr_no: bigint | null
    uri: string | null
    origin: string | null
    desc: string | null
    reg_dt: Date | null
  }

  export type Sc_mbr_logCountAggregateOutputType = {
    log_no: number
    log_cd: number
    mbr_no: number
    uri: number
    origin: number
    desc: number
    reg_dt: number
    _all: number
  }


  export type Sc_mbr_logAvgAggregateInputType = {
    log_no?: true
    mbr_no?: true
  }

  export type Sc_mbr_logSumAggregateInputType = {
    log_no?: true
    mbr_no?: true
  }

  export type Sc_mbr_logMinAggregateInputType = {
    log_no?: true
    log_cd?: true
    mbr_no?: true
    uri?: true
    origin?: true
    desc?: true
    reg_dt?: true
  }

  export type Sc_mbr_logMaxAggregateInputType = {
    log_no?: true
    log_cd?: true
    mbr_no?: true
    uri?: true
    origin?: true
    desc?: true
    reg_dt?: true
  }

  export type Sc_mbr_logCountAggregateInputType = {
    log_no?: true
    log_cd?: true
    mbr_no?: true
    uri?: true
    origin?: true
    desc?: true
    reg_dt?: true
    _all?: true
  }

  export type Sc_mbr_logAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_mbr_log to aggregate.
     */
    where?: sc_mbr_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_logs to fetch.
     */
    orderBy?: sc_mbr_logOrderByWithRelationInput | sc_mbr_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sc_mbr_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sc_mbr_logs
    **/
    _count?: true | Sc_mbr_logCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sc_mbr_logAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sc_mbr_logSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sc_mbr_logMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sc_mbr_logMaxAggregateInputType
  }

  export type GetSc_mbr_logAggregateType<T extends Sc_mbr_logAggregateArgs> = {
        [P in keyof T & keyof AggregateSc_mbr_log]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSc_mbr_log[P]>
      : GetScalarType<T[P], AggregateSc_mbr_log[P]>
  }




  export type sc_mbr_logGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sc_mbr_logWhereInput
    orderBy?: sc_mbr_logOrderByWithAggregationInput | sc_mbr_logOrderByWithAggregationInput[]
    by: Sc_mbr_logScalarFieldEnum[] | Sc_mbr_logScalarFieldEnum
    having?: sc_mbr_logScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sc_mbr_logCountAggregateInputType | true
    _avg?: Sc_mbr_logAvgAggregateInputType
    _sum?: Sc_mbr_logSumAggregateInputType
    _min?: Sc_mbr_logMinAggregateInputType
    _max?: Sc_mbr_logMaxAggregateInputType
  }

  export type Sc_mbr_logGroupByOutputType = {
    log_no: bigint
    log_cd: string | null
    mbr_no: bigint
    uri: string
    origin: string
    desc: string | null
    reg_dt: Date | null
    _count: Sc_mbr_logCountAggregateOutputType | null
    _avg: Sc_mbr_logAvgAggregateOutputType | null
    _sum: Sc_mbr_logSumAggregateOutputType | null
    _min: Sc_mbr_logMinAggregateOutputType | null
    _max: Sc_mbr_logMaxAggregateOutputType | null
  }

  type GetSc_mbr_logGroupByPayload<T extends sc_mbr_logGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sc_mbr_logGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sc_mbr_logGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sc_mbr_logGroupByOutputType[P]>
            : GetScalarType<T[P], Sc_mbr_logGroupByOutputType[P]>
        }
      >
    >


  export type sc_mbr_logSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    log_no?: boolean
    log_cd?: boolean
    mbr_no?: boolean
    uri?: boolean
    origin?: boolean
    desc?: boolean
    reg_dt?: boolean
  }, ExtArgs["result"]["sc_mbr_log"]>



  export type sc_mbr_logSelectScalar = {
    log_no?: boolean
    log_cd?: boolean
    mbr_no?: boolean
    uri?: boolean
    origin?: boolean
    desc?: boolean
    reg_dt?: boolean
  }

  export type sc_mbr_logOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"log_no" | "log_cd" | "mbr_no" | "uri" | "origin" | "desc" | "reg_dt", ExtArgs["result"]["sc_mbr_log"]>

  export type $sc_mbr_logPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sc_mbr_log"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      log_no: bigint
      log_cd: string | null
      mbr_no: bigint
      uri: string
      origin: string
      desc: string | null
      reg_dt: Date | null
    }, ExtArgs["result"]["sc_mbr_log"]>
    composites: {}
  }

  type sc_mbr_logGetPayload<S extends boolean | null | undefined | sc_mbr_logDefaultArgs> = $Result.GetResult<Prisma.$sc_mbr_logPayload, S>

  type sc_mbr_logCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sc_mbr_logFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sc_mbr_logCountAggregateInputType | true
    }

  export interface sc_mbr_logDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sc_mbr_log'], meta: { name: 'sc_mbr_log' } }
    /**
     * Find zero or one Sc_mbr_log that matches the filter.
     * @param {sc_mbr_logFindUniqueArgs} args - Arguments to find a Sc_mbr_log
     * @example
     * // Get one Sc_mbr_log
     * const sc_mbr_log = await prisma.sc_mbr_log.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sc_mbr_logFindUniqueArgs>(args: SelectSubset<T, sc_mbr_logFindUniqueArgs<ExtArgs>>): Prisma__sc_mbr_logClient<$Result.GetResult<Prisma.$sc_mbr_logPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sc_mbr_log that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sc_mbr_logFindUniqueOrThrowArgs} args - Arguments to find a Sc_mbr_log
     * @example
     * // Get one Sc_mbr_log
     * const sc_mbr_log = await prisma.sc_mbr_log.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sc_mbr_logFindUniqueOrThrowArgs>(args: SelectSubset<T, sc_mbr_logFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sc_mbr_logClient<$Result.GetResult<Prisma.$sc_mbr_logPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_mbr_log that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_logFindFirstArgs} args - Arguments to find a Sc_mbr_log
     * @example
     * // Get one Sc_mbr_log
     * const sc_mbr_log = await prisma.sc_mbr_log.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sc_mbr_logFindFirstArgs>(args?: SelectSubset<T, sc_mbr_logFindFirstArgs<ExtArgs>>): Prisma__sc_mbr_logClient<$Result.GetResult<Prisma.$sc_mbr_logPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_mbr_log that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_logFindFirstOrThrowArgs} args - Arguments to find a Sc_mbr_log
     * @example
     * // Get one Sc_mbr_log
     * const sc_mbr_log = await prisma.sc_mbr_log.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sc_mbr_logFindFirstOrThrowArgs>(args?: SelectSubset<T, sc_mbr_logFindFirstOrThrowArgs<ExtArgs>>): Prisma__sc_mbr_logClient<$Result.GetResult<Prisma.$sc_mbr_logPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sc_mbr_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_logFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sc_mbr_logs
     * const sc_mbr_logs = await prisma.sc_mbr_log.findMany()
     * 
     * // Get first 10 Sc_mbr_logs
     * const sc_mbr_logs = await prisma.sc_mbr_log.findMany({ take: 10 })
     * 
     * // Only select the `log_no`
     * const sc_mbr_logWithLog_noOnly = await prisma.sc_mbr_log.findMany({ select: { log_no: true } })
     * 
     */
    findMany<T extends sc_mbr_logFindManyArgs>(args?: SelectSubset<T, sc_mbr_logFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sc_mbr_logPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sc_mbr_log.
     * @param {sc_mbr_logCreateArgs} args - Arguments to create a Sc_mbr_log.
     * @example
     * // Create one Sc_mbr_log
     * const Sc_mbr_log = await prisma.sc_mbr_log.create({
     *   data: {
     *     // ... data to create a Sc_mbr_log
     *   }
     * })
     * 
     */
    create<T extends sc_mbr_logCreateArgs>(args: SelectSubset<T, sc_mbr_logCreateArgs<ExtArgs>>): Prisma__sc_mbr_logClient<$Result.GetResult<Prisma.$sc_mbr_logPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sc_mbr_logs.
     * @param {sc_mbr_logCreateManyArgs} args - Arguments to create many Sc_mbr_logs.
     * @example
     * // Create many Sc_mbr_logs
     * const sc_mbr_log = await prisma.sc_mbr_log.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sc_mbr_logCreateManyArgs>(args?: SelectSubset<T, sc_mbr_logCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sc_mbr_log.
     * @param {sc_mbr_logDeleteArgs} args - Arguments to delete one Sc_mbr_log.
     * @example
     * // Delete one Sc_mbr_log
     * const Sc_mbr_log = await prisma.sc_mbr_log.delete({
     *   where: {
     *     // ... filter to delete one Sc_mbr_log
     *   }
     * })
     * 
     */
    delete<T extends sc_mbr_logDeleteArgs>(args: SelectSubset<T, sc_mbr_logDeleteArgs<ExtArgs>>): Prisma__sc_mbr_logClient<$Result.GetResult<Prisma.$sc_mbr_logPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sc_mbr_log.
     * @param {sc_mbr_logUpdateArgs} args - Arguments to update one Sc_mbr_log.
     * @example
     * // Update one Sc_mbr_log
     * const sc_mbr_log = await prisma.sc_mbr_log.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sc_mbr_logUpdateArgs>(args: SelectSubset<T, sc_mbr_logUpdateArgs<ExtArgs>>): Prisma__sc_mbr_logClient<$Result.GetResult<Prisma.$sc_mbr_logPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sc_mbr_logs.
     * @param {sc_mbr_logDeleteManyArgs} args - Arguments to filter Sc_mbr_logs to delete.
     * @example
     * // Delete a few Sc_mbr_logs
     * const { count } = await prisma.sc_mbr_log.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sc_mbr_logDeleteManyArgs>(args?: SelectSubset<T, sc_mbr_logDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sc_mbr_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_logUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sc_mbr_logs
     * const sc_mbr_log = await prisma.sc_mbr_log.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sc_mbr_logUpdateManyArgs>(args: SelectSubset<T, sc_mbr_logUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sc_mbr_log.
     * @param {sc_mbr_logUpsertArgs} args - Arguments to update or create a Sc_mbr_log.
     * @example
     * // Update or create a Sc_mbr_log
     * const sc_mbr_log = await prisma.sc_mbr_log.upsert({
     *   create: {
     *     // ... data to create a Sc_mbr_log
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sc_mbr_log we want to update
     *   }
     * })
     */
    upsert<T extends sc_mbr_logUpsertArgs>(args: SelectSubset<T, sc_mbr_logUpsertArgs<ExtArgs>>): Prisma__sc_mbr_logClient<$Result.GetResult<Prisma.$sc_mbr_logPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sc_mbr_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_logCountArgs} args - Arguments to filter Sc_mbr_logs to count.
     * @example
     * // Count the number of Sc_mbr_logs
     * const count = await prisma.sc_mbr_log.count({
     *   where: {
     *     // ... the filter for the Sc_mbr_logs we want to count
     *   }
     * })
    **/
    count<T extends sc_mbr_logCountArgs>(
      args?: Subset<T, sc_mbr_logCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sc_mbr_logCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sc_mbr_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sc_mbr_logAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sc_mbr_logAggregateArgs>(args: Subset<T, Sc_mbr_logAggregateArgs>): Prisma.PrismaPromise<GetSc_mbr_logAggregateType<T>>

    /**
     * Group by Sc_mbr_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_logGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sc_mbr_logGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sc_mbr_logGroupByArgs['orderBy'] }
        : { orderBy?: sc_mbr_logGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sc_mbr_logGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSc_mbr_logGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sc_mbr_log model
   */
  readonly fields: sc_mbr_logFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sc_mbr_log.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sc_mbr_logClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sc_mbr_log model
   */
  interface sc_mbr_logFieldRefs {
    readonly log_no: FieldRef<"sc_mbr_log", 'BigInt'>
    readonly log_cd: FieldRef<"sc_mbr_log", 'String'>
    readonly mbr_no: FieldRef<"sc_mbr_log", 'BigInt'>
    readonly uri: FieldRef<"sc_mbr_log", 'String'>
    readonly origin: FieldRef<"sc_mbr_log", 'String'>
    readonly desc: FieldRef<"sc_mbr_log", 'String'>
    readonly reg_dt: FieldRef<"sc_mbr_log", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sc_mbr_log findUnique
   */
  export type sc_mbr_logFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_log
     */
    select?: sc_mbr_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_log
     */
    omit?: sc_mbr_logOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_log to fetch.
     */
    where: sc_mbr_logWhereUniqueInput
  }

  /**
   * sc_mbr_log findUniqueOrThrow
   */
  export type sc_mbr_logFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_log
     */
    select?: sc_mbr_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_log
     */
    omit?: sc_mbr_logOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_log to fetch.
     */
    where: sc_mbr_logWhereUniqueInput
  }

  /**
   * sc_mbr_log findFirst
   */
  export type sc_mbr_logFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_log
     */
    select?: sc_mbr_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_log
     */
    omit?: sc_mbr_logOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_log to fetch.
     */
    where?: sc_mbr_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_logs to fetch.
     */
    orderBy?: sc_mbr_logOrderByWithRelationInput | sc_mbr_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_mbr_logs.
     */
    cursor?: sc_mbr_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_mbr_logs.
     */
    distinct?: Sc_mbr_logScalarFieldEnum | Sc_mbr_logScalarFieldEnum[]
  }

  /**
   * sc_mbr_log findFirstOrThrow
   */
  export type sc_mbr_logFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_log
     */
    select?: sc_mbr_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_log
     */
    omit?: sc_mbr_logOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_log to fetch.
     */
    where?: sc_mbr_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_logs to fetch.
     */
    orderBy?: sc_mbr_logOrderByWithRelationInput | sc_mbr_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_mbr_logs.
     */
    cursor?: sc_mbr_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_mbr_logs.
     */
    distinct?: Sc_mbr_logScalarFieldEnum | Sc_mbr_logScalarFieldEnum[]
  }

  /**
   * sc_mbr_log findMany
   */
  export type sc_mbr_logFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_log
     */
    select?: sc_mbr_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_log
     */
    omit?: sc_mbr_logOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_logs to fetch.
     */
    where?: sc_mbr_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_logs to fetch.
     */
    orderBy?: sc_mbr_logOrderByWithRelationInput | sc_mbr_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sc_mbr_logs.
     */
    cursor?: sc_mbr_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_logs.
     */
    skip?: number
    distinct?: Sc_mbr_logScalarFieldEnum | Sc_mbr_logScalarFieldEnum[]
  }

  /**
   * sc_mbr_log create
   */
  export type sc_mbr_logCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_log
     */
    select?: sc_mbr_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_log
     */
    omit?: sc_mbr_logOmit<ExtArgs> | null
    /**
     * The data needed to create a sc_mbr_log.
     */
    data: XOR<sc_mbr_logCreateInput, sc_mbr_logUncheckedCreateInput>
  }

  /**
   * sc_mbr_log createMany
   */
  export type sc_mbr_logCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sc_mbr_logs.
     */
    data: sc_mbr_logCreateManyInput | sc_mbr_logCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sc_mbr_log update
   */
  export type sc_mbr_logUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_log
     */
    select?: sc_mbr_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_log
     */
    omit?: sc_mbr_logOmit<ExtArgs> | null
    /**
     * The data needed to update a sc_mbr_log.
     */
    data: XOR<sc_mbr_logUpdateInput, sc_mbr_logUncheckedUpdateInput>
    /**
     * Choose, which sc_mbr_log to update.
     */
    where: sc_mbr_logWhereUniqueInput
  }

  /**
   * sc_mbr_log updateMany
   */
  export type sc_mbr_logUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sc_mbr_logs.
     */
    data: XOR<sc_mbr_logUpdateManyMutationInput, sc_mbr_logUncheckedUpdateManyInput>
    /**
     * Filter which sc_mbr_logs to update
     */
    where?: sc_mbr_logWhereInput
    /**
     * Limit how many sc_mbr_logs to update.
     */
    limit?: number
  }

  /**
   * sc_mbr_log upsert
   */
  export type sc_mbr_logUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_log
     */
    select?: sc_mbr_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_log
     */
    omit?: sc_mbr_logOmit<ExtArgs> | null
    /**
     * The filter to search for the sc_mbr_log to update in case it exists.
     */
    where: sc_mbr_logWhereUniqueInput
    /**
     * In case the sc_mbr_log found by the `where` argument doesn't exist, create a new sc_mbr_log with this data.
     */
    create: XOR<sc_mbr_logCreateInput, sc_mbr_logUncheckedCreateInput>
    /**
     * In case the sc_mbr_log was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sc_mbr_logUpdateInput, sc_mbr_logUncheckedUpdateInput>
  }

  /**
   * sc_mbr_log delete
   */
  export type sc_mbr_logDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_log
     */
    select?: sc_mbr_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_log
     */
    omit?: sc_mbr_logOmit<ExtArgs> | null
    /**
     * Filter which sc_mbr_log to delete.
     */
    where: sc_mbr_logWhereUniqueInput
  }

  /**
   * sc_mbr_log deleteMany
   */
  export type sc_mbr_logDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_mbr_logs to delete
     */
    where?: sc_mbr_logWhereInput
    /**
     * Limit how many sc_mbr_logs to delete.
     */
    limit?: number
  }

  /**
   * sc_mbr_log without action
   */
  export type sc_mbr_logDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_log
     */
    select?: sc_mbr_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_log
     */
    omit?: sc_mbr_logOmit<ExtArgs> | null
  }


  /**
   * Model sc_mbr_prjt
   */

  export type AggregateSc_mbr_prjt = {
    _count: Sc_mbr_prjtCountAggregateOutputType | null
    _avg: Sc_mbr_prjtAvgAggregateOutputType | null
    _sum: Sc_mbr_prjtSumAggregateOutputType | null
    _min: Sc_mbr_prjtMinAggregateOutputType | null
    _max: Sc_mbr_prjtMaxAggregateOutputType | null
  }

  export type Sc_mbr_prjtAvgAggregateOutputType = {
    mbr_no: number | null
    prjt_no: number | null
    frst_bmi_val: Decimal | null
    end_bmi_val: Decimal | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sc_mbr_prjtSumAggregateOutputType = {
    mbr_no: bigint | null
    prjt_no: bigint | null
    frst_bmi_val: Decimal | null
    end_bmi_val: Decimal | null
    regr_no: bigint | null
    modr_no: bigint | null
  }

  export type Sc_mbr_prjtMinAggregateOutputType = {
    mbr_no: bigint | null
    prjt_no: bigint | null
    prtpnt_sctn_cd: string | null
    prgrs_stop_tf: string | null
    prgrs_stop_dt: Date | null
    prgrs_stop_caus_desc: string | null
    ptcp_bgng_ymd: Date | null
    ptcp_end_ymd: Date | null
    frst_bmi_val: Decimal | null
    end_bmi_val: Decimal | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sc_mbr_prjtMaxAggregateOutputType = {
    mbr_no: bigint | null
    prjt_no: bigint | null
    prtpnt_sctn_cd: string | null
    prgrs_stop_tf: string | null
    prgrs_stop_dt: Date | null
    prgrs_stop_caus_desc: string | null
    ptcp_bgng_ymd: Date | null
    ptcp_end_ymd: Date | null
    frst_bmi_val: Decimal | null
    end_bmi_val: Decimal | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sc_mbr_prjtCountAggregateOutputType = {
    mbr_no: number
    prjt_no: number
    prtpnt_sctn_cd: number
    prgrs_stop_tf: number
    prgrs_stop_dt: number
    prgrs_stop_caus_desc: number
    ptcp_bgng_ymd: number
    ptcp_end_ymd: number
    frst_bmi_val: number
    end_bmi_val: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sc_mbr_prjtAvgAggregateInputType = {
    mbr_no?: true
    prjt_no?: true
    frst_bmi_val?: true
    end_bmi_val?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sc_mbr_prjtSumAggregateInputType = {
    mbr_no?: true
    prjt_no?: true
    frst_bmi_val?: true
    end_bmi_val?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sc_mbr_prjtMinAggregateInputType = {
    mbr_no?: true
    prjt_no?: true
    prtpnt_sctn_cd?: true
    prgrs_stop_tf?: true
    prgrs_stop_dt?: true
    prgrs_stop_caus_desc?: true
    ptcp_bgng_ymd?: true
    ptcp_end_ymd?: true
    frst_bmi_val?: true
    end_bmi_val?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sc_mbr_prjtMaxAggregateInputType = {
    mbr_no?: true
    prjt_no?: true
    prtpnt_sctn_cd?: true
    prgrs_stop_tf?: true
    prgrs_stop_dt?: true
    prgrs_stop_caus_desc?: true
    ptcp_bgng_ymd?: true
    ptcp_end_ymd?: true
    frst_bmi_val?: true
    end_bmi_val?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sc_mbr_prjtCountAggregateInputType = {
    mbr_no?: true
    prjt_no?: true
    prtpnt_sctn_cd?: true
    prgrs_stop_tf?: true
    prgrs_stop_dt?: true
    prgrs_stop_caus_desc?: true
    ptcp_bgng_ymd?: true
    ptcp_end_ymd?: true
    frst_bmi_val?: true
    end_bmi_val?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sc_mbr_prjtAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_mbr_prjt to aggregate.
     */
    where?: sc_mbr_prjtWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_prjts to fetch.
     */
    orderBy?: sc_mbr_prjtOrderByWithRelationInput | sc_mbr_prjtOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sc_mbr_prjtWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_prjts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_prjts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sc_mbr_prjts
    **/
    _count?: true | Sc_mbr_prjtCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sc_mbr_prjtAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sc_mbr_prjtSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sc_mbr_prjtMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sc_mbr_prjtMaxAggregateInputType
  }

  export type GetSc_mbr_prjtAggregateType<T extends Sc_mbr_prjtAggregateArgs> = {
        [P in keyof T & keyof AggregateSc_mbr_prjt]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSc_mbr_prjt[P]>
      : GetScalarType<T[P], AggregateSc_mbr_prjt[P]>
  }




  export type sc_mbr_prjtGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sc_mbr_prjtWhereInput
    orderBy?: sc_mbr_prjtOrderByWithAggregationInput | sc_mbr_prjtOrderByWithAggregationInput[]
    by: Sc_mbr_prjtScalarFieldEnum[] | Sc_mbr_prjtScalarFieldEnum
    having?: sc_mbr_prjtScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sc_mbr_prjtCountAggregateInputType | true
    _avg?: Sc_mbr_prjtAvgAggregateInputType
    _sum?: Sc_mbr_prjtSumAggregateInputType
    _min?: Sc_mbr_prjtMinAggregateInputType
    _max?: Sc_mbr_prjtMaxAggregateInputType
  }

  export type Sc_mbr_prjtGroupByOutputType = {
    mbr_no: bigint
    prjt_no: bigint
    prtpnt_sctn_cd: string
    prgrs_stop_tf: string
    prgrs_stop_dt: Date | null
    prgrs_stop_caus_desc: string | null
    ptcp_bgng_ymd: Date | null
    ptcp_end_ymd: Date | null
    frst_bmi_val: Decimal | null
    end_bmi_val: Decimal | null
    regr_no: bigint
    reg_dt: Date
    modr_no: bigint
    mod_dt: Date
    _count: Sc_mbr_prjtCountAggregateOutputType | null
    _avg: Sc_mbr_prjtAvgAggregateOutputType | null
    _sum: Sc_mbr_prjtSumAggregateOutputType | null
    _min: Sc_mbr_prjtMinAggregateOutputType | null
    _max: Sc_mbr_prjtMaxAggregateOutputType | null
  }

  type GetSc_mbr_prjtGroupByPayload<T extends sc_mbr_prjtGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sc_mbr_prjtGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sc_mbr_prjtGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sc_mbr_prjtGroupByOutputType[P]>
            : GetScalarType<T[P], Sc_mbr_prjtGroupByOutputType[P]>
        }
      >
    >


  export type sc_mbr_prjtSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    mbr_no?: boolean
    prjt_no?: boolean
    prtpnt_sctn_cd?: boolean
    prgrs_stop_tf?: boolean
    prgrs_stop_dt?: boolean
    prgrs_stop_caus_desc?: boolean
    ptcp_bgng_ymd?: boolean
    ptcp_end_ymd?: boolean
    frst_bmi_val?: boolean
    end_bmi_val?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sc_mbr_prjt"]>



  export type sc_mbr_prjtSelectScalar = {
    mbr_no?: boolean
    prjt_no?: boolean
    prtpnt_sctn_cd?: boolean
    prgrs_stop_tf?: boolean
    prgrs_stop_dt?: boolean
    prgrs_stop_caus_desc?: boolean
    ptcp_bgng_ymd?: boolean
    ptcp_end_ymd?: boolean
    frst_bmi_val?: boolean
    end_bmi_val?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sc_mbr_prjtOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"mbr_no" | "prjt_no" | "prtpnt_sctn_cd" | "prgrs_stop_tf" | "prgrs_stop_dt" | "prgrs_stop_caus_desc" | "ptcp_bgng_ymd" | "ptcp_end_ymd" | "frst_bmi_val" | "end_bmi_val" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sc_mbr_prjt"]>

  export type $sc_mbr_prjtPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sc_mbr_prjt"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      mbr_no: bigint
      prjt_no: bigint
      prtpnt_sctn_cd: string
      prgrs_stop_tf: string
      prgrs_stop_dt: Date | null
      prgrs_stop_caus_desc: string | null
      ptcp_bgng_ymd: Date | null
      ptcp_end_ymd: Date | null
      frst_bmi_val: Prisma.Decimal | null
      end_bmi_val: Prisma.Decimal | null
      regr_no: bigint
      reg_dt: Date
      modr_no: bigint
      mod_dt: Date
    }, ExtArgs["result"]["sc_mbr_prjt"]>
    composites: {}
  }

  type sc_mbr_prjtGetPayload<S extends boolean | null | undefined | sc_mbr_prjtDefaultArgs> = $Result.GetResult<Prisma.$sc_mbr_prjtPayload, S>

  type sc_mbr_prjtCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sc_mbr_prjtFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sc_mbr_prjtCountAggregateInputType | true
    }

  export interface sc_mbr_prjtDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sc_mbr_prjt'], meta: { name: 'sc_mbr_prjt' } }
    /**
     * Find zero or one Sc_mbr_prjt that matches the filter.
     * @param {sc_mbr_prjtFindUniqueArgs} args - Arguments to find a Sc_mbr_prjt
     * @example
     * // Get one Sc_mbr_prjt
     * const sc_mbr_prjt = await prisma.sc_mbr_prjt.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sc_mbr_prjtFindUniqueArgs>(args: SelectSubset<T, sc_mbr_prjtFindUniqueArgs<ExtArgs>>): Prisma__sc_mbr_prjtClient<$Result.GetResult<Prisma.$sc_mbr_prjtPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sc_mbr_prjt that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sc_mbr_prjtFindUniqueOrThrowArgs} args - Arguments to find a Sc_mbr_prjt
     * @example
     * // Get one Sc_mbr_prjt
     * const sc_mbr_prjt = await prisma.sc_mbr_prjt.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sc_mbr_prjtFindUniqueOrThrowArgs>(args: SelectSubset<T, sc_mbr_prjtFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sc_mbr_prjtClient<$Result.GetResult<Prisma.$sc_mbr_prjtPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_mbr_prjt that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_prjtFindFirstArgs} args - Arguments to find a Sc_mbr_prjt
     * @example
     * // Get one Sc_mbr_prjt
     * const sc_mbr_prjt = await prisma.sc_mbr_prjt.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sc_mbr_prjtFindFirstArgs>(args?: SelectSubset<T, sc_mbr_prjtFindFirstArgs<ExtArgs>>): Prisma__sc_mbr_prjtClient<$Result.GetResult<Prisma.$sc_mbr_prjtPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_mbr_prjt that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_prjtFindFirstOrThrowArgs} args - Arguments to find a Sc_mbr_prjt
     * @example
     * // Get one Sc_mbr_prjt
     * const sc_mbr_prjt = await prisma.sc_mbr_prjt.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sc_mbr_prjtFindFirstOrThrowArgs>(args?: SelectSubset<T, sc_mbr_prjtFindFirstOrThrowArgs<ExtArgs>>): Prisma__sc_mbr_prjtClient<$Result.GetResult<Prisma.$sc_mbr_prjtPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sc_mbr_prjts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_prjtFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sc_mbr_prjts
     * const sc_mbr_prjts = await prisma.sc_mbr_prjt.findMany()
     * 
     * // Get first 10 Sc_mbr_prjts
     * const sc_mbr_prjts = await prisma.sc_mbr_prjt.findMany({ take: 10 })
     * 
     * // Only select the `mbr_no`
     * const sc_mbr_prjtWithMbr_noOnly = await prisma.sc_mbr_prjt.findMany({ select: { mbr_no: true } })
     * 
     */
    findMany<T extends sc_mbr_prjtFindManyArgs>(args?: SelectSubset<T, sc_mbr_prjtFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sc_mbr_prjtPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sc_mbr_prjt.
     * @param {sc_mbr_prjtCreateArgs} args - Arguments to create a Sc_mbr_prjt.
     * @example
     * // Create one Sc_mbr_prjt
     * const Sc_mbr_prjt = await prisma.sc_mbr_prjt.create({
     *   data: {
     *     // ... data to create a Sc_mbr_prjt
     *   }
     * })
     * 
     */
    create<T extends sc_mbr_prjtCreateArgs>(args: SelectSubset<T, sc_mbr_prjtCreateArgs<ExtArgs>>): Prisma__sc_mbr_prjtClient<$Result.GetResult<Prisma.$sc_mbr_prjtPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sc_mbr_prjts.
     * @param {sc_mbr_prjtCreateManyArgs} args - Arguments to create many Sc_mbr_prjts.
     * @example
     * // Create many Sc_mbr_prjts
     * const sc_mbr_prjt = await prisma.sc_mbr_prjt.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sc_mbr_prjtCreateManyArgs>(args?: SelectSubset<T, sc_mbr_prjtCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sc_mbr_prjt.
     * @param {sc_mbr_prjtDeleteArgs} args - Arguments to delete one Sc_mbr_prjt.
     * @example
     * // Delete one Sc_mbr_prjt
     * const Sc_mbr_prjt = await prisma.sc_mbr_prjt.delete({
     *   where: {
     *     // ... filter to delete one Sc_mbr_prjt
     *   }
     * })
     * 
     */
    delete<T extends sc_mbr_prjtDeleteArgs>(args: SelectSubset<T, sc_mbr_prjtDeleteArgs<ExtArgs>>): Prisma__sc_mbr_prjtClient<$Result.GetResult<Prisma.$sc_mbr_prjtPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sc_mbr_prjt.
     * @param {sc_mbr_prjtUpdateArgs} args - Arguments to update one Sc_mbr_prjt.
     * @example
     * // Update one Sc_mbr_prjt
     * const sc_mbr_prjt = await prisma.sc_mbr_prjt.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sc_mbr_prjtUpdateArgs>(args: SelectSubset<T, sc_mbr_prjtUpdateArgs<ExtArgs>>): Prisma__sc_mbr_prjtClient<$Result.GetResult<Prisma.$sc_mbr_prjtPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sc_mbr_prjts.
     * @param {sc_mbr_prjtDeleteManyArgs} args - Arguments to filter Sc_mbr_prjts to delete.
     * @example
     * // Delete a few Sc_mbr_prjts
     * const { count } = await prisma.sc_mbr_prjt.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sc_mbr_prjtDeleteManyArgs>(args?: SelectSubset<T, sc_mbr_prjtDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sc_mbr_prjts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_prjtUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sc_mbr_prjts
     * const sc_mbr_prjt = await prisma.sc_mbr_prjt.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sc_mbr_prjtUpdateManyArgs>(args: SelectSubset<T, sc_mbr_prjtUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sc_mbr_prjt.
     * @param {sc_mbr_prjtUpsertArgs} args - Arguments to update or create a Sc_mbr_prjt.
     * @example
     * // Update or create a Sc_mbr_prjt
     * const sc_mbr_prjt = await prisma.sc_mbr_prjt.upsert({
     *   create: {
     *     // ... data to create a Sc_mbr_prjt
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sc_mbr_prjt we want to update
     *   }
     * })
     */
    upsert<T extends sc_mbr_prjtUpsertArgs>(args: SelectSubset<T, sc_mbr_prjtUpsertArgs<ExtArgs>>): Prisma__sc_mbr_prjtClient<$Result.GetResult<Prisma.$sc_mbr_prjtPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sc_mbr_prjts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_prjtCountArgs} args - Arguments to filter Sc_mbr_prjts to count.
     * @example
     * // Count the number of Sc_mbr_prjts
     * const count = await prisma.sc_mbr_prjt.count({
     *   where: {
     *     // ... the filter for the Sc_mbr_prjts we want to count
     *   }
     * })
    **/
    count<T extends sc_mbr_prjtCountArgs>(
      args?: Subset<T, sc_mbr_prjtCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sc_mbr_prjtCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sc_mbr_prjt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sc_mbr_prjtAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sc_mbr_prjtAggregateArgs>(args: Subset<T, Sc_mbr_prjtAggregateArgs>): Prisma.PrismaPromise<GetSc_mbr_prjtAggregateType<T>>

    /**
     * Group by Sc_mbr_prjt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_prjtGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sc_mbr_prjtGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sc_mbr_prjtGroupByArgs['orderBy'] }
        : { orderBy?: sc_mbr_prjtGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sc_mbr_prjtGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSc_mbr_prjtGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sc_mbr_prjt model
   */
  readonly fields: sc_mbr_prjtFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sc_mbr_prjt.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sc_mbr_prjtClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sc_mbr_prjt model
   */
  interface sc_mbr_prjtFieldRefs {
    readonly mbr_no: FieldRef<"sc_mbr_prjt", 'BigInt'>
    readonly prjt_no: FieldRef<"sc_mbr_prjt", 'BigInt'>
    readonly prtpnt_sctn_cd: FieldRef<"sc_mbr_prjt", 'String'>
    readonly prgrs_stop_tf: FieldRef<"sc_mbr_prjt", 'String'>
    readonly prgrs_stop_dt: FieldRef<"sc_mbr_prjt", 'DateTime'>
    readonly prgrs_stop_caus_desc: FieldRef<"sc_mbr_prjt", 'String'>
    readonly ptcp_bgng_ymd: FieldRef<"sc_mbr_prjt", 'DateTime'>
    readonly ptcp_end_ymd: FieldRef<"sc_mbr_prjt", 'DateTime'>
    readonly frst_bmi_val: FieldRef<"sc_mbr_prjt", 'Decimal'>
    readonly end_bmi_val: FieldRef<"sc_mbr_prjt", 'Decimal'>
    readonly regr_no: FieldRef<"sc_mbr_prjt", 'BigInt'>
    readonly reg_dt: FieldRef<"sc_mbr_prjt", 'DateTime'>
    readonly modr_no: FieldRef<"sc_mbr_prjt", 'BigInt'>
    readonly mod_dt: FieldRef<"sc_mbr_prjt", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sc_mbr_prjt findUnique
   */
  export type sc_mbr_prjtFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_prjt
     */
    select?: sc_mbr_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_prjt
     */
    omit?: sc_mbr_prjtOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_prjt to fetch.
     */
    where: sc_mbr_prjtWhereUniqueInput
  }

  /**
   * sc_mbr_prjt findUniqueOrThrow
   */
  export type sc_mbr_prjtFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_prjt
     */
    select?: sc_mbr_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_prjt
     */
    omit?: sc_mbr_prjtOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_prjt to fetch.
     */
    where: sc_mbr_prjtWhereUniqueInput
  }

  /**
   * sc_mbr_prjt findFirst
   */
  export type sc_mbr_prjtFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_prjt
     */
    select?: sc_mbr_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_prjt
     */
    omit?: sc_mbr_prjtOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_prjt to fetch.
     */
    where?: sc_mbr_prjtWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_prjts to fetch.
     */
    orderBy?: sc_mbr_prjtOrderByWithRelationInput | sc_mbr_prjtOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_mbr_prjts.
     */
    cursor?: sc_mbr_prjtWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_prjts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_prjts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_mbr_prjts.
     */
    distinct?: Sc_mbr_prjtScalarFieldEnum | Sc_mbr_prjtScalarFieldEnum[]
  }

  /**
   * sc_mbr_prjt findFirstOrThrow
   */
  export type sc_mbr_prjtFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_prjt
     */
    select?: sc_mbr_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_prjt
     */
    omit?: sc_mbr_prjtOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_prjt to fetch.
     */
    where?: sc_mbr_prjtWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_prjts to fetch.
     */
    orderBy?: sc_mbr_prjtOrderByWithRelationInput | sc_mbr_prjtOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_mbr_prjts.
     */
    cursor?: sc_mbr_prjtWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_prjts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_prjts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_mbr_prjts.
     */
    distinct?: Sc_mbr_prjtScalarFieldEnum | Sc_mbr_prjtScalarFieldEnum[]
  }

  /**
   * sc_mbr_prjt findMany
   */
  export type sc_mbr_prjtFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_prjt
     */
    select?: sc_mbr_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_prjt
     */
    omit?: sc_mbr_prjtOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_prjts to fetch.
     */
    where?: sc_mbr_prjtWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_prjts to fetch.
     */
    orderBy?: sc_mbr_prjtOrderByWithRelationInput | sc_mbr_prjtOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sc_mbr_prjts.
     */
    cursor?: sc_mbr_prjtWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_prjts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_prjts.
     */
    skip?: number
    distinct?: Sc_mbr_prjtScalarFieldEnum | Sc_mbr_prjtScalarFieldEnum[]
  }

  /**
   * sc_mbr_prjt create
   */
  export type sc_mbr_prjtCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_prjt
     */
    select?: sc_mbr_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_prjt
     */
    omit?: sc_mbr_prjtOmit<ExtArgs> | null
    /**
     * The data needed to create a sc_mbr_prjt.
     */
    data: XOR<sc_mbr_prjtCreateInput, sc_mbr_prjtUncheckedCreateInput>
  }

  /**
   * sc_mbr_prjt createMany
   */
  export type sc_mbr_prjtCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sc_mbr_prjts.
     */
    data: sc_mbr_prjtCreateManyInput | sc_mbr_prjtCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sc_mbr_prjt update
   */
  export type sc_mbr_prjtUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_prjt
     */
    select?: sc_mbr_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_prjt
     */
    omit?: sc_mbr_prjtOmit<ExtArgs> | null
    /**
     * The data needed to update a sc_mbr_prjt.
     */
    data: XOR<sc_mbr_prjtUpdateInput, sc_mbr_prjtUncheckedUpdateInput>
    /**
     * Choose, which sc_mbr_prjt to update.
     */
    where: sc_mbr_prjtWhereUniqueInput
  }

  /**
   * sc_mbr_prjt updateMany
   */
  export type sc_mbr_prjtUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sc_mbr_prjts.
     */
    data: XOR<sc_mbr_prjtUpdateManyMutationInput, sc_mbr_prjtUncheckedUpdateManyInput>
    /**
     * Filter which sc_mbr_prjts to update
     */
    where?: sc_mbr_prjtWhereInput
    /**
     * Limit how many sc_mbr_prjts to update.
     */
    limit?: number
  }

  /**
   * sc_mbr_prjt upsert
   */
  export type sc_mbr_prjtUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_prjt
     */
    select?: sc_mbr_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_prjt
     */
    omit?: sc_mbr_prjtOmit<ExtArgs> | null
    /**
     * The filter to search for the sc_mbr_prjt to update in case it exists.
     */
    where: sc_mbr_prjtWhereUniqueInput
    /**
     * In case the sc_mbr_prjt found by the `where` argument doesn't exist, create a new sc_mbr_prjt with this data.
     */
    create: XOR<sc_mbr_prjtCreateInput, sc_mbr_prjtUncheckedCreateInput>
    /**
     * In case the sc_mbr_prjt was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sc_mbr_prjtUpdateInput, sc_mbr_prjtUncheckedUpdateInput>
  }

  /**
   * sc_mbr_prjt delete
   */
  export type sc_mbr_prjtDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_prjt
     */
    select?: sc_mbr_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_prjt
     */
    omit?: sc_mbr_prjtOmit<ExtArgs> | null
    /**
     * Filter which sc_mbr_prjt to delete.
     */
    where: sc_mbr_prjtWhereUniqueInput
  }

  /**
   * sc_mbr_prjt deleteMany
   */
  export type sc_mbr_prjtDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_mbr_prjts to delete
     */
    where?: sc_mbr_prjtWhereInput
    /**
     * Limit how many sc_mbr_prjts to delete.
     */
    limit?: number
  }

  /**
   * sc_mbr_prjt without action
   */
  export type sc_mbr_prjtDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_prjt
     */
    select?: sc_mbr_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_prjt
     */
    omit?: sc_mbr_prjtOmit<ExtArgs> | null
  }


  /**
   * Model sc_mbr_trms_agr_hist
   */

  export type AggregateSc_mbr_trms_agr_hist = {
    _count: Sc_mbr_trms_agr_histCountAggregateOutputType | null
    _avg: Sc_mbr_trms_agr_histAvgAggregateOutputType | null
    _sum: Sc_mbr_trms_agr_histSumAggregateOutputType | null
    _min: Sc_mbr_trms_agr_histMinAggregateOutputType | null
    _max: Sc_mbr_trms_agr_histMaxAggregateOutputType | null
  }

  export type Sc_mbr_trms_agr_histAvgAggregateOutputType = {
    mbr_no: number | null
    trms_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sc_mbr_trms_agr_histSumAggregateOutputType = {
    mbr_no: bigint | null
    trms_no: bigint | null
    regr_no: bigint | null
    modr_no: bigint | null
  }

  export type Sc_mbr_trms_agr_histMinAggregateOutputType = {
    mbr_no: bigint | null
    trms_no: bigint | null
    agr_dt: Date | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sc_mbr_trms_agr_histMaxAggregateOutputType = {
    mbr_no: bigint | null
    trms_no: bigint | null
    agr_dt: Date | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sc_mbr_trms_agr_histCountAggregateOutputType = {
    mbr_no: number
    trms_no: number
    agr_dt: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sc_mbr_trms_agr_histAvgAggregateInputType = {
    mbr_no?: true
    trms_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sc_mbr_trms_agr_histSumAggregateInputType = {
    mbr_no?: true
    trms_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sc_mbr_trms_agr_histMinAggregateInputType = {
    mbr_no?: true
    trms_no?: true
    agr_dt?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sc_mbr_trms_agr_histMaxAggregateInputType = {
    mbr_no?: true
    trms_no?: true
    agr_dt?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sc_mbr_trms_agr_histCountAggregateInputType = {
    mbr_no?: true
    trms_no?: true
    agr_dt?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sc_mbr_trms_agr_histAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_mbr_trms_agr_hist to aggregate.
     */
    where?: sc_mbr_trms_agr_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_trms_agr_hists to fetch.
     */
    orderBy?: sc_mbr_trms_agr_histOrderByWithRelationInput | sc_mbr_trms_agr_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sc_mbr_trms_agr_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_trms_agr_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_trms_agr_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sc_mbr_trms_agr_hists
    **/
    _count?: true | Sc_mbr_trms_agr_histCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sc_mbr_trms_agr_histAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sc_mbr_trms_agr_histSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sc_mbr_trms_agr_histMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sc_mbr_trms_agr_histMaxAggregateInputType
  }

  export type GetSc_mbr_trms_agr_histAggregateType<T extends Sc_mbr_trms_agr_histAggregateArgs> = {
        [P in keyof T & keyof AggregateSc_mbr_trms_agr_hist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSc_mbr_trms_agr_hist[P]>
      : GetScalarType<T[P], AggregateSc_mbr_trms_agr_hist[P]>
  }




  export type sc_mbr_trms_agr_histGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sc_mbr_trms_agr_histWhereInput
    orderBy?: sc_mbr_trms_agr_histOrderByWithAggregationInput | sc_mbr_trms_agr_histOrderByWithAggregationInput[]
    by: Sc_mbr_trms_agr_histScalarFieldEnum[] | Sc_mbr_trms_agr_histScalarFieldEnum
    having?: sc_mbr_trms_agr_histScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sc_mbr_trms_agr_histCountAggregateInputType | true
    _avg?: Sc_mbr_trms_agr_histAvgAggregateInputType
    _sum?: Sc_mbr_trms_agr_histSumAggregateInputType
    _min?: Sc_mbr_trms_agr_histMinAggregateInputType
    _max?: Sc_mbr_trms_agr_histMaxAggregateInputType
  }

  export type Sc_mbr_trms_agr_histGroupByOutputType = {
    mbr_no: bigint
    trms_no: bigint
    agr_dt: Date
    regr_no: bigint
    reg_dt: Date
    modr_no: bigint
    mod_dt: Date
    _count: Sc_mbr_trms_agr_histCountAggregateOutputType | null
    _avg: Sc_mbr_trms_agr_histAvgAggregateOutputType | null
    _sum: Sc_mbr_trms_agr_histSumAggregateOutputType | null
    _min: Sc_mbr_trms_agr_histMinAggregateOutputType | null
    _max: Sc_mbr_trms_agr_histMaxAggregateOutputType | null
  }

  type GetSc_mbr_trms_agr_histGroupByPayload<T extends sc_mbr_trms_agr_histGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sc_mbr_trms_agr_histGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sc_mbr_trms_agr_histGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sc_mbr_trms_agr_histGroupByOutputType[P]>
            : GetScalarType<T[P], Sc_mbr_trms_agr_histGroupByOutputType[P]>
        }
      >
    >


  export type sc_mbr_trms_agr_histSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    mbr_no?: boolean
    trms_no?: boolean
    agr_dt?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sc_mbr_trms_agr_hist"]>



  export type sc_mbr_trms_agr_histSelectScalar = {
    mbr_no?: boolean
    trms_no?: boolean
    agr_dt?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sc_mbr_trms_agr_histOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"mbr_no" | "trms_no" | "agr_dt" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sc_mbr_trms_agr_hist"]>

  export type $sc_mbr_trms_agr_histPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sc_mbr_trms_agr_hist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      mbr_no: bigint
      trms_no: bigint
      agr_dt: Date
      regr_no: bigint
      reg_dt: Date
      modr_no: bigint
      mod_dt: Date
    }, ExtArgs["result"]["sc_mbr_trms_agr_hist"]>
    composites: {}
  }

  type sc_mbr_trms_agr_histGetPayload<S extends boolean | null | undefined | sc_mbr_trms_agr_histDefaultArgs> = $Result.GetResult<Prisma.$sc_mbr_trms_agr_histPayload, S>

  type sc_mbr_trms_agr_histCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sc_mbr_trms_agr_histFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sc_mbr_trms_agr_histCountAggregateInputType | true
    }

  export interface sc_mbr_trms_agr_histDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sc_mbr_trms_agr_hist'], meta: { name: 'sc_mbr_trms_agr_hist' } }
    /**
     * Find zero or one Sc_mbr_trms_agr_hist that matches the filter.
     * @param {sc_mbr_trms_agr_histFindUniqueArgs} args - Arguments to find a Sc_mbr_trms_agr_hist
     * @example
     * // Get one Sc_mbr_trms_agr_hist
     * const sc_mbr_trms_agr_hist = await prisma.sc_mbr_trms_agr_hist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sc_mbr_trms_agr_histFindUniqueArgs>(args: SelectSubset<T, sc_mbr_trms_agr_histFindUniqueArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_histPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sc_mbr_trms_agr_hist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sc_mbr_trms_agr_histFindUniqueOrThrowArgs} args - Arguments to find a Sc_mbr_trms_agr_hist
     * @example
     * // Get one Sc_mbr_trms_agr_hist
     * const sc_mbr_trms_agr_hist = await prisma.sc_mbr_trms_agr_hist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sc_mbr_trms_agr_histFindUniqueOrThrowArgs>(args: SelectSubset<T, sc_mbr_trms_agr_histFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_histPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_mbr_trms_agr_hist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_trms_agr_histFindFirstArgs} args - Arguments to find a Sc_mbr_trms_agr_hist
     * @example
     * // Get one Sc_mbr_trms_agr_hist
     * const sc_mbr_trms_agr_hist = await prisma.sc_mbr_trms_agr_hist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sc_mbr_trms_agr_histFindFirstArgs>(args?: SelectSubset<T, sc_mbr_trms_agr_histFindFirstArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_histPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_mbr_trms_agr_hist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_trms_agr_histFindFirstOrThrowArgs} args - Arguments to find a Sc_mbr_trms_agr_hist
     * @example
     * // Get one Sc_mbr_trms_agr_hist
     * const sc_mbr_trms_agr_hist = await prisma.sc_mbr_trms_agr_hist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sc_mbr_trms_agr_histFindFirstOrThrowArgs>(args?: SelectSubset<T, sc_mbr_trms_agr_histFindFirstOrThrowArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_histPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sc_mbr_trms_agr_hists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_trms_agr_histFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sc_mbr_trms_agr_hists
     * const sc_mbr_trms_agr_hists = await prisma.sc_mbr_trms_agr_hist.findMany()
     * 
     * // Get first 10 Sc_mbr_trms_agr_hists
     * const sc_mbr_trms_agr_hists = await prisma.sc_mbr_trms_agr_hist.findMany({ take: 10 })
     * 
     * // Only select the `mbr_no`
     * const sc_mbr_trms_agr_histWithMbr_noOnly = await prisma.sc_mbr_trms_agr_hist.findMany({ select: { mbr_no: true } })
     * 
     */
    findMany<T extends sc_mbr_trms_agr_histFindManyArgs>(args?: SelectSubset<T, sc_mbr_trms_agr_histFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sc_mbr_trms_agr_histPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sc_mbr_trms_agr_hist.
     * @param {sc_mbr_trms_agr_histCreateArgs} args - Arguments to create a Sc_mbr_trms_agr_hist.
     * @example
     * // Create one Sc_mbr_trms_agr_hist
     * const Sc_mbr_trms_agr_hist = await prisma.sc_mbr_trms_agr_hist.create({
     *   data: {
     *     // ... data to create a Sc_mbr_trms_agr_hist
     *   }
     * })
     * 
     */
    create<T extends sc_mbr_trms_agr_histCreateArgs>(args: SelectSubset<T, sc_mbr_trms_agr_histCreateArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_histPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sc_mbr_trms_agr_hists.
     * @param {sc_mbr_trms_agr_histCreateManyArgs} args - Arguments to create many Sc_mbr_trms_agr_hists.
     * @example
     * // Create many Sc_mbr_trms_agr_hists
     * const sc_mbr_trms_agr_hist = await prisma.sc_mbr_trms_agr_hist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sc_mbr_trms_agr_histCreateManyArgs>(args?: SelectSubset<T, sc_mbr_trms_agr_histCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sc_mbr_trms_agr_hist.
     * @param {sc_mbr_trms_agr_histDeleteArgs} args - Arguments to delete one Sc_mbr_trms_agr_hist.
     * @example
     * // Delete one Sc_mbr_trms_agr_hist
     * const Sc_mbr_trms_agr_hist = await prisma.sc_mbr_trms_agr_hist.delete({
     *   where: {
     *     // ... filter to delete one Sc_mbr_trms_agr_hist
     *   }
     * })
     * 
     */
    delete<T extends sc_mbr_trms_agr_histDeleteArgs>(args: SelectSubset<T, sc_mbr_trms_agr_histDeleteArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_histPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sc_mbr_trms_agr_hist.
     * @param {sc_mbr_trms_agr_histUpdateArgs} args - Arguments to update one Sc_mbr_trms_agr_hist.
     * @example
     * // Update one Sc_mbr_trms_agr_hist
     * const sc_mbr_trms_agr_hist = await prisma.sc_mbr_trms_agr_hist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sc_mbr_trms_agr_histUpdateArgs>(args: SelectSubset<T, sc_mbr_trms_agr_histUpdateArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_histPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sc_mbr_trms_agr_hists.
     * @param {sc_mbr_trms_agr_histDeleteManyArgs} args - Arguments to filter Sc_mbr_trms_agr_hists to delete.
     * @example
     * // Delete a few Sc_mbr_trms_agr_hists
     * const { count } = await prisma.sc_mbr_trms_agr_hist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sc_mbr_trms_agr_histDeleteManyArgs>(args?: SelectSubset<T, sc_mbr_trms_agr_histDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sc_mbr_trms_agr_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_trms_agr_histUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sc_mbr_trms_agr_hists
     * const sc_mbr_trms_agr_hist = await prisma.sc_mbr_trms_agr_hist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sc_mbr_trms_agr_histUpdateManyArgs>(args: SelectSubset<T, sc_mbr_trms_agr_histUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sc_mbr_trms_agr_hist.
     * @param {sc_mbr_trms_agr_histUpsertArgs} args - Arguments to update or create a Sc_mbr_trms_agr_hist.
     * @example
     * // Update or create a Sc_mbr_trms_agr_hist
     * const sc_mbr_trms_agr_hist = await prisma.sc_mbr_trms_agr_hist.upsert({
     *   create: {
     *     // ... data to create a Sc_mbr_trms_agr_hist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sc_mbr_trms_agr_hist we want to update
     *   }
     * })
     */
    upsert<T extends sc_mbr_trms_agr_histUpsertArgs>(args: SelectSubset<T, sc_mbr_trms_agr_histUpsertArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_histPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sc_mbr_trms_agr_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_trms_agr_histCountArgs} args - Arguments to filter Sc_mbr_trms_agr_hists to count.
     * @example
     * // Count the number of Sc_mbr_trms_agr_hists
     * const count = await prisma.sc_mbr_trms_agr_hist.count({
     *   where: {
     *     // ... the filter for the Sc_mbr_trms_agr_hists we want to count
     *   }
     * })
    **/
    count<T extends sc_mbr_trms_agr_histCountArgs>(
      args?: Subset<T, sc_mbr_trms_agr_histCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sc_mbr_trms_agr_histCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sc_mbr_trms_agr_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sc_mbr_trms_agr_histAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sc_mbr_trms_agr_histAggregateArgs>(args: Subset<T, Sc_mbr_trms_agr_histAggregateArgs>): Prisma.PrismaPromise<GetSc_mbr_trms_agr_histAggregateType<T>>

    /**
     * Group by Sc_mbr_trms_agr_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_trms_agr_histGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sc_mbr_trms_agr_histGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sc_mbr_trms_agr_histGroupByArgs['orderBy'] }
        : { orderBy?: sc_mbr_trms_agr_histGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sc_mbr_trms_agr_histGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSc_mbr_trms_agr_histGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sc_mbr_trms_agr_hist model
   */
  readonly fields: sc_mbr_trms_agr_histFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sc_mbr_trms_agr_hist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sc_mbr_trms_agr_histClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sc_mbr_trms_agr_hist model
   */
  interface sc_mbr_trms_agr_histFieldRefs {
    readonly mbr_no: FieldRef<"sc_mbr_trms_agr_hist", 'BigInt'>
    readonly trms_no: FieldRef<"sc_mbr_trms_agr_hist", 'BigInt'>
    readonly agr_dt: FieldRef<"sc_mbr_trms_agr_hist", 'DateTime'>
    readonly regr_no: FieldRef<"sc_mbr_trms_agr_hist", 'BigInt'>
    readonly reg_dt: FieldRef<"sc_mbr_trms_agr_hist", 'DateTime'>
    readonly modr_no: FieldRef<"sc_mbr_trms_agr_hist", 'BigInt'>
    readonly mod_dt: FieldRef<"sc_mbr_trms_agr_hist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sc_mbr_trms_agr_hist findUnique
   */
  export type sc_mbr_trms_agr_histFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_hist
     */
    select?: sc_mbr_trms_agr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_hist
     */
    omit?: sc_mbr_trms_agr_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_trms_agr_hist to fetch.
     */
    where: sc_mbr_trms_agr_histWhereUniqueInput
  }

  /**
   * sc_mbr_trms_agr_hist findUniqueOrThrow
   */
  export type sc_mbr_trms_agr_histFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_hist
     */
    select?: sc_mbr_trms_agr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_hist
     */
    omit?: sc_mbr_trms_agr_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_trms_agr_hist to fetch.
     */
    where: sc_mbr_trms_agr_histWhereUniqueInput
  }

  /**
   * sc_mbr_trms_agr_hist findFirst
   */
  export type sc_mbr_trms_agr_histFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_hist
     */
    select?: sc_mbr_trms_agr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_hist
     */
    omit?: sc_mbr_trms_agr_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_trms_agr_hist to fetch.
     */
    where?: sc_mbr_trms_agr_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_trms_agr_hists to fetch.
     */
    orderBy?: sc_mbr_trms_agr_histOrderByWithRelationInput | sc_mbr_trms_agr_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_mbr_trms_agr_hists.
     */
    cursor?: sc_mbr_trms_agr_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_trms_agr_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_trms_agr_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_mbr_trms_agr_hists.
     */
    distinct?: Sc_mbr_trms_agr_histScalarFieldEnum | Sc_mbr_trms_agr_histScalarFieldEnum[]
  }

  /**
   * sc_mbr_trms_agr_hist findFirstOrThrow
   */
  export type sc_mbr_trms_agr_histFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_hist
     */
    select?: sc_mbr_trms_agr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_hist
     */
    omit?: sc_mbr_trms_agr_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_trms_agr_hist to fetch.
     */
    where?: sc_mbr_trms_agr_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_trms_agr_hists to fetch.
     */
    orderBy?: sc_mbr_trms_agr_histOrderByWithRelationInput | sc_mbr_trms_agr_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_mbr_trms_agr_hists.
     */
    cursor?: sc_mbr_trms_agr_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_trms_agr_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_trms_agr_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_mbr_trms_agr_hists.
     */
    distinct?: Sc_mbr_trms_agr_histScalarFieldEnum | Sc_mbr_trms_agr_histScalarFieldEnum[]
  }

  /**
   * sc_mbr_trms_agr_hist findMany
   */
  export type sc_mbr_trms_agr_histFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_hist
     */
    select?: sc_mbr_trms_agr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_hist
     */
    omit?: sc_mbr_trms_agr_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_trms_agr_hists to fetch.
     */
    where?: sc_mbr_trms_agr_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_trms_agr_hists to fetch.
     */
    orderBy?: sc_mbr_trms_agr_histOrderByWithRelationInput | sc_mbr_trms_agr_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sc_mbr_trms_agr_hists.
     */
    cursor?: sc_mbr_trms_agr_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_trms_agr_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_trms_agr_hists.
     */
    skip?: number
    distinct?: Sc_mbr_trms_agr_histScalarFieldEnum | Sc_mbr_trms_agr_histScalarFieldEnum[]
  }

  /**
   * sc_mbr_trms_agr_hist create
   */
  export type sc_mbr_trms_agr_histCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_hist
     */
    select?: sc_mbr_trms_agr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_hist
     */
    omit?: sc_mbr_trms_agr_histOmit<ExtArgs> | null
    /**
     * The data needed to create a sc_mbr_trms_agr_hist.
     */
    data: XOR<sc_mbr_trms_agr_histCreateInput, sc_mbr_trms_agr_histUncheckedCreateInput>
  }

  /**
   * sc_mbr_trms_agr_hist createMany
   */
  export type sc_mbr_trms_agr_histCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sc_mbr_trms_agr_hists.
     */
    data: sc_mbr_trms_agr_histCreateManyInput | sc_mbr_trms_agr_histCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sc_mbr_trms_agr_hist update
   */
  export type sc_mbr_trms_agr_histUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_hist
     */
    select?: sc_mbr_trms_agr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_hist
     */
    omit?: sc_mbr_trms_agr_histOmit<ExtArgs> | null
    /**
     * The data needed to update a sc_mbr_trms_agr_hist.
     */
    data: XOR<sc_mbr_trms_agr_histUpdateInput, sc_mbr_trms_agr_histUncheckedUpdateInput>
    /**
     * Choose, which sc_mbr_trms_agr_hist to update.
     */
    where: sc_mbr_trms_agr_histWhereUniqueInput
  }

  /**
   * sc_mbr_trms_agr_hist updateMany
   */
  export type sc_mbr_trms_agr_histUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sc_mbr_trms_agr_hists.
     */
    data: XOR<sc_mbr_trms_agr_histUpdateManyMutationInput, sc_mbr_trms_agr_histUncheckedUpdateManyInput>
    /**
     * Filter which sc_mbr_trms_agr_hists to update
     */
    where?: sc_mbr_trms_agr_histWhereInput
    /**
     * Limit how many sc_mbr_trms_agr_hists to update.
     */
    limit?: number
  }

  /**
   * sc_mbr_trms_agr_hist upsert
   */
  export type sc_mbr_trms_agr_histUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_hist
     */
    select?: sc_mbr_trms_agr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_hist
     */
    omit?: sc_mbr_trms_agr_histOmit<ExtArgs> | null
    /**
     * The filter to search for the sc_mbr_trms_agr_hist to update in case it exists.
     */
    where: sc_mbr_trms_agr_histWhereUniqueInput
    /**
     * In case the sc_mbr_trms_agr_hist found by the `where` argument doesn't exist, create a new sc_mbr_trms_agr_hist with this data.
     */
    create: XOR<sc_mbr_trms_agr_histCreateInput, sc_mbr_trms_agr_histUncheckedCreateInput>
    /**
     * In case the sc_mbr_trms_agr_hist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sc_mbr_trms_agr_histUpdateInput, sc_mbr_trms_agr_histUncheckedUpdateInput>
  }

  /**
   * sc_mbr_trms_agr_hist delete
   */
  export type sc_mbr_trms_agr_histDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_hist
     */
    select?: sc_mbr_trms_agr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_hist
     */
    omit?: sc_mbr_trms_agr_histOmit<ExtArgs> | null
    /**
     * Filter which sc_mbr_trms_agr_hist to delete.
     */
    where: sc_mbr_trms_agr_histWhereUniqueInput
  }

  /**
   * sc_mbr_trms_agr_hist deleteMany
   */
  export type sc_mbr_trms_agr_histDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_mbr_trms_agr_hists to delete
     */
    where?: sc_mbr_trms_agr_histWhereInput
    /**
     * Limit how many sc_mbr_trms_agr_hists to delete.
     */
    limit?: number
  }

  /**
   * sc_mbr_trms_agr_hist without action
   */
  export type sc_mbr_trms_agr_histDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_hist
     */
    select?: sc_mbr_trms_agr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_hist
     */
    omit?: sc_mbr_trms_agr_histOmit<ExtArgs> | null
  }


  /**
   * Model sc_mbr_trms_agr_scr_hist
   */

  export type AggregateSc_mbr_trms_agr_scr_hist = {
    _count: Sc_mbr_trms_agr_scr_histCountAggregateOutputType | null
    _avg: Sc_mbr_trms_agr_scr_histAvgAggregateOutputType | null
    _sum: Sc_mbr_trms_agr_scr_histSumAggregateOutputType | null
    _min: Sc_mbr_trms_agr_scr_histMinAggregateOutputType | null
    _max: Sc_mbr_trms_agr_scr_histMaxAggregateOutputType | null
  }

  export type Sc_mbr_trms_agr_scr_histAvgAggregateOutputType = {
    agr_no: number | null
    clco_no: number | null
    trms_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sc_mbr_trms_agr_scr_histSumAggregateOutputType = {
    agr_no: bigint | null
    clco_no: bigint | null
    trms_no: bigint | null
    regr_no: bigint | null
    modr_no: bigint | null
  }

  export type Sc_mbr_trms_agr_scr_histMinAggregateOutputType = {
    agr_no: bigint | null
    clco_no: bigint | null
    emp_no: string | null
    trms_no: bigint | null
    agr_dt: Date | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sc_mbr_trms_agr_scr_histMaxAggregateOutputType = {
    agr_no: bigint | null
    clco_no: bigint | null
    emp_no: string | null
    trms_no: bigint | null
    agr_dt: Date | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sc_mbr_trms_agr_scr_histCountAggregateOutputType = {
    agr_no: number
    clco_no: number
    emp_no: number
    trms_no: number
    agr_dt: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sc_mbr_trms_agr_scr_histAvgAggregateInputType = {
    agr_no?: true
    clco_no?: true
    trms_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sc_mbr_trms_agr_scr_histSumAggregateInputType = {
    agr_no?: true
    clco_no?: true
    trms_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sc_mbr_trms_agr_scr_histMinAggregateInputType = {
    agr_no?: true
    clco_no?: true
    emp_no?: true
    trms_no?: true
    agr_dt?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sc_mbr_trms_agr_scr_histMaxAggregateInputType = {
    agr_no?: true
    clco_no?: true
    emp_no?: true
    trms_no?: true
    agr_dt?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sc_mbr_trms_agr_scr_histCountAggregateInputType = {
    agr_no?: true
    clco_no?: true
    emp_no?: true
    trms_no?: true
    agr_dt?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sc_mbr_trms_agr_scr_histAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_mbr_trms_agr_scr_hist to aggregate.
     */
    where?: sc_mbr_trms_agr_scr_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_trms_agr_scr_hists to fetch.
     */
    orderBy?: sc_mbr_trms_agr_scr_histOrderByWithRelationInput | sc_mbr_trms_agr_scr_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sc_mbr_trms_agr_scr_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_trms_agr_scr_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_trms_agr_scr_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sc_mbr_trms_agr_scr_hists
    **/
    _count?: true | Sc_mbr_trms_agr_scr_histCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sc_mbr_trms_agr_scr_histAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sc_mbr_trms_agr_scr_histSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sc_mbr_trms_agr_scr_histMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sc_mbr_trms_agr_scr_histMaxAggregateInputType
  }

  export type GetSc_mbr_trms_agr_scr_histAggregateType<T extends Sc_mbr_trms_agr_scr_histAggregateArgs> = {
        [P in keyof T & keyof AggregateSc_mbr_trms_agr_scr_hist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSc_mbr_trms_agr_scr_hist[P]>
      : GetScalarType<T[P], AggregateSc_mbr_trms_agr_scr_hist[P]>
  }




  export type sc_mbr_trms_agr_scr_histGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sc_mbr_trms_agr_scr_histWhereInput
    orderBy?: sc_mbr_trms_agr_scr_histOrderByWithAggregationInput | sc_mbr_trms_agr_scr_histOrderByWithAggregationInput[]
    by: Sc_mbr_trms_agr_scr_histScalarFieldEnum[] | Sc_mbr_trms_agr_scr_histScalarFieldEnum
    having?: sc_mbr_trms_agr_scr_histScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sc_mbr_trms_agr_scr_histCountAggregateInputType | true
    _avg?: Sc_mbr_trms_agr_scr_histAvgAggregateInputType
    _sum?: Sc_mbr_trms_agr_scr_histSumAggregateInputType
    _min?: Sc_mbr_trms_agr_scr_histMinAggregateInputType
    _max?: Sc_mbr_trms_agr_scr_histMaxAggregateInputType
  }

  export type Sc_mbr_trms_agr_scr_histGroupByOutputType = {
    agr_no: bigint
    clco_no: bigint
    emp_no: string
    trms_no: bigint
    agr_dt: Date
    regr_no: bigint
    reg_dt: Date
    modr_no: bigint
    mod_dt: Date
    _count: Sc_mbr_trms_agr_scr_histCountAggregateOutputType | null
    _avg: Sc_mbr_trms_agr_scr_histAvgAggregateOutputType | null
    _sum: Sc_mbr_trms_agr_scr_histSumAggregateOutputType | null
    _min: Sc_mbr_trms_agr_scr_histMinAggregateOutputType | null
    _max: Sc_mbr_trms_agr_scr_histMaxAggregateOutputType | null
  }

  type GetSc_mbr_trms_agr_scr_histGroupByPayload<T extends sc_mbr_trms_agr_scr_histGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sc_mbr_trms_agr_scr_histGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sc_mbr_trms_agr_scr_histGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sc_mbr_trms_agr_scr_histGroupByOutputType[P]>
            : GetScalarType<T[P], Sc_mbr_trms_agr_scr_histGroupByOutputType[P]>
        }
      >
    >


  export type sc_mbr_trms_agr_scr_histSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    agr_no?: boolean
    clco_no?: boolean
    emp_no?: boolean
    trms_no?: boolean
    agr_dt?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sc_mbr_trms_agr_scr_hist"]>



  export type sc_mbr_trms_agr_scr_histSelectScalar = {
    agr_no?: boolean
    clco_no?: boolean
    emp_no?: boolean
    trms_no?: boolean
    agr_dt?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sc_mbr_trms_agr_scr_histOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"agr_no" | "clco_no" | "emp_no" | "trms_no" | "agr_dt" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sc_mbr_trms_agr_scr_hist"]>

  export type $sc_mbr_trms_agr_scr_histPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sc_mbr_trms_agr_scr_hist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      agr_no: bigint
      clco_no: bigint
      emp_no: string
      trms_no: bigint
      agr_dt: Date
      regr_no: bigint
      reg_dt: Date
      modr_no: bigint
      mod_dt: Date
    }, ExtArgs["result"]["sc_mbr_trms_agr_scr_hist"]>
    composites: {}
  }

  type sc_mbr_trms_agr_scr_histGetPayload<S extends boolean | null | undefined | sc_mbr_trms_agr_scr_histDefaultArgs> = $Result.GetResult<Prisma.$sc_mbr_trms_agr_scr_histPayload, S>

  type sc_mbr_trms_agr_scr_histCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sc_mbr_trms_agr_scr_histFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sc_mbr_trms_agr_scr_histCountAggregateInputType | true
    }

  export interface sc_mbr_trms_agr_scr_histDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sc_mbr_trms_agr_scr_hist'], meta: { name: 'sc_mbr_trms_agr_scr_hist' } }
    /**
     * Find zero or one Sc_mbr_trms_agr_scr_hist that matches the filter.
     * @param {sc_mbr_trms_agr_scr_histFindUniqueArgs} args - Arguments to find a Sc_mbr_trms_agr_scr_hist
     * @example
     * // Get one Sc_mbr_trms_agr_scr_hist
     * const sc_mbr_trms_agr_scr_hist = await prisma.sc_mbr_trms_agr_scr_hist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sc_mbr_trms_agr_scr_histFindUniqueArgs>(args: SelectSubset<T, sc_mbr_trms_agr_scr_histFindUniqueArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_scr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_scr_histPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sc_mbr_trms_agr_scr_hist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sc_mbr_trms_agr_scr_histFindUniqueOrThrowArgs} args - Arguments to find a Sc_mbr_trms_agr_scr_hist
     * @example
     * // Get one Sc_mbr_trms_agr_scr_hist
     * const sc_mbr_trms_agr_scr_hist = await prisma.sc_mbr_trms_agr_scr_hist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sc_mbr_trms_agr_scr_histFindUniqueOrThrowArgs>(args: SelectSubset<T, sc_mbr_trms_agr_scr_histFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_scr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_scr_histPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_mbr_trms_agr_scr_hist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_trms_agr_scr_histFindFirstArgs} args - Arguments to find a Sc_mbr_trms_agr_scr_hist
     * @example
     * // Get one Sc_mbr_trms_agr_scr_hist
     * const sc_mbr_trms_agr_scr_hist = await prisma.sc_mbr_trms_agr_scr_hist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sc_mbr_trms_agr_scr_histFindFirstArgs>(args?: SelectSubset<T, sc_mbr_trms_agr_scr_histFindFirstArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_scr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_scr_histPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_mbr_trms_agr_scr_hist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_trms_agr_scr_histFindFirstOrThrowArgs} args - Arguments to find a Sc_mbr_trms_agr_scr_hist
     * @example
     * // Get one Sc_mbr_trms_agr_scr_hist
     * const sc_mbr_trms_agr_scr_hist = await prisma.sc_mbr_trms_agr_scr_hist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sc_mbr_trms_agr_scr_histFindFirstOrThrowArgs>(args?: SelectSubset<T, sc_mbr_trms_agr_scr_histFindFirstOrThrowArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_scr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_scr_histPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sc_mbr_trms_agr_scr_hists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_trms_agr_scr_histFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sc_mbr_trms_agr_scr_hists
     * const sc_mbr_trms_agr_scr_hists = await prisma.sc_mbr_trms_agr_scr_hist.findMany()
     * 
     * // Get first 10 Sc_mbr_trms_agr_scr_hists
     * const sc_mbr_trms_agr_scr_hists = await prisma.sc_mbr_trms_agr_scr_hist.findMany({ take: 10 })
     * 
     * // Only select the `agr_no`
     * const sc_mbr_trms_agr_scr_histWithAgr_noOnly = await prisma.sc_mbr_trms_agr_scr_hist.findMany({ select: { agr_no: true } })
     * 
     */
    findMany<T extends sc_mbr_trms_agr_scr_histFindManyArgs>(args?: SelectSubset<T, sc_mbr_trms_agr_scr_histFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sc_mbr_trms_agr_scr_histPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sc_mbr_trms_agr_scr_hist.
     * @param {sc_mbr_trms_agr_scr_histCreateArgs} args - Arguments to create a Sc_mbr_trms_agr_scr_hist.
     * @example
     * // Create one Sc_mbr_trms_agr_scr_hist
     * const Sc_mbr_trms_agr_scr_hist = await prisma.sc_mbr_trms_agr_scr_hist.create({
     *   data: {
     *     // ... data to create a Sc_mbr_trms_agr_scr_hist
     *   }
     * })
     * 
     */
    create<T extends sc_mbr_trms_agr_scr_histCreateArgs>(args: SelectSubset<T, sc_mbr_trms_agr_scr_histCreateArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_scr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_scr_histPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sc_mbr_trms_agr_scr_hists.
     * @param {sc_mbr_trms_agr_scr_histCreateManyArgs} args - Arguments to create many Sc_mbr_trms_agr_scr_hists.
     * @example
     * // Create many Sc_mbr_trms_agr_scr_hists
     * const sc_mbr_trms_agr_scr_hist = await prisma.sc_mbr_trms_agr_scr_hist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sc_mbr_trms_agr_scr_histCreateManyArgs>(args?: SelectSubset<T, sc_mbr_trms_agr_scr_histCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sc_mbr_trms_agr_scr_hist.
     * @param {sc_mbr_trms_agr_scr_histDeleteArgs} args - Arguments to delete one Sc_mbr_trms_agr_scr_hist.
     * @example
     * // Delete one Sc_mbr_trms_agr_scr_hist
     * const Sc_mbr_trms_agr_scr_hist = await prisma.sc_mbr_trms_agr_scr_hist.delete({
     *   where: {
     *     // ... filter to delete one Sc_mbr_trms_agr_scr_hist
     *   }
     * })
     * 
     */
    delete<T extends sc_mbr_trms_agr_scr_histDeleteArgs>(args: SelectSubset<T, sc_mbr_trms_agr_scr_histDeleteArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_scr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_scr_histPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sc_mbr_trms_agr_scr_hist.
     * @param {sc_mbr_trms_agr_scr_histUpdateArgs} args - Arguments to update one Sc_mbr_trms_agr_scr_hist.
     * @example
     * // Update one Sc_mbr_trms_agr_scr_hist
     * const sc_mbr_trms_agr_scr_hist = await prisma.sc_mbr_trms_agr_scr_hist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sc_mbr_trms_agr_scr_histUpdateArgs>(args: SelectSubset<T, sc_mbr_trms_agr_scr_histUpdateArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_scr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_scr_histPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sc_mbr_trms_agr_scr_hists.
     * @param {sc_mbr_trms_agr_scr_histDeleteManyArgs} args - Arguments to filter Sc_mbr_trms_agr_scr_hists to delete.
     * @example
     * // Delete a few Sc_mbr_trms_agr_scr_hists
     * const { count } = await prisma.sc_mbr_trms_agr_scr_hist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sc_mbr_trms_agr_scr_histDeleteManyArgs>(args?: SelectSubset<T, sc_mbr_trms_agr_scr_histDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sc_mbr_trms_agr_scr_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_trms_agr_scr_histUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sc_mbr_trms_agr_scr_hists
     * const sc_mbr_trms_agr_scr_hist = await prisma.sc_mbr_trms_agr_scr_hist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sc_mbr_trms_agr_scr_histUpdateManyArgs>(args: SelectSubset<T, sc_mbr_trms_agr_scr_histUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sc_mbr_trms_agr_scr_hist.
     * @param {sc_mbr_trms_agr_scr_histUpsertArgs} args - Arguments to update or create a Sc_mbr_trms_agr_scr_hist.
     * @example
     * // Update or create a Sc_mbr_trms_agr_scr_hist
     * const sc_mbr_trms_agr_scr_hist = await prisma.sc_mbr_trms_agr_scr_hist.upsert({
     *   create: {
     *     // ... data to create a Sc_mbr_trms_agr_scr_hist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sc_mbr_trms_agr_scr_hist we want to update
     *   }
     * })
     */
    upsert<T extends sc_mbr_trms_agr_scr_histUpsertArgs>(args: SelectSubset<T, sc_mbr_trms_agr_scr_histUpsertArgs<ExtArgs>>): Prisma__sc_mbr_trms_agr_scr_histClient<$Result.GetResult<Prisma.$sc_mbr_trms_agr_scr_histPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sc_mbr_trms_agr_scr_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_trms_agr_scr_histCountArgs} args - Arguments to filter Sc_mbr_trms_agr_scr_hists to count.
     * @example
     * // Count the number of Sc_mbr_trms_agr_scr_hists
     * const count = await prisma.sc_mbr_trms_agr_scr_hist.count({
     *   where: {
     *     // ... the filter for the Sc_mbr_trms_agr_scr_hists we want to count
     *   }
     * })
    **/
    count<T extends sc_mbr_trms_agr_scr_histCountArgs>(
      args?: Subset<T, sc_mbr_trms_agr_scr_histCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sc_mbr_trms_agr_scr_histCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sc_mbr_trms_agr_scr_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sc_mbr_trms_agr_scr_histAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sc_mbr_trms_agr_scr_histAggregateArgs>(args: Subset<T, Sc_mbr_trms_agr_scr_histAggregateArgs>): Prisma.PrismaPromise<GetSc_mbr_trms_agr_scr_histAggregateType<T>>

    /**
     * Group by Sc_mbr_trms_agr_scr_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_mbr_trms_agr_scr_histGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sc_mbr_trms_agr_scr_histGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sc_mbr_trms_agr_scr_histGroupByArgs['orderBy'] }
        : { orderBy?: sc_mbr_trms_agr_scr_histGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sc_mbr_trms_agr_scr_histGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSc_mbr_trms_agr_scr_histGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sc_mbr_trms_agr_scr_hist model
   */
  readonly fields: sc_mbr_trms_agr_scr_histFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sc_mbr_trms_agr_scr_hist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sc_mbr_trms_agr_scr_histClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sc_mbr_trms_agr_scr_hist model
   */
  interface sc_mbr_trms_agr_scr_histFieldRefs {
    readonly agr_no: FieldRef<"sc_mbr_trms_agr_scr_hist", 'BigInt'>
    readonly clco_no: FieldRef<"sc_mbr_trms_agr_scr_hist", 'BigInt'>
    readonly emp_no: FieldRef<"sc_mbr_trms_agr_scr_hist", 'String'>
    readonly trms_no: FieldRef<"sc_mbr_trms_agr_scr_hist", 'BigInt'>
    readonly agr_dt: FieldRef<"sc_mbr_trms_agr_scr_hist", 'DateTime'>
    readonly regr_no: FieldRef<"sc_mbr_trms_agr_scr_hist", 'BigInt'>
    readonly reg_dt: FieldRef<"sc_mbr_trms_agr_scr_hist", 'DateTime'>
    readonly modr_no: FieldRef<"sc_mbr_trms_agr_scr_hist", 'BigInt'>
    readonly mod_dt: FieldRef<"sc_mbr_trms_agr_scr_hist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sc_mbr_trms_agr_scr_hist findUnique
   */
  export type sc_mbr_trms_agr_scr_histFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_scr_hist
     */
    select?: sc_mbr_trms_agr_scr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_scr_hist
     */
    omit?: sc_mbr_trms_agr_scr_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_trms_agr_scr_hist to fetch.
     */
    where: sc_mbr_trms_agr_scr_histWhereUniqueInput
  }

  /**
   * sc_mbr_trms_agr_scr_hist findUniqueOrThrow
   */
  export type sc_mbr_trms_agr_scr_histFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_scr_hist
     */
    select?: sc_mbr_trms_agr_scr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_scr_hist
     */
    omit?: sc_mbr_trms_agr_scr_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_trms_agr_scr_hist to fetch.
     */
    where: sc_mbr_trms_agr_scr_histWhereUniqueInput
  }

  /**
   * sc_mbr_trms_agr_scr_hist findFirst
   */
  export type sc_mbr_trms_agr_scr_histFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_scr_hist
     */
    select?: sc_mbr_trms_agr_scr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_scr_hist
     */
    omit?: sc_mbr_trms_agr_scr_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_trms_agr_scr_hist to fetch.
     */
    where?: sc_mbr_trms_agr_scr_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_trms_agr_scr_hists to fetch.
     */
    orderBy?: sc_mbr_trms_agr_scr_histOrderByWithRelationInput | sc_mbr_trms_agr_scr_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_mbr_trms_agr_scr_hists.
     */
    cursor?: sc_mbr_trms_agr_scr_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_trms_agr_scr_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_trms_agr_scr_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_mbr_trms_agr_scr_hists.
     */
    distinct?: Sc_mbr_trms_agr_scr_histScalarFieldEnum | Sc_mbr_trms_agr_scr_histScalarFieldEnum[]
  }

  /**
   * sc_mbr_trms_agr_scr_hist findFirstOrThrow
   */
  export type sc_mbr_trms_agr_scr_histFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_scr_hist
     */
    select?: sc_mbr_trms_agr_scr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_scr_hist
     */
    omit?: sc_mbr_trms_agr_scr_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_trms_agr_scr_hist to fetch.
     */
    where?: sc_mbr_trms_agr_scr_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_trms_agr_scr_hists to fetch.
     */
    orderBy?: sc_mbr_trms_agr_scr_histOrderByWithRelationInput | sc_mbr_trms_agr_scr_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_mbr_trms_agr_scr_hists.
     */
    cursor?: sc_mbr_trms_agr_scr_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_trms_agr_scr_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_trms_agr_scr_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_mbr_trms_agr_scr_hists.
     */
    distinct?: Sc_mbr_trms_agr_scr_histScalarFieldEnum | Sc_mbr_trms_agr_scr_histScalarFieldEnum[]
  }

  /**
   * sc_mbr_trms_agr_scr_hist findMany
   */
  export type sc_mbr_trms_agr_scr_histFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_scr_hist
     */
    select?: sc_mbr_trms_agr_scr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_scr_hist
     */
    omit?: sc_mbr_trms_agr_scr_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_mbr_trms_agr_scr_hists to fetch.
     */
    where?: sc_mbr_trms_agr_scr_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_mbr_trms_agr_scr_hists to fetch.
     */
    orderBy?: sc_mbr_trms_agr_scr_histOrderByWithRelationInput | sc_mbr_trms_agr_scr_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sc_mbr_trms_agr_scr_hists.
     */
    cursor?: sc_mbr_trms_agr_scr_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_mbr_trms_agr_scr_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_mbr_trms_agr_scr_hists.
     */
    skip?: number
    distinct?: Sc_mbr_trms_agr_scr_histScalarFieldEnum | Sc_mbr_trms_agr_scr_histScalarFieldEnum[]
  }

  /**
   * sc_mbr_trms_agr_scr_hist create
   */
  export type sc_mbr_trms_agr_scr_histCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_scr_hist
     */
    select?: sc_mbr_trms_agr_scr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_scr_hist
     */
    omit?: sc_mbr_trms_agr_scr_histOmit<ExtArgs> | null
    /**
     * The data needed to create a sc_mbr_trms_agr_scr_hist.
     */
    data: XOR<sc_mbr_trms_agr_scr_histCreateInput, sc_mbr_trms_agr_scr_histUncheckedCreateInput>
  }

  /**
   * sc_mbr_trms_agr_scr_hist createMany
   */
  export type sc_mbr_trms_agr_scr_histCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sc_mbr_trms_agr_scr_hists.
     */
    data: sc_mbr_trms_agr_scr_histCreateManyInput | sc_mbr_trms_agr_scr_histCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sc_mbr_trms_agr_scr_hist update
   */
  export type sc_mbr_trms_agr_scr_histUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_scr_hist
     */
    select?: sc_mbr_trms_agr_scr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_scr_hist
     */
    omit?: sc_mbr_trms_agr_scr_histOmit<ExtArgs> | null
    /**
     * The data needed to update a sc_mbr_trms_agr_scr_hist.
     */
    data: XOR<sc_mbr_trms_agr_scr_histUpdateInput, sc_mbr_trms_agr_scr_histUncheckedUpdateInput>
    /**
     * Choose, which sc_mbr_trms_agr_scr_hist to update.
     */
    where: sc_mbr_trms_agr_scr_histWhereUniqueInput
  }

  /**
   * sc_mbr_trms_agr_scr_hist updateMany
   */
  export type sc_mbr_trms_agr_scr_histUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sc_mbr_trms_agr_scr_hists.
     */
    data: XOR<sc_mbr_trms_agr_scr_histUpdateManyMutationInput, sc_mbr_trms_agr_scr_histUncheckedUpdateManyInput>
    /**
     * Filter which sc_mbr_trms_agr_scr_hists to update
     */
    where?: sc_mbr_trms_agr_scr_histWhereInput
    /**
     * Limit how many sc_mbr_trms_agr_scr_hists to update.
     */
    limit?: number
  }

  /**
   * sc_mbr_trms_agr_scr_hist upsert
   */
  export type sc_mbr_trms_agr_scr_histUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_scr_hist
     */
    select?: sc_mbr_trms_agr_scr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_scr_hist
     */
    omit?: sc_mbr_trms_agr_scr_histOmit<ExtArgs> | null
    /**
     * The filter to search for the sc_mbr_trms_agr_scr_hist to update in case it exists.
     */
    where: sc_mbr_trms_agr_scr_histWhereUniqueInput
    /**
     * In case the sc_mbr_trms_agr_scr_hist found by the `where` argument doesn't exist, create a new sc_mbr_trms_agr_scr_hist with this data.
     */
    create: XOR<sc_mbr_trms_agr_scr_histCreateInput, sc_mbr_trms_agr_scr_histUncheckedCreateInput>
    /**
     * In case the sc_mbr_trms_agr_scr_hist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sc_mbr_trms_agr_scr_histUpdateInput, sc_mbr_trms_agr_scr_histUncheckedUpdateInput>
  }

  /**
   * sc_mbr_trms_agr_scr_hist delete
   */
  export type sc_mbr_trms_agr_scr_histDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_scr_hist
     */
    select?: sc_mbr_trms_agr_scr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_scr_hist
     */
    omit?: sc_mbr_trms_agr_scr_histOmit<ExtArgs> | null
    /**
     * Filter which sc_mbr_trms_agr_scr_hist to delete.
     */
    where: sc_mbr_trms_agr_scr_histWhereUniqueInput
  }

  /**
   * sc_mbr_trms_agr_scr_hist deleteMany
   */
  export type sc_mbr_trms_agr_scr_histDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_mbr_trms_agr_scr_hists to delete
     */
    where?: sc_mbr_trms_agr_scr_histWhereInput
    /**
     * Limit how many sc_mbr_trms_agr_scr_hists to delete.
     */
    limit?: number
  }

  /**
   * sc_mbr_trms_agr_scr_hist without action
   */
  export type sc_mbr_trms_agr_scr_histDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_mbr_trms_agr_scr_hist
     */
    select?: sc_mbr_trms_agr_scr_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_mbr_trms_agr_scr_hist
     */
    omit?: sc_mbr_trms_agr_scr_histOmit<ExtArgs> | null
  }


  /**
   * Model sc_prjt
   */

  export type AggregateSc_prjt = {
    _count: Sc_prjtCountAggregateOutputType | null
    _avg: Sc_prjtAvgAggregateOutputType | null
    _sum: Sc_prjtSumAggregateOutputType | null
    _min: Sc_prjtMinAggregateOutputType | null
    _max: Sc_prjtMaxAggregateOutputType | null
  }

  export type Sc_prjtAvgAggregateOutputType = {
    prjt_no: number | null
    clco_no: number | null
    main_logo_file_mng_no: number | null
    bgng_mebi_no: number | null
    cmps_prgm_cnt: number | null
    gnrl_prtpnt_cnt: number | null
    mng_prtpnt_cnt: number | null
    gnrl_fnsr_cnt: number | null
    mng_fnsr_cnt: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sc_prjtSumAggregateOutputType = {
    prjt_no: number | null
    clco_no: number | null
    main_logo_file_mng_no: bigint | null
    bgng_mebi_no: number | null
    cmps_prgm_cnt: number | null
    gnrl_prtpnt_cnt: number | null
    mng_prtpnt_cnt: number | null
    gnrl_fnsr_cnt: number | null
    mng_fnsr_cnt: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sc_prjtMinAggregateOutputType = {
    prjt_no: number | null
    clco_no: number | null
    prjt_nm: string | null
    prjt_stts_cd: string | null
    prtc_aply_stng_tf: string | null
    prtc_aply_bgng_dt: Date | null
    prtc_aply_end_dt: Date | null
    rsvt_stng_tf: string | null
    prjt_bgng_dt: Date | null
    prjt_end_dt: Date | null
    main_logo_file_mng_no: bigint | null
    bgng_mebi_no: number | null
    cmps_prgm_cnt: number | null
    gnrl_prtpnt_cnt: number | null
    mng_prtpnt_cnt: number | null
    gnrl_fnsr_cnt: number | null
    mng_fnsr_cnt: number | null
    main_clr_val: string | null
    sub_clr_val: string | null
    add_clr_val: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sc_prjtMaxAggregateOutputType = {
    prjt_no: number | null
    clco_no: number | null
    prjt_nm: string | null
    prjt_stts_cd: string | null
    prtc_aply_stng_tf: string | null
    prtc_aply_bgng_dt: Date | null
    prtc_aply_end_dt: Date | null
    rsvt_stng_tf: string | null
    prjt_bgng_dt: Date | null
    prjt_end_dt: Date | null
    main_logo_file_mng_no: bigint | null
    bgng_mebi_no: number | null
    cmps_prgm_cnt: number | null
    gnrl_prtpnt_cnt: number | null
    mng_prtpnt_cnt: number | null
    gnrl_fnsr_cnt: number | null
    mng_fnsr_cnt: number | null
    main_clr_val: string | null
    sub_clr_val: string | null
    add_clr_val: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sc_prjtCountAggregateOutputType = {
    prjt_no: number
    clco_no: number
    prjt_nm: number
    prjt_stts_cd: number
    prtc_aply_stng_tf: number
    prtc_aply_bgng_dt: number
    prtc_aply_end_dt: number
    rsvt_stng_tf: number
    prjt_bgng_dt: number
    prjt_end_dt: number
    main_logo_file_mng_no: number
    bgng_mebi_no: number
    cmps_prgm_cnt: number
    gnrl_prtpnt_cnt: number
    mng_prtpnt_cnt: number
    gnrl_fnsr_cnt: number
    mng_fnsr_cnt: number
    main_clr_val: number
    sub_clr_val: number
    add_clr_val: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sc_prjtAvgAggregateInputType = {
    prjt_no?: true
    clco_no?: true
    main_logo_file_mng_no?: true
    bgng_mebi_no?: true
    cmps_prgm_cnt?: true
    gnrl_prtpnt_cnt?: true
    mng_prtpnt_cnt?: true
    gnrl_fnsr_cnt?: true
    mng_fnsr_cnt?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sc_prjtSumAggregateInputType = {
    prjt_no?: true
    clco_no?: true
    main_logo_file_mng_no?: true
    bgng_mebi_no?: true
    cmps_prgm_cnt?: true
    gnrl_prtpnt_cnt?: true
    mng_prtpnt_cnt?: true
    gnrl_fnsr_cnt?: true
    mng_fnsr_cnt?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sc_prjtMinAggregateInputType = {
    prjt_no?: true
    clco_no?: true
    prjt_nm?: true
    prjt_stts_cd?: true
    prtc_aply_stng_tf?: true
    prtc_aply_bgng_dt?: true
    prtc_aply_end_dt?: true
    rsvt_stng_tf?: true
    prjt_bgng_dt?: true
    prjt_end_dt?: true
    main_logo_file_mng_no?: true
    bgng_mebi_no?: true
    cmps_prgm_cnt?: true
    gnrl_prtpnt_cnt?: true
    mng_prtpnt_cnt?: true
    gnrl_fnsr_cnt?: true
    mng_fnsr_cnt?: true
    main_clr_val?: true
    sub_clr_val?: true
    add_clr_val?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sc_prjtMaxAggregateInputType = {
    prjt_no?: true
    clco_no?: true
    prjt_nm?: true
    prjt_stts_cd?: true
    prtc_aply_stng_tf?: true
    prtc_aply_bgng_dt?: true
    prtc_aply_end_dt?: true
    rsvt_stng_tf?: true
    prjt_bgng_dt?: true
    prjt_end_dt?: true
    main_logo_file_mng_no?: true
    bgng_mebi_no?: true
    cmps_prgm_cnt?: true
    gnrl_prtpnt_cnt?: true
    mng_prtpnt_cnt?: true
    gnrl_fnsr_cnt?: true
    mng_fnsr_cnt?: true
    main_clr_val?: true
    sub_clr_val?: true
    add_clr_val?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sc_prjtCountAggregateInputType = {
    prjt_no?: true
    clco_no?: true
    prjt_nm?: true
    prjt_stts_cd?: true
    prtc_aply_stng_tf?: true
    prtc_aply_bgng_dt?: true
    prtc_aply_end_dt?: true
    rsvt_stng_tf?: true
    prjt_bgng_dt?: true
    prjt_end_dt?: true
    main_logo_file_mng_no?: true
    bgng_mebi_no?: true
    cmps_prgm_cnt?: true
    gnrl_prtpnt_cnt?: true
    mng_prtpnt_cnt?: true
    gnrl_fnsr_cnt?: true
    mng_fnsr_cnt?: true
    main_clr_val?: true
    sub_clr_val?: true
    add_clr_val?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sc_prjtAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_prjt to aggregate.
     */
    where?: sc_prjtWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_prjts to fetch.
     */
    orderBy?: sc_prjtOrderByWithRelationInput | sc_prjtOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sc_prjtWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_prjts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_prjts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sc_prjts
    **/
    _count?: true | Sc_prjtCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sc_prjtAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sc_prjtSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sc_prjtMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sc_prjtMaxAggregateInputType
  }

  export type GetSc_prjtAggregateType<T extends Sc_prjtAggregateArgs> = {
        [P in keyof T & keyof AggregateSc_prjt]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSc_prjt[P]>
      : GetScalarType<T[P], AggregateSc_prjt[P]>
  }




  export type sc_prjtGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sc_prjtWhereInput
    orderBy?: sc_prjtOrderByWithAggregationInput | sc_prjtOrderByWithAggregationInput[]
    by: Sc_prjtScalarFieldEnum[] | Sc_prjtScalarFieldEnum
    having?: sc_prjtScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sc_prjtCountAggregateInputType | true
    _avg?: Sc_prjtAvgAggregateInputType
    _sum?: Sc_prjtSumAggregateInputType
    _min?: Sc_prjtMinAggregateInputType
    _max?: Sc_prjtMaxAggregateInputType
  }

  export type Sc_prjtGroupByOutputType = {
    prjt_no: number
    clco_no: number
    prjt_nm: string
    prjt_stts_cd: string
    prtc_aply_stng_tf: string
    prtc_aply_bgng_dt: Date | null
    prtc_aply_end_dt: Date | null
    rsvt_stng_tf: string
    prjt_bgng_dt: Date | null
    prjt_end_dt: Date | null
    main_logo_file_mng_no: bigint | null
    bgng_mebi_no: number
    cmps_prgm_cnt: number
    gnrl_prtpnt_cnt: number | null
    mng_prtpnt_cnt: number | null
    gnrl_fnsr_cnt: number | null
    mng_fnsr_cnt: number | null
    main_clr_val: string | null
    sub_clr_val: string | null
    add_clr_val: string | null
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sc_prjtCountAggregateOutputType | null
    _avg: Sc_prjtAvgAggregateOutputType | null
    _sum: Sc_prjtSumAggregateOutputType | null
    _min: Sc_prjtMinAggregateOutputType | null
    _max: Sc_prjtMaxAggregateOutputType | null
  }

  type GetSc_prjtGroupByPayload<T extends sc_prjtGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sc_prjtGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sc_prjtGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sc_prjtGroupByOutputType[P]>
            : GetScalarType<T[P], Sc_prjtGroupByOutputType[P]>
        }
      >
    >


  export type sc_prjtSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    prjt_no?: boolean
    clco_no?: boolean
    prjt_nm?: boolean
    prjt_stts_cd?: boolean
    prtc_aply_stng_tf?: boolean
    prtc_aply_bgng_dt?: boolean
    prtc_aply_end_dt?: boolean
    rsvt_stng_tf?: boolean
    prjt_bgng_dt?: boolean
    prjt_end_dt?: boolean
    main_logo_file_mng_no?: boolean
    bgng_mebi_no?: boolean
    cmps_prgm_cnt?: boolean
    gnrl_prtpnt_cnt?: boolean
    mng_prtpnt_cnt?: boolean
    gnrl_fnsr_cnt?: boolean
    mng_fnsr_cnt?: boolean
    main_clr_val?: boolean
    sub_clr_val?: boolean
    add_clr_val?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sc_prjt"]>



  export type sc_prjtSelectScalar = {
    prjt_no?: boolean
    clco_no?: boolean
    prjt_nm?: boolean
    prjt_stts_cd?: boolean
    prtc_aply_stng_tf?: boolean
    prtc_aply_bgng_dt?: boolean
    prtc_aply_end_dt?: boolean
    rsvt_stng_tf?: boolean
    prjt_bgng_dt?: boolean
    prjt_end_dt?: boolean
    main_logo_file_mng_no?: boolean
    bgng_mebi_no?: boolean
    cmps_prgm_cnt?: boolean
    gnrl_prtpnt_cnt?: boolean
    mng_prtpnt_cnt?: boolean
    gnrl_fnsr_cnt?: boolean
    mng_fnsr_cnt?: boolean
    main_clr_val?: boolean
    sub_clr_val?: boolean
    add_clr_val?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sc_prjtOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"prjt_no" | "clco_no" | "prjt_nm" | "prjt_stts_cd" | "prtc_aply_stng_tf" | "prtc_aply_bgng_dt" | "prtc_aply_end_dt" | "rsvt_stng_tf" | "prjt_bgng_dt" | "prjt_end_dt" | "main_logo_file_mng_no" | "bgng_mebi_no" | "cmps_prgm_cnt" | "gnrl_prtpnt_cnt" | "mng_prtpnt_cnt" | "gnrl_fnsr_cnt" | "mng_fnsr_cnt" | "main_clr_val" | "sub_clr_val" | "add_clr_val" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sc_prjt"]>

  export type $sc_prjtPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sc_prjt"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      prjt_no: number
      clco_no: number
      prjt_nm: string
      prjt_stts_cd: string
      prtc_aply_stng_tf: string
      prtc_aply_bgng_dt: Date | null
      prtc_aply_end_dt: Date | null
      rsvt_stng_tf: string
      prjt_bgng_dt: Date | null
      prjt_end_dt: Date | null
      main_logo_file_mng_no: bigint | null
      bgng_mebi_no: number
      cmps_prgm_cnt: number
      gnrl_prtpnt_cnt: number | null
      mng_prtpnt_cnt: number | null
      gnrl_fnsr_cnt: number | null
      mng_fnsr_cnt: number | null
      main_clr_val: string | null
      sub_clr_val: string | null
      add_clr_val: string | null
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sc_prjt"]>
    composites: {}
  }

  type sc_prjtGetPayload<S extends boolean | null | undefined | sc_prjtDefaultArgs> = $Result.GetResult<Prisma.$sc_prjtPayload, S>

  type sc_prjtCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sc_prjtFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sc_prjtCountAggregateInputType | true
    }

  export interface sc_prjtDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sc_prjt'], meta: { name: 'sc_prjt' } }
    /**
     * Find zero or one Sc_prjt that matches the filter.
     * @param {sc_prjtFindUniqueArgs} args - Arguments to find a Sc_prjt
     * @example
     * // Get one Sc_prjt
     * const sc_prjt = await prisma.sc_prjt.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sc_prjtFindUniqueArgs>(args: SelectSubset<T, sc_prjtFindUniqueArgs<ExtArgs>>): Prisma__sc_prjtClient<$Result.GetResult<Prisma.$sc_prjtPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sc_prjt that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sc_prjtFindUniqueOrThrowArgs} args - Arguments to find a Sc_prjt
     * @example
     * // Get one Sc_prjt
     * const sc_prjt = await prisma.sc_prjt.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sc_prjtFindUniqueOrThrowArgs>(args: SelectSubset<T, sc_prjtFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sc_prjtClient<$Result.GetResult<Prisma.$sc_prjtPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_prjt that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_prjtFindFirstArgs} args - Arguments to find a Sc_prjt
     * @example
     * // Get one Sc_prjt
     * const sc_prjt = await prisma.sc_prjt.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sc_prjtFindFirstArgs>(args?: SelectSubset<T, sc_prjtFindFirstArgs<ExtArgs>>): Prisma__sc_prjtClient<$Result.GetResult<Prisma.$sc_prjtPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_prjt that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_prjtFindFirstOrThrowArgs} args - Arguments to find a Sc_prjt
     * @example
     * // Get one Sc_prjt
     * const sc_prjt = await prisma.sc_prjt.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sc_prjtFindFirstOrThrowArgs>(args?: SelectSubset<T, sc_prjtFindFirstOrThrowArgs<ExtArgs>>): Prisma__sc_prjtClient<$Result.GetResult<Prisma.$sc_prjtPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sc_prjts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_prjtFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sc_prjts
     * const sc_prjts = await prisma.sc_prjt.findMany()
     * 
     * // Get first 10 Sc_prjts
     * const sc_prjts = await prisma.sc_prjt.findMany({ take: 10 })
     * 
     * // Only select the `prjt_no`
     * const sc_prjtWithPrjt_noOnly = await prisma.sc_prjt.findMany({ select: { prjt_no: true } })
     * 
     */
    findMany<T extends sc_prjtFindManyArgs>(args?: SelectSubset<T, sc_prjtFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sc_prjtPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sc_prjt.
     * @param {sc_prjtCreateArgs} args - Arguments to create a Sc_prjt.
     * @example
     * // Create one Sc_prjt
     * const Sc_prjt = await prisma.sc_prjt.create({
     *   data: {
     *     // ... data to create a Sc_prjt
     *   }
     * })
     * 
     */
    create<T extends sc_prjtCreateArgs>(args: SelectSubset<T, sc_prjtCreateArgs<ExtArgs>>): Prisma__sc_prjtClient<$Result.GetResult<Prisma.$sc_prjtPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sc_prjts.
     * @param {sc_prjtCreateManyArgs} args - Arguments to create many Sc_prjts.
     * @example
     * // Create many Sc_prjts
     * const sc_prjt = await prisma.sc_prjt.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sc_prjtCreateManyArgs>(args?: SelectSubset<T, sc_prjtCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sc_prjt.
     * @param {sc_prjtDeleteArgs} args - Arguments to delete one Sc_prjt.
     * @example
     * // Delete one Sc_prjt
     * const Sc_prjt = await prisma.sc_prjt.delete({
     *   where: {
     *     // ... filter to delete one Sc_prjt
     *   }
     * })
     * 
     */
    delete<T extends sc_prjtDeleteArgs>(args: SelectSubset<T, sc_prjtDeleteArgs<ExtArgs>>): Prisma__sc_prjtClient<$Result.GetResult<Prisma.$sc_prjtPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sc_prjt.
     * @param {sc_prjtUpdateArgs} args - Arguments to update one Sc_prjt.
     * @example
     * // Update one Sc_prjt
     * const sc_prjt = await prisma.sc_prjt.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sc_prjtUpdateArgs>(args: SelectSubset<T, sc_prjtUpdateArgs<ExtArgs>>): Prisma__sc_prjtClient<$Result.GetResult<Prisma.$sc_prjtPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sc_prjts.
     * @param {sc_prjtDeleteManyArgs} args - Arguments to filter Sc_prjts to delete.
     * @example
     * // Delete a few Sc_prjts
     * const { count } = await prisma.sc_prjt.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sc_prjtDeleteManyArgs>(args?: SelectSubset<T, sc_prjtDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sc_prjts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_prjtUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sc_prjts
     * const sc_prjt = await prisma.sc_prjt.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sc_prjtUpdateManyArgs>(args: SelectSubset<T, sc_prjtUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sc_prjt.
     * @param {sc_prjtUpsertArgs} args - Arguments to update or create a Sc_prjt.
     * @example
     * // Update or create a Sc_prjt
     * const sc_prjt = await prisma.sc_prjt.upsert({
     *   create: {
     *     // ... data to create a Sc_prjt
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sc_prjt we want to update
     *   }
     * })
     */
    upsert<T extends sc_prjtUpsertArgs>(args: SelectSubset<T, sc_prjtUpsertArgs<ExtArgs>>): Prisma__sc_prjtClient<$Result.GetResult<Prisma.$sc_prjtPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sc_prjts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_prjtCountArgs} args - Arguments to filter Sc_prjts to count.
     * @example
     * // Count the number of Sc_prjts
     * const count = await prisma.sc_prjt.count({
     *   where: {
     *     // ... the filter for the Sc_prjts we want to count
     *   }
     * })
    **/
    count<T extends sc_prjtCountArgs>(
      args?: Subset<T, sc_prjtCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sc_prjtCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sc_prjt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sc_prjtAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sc_prjtAggregateArgs>(args: Subset<T, Sc_prjtAggregateArgs>): Prisma.PrismaPromise<GetSc_prjtAggregateType<T>>

    /**
     * Group by Sc_prjt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_prjtGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sc_prjtGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sc_prjtGroupByArgs['orderBy'] }
        : { orderBy?: sc_prjtGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sc_prjtGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSc_prjtGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sc_prjt model
   */
  readonly fields: sc_prjtFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sc_prjt.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sc_prjtClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sc_prjt model
   */
  interface sc_prjtFieldRefs {
    readonly prjt_no: FieldRef<"sc_prjt", 'Int'>
    readonly clco_no: FieldRef<"sc_prjt", 'Int'>
    readonly prjt_nm: FieldRef<"sc_prjt", 'String'>
    readonly prjt_stts_cd: FieldRef<"sc_prjt", 'String'>
    readonly prtc_aply_stng_tf: FieldRef<"sc_prjt", 'String'>
    readonly prtc_aply_bgng_dt: FieldRef<"sc_prjt", 'DateTime'>
    readonly prtc_aply_end_dt: FieldRef<"sc_prjt", 'DateTime'>
    readonly rsvt_stng_tf: FieldRef<"sc_prjt", 'String'>
    readonly prjt_bgng_dt: FieldRef<"sc_prjt", 'DateTime'>
    readonly prjt_end_dt: FieldRef<"sc_prjt", 'DateTime'>
    readonly main_logo_file_mng_no: FieldRef<"sc_prjt", 'BigInt'>
    readonly bgng_mebi_no: FieldRef<"sc_prjt", 'Int'>
    readonly cmps_prgm_cnt: FieldRef<"sc_prjt", 'Int'>
    readonly gnrl_prtpnt_cnt: FieldRef<"sc_prjt", 'Int'>
    readonly mng_prtpnt_cnt: FieldRef<"sc_prjt", 'Int'>
    readonly gnrl_fnsr_cnt: FieldRef<"sc_prjt", 'Int'>
    readonly mng_fnsr_cnt: FieldRef<"sc_prjt", 'Int'>
    readonly main_clr_val: FieldRef<"sc_prjt", 'String'>
    readonly sub_clr_val: FieldRef<"sc_prjt", 'String'>
    readonly add_clr_val: FieldRef<"sc_prjt", 'String'>
    readonly regr_no: FieldRef<"sc_prjt", 'Int'>
    readonly reg_dt: FieldRef<"sc_prjt", 'DateTime'>
    readonly modr_no: FieldRef<"sc_prjt", 'Int'>
    readonly mod_dt: FieldRef<"sc_prjt", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sc_prjt findUnique
   */
  export type sc_prjtFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_prjt
     */
    select?: sc_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_prjt
     */
    omit?: sc_prjtOmit<ExtArgs> | null
    /**
     * Filter, which sc_prjt to fetch.
     */
    where: sc_prjtWhereUniqueInput
  }

  /**
   * sc_prjt findUniqueOrThrow
   */
  export type sc_prjtFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_prjt
     */
    select?: sc_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_prjt
     */
    omit?: sc_prjtOmit<ExtArgs> | null
    /**
     * Filter, which sc_prjt to fetch.
     */
    where: sc_prjtWhereUniqueInput
  }

  /**
   * sc_prjt findFirst
   */
  export type sc_prjtFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_prjt
     */
    select?: sc_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_prjt
     */
    omit?: sc_prjtOmit<ExtArgs> | null
    /**
     * Filter, which sc_prjt to fetch.
     */
    where?: sc_prjtWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_prjts to fetch.
     */
    orderBy?: sc_prjtOrderByWithRelationInput | sc_prjtOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_prjts.
     */
    cursor?: sc_prjtWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_prjts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_prjts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_prjts.
     */
    distinct?: Sc_prjtScalarFieldEnum | Sc_prjtScalarFieldEnum[]
  }

  /**
   * sc_prjt findFirstOrThrow
   */
  export type sc_prjtFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_prjt
     */
    select?: sc_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_prjt
     */
    omit?: sc_prjtOmit<ExtArgs> | null
    /**
     * Filter, which sc_prjt to fetch.
     */
    where?: sc_prjtWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_prjts to fetch.
     */
    orderBy?: sc_prjtOrderByWithRelationInput | sc_prjtOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_prjts.
     */
    cursor?: sc_prjtWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_prjts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_prjts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_prjts.
     */
    distinct?: Sc_prjtScalarFieldEnum | Sc_prjtScalarFieldEnum[]
  }

  /**
   * sc_prjt findMany
   */
  export type sc_prjtFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_prjt
     */
    select?: sc_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_prjt
     */
    omit?: sc_prjtOmit<ExtArgs> | null
    /**
     * Filter, which sc_prjts to fetch.
     */
    where?: sc_prjtWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_prjts to fetch.
     */
    orderBy?: sc_prjtOrderByWithRelationInput | sc_prjtOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sc_prjts.
     */
    cursor?: sc_prjtWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_prjts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_prjts.
     */
    skip?: number
    distinct?: Sc_prjtScalarFieldEnum | Sc_prjtScalarFieldEnum[]
  }

  /**
   * sc_prjt create
   */
  export type sc_prjtCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_prjt
     */
    select?: sc_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_prjt
     */
    omit?: sc_prjtOmit<ExtArgs> | null
    /**
     * The data needed to create a sc_prjt.
     */
    data: XOR<sc_prjtCreateInput, sc_prjtUncheckedCreateInput>
  }

  /**
   * sc_prjt createMany
   */
  export type sc_prjtCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sc_prjts.
     */
    data: sc_prjtCreateManyInput | sc_prjtCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sc_prjt update
   */
  export type sc_prjtUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_prjt
     */
    select?: sc_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_prjt
     */
    omit?: sc_prjtOmit<ExtArgs> | null
    /**
     * The data needed to update a sc_prjt.
     */
    data: XOR<sc_prjtUpdateInput, sc_prjtUncheckedUpdateInput>
    /**
     * Choose, which sc_prjt to update.
     */
    where: sc_prjtWhereUniqueInput
  }

  /**
   * sc_prjt updateMany
   */
  export type sc_prjtUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sc_prjts.
     */
    data: XOR<sc_prjtUpdateManyMutationInput, sc_prjtUncheckedUpdateManyInput>
    /**
     * Filter which sc_prjts to update
     */
    where?: sc_prjtWhereInput
    /**
     * Limit how many sc_prjts to update.
     */
    limit?: number
  }

  /**
   * sc_prjt upsert
   */
  export type sc_prjtUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_prjt
     */
    select?: sc_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_prjt
     */
    omit?: sc_prjtOmit<ExtArgs> | null
    /**
     * The filter to search for the sc_prjt to update in case it exists.
     */
    where: sc_prjtWhereUniqueInput
    /**
     * In case the sc_prjt found by the `where` argument doesn't exist, create a new sc_prjt with this data.
     */
    create: XOR<sc_prjtCreateInput, sc_prjtUncheckedCreateInput>
    /**
     * In case the sc_prjt was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sc_prjtUpdateInput, sc_prjtUncheckedUpdateInput>
  }

  /**
   * sc_prjt delete
   */
  export type sc_prjtDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_prjt
     */
    select?: sc_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_prjt
     */
    omit?: sc_prjtOmit<ExtArgs> | null
    /**
     * Filter which sc_prjt to delete.
     */
    where: sc_prjtWhereUniqueInput
  }

  /**
   * sc_prjt deleteMany
   */
  export type sc_prjtDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_prjts to delete
     */
    where?: sc_prjtWhereInput
    /**
     * Limit how many sc_prjts to delete.
     */
    limit?: number
  }

  /**
   * sc_prjt without action
   */
  export type sc_prjtDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_prjt
     */
    select?: sc_prjtSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_prjt
     */
    omit?: sc_prjtOmit<ExtArgs> | null
  }


  /**
   * Model sc_token_hist
   */

  export type AggregateSc_token_hist = {
    _count: Sc_token_histCountAggregateOutputType | null
    _avg: Sc_token_histAvgAggregateOutputType | null
    _sum: Sc_token_histSumAggregateOutputType | null
    _min: Sc_token_histMinAggregateOutputType | null
    _max: Sc_token_histMaxAggregateOutputType | null
  }

  export type Sc_token_histAvgAggregateOutputType = {
    token_num: number | null
  }

  export type Sc_token_histSumAggregateOutputType = {
    token_num: bigint | null
  }

  export type Sc_token_histMinAggregateOutputType = {
    token_num: bigint | null
    access_token: string | null
    expiration_time: Date | null
    reg_dt: Date | null
    mod_dt: Date | null
  }

  export type Sc_token_histMaxAggregateOutputType = {
    token_num: bigint | null
    access_token: string | null
    expiration_time: Date | null
    reg_dt: Date | null
    mod_dt: Date | null
  }

  export type Sc_token_histCountAggregateOutputType = {
    token_num: number
    access_token: number
    expiration_time: number
    reg_dt: number
    mod_dt: number
    _all: number
  }


  export type Sc_token_histAvgAggregateInputType = {
    token_num?: true
  }

  export type Sc_token_histSumAggregateInputType = {
    token_num?: true
  }

  export type Sc_token_histMinAggregateInputType = {
    token_num?: true
    access_token?: true
    expiration_time?: true
    reg_dt?: true
    mod_dt?: true
  }

  export type Sc_token_histMaxAggregateInputType = {
    token_num?: true
    access_token?: true
    expiration_time?: true
    reg_dt?: true
    mod_dt?: true
  }

  export type Sc_token_histCountAggregateInputType = {
    token_num?: true
    access_token?: true
    expiration_time?: true
    reg_dt?: true
    mod_dt?: true
    _all?: true
  }

  export type Sc_token_histAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_token_hist to aggregate.
     */
    where?: sc_token_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_token_hists to fetch.
     */
    orderBy?: sc_token_histOrderByWithRelationInput | sc_token_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sc_token_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_token_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_token_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sc_token_hists
    **/
    _count?: true | Sc_token_histCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sc_token_histAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sc_token_histSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sc_token_histMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sc_token_histMaxAggregateInputType
  }

  export type GetSc_token_histAggregateType<T extends Sc_token_histAggregateArgs> = {
        [P in keyof T & keyof AggregateSc_token_hist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSc_token_hist[P]>
      : GetScalarType<T[P], AggregateSc_token_hist[P]>
  }




  export type sc_token_histGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sc_token_histWhereInput
    orderBy?: sc_token_histOrderByWithAggregationInput | sc_token_histOrderByWithAggregationInput[]
    by: Sc_token_histScalarFieldEnum[] | Sc_token_histScalarFieldEnum
    having?: sc_token_histScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sc_token_histCountAggregateInputType | true
    _avg?: Sc_token_histAvgAggregateInputType
    _sum?: Sc_token_histSumAggregateInputType
    _min?: Sc_token_histMinAggregateInputType
    _max?: Sc_token_histMaxAggregateInputType
  }

  export type Sc_token_histGroupByOutputType = {
    token_num: bigint
    access_token: string
    expiration_time: Date
    reg_dt: Date
    mod_dt: Date
    _count: Sc_token_histCountAggregateOutputType | null
    _avg: Sc_token_histAvgAggregateOutputType | null
    _sum: Sc_token_histSumAggregateOutputType | null
    _min: Sc_token_histMinAggregateOutputType | null
    _max: Sc_token_histMaxAggregateOutputType | null
  }

  type GetSc_token_histGroupByPayload<T extends sc_token_histGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sc_token_histGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sc_token_histGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sc_token_histGroupByOutputType[P]>
            : GetScalarType<T[P], Sc_token_histGroupByOutputType[P]>
        }
      >
    >


  export type sc_token_histSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    token_num?: boolean
    access_token?: boolean
    expiration_time?: boolean
    reg_dt?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sc_token_hist"]>



  export type sc_token_histSelectScalar = {
    token_num?: boolean
    access_token?: boolean
    expiration_time?: boolean
    reg_dt?: boolean
    mod_dt?: boolean
  }

  export type sc_token_histOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"token_num" | "access_token" | "expiration_time" | "reg_dt" | "mod_dt", ExtArgs["result"]["sc_token_hist"]>

  export type $sc_token_histPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sc_token_hist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      token_num: bigint
      access_token: string
      expiration_time: Date
      reg_dt: Date
      mod_dt: Date
    }, ExtArgs["result"]["sc_token_hist"]>
    composites: {}
  }

  type sc_token_histGetPayload<S extends boolean | null | undefined | sc_token_histDefaultArgs> = $Result.GetResult<Prisma.$sc_token_histPayload, S>

  type sc_token_histCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sc_token_histFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sc_token_histCountAggregateInputType | true
    }

  export interface sc_token_histDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sc_token_hist'], meta: { name: 'sc_token_hist' } }
    /**
     * Find zero or one Sc_token_hist that matches the filter.
     * @param {sc_token_histFindUniqueArgs} args - Arguments to find a Sc_token_hist
     * @example
     * // Get one Sc_token_hist
     * const sc_token_hist = await prisma.sc_token_hist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sc_token_histFindUniqueArgs>(args: SelectSubset<T, sc_token_histFindUniqueArgs<ExtArgs>>): Prisma__sc_token_histClient<$Result.GetResult<Prisma.$sc_token_histPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sc_token_hist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sc_token_histFindUniqueOrThrowArgs} args - Arguments to find a Sc_token_hist
     * @example
     * // Get one Sc_token_hist
     * const sc_token_hist = await prisma.sc_token_hist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sc_token_histFindUniqueOrThrowArgs>(args: SelectSubset<T, sc_token_histFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sc_token_histClient<$Result.GetResult<Prisma.$sc_token_histPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_token_hist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_token_histFindFirstArgs} args - Arguments to find a Sc_token_hist
     * @example
     * // Get one Sc_token_hist
     * const sc_token_hist = await prisma.sc_token_hist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sc_token_histFindFirstArgs>(args?: SelectSubset<T, sc_token_histFindFirstArgs<ExtArgs>>): Prisma__sc_token_histClient<$Result.GetResult<Prisma.$sc_token_histPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sc_token_hist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_token_histFindFirstOrThrowArgs} args - Arguments to find a Sc_token_hist
     * @example
     * // Get one Sc_token_hist
     * const sc_token_hist = await prisma.sc_token_hist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sc_token_histFindFirstOrThrowArgs>(args?: SelectSubset<T, sc_token_histFindFirstOrThrowArgs<ExtArgs>>): Prisma__sc_token_histClient<$Result.GetResult<Prisma.$sc_token_histPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sc_token_hists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_token_histFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sc_token_hists
     * const sc_token_hists = await prisma.sc_token_hist.findMany()
     * 
     * // Get first 10 Sc_token_hists
     * const sc_token_hists = await prisma.sc_token_hist.findMany({ take: 10 })
     * 
     * // Only select the `token_num`
     * const sc_token_histWithToken_numOnly = await prisma.sc_token_hist.findMany({ select: { token_num: true } })
     * 
     */
    findMany<T extends sc_token_histFindManyArgs>(args?: SelectSubset<T, sc_token_histFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sc_token_histPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sc_token_hist.
     * @param {sc_token_histCreateArgs} args - Arguments to create a Sc_token_hist.
     * @example
     * // Create one Sc_token_hist
     * const Sc_token_hist = await prisma.sc_token_hist.create({
     *   data: {
     *     // ... data to create a Sc_token_hist
     *   }
     * })
     * 
     */
    create<T extends sc_token_histCreateArgs>(args: SelectSubset<T, sc_token_histCreateArgs<ExtArgs>>): Prisma__sc_token_histClient<$Result.GetResult<Prisma.$sc_token_histPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sc_token_hists.
     * @param {sc_token_histCreateManyArgs} args - Arguments to create many Sc_token_hists.
     * @example
     * // Create many Sc_token_hists
     * const sc_token_hist = await prisma.sc_token_hist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sc_token_histCreateManyArgs>(args?: SelectSubset<T, sc_token_histCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sc_token_hist.
     * @param {sc_token_histDeleteArgs} args - Arguments to delete one Sc_token_hist.
     * @example
     * // Delete one Sc_token_hist
     * const Sc_token_hist = await prisma.sc_token_hist.delete({
     *   where: {
     *     // ... filter to delete one Sc_token_hist
     *   }
     * })
     * 
     */
    delete<T extends sc_token_histDeleteArgs>(args: SelectSubset<T, sc_token_histDeleteArgs<ExtArgs>>): Prisma__sc_token_histClient<$Result.GetResult<Prisma.$sc_token_histPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sc_token_hist.
     * @param {sc_token_histUpdateArgs} args - Arguments to update one Sc_token_hist.
     * @example
     * // Update one Sc_token_hist
     * const sc_token_hist = await prisma.sc_token_hist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sc_token_histUpdateArgs>(args: SelectSubset<T, sc_token_histUpdateArgs<ExtArgs>>): Prisma__sc_token_histClient<$Result.GetResult<Prisma.$sc_token_histPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sc_token_hists.
     * @param {sc_token_histDeleteManyArgs} args - Arguments to filter Sc_token_hists to delete.
     * @example
     * // Delete a few Sc_token_hists
     * const { count } = await prisma.sc_token_hist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sc_token_histDeleteManyArgs>(args?: SelectSubset<T, sc_token_histDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sc_token_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_token_histUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sc_token_hists
     * const sc_token_hist = await prisma.sc_token_hist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sc_token_histUpdateManyArgs>(args: SelectSubset<T, sc_token_histUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sc_token_hist.
     * @param {sc_token_histUpsertArgs} args - Arguments to update or create a Sc_token_hist.
     * @example
     * // Update or create a Sc_token_hist
     * const sc_token_hist = await prisma.sc_token_hist.upsert({
     *   create: {
     *     // ... data to create a Sc_token_hist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sc_token_hist we want to update
     *   }
     * })
     */
    upsert<T extends sc_token_histUpsertArgs>(args: SelectSubset<T, sc_token_histUpsertArgs<ExtArgs>>): Prisma__sc_token_histClient<$Result.GetResult<Prisma.$sc_token_histPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sc_token_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_token_histCountArgs} args - Arguments to filter Sc_token_hists to count.
     * @example
     * // Count the number of Sc_token_hists
     * const count = await prisma.sc_token_hist.count({
     *   where: {
     *     // ... the filter for the Sc_token_hists we want to count
     *   }
     * })
    **/
    count<T extends sc_token_histCountArgs>(
      args?: Subset<T, sc_token_histCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sc_token_histCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sc_token_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sc_token_histAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sc_token_histAggregateArgs>(args: Subset<T, Sc_token_histAggregateArgs>): Prisma.PrismaPromise<GetSc_token_histAggregateType<T>>

    /**
     * Group by Sc_token_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sc_token_histGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sc_token_histGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sc_token_histGroupByArgs['orderBy'] }
        : { orderBy?: sc_token_histGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sc_token_histGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSc_token_histGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sc_token_hist model
   */
  readonly fields: sc_token_histFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sc_token_hist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sc_token_histClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sc_token_hist model
   */
  interface sc_token_histFieldRefs {
    readonly token_num: FieldRef<"sc_token_hist", 'BigInt'>
    readonly access_token: FieldRef<"sc_token_hist", 'String'>
    readonly expiration_time: FieldRef<"sc_token_hist", 'DateTime'>
    readonly reg_dt: FieldRef<"sc_token_hist", 'DateTime'>
    readonly mod_dt: FieldRef<"sc_token_hist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sc_token_hist findUnique
   */
  export type sc_token_histFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_token_hist
     */
    select?: sc_token_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_token_hist
     */
    omit?: sc_token_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_token_hist to fetch.
     */
    where: sc_token_histWhereUniqueInput
  }

  /**
   * sc_token_hist findUniqueOrThrow
   */
  export type sc_token_histFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_token_hist
     */
    select?: sc_token_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_token_hist
     */
    omit?: sc_token_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_token_hist to fetch.
     */
    where: sc_token_histWhereUniqueInput
  }

  /**
   * sc_token_hist findFirst
   */
  export type sc_token_histFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_token_hist
     */
    select?: sc_token_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_token_hist
     */
    omit?: sc_token_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_token_hist to fetch.
     */
    where?: sc_token_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_token_hists to fetch.
     */
    orderBy?: sc_token_histOrderByWithRelationInput | sc_token_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_token_hists.
     */
    cursor?: sc_token_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_token_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_token_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_token_hists.
     */
    distinct?: Sc_token_histScalarFieldEnum | Sc_token_histScalarFieldEnum[]
  }

  /**
   * sc_token_hist findFirstOrThrow
   */
  export type sc_token_histFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_token_hist
     */
    select?: sc_token_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_token_hist
     */
    omit?: sc_token_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_token_hist to fetch.
     */
    where?: sc_token_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_token_hists to fetch.
     */
    orderBy?: sc_token_histOrderByWithRelationInput | sc_token_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sc_token_hists.
     */
    cursor?: sc_token_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_token_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_token_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sc_token_hists.
     */
    distinct?: Sc_token_histScalarFieldEnum | Sc_token_histScalarFieldEnum[]
  }

  /**
   * sc_token_hist findMany
   */
  export type sc_token_histFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_token_hist
     */
    select?: sc_token_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_token_hist
     */
    omit?: sc_token_histOmit<ExtArgs> | null
    /**
     * Filter, which sc_token_hists to fetch.
     */
    where?: sc_token_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sc_token_hists to fetch.
     */
    orderBy?: sc_token_histOrderByWithRelationInput | sc_token_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sc_token_hists.
     */
    cursor?: sc_token_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sc_token_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sc_token_hists.
     */
    skip?: number
    distinct?: Sc_token_histScalarFieldEnum | Sc_token_histScalarFieldEnum[]
  }

  /**
   * sc_token_hist create
   */
  export type sc_token_histCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_token_hist
     */
    select?: sc_token_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_token_hist
     */
    omit?: sc_token_histOmit<ExtArgs> | null
    /**
     * The data needed to create a sc_token_hist.
     */
    data: XOR<sc_token_histCreateInput, sc_token_histUncheckedCreateInput>
  }

  /**
   * sc_token_hist createMany
   */
  export type sc_token_histCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sc_token_hists.
     */
    data: sc_token_histCreateManyInput | sc_token_histCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sc_token_hist update
   */
  export type sc_token_histUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_token_hist
     */
    select?: sc_token_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_token_hist
     */
    omit?: sc_token_histOmit<ExtArgs> | null
    /**
     * The data needed to update a sc_token_hist.
     */
    data: XOR<sc_token_histUpdateInput, sc_token_histUncheckedUpdateInput>
    /**
     * Choose, which sc_token_hist to update.
     */
    where: sc_token_histWhereUniqueInput
  }

  /**
   * sc_token_hist updateMany
   */
  export type sc_token_histUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sc_token_hists.
     */
    data: XOR<sc_token_histUpdateManyMutationInput, sc_token_histUncheckedUpdateManyInput>
    /**
     * Filter which sc_token_hists to update
     */
    where?: sc_token_histWhereInput
    /**
     * Limit how many sc_token_hists to update.
     */
    limit?: number
  }

  /**
   * sc_token_hist upsert
   */
  export type sc_token_histUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_token_hist
     */
    select?: sc_token_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_token_hist
     */
    omit?: sc_token_histOmit<ExtArgs> | null
    /**
     * The filter to search for the sc_token_hist to update in case it exists.
     */
    where: sc_token_histWhereUniqueInput
    /**
     * In case the sc_token_hist found by the `where` argument doesn't exist, create a new sc_token_hist with this data.
     */
    create: XOR<sc_token_histCreateInput, sc_token_histUncheckedCreateInput>
    /**
     * In case the sc_token_hist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sc_token_histUpdateInput, sc_token_histUncheckedUpdateInput>
  }

  /**
   * sc_token_hist delete
   */
  export type sc_token_histDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_token_hist
     */
    select?: sc_token_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_token_hist
     */
    omit?: sc_token_histOmit<ExtArgs> | null
    /**
     * Filter which sc_token_hist to delete.
     */
    where: sc_token_histWhereUniqueInput
  }

  /**
   * sc_token_hist deleteMany
   */
  export type sc_token_histDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sc_token_hists to delete
     */
    where?: sc_token_histWhereInput
    /**
     * Limit how many sc_token_hists to delete.
     */
    limit?: number
  }

  /**
   * sc_token_hist without action
   */
  export type sc_token_histDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sc_token_hist
     */
    select?: sc_token_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sc_token_hist
     */
    omit?: sc_token_histOmit<ExtArgs> | null
  }


  /**
   * Model sv_faq
   */

  export type AggregateSv_faq = {
    _count: Sv_faqCountAggregateOutputType | null
    _avg: Sv_faqAvgAggregateOutputType | null
    _sum: Sv_faqSumAggregateOutputType | null
    _min: Sv_faqMinAggregateOutputType | null
    _max: Sv_faqMaxAggregateOutputType | null
  }

  export type Sv_faqAvgAggregateOutputType = {
    faq_no: number | null
    clco_no: number | null
    progm_no: number | null
    srch_weight: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_faqSumAggregateOutputType = {
    faq_no: number | null
    clco_no: number | null
    progm_no: number | null
    srch_weight: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_faqMinAggregateOutputType = {
    faq_no: number | null
    clco_no: number | null
    progm_no: number | null
    faq_cate_cd: string | null
    expsr_div: string | null
    expsr_tf: string | null
    uprw_fix_tf: string | null
    faq_ttl: string | null
    faq_cont: string | null
    srch_weight: number | null
    mngr_memo: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_faqMaxAggregateOutputType = {
    faq_no: number | null
    clco_no: number | null
    progm_no: number | null
    faq_cate_cd: string | null
    expsr_div: string | null
    expsr_tf: string | null
    uprw_fix_tf: string | null
    faq_ttl: string | null
    faq_cont: string | null
    srch_weight: number | null
    mngr_memo: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_faqCountAggregateOutputType = {
    faq_no: number
    clco_no: number
    progm_no: number
    faq_cate_cd: number
    expsr_div: number
    expsr_tf: number
    uprw_fix_tf: number
    faq_ttl: number
    faq_cont: number
    srch_weight: number
    mngr_memo: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_faqAvgAggregateInputType = {
    faq_no?: true
    clco_no?: true
    progm_no?: true
    srch_weight?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_faqSumAggregateInputType = {
    faq_no?: true
    clco_no?: true
    progm_no?: true
    srch_weight?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_faqMinAggregateInputType = {
    faq_no?: true
    clco_no?: true
    progm_no?: true
    faq_cate_cd?: true
    expsr_div?: true
    expsr_tf?: true
    uprw_fix_tf?: true
    faq_ttl?: true
    faq_cont?: true
    srch_weight?: true
    mngr_memo?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_faqMaxAggregateInputType = {
    faq_no?: true
    clco_no?: true
    progm_no?: true
    faq_cate_cd?: true
    expsr_div?: true
    expsr_tf?: true
    uprw_fix_tf?: true
    faq_ttl?: true
    faq_cont?: true
    srch_weight?: true
    mngr_memo?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_faqCountAggregateInputType = {
    faq_no?: true
    clco_no?: true
    progm_no?: true
    faq_cate_cd?: true
    expsr_div?: true
    expsr_tf?: true
    uprw_fix_tf?: true
    faq_ttl?: true
    faq_cont?: true
    srch_weight?: true
    mngr_memo?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_faqAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_faq to aggregate.
     */
    where?: sv_faqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faqs to fetch.
     */
    orderBy?: sv_faqOrderByWithRelationInput | sv_faqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_faqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_faqs
    **/
    _count?: true | Sv_faqCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_faqAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_faqSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_faqMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_faqMaxAggregateInputType
  }

  export type GetSv_faqAggregateType<T extends Sv_faqAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_faq]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_faq[P]>
      : GetScalarType<T[P], AggregateSv_faq[P]>
  }




  export type sv_faqGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_faqWhereInput
    orderBy?: sv_faqOrderByWithAggregationInput | sv_faqOrderByWithAggregationInput[]
    by: Sv_faqScalarFieldEnum[] | Sv_faqScalarFieldEnum
    having?: sv_faqScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_faqCountAggregateInputType | true
    _avg?: Sv_faqAvgAggregateInputType
    _sum?: Sv_faqSumAggregateInputType
    _min?: Sv_faqMinAggregateInputType
    _max?: Sv_faqMaxAggregateInputType
  }

  export type Sv_faqGroupByOutputType = {
    faq_no: number
    clco_no: number
    progm_no: number
    faq_cate_cd: string
    expsr_div: string
    expsr_tf: string
    uprw_fix_tf: string
    faq_ttl: string
    faq_cont: string
    srch_weight: number
    mngr_memo: string | null
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sv_faqCountAggregateOutputType | null
    _avg: Sv_faqAvgAggregateOutputType | null
    _sum: Sv_faqSumAggregateOutputType | null
    _min: Sv_faqMinAggregateOutputType | null
    _max: Sv_faqMaxAggregateOutputType | null
  }

  type GetSv_faqGroupByPayload<T extends sv_faqGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_faqGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_faqGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_faqGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_faqGroupByOutputType[P]>
        }
      >
    >


  export type sv_faqSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    faq_no?: boolean
    clco_no?: boolean
    progm_no?: boolean
    faq_cate_cd?: boolean
    expsr_div?: boolean
    expsr_tf?: boolean
    uprw_fix_tf?: boolean
    faq_ttl?: boolean
    faq_cont?: boolean
    srch_weight?: boolean
    mngr_memo?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_faq"]>



  export type sv_faqSelectScalar = {
    faq_no?: boolean
    clco_no?: boolean
    progm_no?: boolean
    faq_cate_cd?: boolean
    expsr_div?: boolean
    expsr_tf?: boolean
    uprw_fix_tf?: boolean
    faq_ttl?: boolean
    faq_cont?: boolean
    srch_weight?: boolean
    mngr_memo?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_faqOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"faq_no" | "clco_no" | "progm_no" | "faq_cate_cd" | "expsr_div" | "expsr_tf" | "uprw_fix_tf" | "faq_ttl" | "faq_cont" | "srch_weight" | "mngr_memo" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_faq"]>

  export type $sv_faqPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_faq"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      faq_no: number
      clco_no: number
      progm_no: number
      faq_cate_cd: string
      expsr_div: string
      expsr_tf: string
      uprw_fix_tf: string
      faq_ttl: string
      faq_cont: string
      srch_weight: number
      mngr_memo: string | null
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sv_faq"]>
    composites: {}
  }

  type sv_faqGetPayload<S extends boolean | null | undefined | sv_faqDefaultArgs> = $Result.GetResult<Prisma.$sv_faqPayload, S>

  type sv_faqCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_faqFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_faqCountAggregateInputType | true
    }

  export interface sv_faqDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_faq'], meta: { name: 'sv_faq' } }
    /**
     * Find zero or one Sv_faq that matches the filter.
     * @param {sv_faqFindUniqueArgs} args - Arguments to find a Sv_faq
     * @example
     * // Get one Sv_faq
     * const sv_faq = await prisma.sv_faq.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_faqFindUniqueArgs>(args: SelectSubset<T, sv_faqFindUniqueArgs<ExtArgs>>): Prisma__sv_faqClient<$Result.GetResult<Prisma.$sv_faqPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_faq that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_faqFindUniqueOrThrowArgs} args - Arguments to find a Sv_faq
     * @example
     * // Get one Sv_faq
     * const sv_faq = await prisma.sv_faq.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_faqFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_faqFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_faqClient<$Result.GetResult<Prisma.$sv_faqPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_faq that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faqFindFirstArgs} args - Arguments to find a Sv_faq
     * @example
     * // Get one Sv_faq
     * const sv_faq = await prisma.sv_faq.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_faqFindFirstArgs>(args?: SelectSubset<T, sv_faqFindFirstArgs<ExtArgs>>): Prisma__sv_faqClient<$Result.GetResult<Prisma.$sv_faqPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_faq that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faqFindFirstOrThrowArgs} args - Arguments to find a Sv_faq
     * @example
     * // Get one Sv_faq
     * const sv_faq = await prisma.sv_faq.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_faqFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_faqFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_faqClient<$Result.GetResult<Prisma.$sv_faqPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_faqs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faqFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_faqs
     * const sv_faqs = await prisma.sv_faq.findMany()
     * 
     * // Get first 10 Sv_faqs
     * const sv_faqs = await prisma.sv_faq.findMany({ take: 10 })
     * 
     * // Only select the `faq_no`
     * const sv_faqWithFaq_noOnly = await prisma.sv_faq.findMany({ select: { faq_no: true } })
     * 
     */
    findMany<T extends sv_faqFindManyArgs>(args?: SelectSubset<T, sv_faqFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_faqPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_faq.
     * @param {sv_faqCreateArgs} args - Arguments to create a Sv_faq.
     * @example
     * // Create one Sv_faq
     * const Sv_faq = await prisma.sv_faq.create({
     *   data: {
     *     // ... data to create a Sv_faq
     *   }
     * })
     * 
     */
    create<T extends sv_faqCreateArgs>(args: SelectSubset<T, sv_faqCreateArgs<ExtArgs>>): Prisma__sv_faqClient<$Result.GetResult<Prisma.$sv_faqPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_faqs.
     * @param {sv_faqCreateManyArgs} args - Arguments to create many Sv_faqs.
     * @example
     * // Create many Sv_faqs
     * const sv_faq = await prisma.sv_faq.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_faqCreateManyArgs>(args?: SelectSubset<T, sv_faqCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_faq.
     * @param {sv_faqDeleteArgs} args - Arguments to delete one Sv_faq.
     * @example
     * // Delete one Sv_faq
     * const Sv_faq = await prisma.sv_faq.delete({
     *   where: {
     *     // ... filter to delete one Sv_faq
     *   }
     * })
     * 
     */
    delete<T extends sv_faqDeleteArgs>(args: SelectSubset<T, sv_faqDeleteArgs<ExtArgs>>): Prisma__sv_faqClient<$Result.GetResult<Prisma.$sv_faqPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_faq.
     * @param {sv_faqUpdateArgs} args - Arguments to update one Sv_faq.
     * @example
     * // Update one Sv_faq
     * const sv_faq = await prisma.sv_faq.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_faqUpdateArgs>(args: SelectSubset<T, sv_faqUpdateArgs<ExtArgs>>): Prisma__sv_faqClient<$Result.GetResult<Prisma.$sv_faqPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_faqs.
     * @param {sv_faqDeleteManyArgs} args - Arguments to filter Sv_faqs to delete.
     * @example
     * // Delete a few Sv_faqs
     * const { count } = await prisma.sv_faq.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_faqDeleteManyArgs>(args?: SelectSubset<T, sv_faqDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_faqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faqUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_faqs
     * const sv_faq = await prisma.sv_faq.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_faqUpdateManyArgs>(args: SelectSubset<T, sv_faqUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_faq.
     * @param {sv_faqUpsertArgs} args - Arguments to update or create a Sv_faq.
     * @example
     * // Update or create a Sv_faq
     * const sv_faq = await prisma.sv_faq.upsert({
     *   create: {
     *     // ... data to create a Sv_faq
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_faq we want to update
     *   }
     * })
     */
    upsert<T extends sv_faqUpsertArgs>(args: SelectSubset<T, sv_faqUpsertArgs<ExtArgs>>): Prisma__sv_faqClient<$Result.GetResult<Prisma.$sv_faqPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_faqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faqCountArgs} args - Arguments to filter Sv_faqs to count.
     * @example
     * // Count the number of Sv_faqs
     * const count = await prisma.sv_faq.count({
     *   where: {
     *     // ... the filter for the Sv_faqs we want to count
     *   }
     * })
    **/
    count<T extends sv_faqCountArgs>(
      args?: Subset<T, sv_faqCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_faqCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_faq.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_faqAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_faqAggregateArgs>(args: Subset<T, Sv_faqAggregateArgs>): Prisma.PrismaPromise<GetSv_faqAggregateType<T>>

    /**
     * Group by Sv_faq.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faqGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_faqGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_faqGroupByArgs['orderBy'] }
        : { orderBy?: sv_faqGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_faqGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_faqGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_faq model
   */
  readonly fields: sv_faqFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_faq.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_faqClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_faq model
   */
  interface sv_faqFieldRefs {
    readonly faq_no: FieldRef<"sv_faq", 'Int'>
    readonly clco_no: FieldRef<"sv_faq", 'Int'>
    readonly progm_no: FieldRef<"sv_faq", 'Int'>
    readonly faq_cate_cd: FieldRef<"sv_faq", 'String'>
    readonly expsr_div: FieldRef<"sv_faq", 'String'>
    readonly expsr_tf: FieldRef<"sv_faq", 'String'>
    readonly uprw_fix_tf: FieldRef<"sv_faq", 'String'>
    readonly faq_ttl: FieldRef<"sv_faq", 'String'>
    readonly faq_cont: FieldRef<"sv_faq", 'String'>
    readonly srch_weight: FieldRef<"sv_faq", 'Int'>
    readonly mngr_memo: FieldRef<"sv_faq", 'String'>
    readonly regr_no: FieldRef<"sv_faq", 'Int'>
    readonly reg_dt: FieldRef<"sv_faq", 'DateTime'>
    readonly modr_no: FieldRef<"sv_faq", 'Int'>
    readonly mod_dt: FieldRef<"sv_faq", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_faq findUnique
   */
  export type sv_faqFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq
     */
    select?: sv_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq
     */
    omit?: sv_faqOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq to fetch.
     */
    where: sv_faqWhereUniqueInput
  }

  /**
   * sv_faq findUniqueOrThrow
   */
  export type sv_faqFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq
     */
    select?: sv_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq
     */
    omit?: sv_faqOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq to fetch.
     */
    where: sv_faqWhereUniqueInput
  }

  /**
   * sv_faq findFirst
   */
  export type sv_faqFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq
     */
    select?: sv_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq
     */
    omit?: sv_faqOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq to fetch.
     */
    where?: sv_faqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faqs to fetch.
     */
    orderBy?: sv_faqOrderByWithRelationInput | sv_faqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_faqs.
     */
    cursor?: sv_faqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_faqs.
     */
    distinct?: Sv_faqScalarFieldEnum | Sv_faqScalarFieldEnum[]
  }

  /**
   * sv_faq findFirstOrThrow
   */
  export type sv_faqFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq
     */
    select?: sv_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq
     */
    omit?: sv_faqOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq to fetch.
     */
    where?: sv_faqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faqs to fetch.
     */
    orderBy?: sv_faqOrderByWithRelationInput | sv_faqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_faqs.
     */
    cursor?: sv_faqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_faqs.
     */
    distinct?: Sv_faqScalarFieldEnum | Sv_faqScalarFieldEnum[]
  }

  /**
   * sv_faq findMany
   */
  export type sv_faqFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq
     */
    select?: sv_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq
     */
    omit?: sv_faqOmit<ExtArgs> | null
    /**
     * Filter, which sv_faqs to fetch.
     */
    where?: sv_faqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faqs to fetch.
     */
    orderBy?: sv_faqOrderByWithRelationInput | sv_faqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_faqs.
     */
    cursor?: sv_faqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faqs.
     */
    skip?: number
    distinct?: Sv_faqScalarFieldEnum | Sv_faqScalarFieldEnum[]
  }

  /**
   * sv_faq create
   */
  export type sv_faqCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq
     */
    select?: sv_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq
     */
    omit?: sv_faqOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_faq.
     */
    data: XOR<sv_faqCreateInput, sv_faqUncheckedCreateInput>
  }

  /**
   * sv_faq createMany
   */
  export type sv_faqCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_faqs.
     */
    data: sv_faqCreateManyInput | sv_faqCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_faq update
   */
  export type sv_faqUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq
     */
    select?: sv_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq
     */
    omit?: sv_faqOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_faq.
     */
    data: XOR<sv_faqUpdateInput, sv_faqUncheckedUpdateInput>
    /**
     * Choose, which sv_faq to update.
     */
    where: sv_faqWhereUniqueInput
  }

  /**
   * sv_faq updateMany
   */
  export type sv_faqUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_faqs.
     */
    data: XOR<sv_faqUpdateManyMutationInput, sv_faqUncheckedUpdateManyInput>
    /**
     * Filter which sv_faqs to update
     */
    where?: sv_faqWhereInput
    /**
     * Limit how many sv_faqs to update.
     */
    limit?: number
  }

  /**
   * sv_faq upsert
   */
  export type sv_faqUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq
     */
    select?: sv_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq
     */
    omit?: sv_faqOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_faq to update in case it exists.
     */
    where: sv_faqWhereUniqueInput
    /**
     * In case the sv_faq found by the `where` argument doesn't exist, create a new sv_faq with this data.
     */
    create: XOR<sv_faqCreateInput, sv_faqUncheckedCreateInput>
    /**
     * In case the sv_faq was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_faqUpdateInput, sv_faqUncheckedUpdateInput>
  }

  /**
   * sv_faq delete
   */
  export type sv_faqDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq
     */
    select?: sv_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq
     */
    omit?: sv_faqOmit<ExtArgs> | null
    /**
     * Filter which sv_faq to delete.
     */
    where: sv_faqWhereUniqueInput
  }

  /**
   * sv_faq deleteMany
   */
  export type sv_faqDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_faqs to delete
     */
    where?: sv_faqWhereInput
    /**
     * Limit how many sv_faqs to delete.
     */
    limit?: number
  }

  /**
   * sv_faq without action
   */
  export type sv_faqDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq
     */
    select?: sv_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq
     */
    omit?: sv_faqOmit<ExtArgs> | null
  }


  /**
   * Model sv_faq_atch_file
   */

  export type AggregateSv_faq_atch_file = {
    _count: Sv_faq_atch_fileCountAggregateOutputType | null
    _avg: Sv_faq_atch_fileAvgAggregateOutputType | null
    _sum: Sv_faq_atch_fileSumAggregateOutputType | null
    _min: Sv_faq_atch_fileMinAggregateOutputType | null
    _max: Sv_faq_atch_fileMaxAggregateOutputType | null
  }

  export type Sv_faq_atch_fileAvgAggregateOutputType = {
    faq_file_no: number | null
    faq_no: number | null
    atch_file_mng_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_faq_atch_fileSumAggregateOutputType = {
    faq_file_no: number | null
    faq_no: number | null
    atch_file_mng_no: bigint | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_faq_atch_fileMinAggregateOutputType = {
    faq_file_no: number | null
    faq_no: number | null
    atch_file_mng_no: bigint | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_faq_atch_fileMaxAggregateOutputType = {
    faq_file_no: number | null
    faq_no: number | null
    atch_file_mng_no: bigint | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_faq_atch_fileCountAggregateOutputType = {
    faq_file_no: number
    faq_no: number
    atch_file_mng_no: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_faq_atch_fileAvgAggregateInputType = {
    faq_file_no?: true
    faq_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_faq_atch_fileSumAggregateInputType = {
    faq_file_no?: true
    faq_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_faq_atch_fileMinAggregateInputType = {
    faq_file_no?: true
    faq_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_faq_atch_fileMaxAggregateInputType = {
    faq_file_no?: true
    faq_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_faq_atch_fileCountAggregateInputType = {
    faq_file_no?: true
    faq_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_faq_atch_fileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_faq_atch_file to aggregate.
     */
    where?: sv_faq_atch_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_atch_files to fetch.
     */
    orderBy?: sv_faq_atch_fileOrderByWithRelationInput | sv_faq_atch_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_faq_atch_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_atch_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_atch_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_faq_atch_files
    **/
    _count?: true | Sv_faq_atch_fileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_faq_atch_fileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_faq_atch_fileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_faq_atch_fileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_faq_atch_fileMaxAggregateInputType
  }

  export type GetSv_faq_atch_fileAggregateType<T extends Sv_faq_atch_fileAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_faq_atch_file]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_faq_atch_file[P]>
      : GetScalarType<T[P], AggregateSv_faq_atch_file[P]>
  }




  export type sv_faq_atch_fileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_faq_atch_fileWhereInput
    orderBy?: sv_faq_atch_fileOrderByWithAggregationInput | sv_faq_atch_fileOrderByWithAggregationInput[]
    by: Sv_faq_atch_fileScalarFieldEnum[] | Sv_faq_atch_fileScalarFieldEnum
    having?: sv_faq_atch_fileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_faq_atch_fileCountAggregateInputType | true
    _avg?: Sv_faq_atch_fileAvgAggregateInputType
    _sum?: Sv_faq_atch_fileSumAggregateInputType
    _min?: Sv_faq_atch_fileMinAggregateInputType
    _max?: Sv_faq_atch_fileMaxAggregateInputType
  }

  export type Sv_faq_atch_fileGroupByOutputType = {
    faq_file_no: number
    faq_no: number
    atch_file_mng_no: bigint
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sv_faq_atch_fileCountAggregateOutputType | null
    _avg: Sv_faq_atch_fileAvgAggregateOutputType | null
    _sum: Sv_faq_atch_fileSumAggregateOutputType | null
    _min: Sv_faq_atch_fileMinAggregateOutputType | null
    _max: Sv_faq_atch_fileMaxAggregateOutputType | null
  }

  type GetSv_faq_atch_fileGroupByPayload<T extends sv_faq_atch_fileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_faq_atch_fileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_faq_atch_fileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_faq_atch_fileGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_faq_atch_fileGroupByOutputType[P]>
        }
      >
    >


  export type sv_faq_atch_fileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    faq_file_no?: boolean
    faq_no?: boolean
    atch_file_mng_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_faq_atch_file"]>



  export type sv_faq_atch_fileSelectScalar = {
    faq_file_no?: boolean
    faq_no?: boolean
    atch_file_mng_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_faq_atch_fileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"faq_file_no" | "faq_no" | "atch_file_mng_no" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_faq_atch_file"]>

  export type $sv_faq_atch_filePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_faq_atch_file"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      faq_file_no: number
      faq_no: number
      atch_file_mng_no: bigint
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sv_faq_atch_file"]>
    composites: {}
  }

  type sv_faq_atch_fileGetPayload<S extends boolean | null | undefined | sv_faq_atch_fileDefaultArgs> = $Result.GetResult<Prisma.$sv_faq_atch_filePayload, S>

  type sv_faq_atch_fileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_faq_atch_fileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_faq_atch_fileCountAggregateInputType | true
    }

  export interface sv_faq_atch_fileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_faq_atch_file'], meta: { name: 'sv_faq_atch_file' } }
    /**
     * Find zero or one Sv_faq_atch_file that matches the filter.
     * @param {sv_faq_atch_fileFindUniqueArgs} args - Arguments to find a Sv_faq_atch_file
     * @example
     * // Get one Sv_faq_atch_file
     * const sv_faq_atch_file = await prisma.sv_faq_atch_file.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_faq_atch_fileFindUniqueArgs>(args: SelectSubset<T, sv_faq_atch_fileFindUniqueArgs<ExtArgs>>): Prisma__sv_faq_atch_fileClient<$Result.GetResult<Prisma.$sv_faq_atch_filePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_faq_atch_file that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_faq_atch_fileFindUniqueOrThrowArgs} args - Arguments to find a Sv_faq_atch_file
     * @example
     * // Get one Sv_faq_atch_file
     * const sv_faq_atch_file = await prisma.sv_faq_atch_file.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_faq_atch_fileFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_faq_atch_fileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_faq_atch_fileClient<$Result.GetResult<Prisma.$sv_faq_atch_filePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_faq_atch_file that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_atch_fileFindFirstArgs} args - Arguments to find a Sv_faq_atch_file
     * @example
     * // Get one Sv_faq_atch_file
     * const sv_faq_atch_file = await prisma.sv_faq_atch_file.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_faq_atch_fileFindFirstArgs>(args?: SelectSubset<T, sv_faq_atch_fileFindFirstArgs<ExtArgs>>): Prisma__sv_faq_atch_fileClient<$Result.GetResult<Prisma.$sv_faq_atch_filePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_faq_atch_file that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_atch_fileFindFirstOrThrowArgs} args - Arguments to find a Sv_faq_atch_file
     * @example
     * // Get one Sv_faq_atch_file
     * const sv_faq_atch_file = await prisma.sv_faq_atch_file.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_faq_atch_fileFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_faq_atch_fileFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_faq_atch_fileClient<$Result.GetResult<Prisma.$sv_faq_atch_filePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_faq_atch_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_atch_fileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_faq_atch_files
     * const sv_faq_atch_files = await prisma.sv_faq_atch_file.findMany()
     * 
     * // Get first 10 Sv_faq_atch_files
     * const sv_faq_atch_files = await prisma.sv_faq_atch_file.findMany({ take: 10 })
     * 
     * // Only select the `faq_file_no`
     * const sv_faq_atch_fileWithFaq_file_noOnly = await prisma.sv_faq_atch_file.findMany({ select: { faq_file_no: true } })
     * 
     */
    findMany<T extends sv_faq_atch_fileFindManyArgs>(args?: SelectSubset<T, sv_faq_atch_fileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_faq_atch_filePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_faq_atch_file.
     * @param {sv_faq_atch_fileCreateArgs} args - Arguments to create a Sv_faq_atch_file.
     * @example
     * // Create one Sv_faq_atch_file
     * const Sv_faq_atch_file = await prisma.sv_faq_atch_file.create({
     *   data: {
     *     // ... data to create a Sv_faq_atch_file
     *   }
     * })
     * 
     */
    create<T extends sv_faq_atch_fileCreateArgs>(args: SelectSubset<T, sv_faq_atch_fileCreateArgs<ExtArgs>>): Prisma__sv_faq_atch_fileClient<$Result.GetResult<Prisma.$sv_faq_atch_filePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_faq_atch_files.
     * @param {sv_faq_atch_fileCreateManyArgs} args - Arguments to create many Sv_faq_atch_files.
     * @example
     * // Create many Sv_faq_atch_files
     * const sv_faq_atch_file = await prisma.sv_faq_atch_file.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_faq_atch_fileCreateManyArgs>(args?: SelectSubset<T, sv_faq_atch_fileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_faq_atch_file.
     * @param {sv_faq_atch_fileDeleteArgs} args - Arguments to delete one Sv_faq_atch_file.
     * @example
     * // Delete one Sv_faq_atch_file
     * const Sv_faq_atch_file = await prisma.sv_faq_atch_file.delete({
     *   where: {
     *     // ... filter to delete one Sv_faq_atch_file
     *   }
     * })
     * 
     */
    delete<T extends sv_faq_atch_fileDeleteArgs>(args: SelectSubset<T, sv_faq_atch_fileDeleteArgs<ExtArgs>>): Prisma__sv_faq_atch_fileClient<$Result.GetResult<Prisma.$sv_faq_atch_filePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_faq_atch_file.
     * @param {sv_faq_atch_fileUpdateArgs} args - Arguments to update one Sv_faq_atch_file.
     * @example
     * // Update one Sv_faq_atch_file
     * const sv_faq_atch_file = await prisma.sv_faq_atch_file.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_faq_atch_fileUpdateArgs>(args: SelectSubset<T, sv_faq_atch_fileUpdateArgs<ExtArgs>>): Prisma__sv_faq_atch_fileClient<$Result.GetResult<Prisma.$sv_faq_atch_filePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_faq_atch_files.
     * @param {sv_faq_atch_fileDeleteManyArgs} args - Arguments to filter Sv_faq_atch_files to delete.
     * @example
     * // Delete a few Sv_faq_atch_files
     * const { count } = await prisma.sv_faq_atch_file.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_faq_atch_fileDeleteManyArgs>(args?: SelectSubset<T, sv_faq_atch_fileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_faq_atch_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_atch_fileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_faq_atch_files
     * const sv_faq_atch_file = await prisma.sv_faq_atch_file.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_faq_atch_fileUpdateManyArgs>(args: SelectSubset<T, sv_faq_atch_fileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_faq_atch_file.
     * @param {sv_faq_atch_fileUpsertArgs} args - Arguments to update or create a Sv_faq_atch_file.
     * @example
     * // Update or create a Sv_faq_atch_file
     * const sv_faq_atch_file = await prisma.sv_faq_atch_file.upsert({
     *   create: {
     *     // ... data to create a Sv_faq_atch_file
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_faq_atch_file we want to update
     *   }
     * })
     */
    upsert<T extends sv_faq_atch_fileUpsertArgs>(args: SelectSubset<T, sv_faq_atch_fileUpsertArgs<ExtArgs>>): Prisma__sv_faq_atch_fileClient<$Result.GetResult<Prisma.$sv_faq_atch_filePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_faq_atch_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_atch_fileCountArgs} args - Arguments to filter Sv_faq_atch_files to count.
     * @example
     * // Count the number of Sv_faq_atch_files
     * const count = await prisma.sv_faq_atch_file.count({
     *   where: {
     *     // ... the filter for the Sv_faq_atch_files we want to count
     *   }
     * })
    **/
    count<T extends sv_faq_atch_fileCountArgs>(
      args?: Subset<T, sv_faq_atch_fileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_faq_atch_fileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_faq_atch_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_faq_atch_fileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_faq_atch_fileAggregateArgs>(args: Subset<T, Sv_faq_atch_fileAggregateArgs>): Prisma.PrismaPromise<GetSv_faq_atch_fileAggregateType<T>>

    /**
     * Group by Sv_faq_atch_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_atch_fileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_faq_atch_fileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_faq_atch_fileGroupByArgs['orderBy'] }
        : { orderBy?: sv_faq_atch_fileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_faq_atch_fileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_faq_atch_fileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_faq_atch_file model
   */
  readonly fields: sv_faq_atch_fileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_faq_atch_file.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_faq_atch_fileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_faq_atch_file model
   */
  interface sv_faq_atch_fileFieldRefs {
    readonly faq_file_no: FieldRef<"sv_faq_atch_file", 'Int'>
    readonly faq_no: FieldRef<"sv_faq_atch_file", 'Int'>
    readonly atch_file_mng_no: FieldRef<"sv_faq_atch_file", 'BigInt'>
    readonly regr_no: FieldRef<"sv_faq_atch_file", 'Int'>
    readonly reg_dt: FieldRef<"sv_faq_atch_file", 'DateTime'>
    readonly modr_no: FieldRef<"sv_faq_atch_file", 'Int'>
    readonly mod_dt: FieldRef<"sv_faq_atch_file", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_faq_atch_file findUnique
   */
  export type sv_faq_atch_fileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_atch_file
     */
    select?: sv_faq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_atch_file
     */
    omit?: sv_faq_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_atch_file to fetch.
     */
    where: sv_faq_atch_fileWhereUniqueInput
  }

  /**
   * sv_faq_atch_file findUniqueOrThrow
   */
  export type sv_faq_atch_fileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_atch_file
     */
    select?: sv_faq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_atch_file
     */
    omit?: sv_faq_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_atch_file to fetch.
     */
    where: sv_faq_atch_fileWhereUniqueInput
  }

  /**
   * sv_faq_atch_file findFirst
   */
  export type sv_faq_atch_fileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_atch_file
     */
    select?: sv_faq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_atch_file
     */
    omit?: sv_faq_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_atch_file to fetch.
     */
    where?: sv_faq_atch_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_atch_files to fetch.
     */
    orderBy?: sv_faq_atch_fileOrderByWithRelationInput | sv_faq_atch_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_faq_atch_files.
     */
    cursor?: sv_faq_atch_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_atch_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_atch_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_faq_atch_files.
     */
    distinct?: Sv_faq_atch_fileScalarFieldEnum | Sv_faq_atch_fileScalarFieldEnum[]
  }

  /**
   * sv_faq_atch_file findFirstOrThrow
   */
  export type sv_faq_atch_fileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_atch_file
     */
    select?: sv_faq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_atch_file
     */
    omit?: sv_faq_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_atch_file to fetch.
     */
    where?: sv_faq_atch_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_atch_files to fetch.
     */
    orderBy?: sv_faq_atch_fileOrderByWithRelationInput | sv_faq_atch_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_faq_atch_files.
     */
    cursor?: sv_faq_atch_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_atch_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_atch_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_faq_atch_files.
     */
    distinct?: Sv_faq_atch_fileScalarFieldEnum | Sv_faq_atch_fileScalarFieldEnum[]
  }

  /**
   * sv_faq_atch_file findMany
   */
  export type sv_faq_atch_fileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_atch_file
     */
    select?: sv_faq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_atch_file
     */
    omit?: sv_faq_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_atch_files to fetch.
     */
    where?: sv_faq_atch_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_atch_files to fetch.
     */
    orderBy?: sv_faq_atch_fileOrderByWithRelationInput | sv_faq_atch_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_faq_atch_files.
     */
    cursor?: sv_faq_atch_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_atch_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_atch_files.
     */
    skip?: number
    distinct?: Sv_faq_atch_fileScalarFieldEnum | Sv_faq_atch_fileScalarFieldEnum[]
  }

  /**
   * sv_faq_atch_file create
   */
  export type sv_faq_atch_fileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_atch_file
     */
    select?: sv_faq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_atch_file
     */
    omit?: sv_faq_atch_fileOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_faq_atch_file.
     */
    data: XOR<sv_faq_atch_fileCreateInput, sv_faq_atch_fileUncheckedCreateInput>
  }

  /**
   * sv_faq_atch_file createMany
   */
  export type sv_faq_atch_fileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_faq_atch_files.
     */
    data: sv_faq_atch_fileCreateManyInput | sv_faq_atch_fileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_faq_atch_file update
   */
  export type sv_faq_atch_fileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_atch_file
     */
    select?: sv_faq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_atch_file
     */
    omit?: sv_faq_atch_fileOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_faq_atch_file.
     */
    data: XOR<sv_faq_atch_fileUpdateInput, sv_faq_atch_fileUncheckedUpdateInput>
    /**
     * Choose, which sv_faq_atch_file to update.
     */
    where: sv_faq_atch_fileWhereUniqueInput
  }

  /**
   * sv_faq_atch_file updateMany
   */
  export type sv_faq_atch_fileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_faq_atch_files.
     */
    data: XOR<sv_faq_atch_fileUpdateManyMutationInput, sv_faq_atch_fileUncheckedUpdateManyInput>
    /**
     * Filter which sv_faq_atch_files to update
     */
    where?: sv_faq_atch_fileWhereInput
    /**
     * Limit how many sv_faq_atch_files to update.
     */
    limit?: number
  }

  /**
   * sv_faq_atch_file upsert
   */
  export type sv_faq_atch_fileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_atch_file
     */
    select?: sv_faq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_atch_file
     */
    omit?: sv_faq_atch_fileOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_faq_atch_file to update in case it exists.
     */
    where: sv_faq_atch_fileWhereUniqueInput
    /**
     * In case the sv_faq_atch_file found by the `where` argument doesn't exist, create a new sv_faq_atch_file with this data.
     */
    create: XOR<sv_faq_atch_fileCreateInput, sv_faq_atch_fileUncheckedCreateInput>
    /**
     * In case the sv_faq_atch_file was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_faq_atch_fileUpdateInput, sv_faq_atch_fileUncheckedUpdateInput>
  }

  /**
   * sv_faq_atch_file delete
   */
  export type sv_faq_atch_fileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_atch_file
     */
    select?: sv_faq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_atch_file
     */
    omit?: sv_faq_atch_fileOmit<ExtArgs> | null
    /**
     * Filter which sv_faq_atch_file to delete.
     */
    where: sv_faq_atch_fileWhereUniqueInput
  }

  /**
   * sv_faq_atch_file deleteMany
   */
  export type sv_faq_atch_fileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_faq_atch_files to delete
     */
    where?: sv_faq_atch_fileWhereInput
    /**
     * Limit how many sv_faq_atch_files to delete.
     */
    limit?: number
  }

  /**
   * sv_faq_atch_file without action
   */
  export type sv_faq_atch_fileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_atch_file
     */
    select?: sv_faq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_atch_file
     */
    omit?: sv_faq_atch_fileOmit<ExtArgs> | null
  }


  /**
   * Model sv_faq_cate_cd
   */

  export type AggregateSv_faq_cate_cd = {
    _count: Sv_faq_cate_cdCountAggregateOutputType | null
    _avg: Sv_faq_cate_cdAvgAggregateOutputType | null
    _sum: Sv_faq_cate_cdSumAggregateOutputType | null
    _min: Sv_faq_cate_cdMinAggregateOutputType | null
    _max: Sv_faq_cate_cdMaxAggregateOutputType | null
  }

  export type Sv_faq_cate_cdAvgAggregateOutputType = {
    progm_no: number | null
    clco_no: number | null
    sort_seq: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_faq_cate_cdSumAggregateOutputType = {
    progm_no: number | null
    clco_no: number | null
    sort_seq: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_faq_cate_cdMinAggregateOutputType = {
    progm_no: number | null
    cd: string | null
    cd_nm: string | null
    cd_desc: string | null
    grp_cd: string | null
    clco_no: number | null
    sort_seq: number | null
    use_tf: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_faq_cate_cdMaxAggregateOutputType = {
    progm_no: number | null
    cd: string | null
    cd_nm: string | null
    cd_desc: string | null
    grp_cd: string | null
    clco_no: number | null
    sort_seq: number | null
    use_tf: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_faq_cate_cdCountAggregateOutputType = {
    progm_no: number
    cd: number
    cd_nm: number
    cd_desc: number
    grp_cd: number
    clco_no: number
    sort_seq: number
    use_tf: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_faq_cate_cdAvgAggregateInputType = {
    progm_no?: true
    clco_no?: true
    sort_seq?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_faq_cate_cdSumAggregateInputType = {
    progm_no?: true
    clco_no?: true
    sort_seq?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_faq_cate_cdMinAggregateInputType = {
    progm_no?: true
    cd?: true
    cd_nm?: true
    cd_desc?: true
    grp_cd?: true
    clco_no?: true
    sort_seq?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_faq_cate_cdMaxAggregateInputType = {
    progm_no?: true
    cd?: true
    cd_nm?: true
    cd_desc?: true
    grp_cd?: true
    clco_no?: true
    sort_seq?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_faq_cate_cdCountAggregateInputType = {
    progm_no?: true
    cd?: true
    cd_nm?: true
    cd_desc?: true
    grp_cd?: true
    clco_no?: true
    sort_seq?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_faq_cate_cdAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_faq_cate_cd to aggregate.
     */
    where?: sv_faq_cate_cdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_cate_cds to fetch.
     */
    orderBy?: sv_faq_cate_cdOrderByWithRelationInput | sv_faq_cate_cdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_faq_cate_cdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_cate_cds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_cate_cds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_faq_cate_cds
    **/
    _count?: true | Sv_faq_cate_cdCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_faq_cate_cdAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_faq_cate_cdSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_faq_cate_cdMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_faq_cate_cdMaxAggregateInputType
  }

  export type GetSv_faq_cate_cdAggregateType<T extends Sv_faq_cate_cdAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_faq_cate_cd]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_faq_cate_cd[P]>
      : GetScalarType<T[P], AggregateSv_faq_cate_cd[P]>
  }




  export type sv_faq_cate_cdGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_faq_cate_cdWhereInput
    orderBy?: sv_faq_cate_cdOrderByWithAggregationInput | sv_faq_cate_cdOrderByWithAggregationInput[]
    by: Sv_faq_cate_cdScalarFieldEnum[] | Sv_faq_cate_cdScalarFieldEnum
    having?: sv_faq_cate_cdScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_faq_cate_cdCountAggregateInputType | true
    _avg?: Sv_faq_cate_cdAvgAggregateInputType
    _sum?: Sv_faq_cate_cdSumAggregateInputType
    _min?: Sv_faq_cate_cdMinAggregateInputType
    _max?: Sv_faq_cate_cdMaxAggregateInputType
  }

  export type Sv_faq_cate_cdGroupByOutputType = {
    progm_no: number
    cd: string
    cd_nm: string
    cd_desc: string | null
    grp_cd: string
    clco_no: number
    sort_seq: number
    use_tf: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sv_faq_cate_cdCountAggregateOutputType | null
    _avg: Sv_faq_cate_cdAvgAggregateOutputType | null
    _sum: Sv_faq_cate_cdSumAggregateOutputType | null
    _min: Sv_faq_cate_cdMinAggregateOutputType | null
    _max: Sv_faq_cate_cdMaxAggregateOutputType | null
  }

  type GetSv_faq_cate_cdGroupByPayload<T extends sv_faq_cate_cdGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_faq_cate_cdGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_faq_cate_cdGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_faq_cate_cdGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_faq_cate_cdGroupByOutputType[P]>
        }
      >
    >


  export type sv_faq_cate_cdSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    progm_no?: boolean
    cd?: boolean
    cd_nm?: boolean
    cd_desc?: boolean
    grp_cd?: boolean
    clco_no?: boolean
    sort_seq?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_faq_cate_cd"]>



  export type sv_faq_cate_cdSelectScalar = {
    progm_no?: boolean
    cd?: boolean
    cd_nm?: boolean
    cd_desc?: boolean
    grp_cd?: boolean
    clco_no?: boolean
    sort_seq?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_faq_cate_cdOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"progm_no" | "cd" | "cd_nm" | "cd_desc" | "grp_cd" | "clco_no" | "sort_seq" | "use_tf" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_faq_cate_cd"]>

  export type $sv_faq_cate_cdPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_faq_cate_cd"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      progm_no: number
      cd: string
      cd_nm: string
      cd_desc: string | null
      grp_cd: string
      clco_no: number
      sort_seq: number
      use_tf: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sv_faq_cate_cd"]>
    composites: {}
  }

  type sv_faq_cate_cdGetPayload<S extends boolean | null | undefined | sv_faq_cate_cdDefaultArgs> = $Result.GetResult<Prisma.$sv_faq_cate_cdPayload, S>

  type sv_faq_cate_cdCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_faq_cate_cdFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_faq_cate_cdCountAggregateInputType | true
    }

  export interface sv_faq_cate_cdDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_faq_cate_cd'], meta: { name: 'sv_faq_cate_cd' } }
    /**
     * Find zero or one Sv_faq_cate_cd that matches the filter.
     * @param {sv_faq_cate_cdFindUniqueArgs} args - Arguments to find a Sv_faq_cate_cd
     * @example
     * // Get one Sv_faq_cate_cd
     * const sv_faq_cate_cd = await prisma.sv_faq_cate_cd.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_faq_cate_cdFindUniqueArgs>(args: SelectSubset<T, sv_faq_cate_cdFindUniqueArgs<ExtArgs>>): Prisma__sv_faq_cate_cdClient<$Result.GetResult<Prisma.$sv_faq_cate_cdPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_faq_cate_cd that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_faq_cate_cdFindUniqueOrThrowArgs} args - Arguments to find a Sv_faq_cate_cd
     * @example
     * // Get one Sv_faq_cate_cd
     * const sv_faq_cate_cd = await prisma.sv_faq_cate_cd.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_faq_cate_cdFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_faq_cate_cdFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_faq_cate_cdClient<$Result.GetResult<Prisma.$sv_faq_cate_cdPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_faq_cate_cd that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_cate_cdFindFirstArgs} args - Arguments to find a Sv_faq_cate_cd
     * @example
     * // Get one Sv_faq_cate_cd
     * const sv_faq_cate_cd = await prisma.sv_faq_cate_cd.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_faq_cate_cdFindFirstArgs>(args?: SelectSubset<T, sv_faq_cate_cdFindFirstArgs<ExtArgs>>): Prisma__sv_faq_cate_cdClient<$Result.GetResult<Prisma.$sv_faq_cate_cdPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_faq_cate_cd that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_cate_cdFindFirstOrThrowArgs} args - Arguments to find a Sv_faq_cate_cd
     * @example
     * // Get one Sv_faq_cate_cd
     * const sv_faq_cate_cd = await prisma.sv_faq_cate_cd.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_faq_cate_cdFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_faq_cate_cdFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_faq_cate_cdClient<$Result.GetResult<Prisma.$sv_faq_cate_cdPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_faq_cate_cds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_cate_cdFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_faq_cate_cds
     * const sv_faq_cate_cds = await prisma.sv_faq_cate_cd.findMany()
     * 
     * // Get first 10 Sv_faq_cate_cds
     * const sv_faq_cate_cds = await prisma.sv_faq_cate_cd.findMany({ take: 10 })
     * 
     * // Only select the `progm_no`
     * const sv_faq_cate_cdWithProgm_noOnly = await prisma.sv_faq_cate_cd.findMany({ select: { progm_no: true } })
     * 
     */
    findMany<T extends sv_faq_cate_cdFindManyArgs>(args?: SelectSubset<T, sv_faq_cate_cdFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_faq_cate_cdPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_faq_cate_cd.
     * @param {sv_faq_cate_cdCreateArgs} args - Arguments to create a Sv_faq_cate_cd.
     * @example
     * // Create one Sv_faq_cate_cd
     * const Sv_faq_cate_cd = await prisma.sv_faq_cate_cd.create({
     *   data: {
     *     // ... data to create a Sv_faq_cate_cd
     *   }
     * })
     * 
     */
    create<T extends sv_faq_cate_cdCreateArgs>(args: SelectSubset<T, sv_faq_cate_cdCreateArgs<ExtArgs>>): Prisma__sv_faq_cate_cdClient<$Result.GetResult<Prisma.$sv_faq_cate_cdPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_faq_cate_cds.
     * @param {sv_faq_cate_cdCreateManyArgs} args - Arguments to create many Sv_faq_cate_cds.
     * @example
     * // Create many Sv_faq_cate_cds
     * const sv_faq_cate_cd = await prisma.sv_faq_cate_cd.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_faq_cate_cdCreateManyArgs>(args?: SelectSubset<T, sv_faq_cate_cdCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_faq_cate_cd.
     * @param {sv_faq_cate_cdDeleteArgs} args - Arguments to delete one Sv_faq_cate_cd.
     * @example
     * // Delete one Sv_faq_cate_cd
     * const Sv_faq_cate_cd = await prisma.sv_faq_cate_cd.delete({
     *   where: {
     *     // ... filter to delete one Sv_faq_cate_cd
     *   }
     * })
     * 
     */
    delete<T extends sv_faq_cate_cdDeleteArgs>(args: SelectSubset<T, sv_faq_cate_cdDeleteArgs<ExtArgs>>): Prisma__sv_faq_cate_cdClient<$Result.GetResult<Prisma.$sv_faq_cate_cdPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_faq_cate_cd.
     * @param {sv_faq_cate_cdUpdateArgs} args - Arguments to update one Sv_faq_cate_cd.
     * @example
     * // Update one Sv_faq_cate_cd
     * const sv_faq_cate_cd = await prisma.sv_faq_cate_cd.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_faq_cate_cdUpdateArgs>(args: SelectSubset<T, sv_faq_cate_cdUpdateArgs<ExtArgs>>): Prisma__sv_faq_cate_cdClient<$Result.GetResult<Prisma.$sv_faq_cate_cdPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_faq_cate_cds.
     * @param {sv_faq_cate_cdDeleteManyArgs} args - Arguments to filter Sv_faq_cate_cds to delete.
     * @example
     * // Delete a few Sv_faq_cate_cds
     * const { count } = await prisma.sv_faq_cate_cd.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_faq_cate_cdDeleteManyArgs>(args?: SelectSubset<T, sv_faq_cate_cdDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_faq_cate_cds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_cate_cdUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_faq_cate_cds
     * const sv_faq_cate_cd = await prisma.sv_faq_cate_cd.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_faq_cate_cdUpdateManyArgs>(args: SelectSubset<T, sv_faq_cate_cdUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_faq_cate_cd.
     * @param {sv_faq_cate_cdUpsertArgs} args - Arguments to update or create a Sv_faq_cate_cd.
     * @example
     * // Update or create a Sv_faq_cate_cd
     * const sv_faq_cate_cd = await prisma.sv_faq_cate_cd.upsert({
     *   create: {
     *     // ... data to create a Sv_faq_cate_cd
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_faq_cate_cd we want to update
     *   }
     * })
     */
    upsert<T extends sv_faq_cate_cdUpsertArgs>(args: SelectSubset<T, sv_faq_cate_cdUpsertArgs<ExtArgs>>): Prisma__sv_faq_cate_cdClient<$Result.GetResult<Prisma.$sv_faq_cate_cdPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_faq_cate_cds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_cate_cdCountArgs} args - Arguments to filter Sv_faq_cate_cds to count.
     * @example
     * // Count the number of Sv_faq_cate_cds
     * const count = await prisma.sv_faq_cate_cd.count({
     *   where: {
     *     // ... the filter for the Sv_faq_cate_cds we want to count
     *   }
     * })
    **/
    count<T extends sv_faq_cate_cdCountArgs>(
      args?: Subset<T, sv_faq_cate_cdCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_faq_cate_cdCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_faq_cate_cd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_faq_cate_cdAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_faq_cate_cdAggregateArgs>(args: Subset<T, Sv_faq_cate_cdAggregateArgs>): Prisma.PrismaPromise<GetSv_faq_cate_cdAggregateType<T>>

    /**
     * Group by Sv_faq_cate_cd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_cate_cdGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_faq_cate_cdGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_faq_cate_cdGroupByArgs['orderBy'] }
        : { orderBy?: sv_faq_cate_cdGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_faq_cate_cdGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_faq_cate_cdGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_faq_cate_cd model
   */
  readonly fields: sv_faq_cate_cdFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_faq_cate_cd.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_faq_cate_cdClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_faq_cate_cd model
   */
  interface sv_faq_cate_cdFieldRefs {
    readonly progm_no: FieldRef<"sv_faq_cate_cd", 'Int'>
    readonly cd: FieldRef<"sv_faq_cate_cd", 'String'>
    readonly cd_nm: FieldRef<"sv_faq_cate_cd", 'String'>
    readonly cd_desc: FieldRef<"sv_faq_cate_cd", 'String'>
    readonly grp_cd: FieldRef<"sv_faq_cate_cd", 'String'>
    readonly clco_no: FieldRef<"sv_faq_cate_cd", 'Int'>
    readonly sort_seq: FieldRef<"sv_faq_cate_cd", 'Int'>
    readonly use_tf: FieldRef<"sv_faq_cate_cd", 'String'>
    readonly regr_no: FieldRef<"sv_faq_cate_cd", 'Int'>
    readonly reg_dt: FieldRef<"sv_faq_cate_cd", 'DateTime'>
    readonly modr_no: FieldRef<"sv_faq_cate_cd", 'Int'>
    readonly mod_dt: FieldRef<"sv_faq_cate_cd", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_faq_cate_cd findUnique
   */
  export type sv_faq_cate_cdFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_cate_cd
     */
    select?: sv_faq_cate_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_cate_cd
     */
    omit?: sv_faq_cate_cdOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_cate_cd to fetch.
     */
    where: sv_faq_cate_cdWhereUniqueInput
  }

  /**
   * sv_faq_cate_cd findUniqueOrThrow
   */
  export type sv_faq_cate_cdFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_cate_cd
     */
    select?: sv_faq_cate_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_cate_cd
     */
    omit?: sv_faq_cate_cdOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_cate_cd to fetch.
     */
    where: sv_faq_cate_cdWhereUniqueInput
  }

  /**
   * sv_faq_cate_cd findFirst
   */
  export type sv_faq_cate_cdFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_cate_cd
     */
    select?: sv_faq_cate_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_cate_cd
     */
    omit?: sv_faq_cate_cdOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_cate_cd to fetch.
     */
    where?: sv_faq_cate_cdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_cate_cds to fetch.
     */
    orderBy?: sv_faq_cate_cdOrderByWithRelationInput | sv_faq_cate_cdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_faq_cate_cds.
     */
    cursor?: sv_faq_cate_cdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_cate_cds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_cate_cds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_faq_cate_cds.
     */
    distinct?: Sv_faq_cate_cdScalarFieldEnum | Sv_faq_cate_cdScalarFieldEnum[]
  }

  /**
   * sv_faq_cate_cd findFirstOrThrow
   */
  export type sv_faq_cate_cdFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_cate_cd
     */
    select?: sv_faq_cate_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_cate_cd
     */
    omit?: sv_faq_cate_cdOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_cate_cd to fetch.
     */
    where?: sv_faq_cate_cdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_cate_cds to fetch.
     */
    orderBy?: sv_faq_cate_cdOrderByWithRelationInput | sv_faq_cate_cdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_faq_cate_cds.
     */
    cursor?: sv_faq_cate_cdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_cate_cds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_cate_cds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_faq_cate_cds.
     */
    distinct?: Sv_faq_cate_cdScalarFieldEnum | Sv_faq_cate_cdScalarFieldEnum[]
  }

  /**
   * sv_faq_cate_cd findMany
   */
  export type sv_faq_cate_cdFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_cate_cd
     */
    select?: sv_faq_cate_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_cate_cd
     */
    omit?: sv_faq_cate_cdOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_cate_cds to fetch.
     */
    where?: sv_faq_cate_cdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_cate_cds to fetch.
     */
    orderBy?: sv_faq_cate_cdOrderByWithRelationInput | sv_faq_cate_cdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_faq_cate_cds.
     */
    cursor?: sv_faq_cate_cdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_cate_cds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_cate_cds.
     */
    skip?: number
    distinct?: Sv_faq_cate_cdScalarFieldEnum | Sv_faq_cate_cdScalarFieldEnum[]
  }

  /**
   * sv_faq_cate_cd create
   */
  export type sv_faq_cate_cdCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_cate_cd
     */
    select?: sv_faq_cate_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_cate_cd
     */
    omit?: sv_faq_cate_cdOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_faq_cate_cd.
     */
    data: XOR<sv_faq_cate_cdCreateInput, sv_faq_cate_cdUncheckedCreateInput>
  }

  /**
   * sv_faq_cate_cd createMany
   */
  export type sv_faq_cate_cdCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_faq_cate_cds.
     */
    data: sv_faq_cate_cdCreateManyInput | sv_faq_cate_cdCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_faq_cate_cd update
   */
  export type sv_faq_cate_cdUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_cate_cd
     */
    select?: sv_faq_cate_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_cate_cd
     */
    omit?: sv_faq_cate_cdOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_faq_cate_cd.
     */
    data: XOR<sv_faq_cate_cdUpdateInput, sv_faq_cate_cdUncheckedUpdateInput>
    /**
     * Choose, which sv_faq_cate_cd to update.
     */
    where: sv_faq_cate_cdWhereUniqueInput
  }

  /**
   * sv_faq_cate_cd updateMany
   */
  export type sv_faq_cate_cdUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_faq_cate_cds.
     */
    data: XOR<sv_faq_cate_cdUpdateManyMutationInput, sv_faq_cate_cdUncheckedUpdateManyInput>
    /**
     * Filter which sv_faq_cate_cds to update
     */
    where?: sv_faq_cate_cdWhereInput
    /**
     * Limit how many sv_faq_cate_cds to update.
     */
    limit?: number
  }

  /**
   * sv_faq_cate_cd upsert
   */
  export type sv_faq_cate_cdUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_cate_cd
     */
    select?: sv_faq_cate_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_cate_cd
     */
    omit?: sv_faq_cate_cdOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_faq_cate_cd to update in case it exists.
     */
    where: sv_faq_cate_cdWhereUniqueInput
    /**
     * In case the sv_faq_cate_cd found by the `where` argument doesn't exist, create a new sv_faq_cate_cd with this data.
     */
    create: XOR<sv_faq_cate_cdCreateInput, sv_faq_cate_cdUncheckedCreateInput>
    /**
     * In case the sv_faq_cate_cd was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_faq_cate_cdUpdateInput, sv_faq_cate_cdUncheckedUpdateInput>
  }

  /**
   * sv_faq_cate_cd delete
   */
  export type sv_faq_cate_cdDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_cate_cd
     */
    select?: sv_faq_cate_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_cate_cd
     */
    omit?: sv_faq_cate_cdOmit<ExtArgs> | null
    /**
     * Filter which sv_faq_cate_cd to delete.
     */
    where: sv_faq_cate_cdWhereUniqueInput
  }

  /**
   * sv_faq_cate_cd deleteMany
   */
  export type sv_faq_cate_cdDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_faq_cate_cds to delete
     */
    where?: sv_faq_cate_cdWhereInput
    /**
     * Limit how many sv_faq_cate_cds to delete.
     */
    limit?: number
  }

  /**
   * sv_faq_cate_cd without action
   */
  export type sv_faq_cate_cdDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_cate_cd
     */
    select?: sv_faq_cate_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_cate_cd
     */
    omit?: sv_faq_cate_cdOmit<ExtArgs> | null
  }


  /**
   * Model sv_faq_keyword
   */

  export type AggregateSv_faq_keyword = {
    _count: Sv_faq_keywordCountAggregateOutputType | null
    _avg: Sv_faq_keywordAvgAggregateOutputType | null
    _sum: Sv_faq_keywordSumAggregateOutputType | null
    _min: Sv_faq_keywordMinAggregateOutputType | null
    _max: Sv_faq_keywordMaxAggregateOutputType | null
  }

  export type Sv_faq_keywordAvgAggregateOutputType = {
    faq_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_faq_keywordSumAggregateOutputType = {
    faq_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_faq_keywordMinAggregateOutputType = {
    faq_no: number | null
    keyword: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_faq_keywordMaxAggregateOutputType = {
    faq_no: number | null
    keyword: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_faq_keywordCountAggregateOutputType = {
    faq_no: number
    keyword: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_faq_keywordAvgAggregateInputType = {
    faq_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_faq_keywordSumAggregateInputType = {
    faq_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_faq_keywordMinAggregateInputType = {
    faq_no?: true
    keyword?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_faq_keywordMaxAggregateInputType = {
    faq_no?: true
    keyword?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_faq_keywordCountAggregateInputType = {
    faq_no?: true
    keyword?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_faq_keywordAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_faq_keyword to aggregate.
     */
    where?: sv_faq_keywordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_keywords to fetch.
     */
    orderBy?: sv_faq_keywordOrderByWithRelationInput | sv_faq_keywordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_faq_keywordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_keywords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_keywords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_faq_keywords
    **/
    _count?: true | Sv_faq_keywordCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_faq_keywordAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_faq_keywordSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_faq_keywordMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_faq_keywordMaxAggregateInputType
  }

  export type GetSv_faq_keywordAggregateType<T extends Sv_faq_keywordAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_faq_keyword]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_faq_keyword[P]>
      : GetScalarType<T[P], AggregateSv_faq_keyword[P]>
  }




  export type sv_faq_keywordGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_faq_keywordWhereInput
    orderBy?: sv_faq_keywordOrderByWithAggregationInput | sv_faq_keywordOrderByWithAggregationInput[]
    by: Sv_faq_keywordScalarFieldEnum[] | Sv_faq_keywordScalarFieldEnum
    having?: sv_faq_keywordScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_faq_keywordCountAggregateInputType | true
    _avg?: Sv_faq_keywordAvgAggregateInputType
    _sum?: Sv_faq_keywordSumAggregateInputType
    _min?: Sv_faq_keywordMinAggregateInputType
    _max?: Sv_faq_keywordMaxAggregateInputType
  }

  export type Sv_faq_keywordGroupByOutputType = {
    faq_no: number
    keyword: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sv_faq_keywordCountAggregateOutputType | null
    _avg: Sv_faq_keywordAvgAggregateOutputType | null
    _sum: Sv_faq_keywordSumAggregateOutputType | null
    _min: Sv_faq_keywordMinAggregateOutputType | null
    _max: Sv_faq_keywordMaxAggregateOutputType | null
  }

  type GetSv_faq_keywordGroupByPayload<T extends sv_faq_keywordGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_faq_keywordGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_faq_keywordGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_faq_keywordGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_faq_keywordGroupByOutputType[P]>
        }
      >
    >


  export type sv_faq_keywordSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    faq_no?: boolean
    keyword?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_faq_keyword"]>



  export type sv_faq_keywordSelectScalar = {
    faq_no?: boolean
    keyword?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_faq_keywordOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"faq_no" | "keyword" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_faq_keyword"]>

  export type $sv_faq_keywordPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_faq_keyword"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      faq_no: number
      keyword: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sv_faq_keyword"]>
    composites: {}
  }

  type sv_faq_keywordGetPayload<S extends boolean | null | undefined | sv_faq_keywordDefaultArgs> = $Result.GetResult<Prisma.$sv_faq_keywordPayload, S>

  type sv_faq_keywordCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_faq_keywordFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_faq_keywordCountAggregateInputType | true
    }

  export interface sv_faq_keywordDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_faq_keyword'], meta: { name: 'sv_faq_keyword' } }
    /**
     * Find zero or one Sv_faq_keyword that matches the filter.
     * @param {sv_faq_keywordFindUniqueArgs} args - Arguments to find a Sv_faq_keyword
     * @example
     * // Get one Sv_faq_keyword
     * const sv_faq_keyword = await prisma.sv_faq_keyword.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_faq_keywordFindUniqueArgs>(args: SelectSubset<T, sv_faq_keywordFindUniqueArgs<ExtArgs>>): Prisma__sv_faq_keywordClient<$Result.GetResult<Prisma.$sv_faq_keywordPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_faq_keyword that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_faq_keywordFindUniqueOrThrowArgs} args - Arguments to find a Sv_faq_keyword
     * @example
     * // Get one Sv_faq_keyword
     * const sv_faq_keyword = await prisma.sv_faq_keyword.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_faq_keywordFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_faq_keywordFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_faq_keywordClient<$Result.GetResult<Prisma.$sv_faq_keywordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_faq_keyword that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_keywordFindFirstArgs} args - Arguments to find a Sv_faq_keyword
     * @example
     * // Get one Sv_faq_keyword
     * const sv_faq_keyword = await prisma.sv_faq_keyword.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_faq_keywordFindFirstArgs>(args?: SelectSubset<T, sv_faq_keywordFindFirstArgs<ExtArgs>>): Prisma__sv_faq_keywordClient<$Result.GetResult<Prisma.$sv_faq_keywordPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_faq_keyword that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_keywordFindFirstOrThrowArgs} args - Arguments to find a Sv_faq_keyword
     * @example
     * // Get one Sv_faq_keyword
     * const sv_faq_keyword = await prisma.sv_faq_keyword.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_faq_keywordFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_faq_keywordFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_faq_keywordClient<$Result.GetResult<Prisma.$sv_faq_keywordPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_faq_keywords that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_keywordFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_faq_keywords
     * const sv_faq_keywords = await prisma.sv_faq_keyword.findMany()
     * 
     * // Get first 10 Sv_faq_keywords
     * const sv_faq_keywords = await prisma.sv_faq_keyword.findMany({ take: 10 })
     * 
     * // Only select the `faq_no`
     * const sv_faq_keywordWithFaq_noOnly = await prisma.sv_faq_keyword.findMany({ select: { faq_no: true } })
     * 
     */
    findMany<T extends sv_faq_keywordFindManyArgs>(args?: SelectSubset<T, sv_faq_keywordFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_faq_keywordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_faq_keyword.
     * @param {sv_faq_keywordCreateArgs} args - Arguments to create a Sv_faq_keyword.
     * @example
     * // Create one Sv_faq_keyword
     * const Sv_faq_keyword = await prisma.sv_faq_keyword.create({
     *   data: {
     *     // ... data to create a Sv_faq_keyword
     *   }
     * })
     * 
     */
    create<T extends sv_faq_keywordCreateArgs>(args: SelectSubset<T, sv_faq_keywordCreateArgs<ExtArgs>>): Prisma__sv_faq_keywordClient<$Result.GetResult<Prisma.$sv_faq_keywordPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_faq_keywords.
     * @param {sv_faq_keywordCreateManyArgs} args - Arguments to create many Sv_faq_keywords.
     * @example
     * // Create many Sv_faq_keywords
     * const sv_faq_keyword = await prisma.sv_faq_keyword.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_faq_keywordCreateManyArgs>(args?: SelectSubset<T, sv_faq_keywordCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_faq_keyword.
     * @param {sv_faq_keywordDeleteArgs} args - Arguments to delete one Sv_faq_keyword.
     * @example
     * // Delete one Sv_faq_keyword
     * const Sv_faq_keyword = await prisma.sv_faq_keyword.delete({
     *   where: {
     *     // ... filter to delete one Sv_faq_keyword
     *   }
     * })
     * 
     */
    delete<T extends sv_faq_keywordDeleteArgs>(args: SelectSubset<T, sv_faq_keywordDeleteArgs<ExtArgs>>): Prisma__sv_faq_keywordClient<$Result.GetResult<Prisma.$sv_faq_keywordPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_faq_keyword.
     * @param {sv_faq_keywordUpdateArgs} args - Arguments to update one Sv_faq_keyword.
     * @example
     * // Update one Sv_faq_keyword
     * const sv_faq_keyword = await prisma.sv_faq_keyword.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_faq_keywordUpdateArgs>(args: SelectSubset<T, sv_faq_keywordUpdateArgs<ExtArgs>>): Prisma__sv_faq_keywordClient<$Result.GetResult<Prisma.$sv_faq_keywordPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_faq_keywords.
     * @param {sv_faq_keywordDeleteManyArgs} args - Arguments to filter Sv_faq_keywords to delete.
     * @example
     * // Delete a few Sv_faq_keywords
     * const { count } = await prisma.sv_faq_keyword.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_faq_keywordDeleteManyArgs>(args?: SelectSubset<T, sv_faq_keywordDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_faq_keywords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_keywordUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_faq_keywords
     * const sv_faq_keyword = await prisma.sv_faq_keyword.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_faq_keywordUpdateManyArgs>(args: SelectSubset<T, sv_faq_keywordUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_faq_keyword.
     * @param {sv_faq_keywordUpsertArgs} args - Arguments to update or create a Sv_faq_keyword.
     * @example
     * // Update or create a Sv_faq_keyword
     * const sv_faq_keyword = await prisma.sv_faq_keyword.upsert({
     *   create: {
     *     // ... data to create a Sv_faq_keyword
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_faq_keyword we want to update
     *   }
     * })
     */
    upsert<T extends sv_faq_keywordUpsertArgs>(args: SelectSubset<T, sv_faq_keywordUpsertArgs<ExtArgs>>): Prisma__sv_faq_keywordClient<$Result.GetResult<Prisma.$sv_faq_keywordPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_faq_keywords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_keywordCountArgs} args - Arguments to filter Sv_faq_keywords to count.
     * @example
     * // Count the number of Sv_faq_keywords
     * const count = await prisma.sv_faq_keyword.count({
     *   where: {
     *     // ... the filter for the Sv_faq_keywords we want to count
     *   }
     * })
    **/
    count<T extends sv_faq_keywordCountArgs>(
      args?: Subset<T, sv_faq_keywordCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_faq_keywordCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_faq_keyword.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_faq_keywordAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_faq_keywordAggregateArgs>(args: Subset<T, Sv_faq_keywordAggregateArgs>): Prisma.PrismaPromise<GetSv_faq_keywordAggregateType<T>>

    /**
     * Group by Sv_faq_keyword.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_keywordGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_faq_keywordGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_faq_keywordGroupByArgs['orderBy'] }
        : { orderBy?: sv_faq_keywordGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_faq_keywordGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_faq_keywordGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_faq_keyword model
   */
  readonly fields: sv_faq_keywordFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_faq_keyword.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_faq_keywordClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_faq_keyword model
   */
  interface sv_faq_keywordFieldRefs {
    readonly faq_no: FieldRef<"sv_faq_keyword", 'Int'>
    readonly keyword: FieldRef<"sv_faq_keyword", 'String'>
    readonly regr_no: FieldRef<"sv_faq_keyword", 'Int'>
    readonly reg_dt: FieldRef<"sv_faq_keyword", 'DateTime'>
    readonly modr_no: FieldRef<"sv_faq_keyword", 'Int'>
    readonly mod_dt: FieldRef<"sv_faq_keyword", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_faq_keyword findUnique
   */
  export type sv_faq_keywordFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_keyword
     */
    select?: sv_faq_keywordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_keyword
     */
    omit?: sv_faq_keywordOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_keyword to fetch.
     */
    where: sv_faq_keywordWhereUniqueInput
  }

  /**
   * sv_faq_keyword findUniqueOrThrow
   */
  export type sv_faq_keywordFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_keyword
     */
    select?: sv_faq_keywordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_keyword
     */
    omit?: sv_faq_keywordOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_keyword to fetch.
     */
    where: sv_faq_keywordWhereUniqueInput
  }

  /**
   * sv_faq_keyword findFirst
   */
  export type sv_faq_keywordFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_keyword
     */
    select?: sv_faq_keywordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_keyword
     */
    omit?: sv_faq_keywordOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_keyword to fetch.
     */
    where?: sv_faq_keywordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_keywords to fetch.
     */
    orderBy?: sv_faq_keywordOrderByWithRelationInput | sv_faq_keywordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_faq_keywords.
     */
    cursor?: sv_faq_keywordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_keywords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_keywords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_faq_keywords.
     */
    distinct?: Sv_faq_keywordScalarFieldEnum | Sv_faq_keywordScalarFieldEnum[]
  }

  /**
   * sv_faq_keyword findFirstOrThrow
   */
  export type sv_faq_keywordFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_keyword
     */
    select?: sv_faq_keywordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_keyword
     */
    omit?: sv_faq_keywordOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_keyword to fetch.
     */
    where?: sv_faq_keywordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_keywords to fetch.
     */
    orderBy?: sv_faq_keywordOrderByWithRelationInput | sv_faq_keywordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_faq_keywords.
     */
    cursor?: sv_faq_keywordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_keywords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_keywords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_faq_keywords.
     */
    distinct?: Sv_faq_keywordScalarFieldEnum | Sv_faq_keywordScalarFieldEnum[]
  }

  /**
   * sv_faq_keyword findMany
   */
  export type sv_faq_keywordFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_keyword
     */
    select?: sv_faq_keywordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_keyword
     */
    omit?: sv_faq_keywordOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_keywords to fetch.
     */
    where?: sv_faq_keywordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_keywords to fetch.
     */
    orderBy?: sv_faq_keywordOrderByWithRelationInput | sv_faq_keywordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_faq_keywords.
     */
    cursor?: sv_faq_keywordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_keywords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_keywords.
     */
    skip?: number
    distinct?: Sv_faq_keywordScalarFieldEnum | Sv_faq_keywordScalarFieldEnum[]
  }

  /**
   * sv_faq_keyword create
   */
  export type sv_faq_keywordCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_keyword
     */
    select?: sv_faq_keywordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_keyword
     */
    omit?: sv_faq_keywordOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_faq_keyword.
     */
    data: XOR<sv_faq_keywordCreateInput, sv_faq_keywordUncheckedCreateInput>
  }

  /**
   * sv_faq_keyword createMany
   */
  export type sv_faq_keywordCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_faq_keywords.
     */
    data: sv_faq_keywordCreateManyInput | sv_faq_keywordCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_faq_keyword update
   */
  export type sv_faq_keywordUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_keyword
     */
    select?: sv_faq_keywordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_keyword
     */
    omit?: sv_faq_keywordOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_faq_keyword.
     */
    data: XOR<sv_faq_keywordUpdateInput, sv_faq_keywordUncheckedUpdateInput>
    /**
     * Choose, which sv_faq_keyword to update.
     */
    where: sv_faq_keywordWhereUniqueInput
  }

  /**
   * sv_faq_keyword updateMany
   */
  export type sv_faq_keywordUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_faq_keywords.
     */
    data: XOR<sv_faq_keywordUpdateManyMutationInput, sv_faq_keywordUncheckedUpdateManyInput>
    /**
     * Filter which sv_faq_keywords to update
     */
    where?: sv_faq_keywordWhereInput
    /**
     * Limit how many sv_faq_keywords to update.
     */
    limit?: number
  }

  /**
   * sv_faq_keyword upsert
   */
  export type sv_faq_keywordUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_keyword
     */
    select?: sv_faq_keywordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_keyword
     */
    omit?: sv_faq_keywordOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_faq_keyword to update in case it exists.
     */
    where: sv_faq_keywordWhereUniqueInput
    /**
     * In case the sv_faq_keyword found by the `where` argument doesn't exist, create a new sv_faq_keyword with this data.
     */
    create: XOR<sv_faq_keywordCreateInput, sv_faq_keywordUncheckedCreateInput>
    /**
     * In case the sv_faq_keyword was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_faq_keywordUpdateInput, sv_faq_keywordUncheckedUpdateInput>
  }

  /**
   * sv_faq_keyword delete
   */
  export type sv_faq_keywordDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_keyword
     */
    select?: sv_faq_keywordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_keyword
     */
    omit?: sv_faq_keywordOmit<ExtArgs> | null
    /**
     * Filter which sv_faq_keyword to delete.
     */
    where: sv_faq_keywordWhereUniqueInput
  }

  /**
   * sv_faq_keyword deleteMany
   */
  export type sv_faq_keywordDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_faq_keywords to delete
     */
    where?: sv_faq_keywordWhereInput
    /**
     * Limit how many sv_faq_keywords to delete.
     */
    limit?: number
  }

  /**
   * sv_faq_keyword without action
   */
  export type sv_faq_keywordDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_keyword
     */
    select?: sv_faq_keywordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_keyword
     */
    omit?: sv_faq_keywordOmit<ExtArgs> | null
  }


  /**
   * Model sv_faq_rel_faq
   */

  export type AggregateSv_faq_rel_faq = {
    _count: Sv_faq_rel_faqCountAggregateOutputType | null
    _avg: Sv_faq_rel_faqAvgAggregateOutputType | null
    _sum: Sv_faq_rel_faqSumAggregateOutputType | null
    _min: Sv_faq_rel_faqMinAggregateOutputType | null
    _max: Sv_faq_rel_faqMaxAggregateOutputType | null
  }

  export type Sv_faq_rel_faqAvgAggregateOutputType = {
    faq_no: number | null
    rel_faq_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_faq_rel_faqSumAggregateOutputType = {
    faq_no: number | null
    rel_faq_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_faq_rel_faqMinAggregateOutputType = {
    faq_no: number | null
    rel_faq_no: number | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_faq_rel_faqMaxAggregateOutputType = {
    faq_no: number | null
    rel_faq_no: number | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_faq_rel_faqCountAggregateOutputType = {
    faq_no: number
    rel_faq_no: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_faq_rel_faqAvgAggregateInputType = {
    faq_no?: true
    rel_faq_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_faq_rel_faqSumAggregateInputType = {
    faq_no?: true
    rel_faq_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_faq_rel_faqMinAggregateInputType = {
    faq_no?: true
    rel_faq_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_faq_rel_faqMaxAggregateInputType = {
    faq_no?: true
    rel_faq_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_faq_rel_faqCountAggregateInputType = {
    faq_no?: true
    rel_faq_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_faq_rel_faqAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_faq_rel_faq to aggregate.
     */
    where?: sv_faq_rel_faqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_rel_faqs to fetch.
     */
    orderBy?: sv_faq_rel_faqOrderByWithRelationInput | sv_faq_rel_faqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_faq_rel_faqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_rel_faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_rel_faqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_faq_rel_faqs
    **/
    _count?: true | Sv_faq_rel_faqCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_faq_rel_faqAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_faq_rel_faqSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_faq_rel_faqMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_faq_rel_faqMaxAggregateInputType
  }

  export type GetSv_faq_rel_faqAggregateType<T extends Sv_faq_rel_faqAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_faq_rel_faq]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_faq_rel_faq[P]>
      : GetScalarType<T[P], AggregateSv_faq_rel_faq[P]>
  }




  export type sv_faq_rel_faqGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_faq_rel_faqWhereInput
    orderBy?: sv_faq_rel_faqOrderByWithAggregationInput | sv_faq_rel_faqOrderByWithAggregationInput[]
    by: Sv_faq_rel_faqScalarFieldEnum[] | Sv_faq_rel_faqScalarFieldEnum
    having?: sv_faq_rel_faqScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_faq_rel_faqCountAggregateInputType | true
    _avg?: Sv_faq_rel_faqAvgAggregateInputType
    _sum?: Sv_faq_rel_faqSumAggregateInputType
    _min?: Sv_faq_rel_faqMinAggregateInputType
    _max?: Sv_faq_rel_faqMaxAggregateInputType
  }

  export type Sv_faq_rel_faqGroupByOutputType = {
    faq_no: number
    rel_faq_no: number
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sv_faq_rel_faqCountAggregateOutputType | null
    _avg: Sv_faq_rel_faqAvgAggregateOutputType | null
    _sum: Sv_faq_rel_faqSumAggregateOutputType | null
    _min: Sv_faq_rel_faqMinAggregateOutputType | null
    _max: Sv_faq_rel_faqMaxAggregateOutputType | null
  }

  type GetSv_faq_rel_faqGroupByPayload<T extends sv_faq_rel_faqGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_faq_rel_faqGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_faq_rel_faqGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_faq_rel_faqGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_faq_rel_faqGroupByOutputType[P]>
        }
      >
    >


  export type sv_faq_rel_faqSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    faq_no?: boolean
    rel_faq_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_faq_rel_faq"]>



  export type sv_faq_rel_faqSelectScalar = {
    faq_no?: boolean
    rel_faq_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_faq_rel_faqOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"faq_no" | "rel_faq_no" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_faq_rel_faq"]>

  export type $sv_faq_rel_faqPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_faq_rel_faq"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      faq_no: number
      rel_faq_no: number
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sv_faq_rel_faq"]>
    composites: {}
  }

  type sv_faq_rel_faqGetPayload<S extends boolean | null | undefined | sv_faq_rel_faqDefaultArgs> = $Result.GetResult<Prisma.$sv_faq_rel_faqPayload, S>

  type sv_faq_rel_faqCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_faq_rel_faqFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_faq_rel_faqCountAggregateInputType | true
    }

  export interface sv_faq_rel_faqDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_faq_rel_faq'], meta: { name: 'sv_faq_rel_faq' } }
    /**
     * Find zero or one Sv_faq_rel_faq that matches the filter.
     * @param {sv_faq_rel_faqFindUniqueArgs} args - Arguments to find a Sv_faq_rel_faq
     * @example
     * // Get one Sv_faq_rel_faq
     * const sv_faq_rel_faq = await prisma.sv_faq_rel_faq.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_faq_rel_faqFindUniqueArgs>(args: SelectSubset<T, sv_faq_rel_faqFindUniqueArgs<ExtArgs>>): Prisma__sv_faq_rel_faqClient<$Result.GetResult<Prisma.$sv_faq_rel_faqPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_faq_rel_faq that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_faq_rel_faqFindUniqueOrThrowArgs} args - Arguments to find a Sv_faq_rel_faq
     * @example
     * // Get one Sv_faq_rel_faq
     * const sv_faq_rel_faq = await prisma.sv_faq_rel_faq.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_faq_rel_faqFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_faq_rel_faqFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_faq_rel_faqClient<$Result.GetResult<Prisma.$sv_faq_rel_faqPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_faq_rel_faq that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_rel_faqFindFirstArgs} args - Arguments to find a Sv_faq_rel_faq
     * @example
     * // Get one Sv_faq_rel_faq
     * const sv_faq_rel_faq = await prisma.sv_faq_rel_faq.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_faq_rel_faqFindFirstArgs>(args?: SelectSubset<T, sv_faq_rel_faqFindFirstArgs<ExtArgs>>): Prisma__sv_faq_rel_faqClient<$Result.GetResult<Prisma.$sv_faq_rel_faqPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_faq_rel_faq that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_rel_faqFindFirstOrThrowArgs} args - Arguments to find a Sv_faq_rel_faq
     * @example
     * // Get one Sv_faq_rel_faq
     * const sv_faq_rel_faq = await prisma.sv_faq_rel_faq.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_faq_rel_faqFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_faq_rel_faqFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_faq_rel_faqClient<$Result.GetResult<Prisma.$sv_faq_rel_faqPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_faq_rel_faqs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_rel_faqFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_faq_rel_faqs
     * const sv_faq_rel_faqs = await prisma.sv_faq_rel_faq.findMany()
     * 
     * // Get first 10 Sv_faq_rel_faqs
     * const sv_faq_rel_faqs = await prisma.sv_faq_rel_faq.findMany({ take: 10 })
     * 
     * // Only select the `faq_no`
     * const sv_faq_rel_faqWithFaq_noOnly = await prisma.sv_faq_rel_faq.findMany({ select: { faq_no: true } })
     * 
     */
    findMany<T extends sv_faq_rel_faqFindManyArgs>(args?: SelectSubset<T, sv_faq_rel_faqFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_faq_rel_faqPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_faq_rel_faq.
     * @param {sv_faq_rel_faqCreateArgs} args - Arguments to create a Sv_faq_rel_faq.
     * @example
     * // Create one Sv_faq_rel_faq
     * const Sv_faq_rel_faq = await prisma.sv_faq_rel_faq.create({
     *   data: {
     *     // ... data to create a Sv_faq_rel_faq
     *   }
     * })
     * 
     */
    create<T extends sv_faq_rel_faqCreateArgs>(args: SelectSubset<T, sv_faq_rel_faqCreateArgs<ExtArgs>>): Prisma__sv_faq_rel_faqClient<$Result.GetResult<Prisma.$sv_faq_rel_faqPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_faq_rel_faqs.
     * @param {sv_faq_rel_faqCreateManyArgs} args - Arguments to create many Sv_faq_rel_faqs.
     * @example
     * // Create many Sv_faq_rel_faqs
     * const sv_faq_rel_faq = await prisma.sv_faq_rel_faq.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_faq_rel_faqCreateManyArgs>(args?: SelectSubset<T, sv_faq_rel_faqCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_faq_rel_faq.
     * @param {sv_faq_rel_faqDeleteArgs} args - Arguments to delete one Sv_faq_rel_faq.
     * @example
     * // Delete one Sv_faq_rel_faq
     * const Sv_faq_rel_faq = await prisma.sv_faq_rel_faq.delete({
     *   where: {
     *     // ... filter to delete one Sv_faq_rel_faq
     *   }
     * })
     * 
     */
    delete<T extends sv_faq_rel_faqDeleteArgs>(args: SelectSubset<T, sv_faq_rel_faqDeleteArgs<ExtArgs>>): Prisma__sv_faq_rel_faqClient<$Result.GetResult<Prisma.$sv_faq_rel_faqPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_faq_rel_faq.
     * @param {sv_faq_rel_faqUpdateArgs} args - Arguments to update one Sv_faq_rel_faq.
     * @example
     * // Update one Sv_faq_rel_faq
     * const sv_faq_rel_faq = await prisma.sv_faq_rel_faq.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_faq_rel_faqUpdateArgs>(args: SelectSubset<T, sv_faq_rel_faqUpdateArgs<ExtArgs>>): Prisma__sv_faq_rel_faqClient<$Result.GetResult<Prisma.$sv_faq_rel_faqPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_faq_rel_faqs.
     * @param {sv_faq_rel_faqDeleteManyArgs} args - Arguments to filter Sv_faq_rel_faqs to delete.
     * @example
     * // Delete a few Sv_faq_rel_faqs
     * const { count } = await prisma.sv_faq_rel_faq.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_faq_rel_faqDeleteManyArgs>(args?: SelectSubset<T, sv_faq_rel_faqDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_faq_rel_faqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_rel_faqUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_faq_rel_faqs
     * const sv_faq_rel_faq = await prisma.sv_faq_rel_faq.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_faq_rel_faqUpdateManyArgs>(args: SelectSubset<T, sv_faq_rel_faqUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_faq_rel_faq.
     * @param {sv_faq_rel_faqUpsertArgs} args - Arguments to update or create a Sv_faq_rel_faq.
     * @example
     * // Update or create a Sv_faq_rel_faq
     * const sv_faq_rel_faq = await prisma.sv_faq_rel_faq.upsert({
     *   create: {
     *     // ... data to create a Sv_faq_rel_faq
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_faq_rel_faq we want to update
     *   }
     * })
     */
    upsert<T extends sv_faq_rel_faqUpsertArgs>(args: SelectSubset<T, sv_faq_rel_faqUpsertArgs<ExtArgs>>): Prisma__sv_faq_rel_faqClient<$Result.GetResult<Prisma.$sv_faq_rel_faqPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_faq_rel_faqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_rel_faqCountArgs} args - Arguments to filter Sv_faq_rel_faqs to count.
     * @example
     * // Count the number of Sv_faq_rel_faqs
     * const count = await prisma.sv_faq_rel_faq.count({
     *   where: {
     *     // ... the filter for the Sv_faq_rel_faqs we want to count
     *   }
     * })
    **/
    count<T extends sv_faq_rel_faqCountArgs>(
      args?: Subset<T, sv_faq_rel_faqCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_faq_rel_faqCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_faq_rel_faq.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_faq_rel_faqAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_faq_rel_faqAggregateArgs>(args: Subset<T, Sv_faq_rel_faqAggregateArgs>): Prisma.PrismaPromise<GetSv_faq_rel_faqAggregateType<T>>

    /**
     * Group by Sv_faq_rel_faq.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_faq_rel_faqGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_faq_rel_faqGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_faq_rel_faqGroupByArgs['orderBy'] }
        : { orderBy?: sv_faq_rel_faqGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_faq_rel_faqGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_faq_rel_faqGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_faq_rel_faq model
   */
  readonly fields: sv_faq_rel_faqFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_faq_rel_faq.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_faq_rel_faqClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_faq_rel_faq model
   */
  interface sv_faq_rel_faqFieldRefs {
    readonly faq_no: FieldRef<"sv_faq_rel_faq", 'Int'>
    readonly rel_faq_no: FieldRef<"sv_faq_rel_faq", 'Int'>
    readonly regr_no: FieldRef<"sv_faq_rel_faq", 'Int'>
    readonly reg_dt: FieldRef<"sv_faq_rel_faq", 'DateTime'>
    readonly modr_no: FieldRef<"sv_faq_rel_faq", 'Int'>
    readonly mod_dt: FieldRef<"sv_faq_rel_faq", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_faq_rel_faq findUnique
   */
  export type sv_faq_rel_faqFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_rel_faq
     */
    select?: sv_faq_rel_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_rel_faq
     */
    omit?: sv_faq_rel_faqOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_rel_faq to fetch.
     */
    where: sv_faq_rel_faqWhereUniqueInput
  }

  /**
   * sv_faq_rel_faq findUniqueOrThrow
   */
  export type sv_faq_rel_faqFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_rel_faq
     */
    select?: sv_faq_rel_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_rel_faq
     */
    omit?: sv_faq_rel_faqOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_rel_faq to fetch.
     */
    where: sv_faq_rel_faqWhereUniqueInput
  }

  /**
   * sv_faq_rel_faq findFirst
   */
  export type sv_faq_rel_faqFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_rel_faq
     */
    select?: sv_faq_rel_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_rel_faq
     */
    omit?: sv_faq_rel_faqOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_rel_faq to fetch.
     */
    where?: sv_faq_rel_faqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_rel_faqs to fetch.
     */
    orderBy?: sv_faq_rel_faqOrderByWithRelationInput | sv_faq_rel_faqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_faq_rel_faqs.
     */
    cursor?: sv_faq_rel_faqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_rel_faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_rel_faqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_faq_rel_faqs.
     */
    distinct?: Sv_faq_rel_faqScalarFieldEnum | Sv_faq_rel_faqScalarFieldEnum[]
  }

  /**
   * sv_faq_rel_faq findFirstOrThrow
   */
  export type sv_faq_rel_faqFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_rel_faq
     */
    select?: sv_faq_rel_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_rel_faq
     */
    omit?: sv_faq_rel_faqOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_rel_faq to fetch.
     */
    where?: sv_faq_rel_faqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_rel_faqs to fetch.
     */
    orderBy?: sv_faq_rel_faqOrderByWithRelationInput | sv_faq_rel_faqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_faq_rel_faqs.
     */
    cursor?: sv_faq_rel_faqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_rel_faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_rel_faqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_faq_rel_faqs.
     */
    distinct?: Sv_faq_rel_faqScalarFieldEnum | Sv_faq_rel_faqScalarFieldEnum[]
  }

  /**
   * sv_faq_rel_faq findMany
   */
  export type sv_faq_rel_faqFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_rel_faq
     */
    select?: sv_faq_rel_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_rel_faq
     */
    omit?: sv_faq_rel_faqOmit<ExtArgs> | null
    /**
     * Filter, which sv_faq_rel_faqs to fetch.
     */
    where?: sv_faq_rel_faqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_faq_rel_faqs to fetch.
     */
    orderBy?: sv_faq_rel_faqOrderByWithRelationInput | sv_faq_rel_faqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_faq_rel_faqs.
     */
    cursor?: sv_faq_rel_faqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_faq_rel_faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_faq_rel_faqs.
     */
    skip?: number
    distinct?: Sv_faq_rel_faqScalarFieldEnum | Sv_faq_rel_faqScalarFieldEnum[]
  }

  /**
   * sv_faq_rel_faq create
   */
  export type sv_faq_rel_faqCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_rel_faq
     */
    select?: sv_faq_rel_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_rel_faq
     */
    omit?: sv_faq_rel_faqOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_faq_rel_faq.
     */
    data: XOR<sv_faq_rel_faqCreateInput, sv_faq_rel_faqUncheckedCreateInput>
  }

  /**
   * sv_faq_rel_faq createMany
   */
  export type sv_faq_rel_faqCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_faq_rel_faqs.
     */
    data: sv_faq_rel_faqCreateManyInput | sv_faq_rel_faqCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_faq_rel_faq update
   */
  export type sv_faq_rel_faqUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_rel_faq
     */
    select?: sv_faq_rel_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_rel_faq
     */
    omit?: sv_faq_rel_faqOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_faq_rel_faq.
     */
    data: XOR<sv_faq_rel_faqUpdateInput, sv_faq_rel_faqUncheckedUpdateInput>
    /**
     * Choose, which sv_faq_rel_faq to update.
     */
    where: sv_faq_rel_faqWhereUniqueInput
  }

  /**
   * sv_faq_rel_faq updateMany
   */
  export type sv_faq_rel_faqUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_faq_rel_faqs.
     */
    data: XOR<sv_faq_rel_faqUpdateManyMutationInput, sv_faq_rel_faqUncheckedUpdateManyInput>
    /**
     * Filter which sv_faq_rel_faqs to update
     */
    where?: sv_faq_rel_faqWhereInput
    /**
     * Limit how many sv_faq_rel_faqs to update.
     */
    limit?: number
  }

  /**
   * sv_faq_rel_faq upsert
   */
  export type sv_faq_rel_faqUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_rel_faq
     */
    select?: sv_faq_rel_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_rel_faq
     */
    omit?: sv_faq_rel_faqOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_faq_rel_faq to update in case it exists.
     */
    where: sv_faq_rel_faqWhereUniqueInput
    /**
     * In case the sv_faq_rel_faq found by the `where` argument doesn't exist, create a new sv_faq_rel_faq with this data.
     */
    create: XOR<sv_faq_rel_faqCreateInput, sv_faq_rel_faqUncheckedCreateInput>
    /**
     * In case the sv_faq_rel_faq was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_faq_rel_faqUpdateInput, sv_faq_rel_faqUncheckedUpdateInput>
  }

  /**
   * sv_faq_rel_faq delete
   */
  export type sv_faq_rel_faqDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_rel_faq
     */
    select?: sv_faq_rel_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_rel_faq
     */
    omit?: sv_faq_rel_faqOmit<ExtArgs> | null
    /**
     * Filter which sv_faq_rel_faq to delete.
     */
    where: sv_faq_rel_faqWhereUniqueInput
  }

  /**
   * sv_faq_rel_faq deleteMany
   */
  export type sv_faq_rel_faqDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_faq_rel_faqs to delete
     */
    where?: sv_faq_rel_faqWhereInput
    /**
     * Limit how many sv_faq_rel_faqs to delete.
     */
    limit?: number
  }

  /**
   * sv_faq_rel_faq without action
   */
  export type sv_faq_rel_faqDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_faq_rel_faq
     */
    select?: sv_faq_rel_faqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_faq_rel_faq
     */
    omit?: sv_faq_rel_faqOmit<ExtArgs> | null
  }


  /**
   * Model sv_inq
   */

  export type AggregateSv_inq = {
    _count: Sv_inqCountAggregateOutputType | null
    _avg: Sv_inqAvgAggregateOutputType | null
    _sum: Sv_inqSumAggregateOutputType | null
    _min: Sv_inqMinAggregateOutputType | null
    _max: Sv_inqMaxAggregateOutputType | null
  }

  export type Sv_inqAvgAggregateOutputType = {
    inq_no: number | null
    inq_mbr_no: number | null
    clco_no: number | null
    inq_clsf_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_inqSumAggregateOutputType = {
    inq_no: bigint | null
    inq_mbr_no: bigint | null
    clco_no: number | null
    inq_clsf_no: number | null
    regr_no: bigint | null
    modr_no: bigint | null
  }

  export type Sv_inqMinAggregateOutputType = {
    inq_no: bigint | null
    inq_mbr_no: bigint | null
    clco_no: number | null
    clco_dept_cd: string | null
    inq_clsf_no: number | null
    inq_ttl: string | null
    inq_cont: string | null
    rls_tf: string | null
    ans_stts_cd: string | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sv_inqMaxAggregateOutputType = {
    inq_no: bigint | null
    inq_mbr_no: bigint | null
    clco_no: number | null
    clco_dept_cd: string | null
    inq_clsf_no: number | null
    inq_ttl: string | null
    inq_cont: string | null
    rls_tf: string | null
    ans_stts_cd: string | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sv_inqCountAggregateOutputType = {
    inq_no: number
    inq_mbr_no: number
    clco_no: number
    clco_dept_cd: number
    inq_clsf_no: number
    inq_ttl: number
    inq_cont: number
    rls_tf: number
    ans_stts_cd: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_inqAvgAggregateInputType = {
    inq_no?: true
    inq_mbr_no?: true
    clco_no?: true
    inq_clsf_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_inqSumAggregateInputType = {
    inq_no?: true
    inq_mbr_no?: true
    clco_no?: true
    inq_clsf_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_inqMinAggregateInputType = {
    inq_no?: true
    inq_mbr_no?: true
    clco_no?: true
    clco_dept_cd?: true
    inq_clsf_no?: true
    inq_ttl?: true
    inq_cont?: true
    rls_tf?: true
    ans_stts_cd?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_inqMaxAggregateInputType = {
    inq_no?: true
    inq_mbr_no?: true
    clco_no?: true
    clco_dept_cd?: true
    inq_clsf_no?: true
    inq_ttl?: true
    inq_cont?: true
    rls_tf?: true
    ans_stts_cd?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_inqCountAggregateInputType = {
    inq_no?: true
    inq_mbr_no?: true
    clco_no?: true
    clco_dept_cd?: true
    inq_clsf_no?: true
    inq_ttl?: true
    inq_cont?: true
    rls_tf?: true
    ans_stts_cd?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_inqAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_inq to aggregate.
     */
    where?: sv_inqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inqs to fetch.
     */
    orderBy?: sv_inqOrderByWithRelationInput | sv_inqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_inqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_inqs
    **/
    _count?: true | Sv_inqCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_inqAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_inqSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_inqMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_inqMaxAggregateInputType
  }

  export type GetSv_inqAggregateType<T extends Sv_inqAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_inq]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_inq[P]>
      : GetScalarType<T[P], AggregateSv_inq[P]>
  }




  export type sv_inqGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_inqWhereInput
    orderBy?: sv_inqOrderByWithAggregationInput | sv_inqOrderByWithAggregationInput[]
    by: Sv_inqScalarFieldEnum[] | Sv_inqScalarFieldEnum
    having?: sv_inqScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_inqCountAggregateInputType | true
    _avg?: Sv_inqAvgAggregateInputType
    _sum?: Sv_inqSumAggregateInputType
    _min?: Sv_inqMinAggregateInputType
    _max?: Sv_inqMaxAggregateInputType
  }

  export type Sv_inqGroupByOutputType = {
    inq_no: bigint
    inq_mbr_no: bigint
    clco_no: number
    clco_dept_cd: string | null
    inq_clsf_no: number
    inq_ttl: string
    inq_cont: string
    rls_tf: string
    ans_stts_cd: string
    regr_no: bigint
    reg_dt: Date
    modr_no: bigint
    mod_dt: Date
    _count: Sv_inqCountAggregateOutputType | null
    _avg: Sv_inqAvgAggregateOutputType | null
    _sum: Sv_inqSumAggregateOutputType | null
    _min: Sv_inqMinAggregateOutputType | null
    _max: Sv_inqMaxAggregateOutputType | null
  }

  type GetSv_inqGroupByPayload<T extends sv_inqGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_inqGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_inqGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_inqGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_inqGroupByOutputType[P]>
        }
      >
    >


  export type sv_inqSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    inq_no?: boolean
    inq_mbr_no?: boolean
    clco_no?: boolean
    clco_dept_cd?: boolean
    inq_clsf_no?: boolean
    inq_ttl?: boolean
    inq_cont?: boolean
    rls_tf?: boolean
    ans_stts_cd?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_inq"]>



  export type sv_inqSelectScalar = {
    inq_no?: boolean
    inq_mbr_no?: boolean
    clco_no?: boolean
    clco_dept_cd?: boolean
    inq_clsf_no?: boolean
    inq_ttl?: boolean
    inq_cont?: boolean
    rls_tf?: boolean
    ans_stts_cd?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_inqOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"inq_no" | "inq_mbr_no" | "clco_no" | "clco_dept_cd" | "inq_clsf_no" | "inq_ttl" | "inq_cont" | "rls_tf" | "ans_stts_cd" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_inq"]>

  export type $sv_inqPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_inq"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      inq_no: bigint
      inq_mbr_no: bigint
      clco_no: number
      clco_dept_cd: string | null
      inq_clsf_no: number
      inq_ttl: string
      inq_cont: string
      rls_tf: string
      ans_stts_cd: string
      regr_no: bigint
      reg_dt: Date
      modr_no: bigint
      mod_dt: Date
    }, ExtArgs["result"]["sv_inq"]>
    composites: {}
  }

  type sv_inqGetPayload<S extends boolean | null | undefined | sv_inqDefaultArgs> = $Result.GetResult<Prisma.$sv_inqPayload, S>

  type sv_inqCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_inqFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_inqCountAggregateInputType | true
    }

  export interface sv_inqDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_inq'], meta: { name: 'sv_inq' } }
    /**
     * Find zero or one Sv_inq that matches the filter.
     * @param {sv_inqFindUniqueArgs} args - Arguments to find a Sv_inq
     * @example
     * // Get one Sv_inq
     * const sv_inq = await prisma.sv_inq.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_inqFindUniqueArgs>(args: SelectSubset<T, sv_inqFindUniqueArgs<ExtArgs>>): Prisma__sv_inqClient<$Result.GetResult<Prisma.$sv_inqPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_inq that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_inqFindUniqueOrThrowArgs} args - Arguments to find a Sv_inq
     * @example
     * // Get one Sv_inq
     * const sv_inq = await prisma.sv_inq.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_inqFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_inqFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_inqClient<$Result.GetResult<Prisma.$sv_inqPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_inq that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inqFindFirstArgs} args - Arguments to find a Sv_inq
     * @example
     * // Get one Sv_inq
     * const sv_inq = await prisma.sv_inq.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_inqFindFirstArgs>(args?: SelectSubset<T, sv_inqFindFirstArgs<ExtArgs>>): Prisma__sv_inqClient<$Result.GetResult<Prisma.$sv_inqPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_inq that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inqFindFirstOrThrowArgs} args - Arguments to find a Sv_inq
     * @example
     * // Get one Sv_inq
     * const sv_inq = await prisma.sv_inq.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_inqFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_inqFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_inqClient<$Result.GetResult<Prisma.$sv_inqPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_inqs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inqFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_inqs
     * const sv_inqs = await prisma.sv_inq.findMany()
     * 
     * // Get first 10 Sv_inqs
     * const sv_inqs = await prisma.sv_inq.findMany({ take: 10 })
     * 
     * // Only select the `inq_no`
     * const sv_inqWithInq_noOnly = await prisma.sv_inq.findMany({ select: { inq_no: true } })
     * 
     */
    findMany<T extends sv_inqFindManyArgs>(args?: SelectSubset<T, sv_inqFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_inqPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_inq.
     * @param {sv_inqCreateArgs} args - Arguments to create a Sv_inq.
     * @example
     * // Create one Sv_inq
     * const Sv_inq = await prisma.sv_inq.create({
     *   data: {
     *     // ... data to create a Sv_inq
     *   }
     * })
     * 
     */
    create<T extends sv_inqCreateArgs>(args: SelectSubset<T, sv_inqCreateArgs<ExtArgs>>): Prisma__sv_inqClient<$Result.GetResult<Prisma.$sv_inqPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_inqs.
     * @param {sv_inqCreateManyArgs} args - Arguments to create many Sv_inqs.
     * @example
     * // Create many Sv_inqs
     * const sv_inq = await prisma.sv_inq.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_inqCreateManyArgs>(args?: SelectSubset<T, sv_inqCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_inq.
     * @param {sv_inqDeleteArgs} args - Arguments to delete one Sv_inq.
     * @example
     * // Delete one Sv_inq
     * const Sv_inq = await prisma.sv_inq.delete({
     *   where: {
     *     // ... filter to delete one Sv_inq
     *   }
     * })
     * 
     */
    delete<T extends sv_inqDeleteArgs>(args: SelectSubset<T, sv_inqDeleteArgs<ExtArgs>>): Prisma__sv_inqClient<$Result.GetResult<Prisma.$sv_inqPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_inq.
     * @param {sv_inqUpdateArgs} args - Arguments to update one Sv_inq.
     * @example
     * // Update one Sv_inq
     * const sv_inq = await prisma.sv_inq.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_inqUpdateArgs>(args: SelectSubset<T, sv_inqUpdateArgs<ExtArgs>>): Prisma__sv_inqClient<$Result.GetResult<Prisma.$sv_inqPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_inqs.
     * @param {sv_inqDeleteManyArgs} args - Arguments to filter Sv_inqs to delete.
     * @example
     * // Delete a few Sv_inqs
     * const { count } = await prisma.sv_inq.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_inqDeleteManyArgs>(args?: SelectSubset<T, sv_inqDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_inqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inqUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_inqs
     * const sv_inq = await prisma.sv_inq.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_inqUpdateManyArgs>(args: SelectSubset<T, sv_inqUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_inq.
     * @param {sv_inqUpsertArgs} args - Arguments to update or create a Sv_inq.
     * @example
     * // Update or create a Sv_inq
     * const sv_inq = await prisma.sv_inq.upsert({
     *   create: {
     *     // ... data to create a Sv_inq
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_inq we want to update
     *   }
     * })
     */
    upsert<T extends sv_inqUpsertArgs>(args: SelectSubset<T, sv_inqUpsertArgs<ExtArgs>>): Prisma__sv_inqClient<$Result.GetResult<Prisma.$sv_inqPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_inqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inqCountArgs} args - Arguments to filter Sv_inqs to count.
     * @example
     * // Count the number of Sv_inqs
     * const count = await prisma.sv_inq.count({
     *   where: {
     *     // ... the filter for the Sv_inqs we want to count
     *   }
     * })
    **/
    count<T extends sv_inqCountArgs>(
      args?: Subset<T, sv_inqCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_inqCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_inq.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_inqAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_inqAggregateArgs>(args: Subset<T, Sv_inqAggregateArgs>): Prisma.PrismaPromise<GetSv_inqAggregateType<T>>

    /**
     * Group by Sv_inq.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inqGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_inqGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_inqGroupByArgs['orderBy'] }
        : { orderBy?: sv_inqGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_inqGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_inqGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_inq model
   */
  readonly fields: sv_inqFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_inq.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_inqClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_inq model
   */
  interface sv_inqFieldRefs {
    readonly inq_no: FieldRef<"sv_inq", 'BigInt'>
    readonly inq_mbr_no: FieldRef<"sv_inq", 'BigInt'>
    readonly clco_no: FieldRef<"sv_inq", 'Int'>
    readonly clco_dept_cd: FieldRef<"sv_inq", 'String'>
    readonly inq_clsf_no: FieldRef<"sv_inq", 'Int'>
    readonly inq_ttl: FieldRef<"sv_inq", 'String'>
    readonly inq_cont: FieldRef<"sv_inq", 'String'>
    readonly rls_tf: FieldRef<"sv_inq", 'String'>
    readonly ans_stts_cd: FieldRef<"sv_inq", 'String'>
    readonly regr_no: FieldRef<"sv_inq", 'BigInt'>
    readonly reg_dt: FieldRef<"sv_inq", 'DateTime'>
    readonly modr_no: FieldRef<"sv_inq", 'BigInt'>
    readonly mod_dt: FieldRef<"sv_inq", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_inq findUnique
   */
  export type sv_inqFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq
     */
    select?: sv_inqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq
     */
    omit?: sv_inqOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq to fetch.
     */
    where: sv_inqWhereUniqueInput
  }

  /**
   * sv_inq findUniqueOrThrow
   */
  export type sv_inqFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq
     */
    select?: sv_inqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq
     */
    omit?: sv_inqOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq to fetch.
     */
    where: sv_inqWhereUniqueInput
  }

  /**
   * sv_inq findFirst
   */
  export type sv_inqFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq
     */
    select?: sv_inqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq
     */
    omit?: sv_inqOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq to fetch.
     */
    where?: sv_inqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inqs to fetch.
     */
    orderBy?: sv_inqOrderByWithRelationInput | sv_inqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_inqs.
     */
    cursor?: sv_inqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_inqs.
     */
    distinct?: Sv_inqScalarFieldEnum | Sv_inqScalarFieldEnum[]
  }

  /**
   * sv_inq findFirstOrThrow
   */
  export type sv_inqFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq
     */
    select?: sv_inqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq
     */
    omit?: sv_inqOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq to fetch.
     */
    where?: sv_inqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inqs to fetch.
     */
    orderBy?: sv_inqOrderByWithRelationInput | sv_inqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_inqs.
     */
    cursor?: sv_inqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_inqs.
     */
    distinct?: Sv_inqScalarFieldEnum | Sv_inqScalarFieldEnum[]
  }

  /**
   * sv_inq findMany
   */
  export type sv_inqFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq
     */
    select?: sv_inqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq
     */
    omit?: sv_inqOmit<ExtArgs> | null
    /**
     * Filter, which sv_inqs to fetch.
     */
    where?: sv_inqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inqs to fetch.
     */
    orderBy?: sv_inqOrderByWithRelationInput | sv_inqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_inqs.
     */
    cursor?: sv_inqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inqs.
     */
    skip?: number
    distinct?: Sv_inqScalarFieldEnum | Sv_inqScalarFieldEnum[]
  }

  /**
   * sv_inq create
   */
  export type sv_inqCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq
     */
    select?: sv_inqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq
     */
    omit?: sv_inqOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_inq.
     */
    data: XOR<sv_inqCreateInput, sv_inqUncheckedCreateInput>
  }

  /**
   * sv_inq createMany
   */
  export type sv_inqCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_inqs.
     */
    data: sv_inqCreateManyInput | sv_inqCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_inq update
   */
  export type sv_inqUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq
     */
    select?: sv_inqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq
     */
    omit?: sv_inqOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_inq.
     */
    data: XOR<sv_inqUpdateInput, sv_inqUncheckedUpdateInput>
    /**
     * Choose, which sv_inq to update.
     */
    where: sv_inqWhereUniqueInput
  }

  /**
   * sv_inq updateMany
   */
  export type sv_inqUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_inqs.
     */
    data: XOR<sv_inqUpdateManyMutationInput, sv_inqUncheckedUpdateManyInput>
    /**
     * Filter which sv_inqs to update
     */
    where?: sv_inqWhereInput
    /**
     * Limit how many sv_inqs to update.
     */
    limit?: number
  }

  /**
   * sv_inq upsert
   */
  export type sv_inqUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq
     */
    select?: sv_inqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq
     */
    omit?: sv_inqOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_inq to update in case it exists.
     */
    where: sv_inqWhereUniqueInput
    /**
     * In case the sv_inq found by the `where` argument doesn't exist, create a new sv_inq with this data.
     */
    create: XOR<sv_inqCreateInput, sv_inqUncheckedCreateInput>
    /**
     * In case the sv_inq was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_inqUpdateInput, sv_inqUncheckedUpdateInput>
  }

  /**
   * sv_inq delete
   */
  export type sv_inqDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq
     */
    select?: sv_inqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq
     */
    omit?: sv_inqOmit<ExtArgs> | null
    /**
     * Filter which sv_inq to delete.
     */
    where: sv_inqWhereUniqueInput
  }

  /**
   * sv_inq deleteMany
   */
  export type sv_inqDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_inqs to delete
     */
    where?: sv_inqWhereInput
    /**
     * Limit how many sv_inqs to delete.
     */
    limit?: number
  }

  /**
   * sv_inq without action
   */
  export type sv_inqDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq
     */
    select?: sv_inqSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq
     */
    omit?: sv_inqOmit<ExtArgs> | null
  }


  /**
   * Model sv_inq_ans
   */

  export type AggregateSv_inq_ans = {
    _count: Sv_inq_ansCountAggregateOutputType | null
    _avg: Sv_inq_ansAvgAggregateOutputType | null
    _sum: Sv_inq_ansSumAggregateOutputType | null
    _min: Sv_inq_ansMinAggregateOutputType | null
    _max: Sv_inq_ansMaxAggregateOutputType | null
  }

  export type Sv_inq_ansAvgAggregateOutputType = {
    ans_no: number | null
    inq_no: number | null
    ans_mngr_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_inq_ansSumAggregateOutputType = {
    ans_no: bigint | null
    inq_no: bigint | null
    ans_mngr_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_inq_ansMinAggregateOutputType = {
    ans_no: bigint | null
    inq_no: bigint | null
    ans_mngr_no: number | null
    ans_cont: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_inq_ansMaxAggregateOutputType = {
    ans_no: bigint | null
    inq_no: bigint | null
    ans_mngr_no: number | null
    ans_cont: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_inq_ansCountAggregateOutputType = {
    ans_no: number
    inq_no: number
    ans_mngr_no: number
    ans_cont: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_inq_ansAvgAggregateInputType = {
    ans_no?: true
    inq_no?: true
    ans_mngr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_inq_ansSumAggregateInputType = {
    ans_no?: true
    inq_no?: true
    ans_mngr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_inq_ansMinAggregateInputType = {
    ans_no?: true
    inq_no?: true
    ans_mngr_no?: true
    ans_cont?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_inq_ansMaxAggregateInputType = {
    ans_no?: true
    inq_no?: true
    ans_mngr_no?: true
    ans_cont?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_inq_ansCountAggregateInputType = {
    ans_no?: true
    inq_no?: true
    ans_mngr_no?: true
    ans_cont?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_inq_ansAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_inq_ans to aggregate.
     */
    where?: sv_inq_ansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inq_ans to fetch.
     */
    orderBy?: sv_inq_ansOrderByWithRelationInput | sv_inq_ansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_inq_ansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inq_ans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inq_ans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_inq_ans
    **/
    _count?: true | Sv_inq_ansCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_inq_ansAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_inq_ansSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_inq_ansMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_inq_ansMaxAggregateInputType
  }

  export type GetSv_inq_ansAggregateType<T extends Sv_inq_ansAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_inq_ans]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_inq_ans[P]>
      : GetScalarType<T[P], AggregateSv_inq_ans[P]>
  }




  export type sv_inq_ansGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_inq_ansWhereInput
    orderBy?: sv_inq_ansOrderByWithAggregationInput | sv_inq_ansOrderByWithAggregationInput[]
    by: Sv_inq_ansScalarFieldEnum[] | Sv_inq_ansScalarFieldEnum
    having?: sv_inq_ansScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_inq_ansCountAggregateInputType | true
    _avg?: Sv_inq_ansAvgAggregateInputType
    _sum?: Sv_inq_ansSumAggregateInputType
    _min?: Sv_inq_ansMinAggregateInputType
    _max?: Sv_inq_ansMaxAggregateInputType
  }

  export type Sv_inq_ansGroupByOutputType = {
    ans_no: bigint
    inq_no: bigint
    ans_mngr_no: number
    ans_cont: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sv_inq_ansCountAggregateOutputType | null
    _avg: Sv_inq_ansAvgAggregateOutputType | null
    _sum: Sv_inq_ansSumAggregateOutputType | null
    _min: Sv_inq_ansMinAggregateOutputType | null
    _max: Sv_inq_ansMaxAggregateOutputType | null
  }

  type GetSv_inq_ansGroupByPayload<T extends sv_inq_ansGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_inq_ansGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_inq_ansGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_inq_ansGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_inq_ansGroupByOutputType[P]>
        }
      >
    >


  export type sv_inq_ansSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ans_no?: boolean
    inq_no?: boolean
    ans_mngr_no?: boolean
    ans_cont?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_inq_ans"]>



  export type sv_inq_ansSelectScalar = {
    ans_no?: boolean
    inq_no?: boolean
    ans_mngr_no?: boolean
    ans_cont?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_inq_ansOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ans_no" | "inq_no" | "ans_mngr_no" | "ans_cont" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_inq_ans"]>

  export type $sv_inq_ansPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_inq_ans"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ans_no: bigint
      inq_no: bigint
      ans_mngr_no: number
      ans_cont: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sv_inq_ans"]>
    composites: {}
  }

  type sv_inq_ansGetPayload<S extends boolean | null | undefined | sv_inq_ansDefaultArgs> = $Result.GetResult<Prisma.$sv_inq_ansPayload, S>

  type sv_inq_ansCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_inq_ansFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_inq_ansCountAggregateInputType | true
    }

  export interface sv_inq_ansDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_inq_ans'], meta: { name: 'sv_inq_ans' } }
    /**
     * Find zero or one Sv_inq_ans that matches the filter.
     * @param {sv_inq_ansFindUniqueArgs} args - Arguments to find a Sv_inq_ans
     * @example
     * // Get one Sv_inq_ans
     * const sv_inq_ans = await prisma.sv_inq_ans.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_inq_ansFindUniqueArgs>(args: SelectSubset<T, sv_inq_ansFindUniqueArgs<ExtArgs>>): Prisma__sv_inq_ansClient<$Result.GetResult<Prisma.$sv_inq_ansPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_inq_ans that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_inq_ansFindUniqueOrThrowArgs} args - Arguments to find a Sv_inq_ans
     * @example
     * // Get one Sv_inq_ans
     * const sv_inq_ans = await prisma.sv_inq_ans.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_inq_ansFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_inq_ansFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_inq_ansClient<$Result.GetResult<Prisma.$sv_inq_ansPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_inq_ans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_ansFindFirstArgs} args - Arguments to find a Sv_inq_ans
     * @example
     * // Get one Sv_inq_ans
     * const sv_inq_ans = await prisma.sv_inq_ans.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_inq_ansFindFirstArgs>(args?: SelectSubset<T, sv_inq_ansFindFirstArgs<ExtArgs>>): Prisma__sv_inq_ansClient<$Result.GetResult<Prisma.$sv_inq_ansPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_inq_ans that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_ansFindFirstOrThrowArgs} args - Arguments to find a Sv_inq_ans
     * @example
     * // Get one Sv_inq_ans
     * const sv_inq_ans = await prisma.sv_inq_ans.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_inq_ansFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_inq_ansFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_inq_ansClient<$Result.GetResult<Prisma.$sv_inq_ansPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_inq_ans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_ansFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_inq_ans
     * const sv_inq_ans = await prisma.sv_inq_ans.findMany()
     * 
     * // Get first 10 Sv_inq_ans
     * const sv_inq_ans = await prisma.sv_inq_ans.findMany({ take: 10 })
     * 
     * // Only select the `ans_no`
     * const sv_inq_ansWithAns_noOnly = await prisma.sv_inq_ans.findMany({ select: { ans_no: true } })
     * 
     */
    findMany<T extends sv_inq_ansFindManyArgs>(args?: SelectSubset<T, sv_inq_ansFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_inq_ansPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_inq_ans.
     * @param {sv_inq_ansCreateArgs} args - Arguments to create a Sv_inq_ans.
     * @example
     * // Create one Sv_inq_ans
     * const Sv_inq_ans = await prisma.sv_inq_ans.create({
     *   data: {
     *     // ... data to create a Sv_inq_ans
     *   }
     * })
     * 
     */
    create<T extends sv_inq_ansCreateArgs>(args: SelectSubset<T, sv_inq_ansCreateArgs<ExtArgs>>): Prisma__sv_inq_ansClient<$Result.GetResult<Prisma.$sv_inq_ansPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_inq_ans.
     * @param {sv_inq_ansCreateManyArgs} args - Arguments to create many Sv_inq_ans.
     * @example
     * // Create many Sv_inq_ans
     * const sv_inq_ans = await prisma.sv_inq_ans.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_inq_ansCreateManyArgs>(args?: SelectSubset<T, sv_inq_ansCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_inq_ans.
     * @param {sv_inq_ansDeleteArgs} args - Arguments to delete one Sv_inq_ans.
     * @example
     * // Delete one Sv_inq_ans
     * const Sv_inq_ans = await prisma.sv_inq_ans.delete({
     *   where: {
     *     // ... filter to delete one Sv_inq_ans
     *   }
     * })
     * 
     */
    delete<T extends sv_inq_ansDeleteArgs>(args: SelectSubset<T, sv_inq_ansDeleteArgs<ExtArgs>>): Prisma__sv_inq_ansClient<$Result.GetResult<Prisma.$sv_inq_ansPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_inq_ans.
     * @param {sv_inq_ansUpdateArgs} args - Arguments to update one Sv_inq_ans.
     * @example
     * // Update one Sv_inq_ans
     * const sv_inq_ans = await prisma.sv_inq_ans.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_inq_ansUpdateArgs>(args: SelectSubset<T, sv_inq_ansUpdateArgs<ExtArgs>>): Prisma__sv_inq_ansClient<$Result.GetResult<Prisma.$sv_inq_ansPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_inq_ans.
     * @param {sv_inq_ansDeleteManyArgs} args - Arguments to filter Sv_inq_ans to delete.
     * @example
     * // Delete a few Sv_inq_ans
     * const { count } = await prisma.sv_inq_ans.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_inq_ansDeleteManyArgs>(args?: SelectSubset<T, sv_inq_ansDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_inq_ans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_ansUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_inq_ans
     * const sv_inq_ans = await prisma.sv_inq_ans.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_inq_ansUpdateManyArgs>(args: SelectSubset<T, sv_inq_ansUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_inq_ans.
     * @param {sv_inq_ansUpsertArgs} args - Arguments to update or create a Sv_inq_ans.
     * @example
     * // Update or create a Sv_inq_ans
     * const sv_inq_ans = await prisma.sv_inq_ans.upsert({
     *   create: {
     *     // ... data to create a Sv_inq_ans
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_inq_ans we want to update
     *   }
     * })
     */
    upsert<T extends sv_inq_ansUpsertArgs>(args: SelectSubset<T, sv_inq_ansUpsertArgs<ExtArgs>>): Prisma__sv_inq_ansClient<$Result.GetResult<Prisma.$sv_inq_ansPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_inq_ans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_ansCountArgs} args - Arguments to filter Sv_inq_ans to count.
     * @example
     * // Count the number of Sv_inq_ans
     * const count = await prisma.sv_inq_ans.count({
     *   where: {
     *     // ... the filter for the Sv_inq_ans we want to count
     *   }
     * })
    **/
    count<T extends sv_inq_ansCountArgs>(
      args?: Subset<T, sv_inq_ansCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_inq_ansCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_inq_ans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_inq_ansAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_inq_ansAggregateArgs>(args: Subset<T, Sv_inq_ansAggregateArgs>): Prisma.PrismaPromise<GetSv_inq_ansAggregateType<T>>

    /**
     * Group by Sv_inq_ans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_ansGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_inq_ansGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_inq_ansGroupByArgs['orderBy'] }
        : { orderBy?: sv_inq_ansGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_inq_ansGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_inq_ansGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_inq_ans model
   */
  readonly fields: sv_inq_ansFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_inq_ans.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_inq_ansClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_inq_ans model
   */
  interface sv_inq_ansFieldRefs {
    readonly ans_no: FieldRef<"sv_inq_ans", 'BigInt'>
    readonly inq_no: FieldRef<"sv_inq_ans", 'BigInt'>
    readonly ans_mngr_no: FieldRef<"sv_inq_ans", 'Int'>
    readonly ans_cont: FieldRef<"sv_inq_ans", 'String'>
    readonly regr_no: FieldRef<"sv_inq_ans", 'Int'>
    readonly reg_dt: FieldRef<"sv_inq_ans", 'DateTime'>
    readonly modr_no: FieldRef<"sv_inq_ans", 'Int'>
    readonly mod_dt: FieldRef<"sv_inq_ans", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_inq_ans findUnique
   */
  export type sv_inq_ansFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_ans
     */
    select?: sv_inq_ansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_ans
     */
    omit?: sv_inq_ansOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_ans to fetch.
     */
    where: sv_inq_ansWhereUniqueInput
  }

  /**
   * sv_inq_ans findUniqueOrThrow
   */
  export type sv_inq_ansFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_ans
     */
    select?: sv_inq_ansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_ans
     */
    omit?: sv_inq_ansOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_ans to fetch.
     */
    where: sv_inq_ansWhereUniqueInput
  }

  /**
   * sv_inq_ans findFirst
   */
  export type sv_inq_ansFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_ans
     */
    select?: sv_inq_ansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_ans
     */
    omit?: sv_inq_ansOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_ans to fetch.
     */
    where?: sv_inq_ansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inq_ans to fetch.
     */
    orderBy?: sv_inq_ansOrderByWithRelationInput | sv_inq_ansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_inq_ans.
     */
    cursor?: sv_inq_ansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inq_ans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inq_ans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_inq_ans.
     */
    distinct?: Sv_inq_ansScalarFieldEnum | Sv_inq_ansScalarFieldEnum[]
  }

  /**
   * sv_inq_ans findFirstOrThrow
   */
  export type sv_inq_ansFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_ans
     */
    select?: sv_inq_ansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_ans
     */
    omit?: sv_inq_ansOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_ans to fetch.
     */
    where?: sv_inq_ansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inq_ans to fetch.
     */
    orderBy?: sv_inq_ansOrderByWithRelationInput | sv_inq_ansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_inq_ans.
     */
    cursor?: sv_inq_ansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inq_ans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inq_ans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_inq_ans.
     */
    distinct?: Sv_inq_ansScalarFieldEnum | Sv_inq_ansScalarFieldEnum[]
  }

  /**
   * sv_inq_ans findMany
   */
  export type sv_inq_ansFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_ans
     */
    select?: sv_inq_ansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_ans
     */
    omit?: sv_inq_ansOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_ans to fetch.
     */
    where?: sv_inq_ansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inq_ans to fetch.
     */
    orderBy?: sv_inq_ansOrderByWithRelationInput | sv_inq_ansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_inq_ans.
     */
    cursor?: sv_inq_ansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inq_ans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inq_ans.
     */
    skip?: number
    distinct?: Sv_inq_ansScalarFieldEnum | Sv_inq_ansScalarFieldEnum[]
  }

  /**
   * sv_inq_ans create
   */
  export type sv_inq_ansCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_ans
     */
    select?: sv_inq_ansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_ans
     */
    omit?: sv_inq_ansOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_inq_ans.
     */
    data: XOR<sv_inq_ansCreateInput, sv_inq_ansUncheckedCreateInput>
  }

  /**
   * sv_inq_ans createMany
   */
  export type sv_inq_ansCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_inq_ans.
     */
    data: sv_inq_ansCreateManyInput | sv_inq_ansCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_inq_ans update
   */
  export type sv_inq_ansUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_ans
     */
    select?: sv_inq_ansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_ans
     */
    omit?: sv_inq_ansOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_inq_ans.
     */
    data: XOR<sv_inq_ansUpdateInput, sv_inq_ansUncheckedUpdateInput>
    /**
     * Choose, which sv_inq_ans to update.
     */
    where: sv_inq_ansWhereUniqueInput
  }

  /**
   * sv_inq_ans updateMany
   */
  export type sv_inq_ansUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_inq_ans.
     */
    data: XOR<sv_inq_ansUpdateManyMutationInput, sv_inq_ansUncheckedUpdateManyInput>
    /**
     * Filter which sv_inq_ans to update
     */
    where?: sv_inq_ansWhereInput
    /**
     * Limit how many sv_inq_ans to update.
     */
    limit?: number
  }

  /**
   * sv_inq_ans upsert
   */
  export type sv_inq_ansUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_ans
     */
    select?: sv_inq_ansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_ans
     */
    omit?: sv_inq_ansOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_inq_ans to update in case it exists.
     */
    where: sv_inq_ansWhereUniqueInput
    /**
     * In case the sv_inq_ans found by the `where` argument doesn't exist, create a new sv_inq_ans with this data.
     */
    create: XOR<sv_inq_ansCreateInput, sv_inq_ansUncheckedCreateInput>
    /**
     * In case the sv_inq_ans was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_inq_ansUpdateInput, sv_inq_ansUncheckedUpdateInput>
  }

  /**
   * sv_inq_ans delete
   */
  export type sv_inq_ansDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_ans
     */
    select?: sv_inq_ansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_ans
     */
    omit?: sv_inq_ansOmit<ExtArgs> | null
    /**
     * Filter which sv_inq_ans to delete.
     */
    where: sv_inq_ansWhereUniqueInput
  }

  /**
   * sv_inq_ans deleteMany
   */
  export type sv_inq_ansDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_inq_ans to delete
     */
    where?: sv_inq_ansWhereInput
    /**
     * Limit how many sv_inq_ans to delete.
     */
    limit?: number
  }

  /**
   * sv_inq_ans without action
   */
  export type sv_inq_ansDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_ans
     */
    select?: sv_inq_ansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_ans
     */
    omit?: sv_inq_ansOmit<ExtArgs> | null
  }


  /**
   * Model sv_inq_atch_file
   */

  export type AggregateSv_inq_atch_file = {
    _count: Sv_inq_atch_fileCountAggregateOutputType | null
    _avg: Sv_inq_atch_fileAvgAggregateOutputType | null
    _sum: Sv_inq_atch_fileSumAggregateOutputType | null
    _min: Sv_inq_atch_fileMinAggregateOutputType | null
    _max: Sv_inq_atch_fileMaxAggregateOutputType | null
  }

  export type Sv_inq_atch_fileAvgAggregateOutputType = {
    atch_file_no: number | null
    inq_no: number | null
    atch_file_mng_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_inq_atch_fileSumAggregateOutputType = {
    atch_file_no: bigint | null
    inq_no: bigint | null
    atch_file_mng_no: bigint | null
    regr_no: bigint | null
    modr_no: bigint | null
  }

  export type Sv_inq_atch_fileMinAggregateOutputType = {
    atch_file_no: bigint | null
    inq_no: bigint | null
    atch_file_mng_no: bigint | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sv_inq_atch_fileMaxAggregateOutputType = {
    atch_file_no: bigint | null
    inq_no: bigint | null
    atch_file_mng_no: bigint | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sv_inq_atch_fileCountAggregateOutputType = {
    atch_file_no: number
    inq_no: number
    atch_file_mng_no: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_inq_atch_fileAvgAggregateInputType = {
    atch_file_no?: true
    inq_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_inq_atch_fileSumAggregateInputType = {
    atch_file_no?: true
    inq_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_inq_atch_fileMinAggregateInputType = {
    atch_file_no?: true
    inq_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_inq_atch_fileMaxAggregateInputType = {
    atch_file_no?: true
    inq_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_inq_atch_fileCountAggregateInputType = {
    atch_file_no?: true
    inq_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_inq_atch_fileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_inq_atch_file to aggregate.
     */
    where?: sv_inq_atch_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inq_atch_files to fetch.
     */
    orderBy?: sv_inq_atch_fileOrderByWithRelationInput | sv_inq_atch_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_inq_atch_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inq_atch_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inq_atch_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_inq_atch_files
    **/
    _count?: true | Sv_inq_atch_fileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_inq_atch_fileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_inq_atch_fileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_inq_atch_fileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_inq_atch_fileMaxAggregateInputType
  }

  export type GetSv_inq_atch_fileAggregateType<T extends Sv_inq_atch_fileAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_inq_atch_file]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_inq_atch_file[P]>
      : GetScalarType<T[P], AggregateSv_inq_atch_file[P]>
  }




  export type sv_inq_atch_fileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_inq_atch_fileWhereInput
    orderBy?: sv_inq_atch_fileOrderByWithAggregationInput | sv_inq_atch_fileOrderByWithAggregationInput[]
    by: Sv_inq_atch_fileScalarFieldEnum[] | Sv_inq_atch_fileScalarFieldEnum
    having?: sv_inq_atch_fileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_inq_atch_fileCountAggregateInputType | true
    _avg?: Sv_inq_atch_fileAvgAggregateInputType
    _sum?: Sv_inq_atch_fileSumAggregateInputType
    _min?: Sv_inq_atch_fileMinAggregateInputType
    _max?: Sv_inq_atch_fileMaxAggregateInputType
  }

  export type Sv_inq_atch_fileGroupByOutputType = {
    atch_file_no: bigint
    inq_no: bigint
    atch_file_mng_no: bigint
    regr_no: bigint
    reg_dt: Date
    modr_no: bigint
    mod_dt: Date
    _count: Sv_inq_atch_fileCountAggregateOutputType | null
    _avg: Sv_inq_atch_fileAvgAggregateOutputType | null
    _sum: Sv_inq_atch_fileSumAggregateOutputType | null
    _min: Sv_inq_atch_fileMinAggregateOutputType | null
    _max: Sv_inq_atch_fileMaxAggregateOutputType | null
  }

  type GetSv_inq_atch_fileGroupByPayload<T extends sv_inq_atch_fileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_inq_atch_fileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_inq_atch_fileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_inq_atch_fileGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_inq_atch_fileGroupByOutputType[P]>
        }
      >
    >


  export type sv_inq_atch_fileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    atch_file_no?: boolean
    inq_no?: boolean
    atch_file_mng_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_inq_atch_file"]>



  export type sv_inq_atch_fileSelectScalar = {
    atch_file_no?: boolean
    inq_no?: boolean
    atch_file_mng_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_inq_atch_fileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"atch_file_no" | "inq_no" | "atch_file_mng_no" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_inq_atch_file"]>

  export type $sv_inq_atch_filePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_inq_atch_file"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      atch_file_no: bigint
      inq_no: bigint
      atch_file_mng_no: bigint
      regr_no: bigint
      reg_dt: Date
      modr_no: bigint
      mod_dt: Date
    }, ExtArgs["result"]["sv_inq_atch_file"]>
    composites: {}
  }

  type sv_inq_atch_fileGetPayload<S extends boolean | null | undefined | sv_inq_atch_fileDefaultArgs> = $Result.GetResult<Prisma.$sv_inq_atch_filePayload, S>

  type sv_inq_atch_fileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_inq_atch_fileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_inq_atch_fileCountAggregateInputType | true
    }

  export interface sv_inq_atch_fileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_inq_atch_file'], meta: { name: 'sv_inq_atch_file' } }
    /**
     * Find zero or one Sv_inq_atch_file that matches the filter.
     * @param {sv_inq_atch_fileFindUniqueArgs} args - Arguments to find a Sv_inq_atch_file
     * @example
     * // Get one Sv_inq_atch_file
     * const sv_inq_atch_file = await prisma.sv_inq_atch_file.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_inq_atch_fileFindUniqueArgs>(args: SelectSubset<T, sv_inq_atch_fileFindUniqueArgs<ExtArgs>>): Prisma__sv_inq_atch_fileClient<$Result.GetResult<Prisma.$sv_inq_atch_filePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_inq_atch_file that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_inq_atch_fileFindUniqueOrThrowArgs} args - Arguments to find a Sv_inq_atch_file
     * @example
     * // Get one Sv_inq_atch_file
     * const sv_inq_atch_file = await prisma.sv_inq_atch_file.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_inq_atch_fileFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_inq_atch_fileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_inq_atch_fileClient<$Result.GetResult<Prisma.$sv_inq_atch_filePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_inq_atch_file that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_atch_fileFindFirstArgs} args - Arguments to find a Sv_inq_atch_file
     * @example
     * // Get one Sv_inq_atch_file
     * const sv_inq_atch_file = await prisma.sv_inq_atch_file.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_inq_atch_fileFindFirstArgs>(args?: SelectSubset<T, sv_inq_atch_fileFindFirstArgs<ExtArgs>>): Prisma__sv_inq_atch_fileClient<$Result.GetResult<Prisma.$sv_inq_atch_filePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_inq_atch_file that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_atch_fileFindFirstOrThrowArgs} args - Arguments to find a Sv_inq_atch_file
     * @example
     * // Get one Sv_inq_atch_file
     * const sv_inq_atch_file = await prisma.sv_inq_atch_file.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_inq_atch_fileFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_inq_atch_fileFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_inq_atch_fileClient<$Result.GetResult<Prisma.$sv_inq_atch_filePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_inq_atch_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_atch_fileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_inq_atch_files
     * const sv_inq_atch_files = await prisma.sv_inq_atch_file.findMany()
     * 
     * // Get first 10 Sv_inq_atch_files
     * const sv_inq_atch_files = await prisma.sv_inq_atch_file.findMany({ take: 10 })
     * 
     * // Only select the `atch_file_no`
     * const sv_inq_atch_fileWithAtch_file_noOnly = await prisma.sv_inq_atch_file.findMany({ select: { atch_file_no: true } })
     * 
     */
    findMany<T extends sv_inq_atch_fileFindManyArgs>(args?: SelectSubset<T, sv_inq_atch_fileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_inq_atch_filePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_inq_atch_file.
     * @param {sv_inq_atch_fileCreateArgs} args - Arguments to create a Sv_inq_atch_file.
     * @example
     * // Create one Sv_inq_atch_file
     * const Sv_inq_atch_file = await prisma.sv_inq_atch_file.create({
     *   data: {
     *     // ... data to create a Sv_inq_atch_file
     *   }
     * })
     * 
     */
    create<T extends sv_inq_atch_fileCreateArgs>(args: SelectSubset<T, sv_inq_atch_fileCreateArgs<ExtArgs>>): Prisma__sv_inq_atch_fileClient<$Result.GetResult<Prisma.$sv_inq_atch_filePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_inq_atch_files.
     * @param {sv_inq_atch_fileCreateManyArgs} args - Arguments to create many Sv_inq_atch_files.
     * @example
     * // Create many Sv_inq_atch_files
     * const sv_inq_atch_file = await prisma.sv_inq_atch_file.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_inq_atch_fileCreateManyArgs>(args?: SelectSubset<T, sv_inq_atch_fileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_inq_atch_file.
     * @param {sv_inq_atch_fileDeleteArgs} args - Arguments to delete one Sv_inq_atch_file.
     * @example
     * // Delete one Sv_inq_atch_file
     * const Sv_inq_atch_file = await prisma.sv_inq_atch_file.delete({
     *   where: {
     *     // ... filter to delete one Sv_inq_atch_file
     *   }
     * })
     * 
     */
    delete<T extends sv_inq_atch_fileDeleteArgs>(args: SelectSubset<T, sv_inq_atch_fileDeleteArgs<ExtArgs>>): Prisma__sv_inq_atch_fileClient<$Result.GetResult<Prisma.$sv_inq_atch_filePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_inq_atch_file.
     * @param {sv_inq_atch_fileUpdateArgs} args - Arguments to update one Sv_inq_atch_file.
     * @example
     * // Update one Sv_inq_atch_file
     * const sv_inq_atch_file = await prisma.sv_inq_atch_file.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_inq_atch_fileUpdateArgs>(args: SelectSubset<T, sv_inq_atch_fileUpdateArgs<ExtArgs>>): Prisma__sv_inq_atch_fileClient<$Result.GetResult<Prisma.$sv_inq_atch_filePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_inq_atch_files.
     * @param {sv_inq_atch_fileDeleteManyArgs} args - Arguments to filter Sv_inq_atch_files to delete.
     * @example
     * // Delete a few Sv_inq_atch_files
     * const { count } = await prisma.sv_inq_atch_file.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_inq_atch_fileDeleteManyArgs>(args?: SelectSubset<T, sv_inq_atch_fileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_inq_atch_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_atch_fileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_inq_atch_files
     * const sv_inq_atch_file = await prisma.sv_inq_atch_file.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_inq_atch_fileUpdateManyArgs>(args: SelectSubset<T, sv_inq_atch_fileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_inq_atch_file.
     * @param {sv_inq_atch_fileUpsertArgs} args - Arguments to update or create a Sv_inq_atch_file.
     * @example
     * // Update or create a Sv_inq_atch_file
     * const sv_inq_atch_file = await prisma.sv_inq_atch_file.upsert({
     *   create: {
     *     // ... data to create a Sv_inq_atch_file
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_inq_atch_file we want to update
     *   }
     * })
     */
    upsert<T extends sv_inq_atch_fileUpsertArgs>(args: SelectSubset<T, sv_inq_atch_fileUpsertArgs<ExtArgs>>): Prisma__sv_inq_atch_fileClient<$Result.GetResult<Prisma.$sv_inq_atch_filePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_inq_atch_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_atch_fileCountArgs} args - Arguments to filter Sv_inq_atch_files to count.
     * @example
     * // Count the number of Sv_inq_atch_files
     * const count = await prisma.sv_inq_atch_file.count({
     *   where: {
     *     // ... the filter for the Sv_inq_atch_files we want to count
     *   }
     * })
    **/
    count<T extends sv_inq_atch_fileCountArgs>(
      args?: Subset<T, sv_inq_atch_fileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_inq_atch_fileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_inq_atch_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_inq_atch_fileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_inq_atch_fileAggregateArgs>(args: Subset<T, Sv_inq_atch_fileAggregateArgs>): Prisma.PrismaPromise<GetSv_inq_atch_fileAggregateType<T>>

    /**
     * Group by Sv_inq_atch_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_atch_fileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_inq_atch_fileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_inq_atch_fileGroupByArgs['orderBy'] }
        : { orderBy?: sv_inq_atch_fileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_inq_atch_fileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_inq_atch_fileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_inq_atch_file model
   */
  readonly fields: sv_inq_atch_fileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_inq_atch_file.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_inq_atch_fileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_inq_atch_file model
   */
  interface sv_inq_atch_fileFieldRefs {
    readonly atch_file_no: FieldRef<"sv_inq_atch_file", 'BigInt'>
    readonly inq_no: FieldRef<"sv_inq_atch_file", 'BigInt'>
    readonly atch_file_mng_no: FieldRef<"sv_inq_atch_file", 'BigInt'>
    readonly regr_no: FieldRef<"sv_inq_atch_file", 'BigInt'>
    readonly reg_dt: FieldRef<"sv_inq_atch_file", 'DateTime'>
    readonly modr_no: FieldRef<"sv_inq_atch_file", 'BigInt'>
    readonly mod_dt: FieldRef<"sv_inq_atch_file", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_inq_atch_file findUnique
   */
  export type sv_inq_atch_fileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_atch_file
     */
    select?: sv_inq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_atch_file
     */
    omit?: sv_inq_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_atch_file to fetch.
     */
    where: sv_inq_atch_fileWhereUniqueInput
  }

  /**
   * sv_inq_atch_file findUniqueOrThrow
   */
  export type sv_inq_atch_fileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_atch_file
     */
    select?: sv_inq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_atch_file
     */
    omit?: sv_inq_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_atch_file to fetch.
     */
    where: sv_inq_atch_fileWhereUniqueInput
  }

  /**
   * sv_inq_atch_file findFirst
   */
  export type sv_inq_atch_fileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_atch_file
     */
    select?: sv_inq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_atch_file
     */
    omit?: sv_inq_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_atch_file to fetch.
     */
    where?: sv_inq_atch_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inq_atch_files to fetch.
     */
    orderBy?: sv_inq_atch_fileOrderByWithRelationInput | sv_inq_atch_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_inq_atch_files.
     */
    cursor?: sv_inq_atch_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inq_atch_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inq_atch_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_inq_atch_files.
     */
    distinct?: Sv_inq_atch_fileScalarFieldEnum | Sv_inq_atch_fileScalarFieldEnum[]
  }

  /**
   * sv_inq_atch_file findFirstOrThrow
   */
  export type sv_inq_atch_fileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_atch_file
     */
    select?: sv_inq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_atch_file
     */
    omit?: sv_inq_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_atch_file to fetch.
     */
    where?: sv_inq_atch_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inq_atch_files to fetch.
     */
    orderBy?: sv_inq_atch_fileOrderByWithRelationInput | sv_inq_atch_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_inq_atch_files.
     */
    cursor?: sv_inq_atch_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inq_atch_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inq_atch_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_inq_atch_files.
     */
    distinct?: Sv_inq_atch_fileScalarFieldEnum | Sv_inq_atch_fileScalarFieldEnum[]
  }

  /**
   * sv_inq_atch_file findMany
   */
  export type sv_inq_atch_fileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_atch_file
     */
    select?: sv_inq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_atch_file
     */
    omit?: sv_inq_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_atch_files to fetch.
     */
    where?: sv_inq_atch_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inq_atch_files to fetch.
     */
    orderBy?: sv_inq_atch_fileOrderByWithRelationInput | sv_inq_atch_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_inq_atch_files.
     */
    cursor?: sv_inq_atch_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inq_atch_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inq_atch_files.
     */
    skip?: number
    distinct?: Sv_inq_atch_fileScalarFieldEnum | Sv_inq_atch_fileScalarFieldEnum[]
  }

  /**
   * sv_inq_atch_file create
   */
  export type sv_inq_atch_fileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_atch_file
     */
    select?: sv_inq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_atch_file
     */
    omit?: sv_inq_atch_fileOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_inq_atch_file.
     */
    data: XOR<sv_inq_atch_fileCreateInput, sv_inq_atch_fileUncheckedCreateInput>
  }

  /**
   * sv_inq_atch_file createMany
   */
  export type sv_inq_atch_fileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_inq_atch_files.
     */
    data: sv_inq_atch_fileCreateManyInput | sv_inq_atch_fileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_inq_atch_file update
   */
  export type sv_inq_atch_fileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_atch_file
     */
    select?: sv_inq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_atch_file
     */
    omit?: sv_inq_atch_fileOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_inq_atch_file.
     */
    data: XOR<sv_inq_atch_fileUpdateInput, sv_inq_atch_fileUncheckedUpdateInput>
    /**
     * Choose, which sv_inq_atch_file to update.
     */
    where: sv_inq_atch_fileWhereUniqueInput
  }

  /**
   * sv_inq_atch_file updateMany
   */
  export type sv_inq_atch_fileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_inq_atch_files.
     */
    data: XOR<sv_inq_atch_fileUpdateManyMutationInput, sv_inq_atch_fileUncheckedUpdateManyInput>
    /**
     * Filter which sv_inq_atch_files to update
     */
    where?: sv_inq_atch_fileWhereInput
    /**
     * Limit how many sv_inq_atch_files to update.
     */
    limit?: number
  }

  /**
   * sv_inq_atch_file upsert
   */
  export type sv_inq_atch_fileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_atch_file
     */
    select?: sv_inq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_atch_file
     */
    omit?: sv_inq_atch_fileOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_inq_atch_file to update in case it exists.
     */
    where: sv_inq_atch_fileWhereUniqueInput
    /**
     * In case the sv_inq_atch_file found by the `where` argument doesn't exist, create a new sv_inq_atch_file with this data.
     */
    create: XOR<sv_inq_atch_fileCreateInput, sv_inq_atch_fileUncheckedCreateInput>
    /**
     * In case the sv_inq_atch_file was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_inq_atch_fileUpdateInput, sv_inq_atch_fileUncheckedUpdateInput>
  }

  /**
   * sv_inq_atch_file delete
   */
  export type sv_inq_atch_fileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_atch_file
     */
    select?: sv_inq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_atch_file
     */
    omit?: sv_inq_atch_fileOmit<ExtArgs> | null
    /**
     * Filter which sv_inq_atch_file to delete.
     */
    where: sv_inq_atch_fileWhereUniqueInput
  }

  /**
   * sv_inq_atch_file deleteMany
   */
  export type sv_inq_atch_fileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_inq_atch_files to delete
     */
    where?: sv_inq_atch_fileWhereInput
    /**
     * Limit how many sv_inq_atch_files to delete.
     */
    limit?: number
  }

  /**
   * sv_inq_atch_file without action
   */
  export type sv_inq_atch_fileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_atch_file
     */
    select?: sv_inq_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_atch_file
     */
    omit?: sv_inq_atch_fileOmit<ExtArgs> | null
  }


  /**
   * Model sv_inq_clsf
   */

  export type AggregateSv_inq_clsf = {
    _count: Sv_inq_clsfCountAggregateOutputType | null
    _avg: Sv_inq_clsfAvgAggregateOutputType | null
    _sum: Sv_inq_clsfSumAggregateOutputType | null
    _min: Sv_inq_clsfMinAggregateOutputType | null
    _max: Sv_inq_clsfMaxAggregateOutputType | null
  }

  export type Sv_inq_clsfAvgAggregateOutputType = {
    inq_clsf_no: number | null
    clco_no: number | null
    expsr_seq: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_inq_clsfSumAggregateOutputType = {
    inq_clsf_no: number | null
    clco_no: number | null
    expsr_seq: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_inq_clsfMinAggregateOutputType = {
    inq_clsf_no: number | null
    clco_no: number | null
    inq_clsf_nm: string | null
    expsr_seq: number | null
    use_tf: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_inq_clsfMaxAggregateOutputType = {
    inq_clsf_no: number | null
    clco_no: number | null
    inq_clsf_nm: string | null
    expsr_seq: number | null
    use_tf: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_inq_clsfCountAggregateOutputType = {
    inq_clsf_no: number
    clco_no: number
    inq_clsf_nm: number
    expsr_seq: number
    use_tf: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_inq_clsfAvgAggregateInputType = {
    inq_clsf_no?: true
    clco_no?: true
    expsr_seq?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_inq_clsfSumAggregateInputType = {
    inq_clsf_no?: true
    clco_no?: true
    expsr_seq?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_inq_clsfMinAggregateInputType = {
    inq_clsf_no?: true
    clco_no?: true
    inq_clsf_nm?: true
    expsr_seq?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_inq_clsfMaxAggregateInputType = {
    inq_clsf_no?: true
    clco_no?: true
    inq_clsf_nm?: true
    expsr_seq?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_inq_clsfCountAggregateInputType = {
    inq_clsf_no?: true
    clco_no?: true
    inq_clsf_nm?: true
    expsr_seq?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_inq_clsfAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_inq_clsf to aggregate.
     */
    where?: sv_inq_clsfWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inq_clsfs to fetch.
     */
    orderBy?: sv_inq_clsfOrderByWithRelationInput | sv_inq_clsfOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_inq_clsfWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inq_clsfs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inq_clsfs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_inq_clsfs
    **/
    _count?: true | Sv_inq_clsfCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_inq_clsfAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_inq_clsfSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_inq_clsfMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_inq_clsfMaxAggregateInputType
  }

  export type GetSv_inq_clsfAggregateType<T extends Sv_inq_clsfAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_inq_clsf]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_inq_clsf[P]>
      : GetScalarType<T[P], AggregateSv_inq_clsf[P]>
  }




  export type sv_inq_clsfGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_inq_clsfWhereInput
    orderBy?: sv_inq_clsfOrderByWithAggregationInput | sv_inq_clsfOrderByWithAggregationInput[]
    by: Sv_inq_clsfScalarFieldEnum[] | Sv_inq_clsfScalarFieldEnum
    having?: sv_inq_clsfScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_inq_clsfCountAggregateInputType | true
    _avg?: Sv_inq_clsfAvgAggregateInputType
    _sum?: Sv_inq_clsfSumAggregateInputType
    _min?: Sv_inq_clsfMinAggregateInputType
    _max?: Sv_inq_clsfMaxAggregateInputType
  }

  export type Sv_inq_clsfGroupByOutputType = {
    inq_clsf_no: number
    clco_no: number
    inq_clsf_nm: string
    expsr_seq: number
    use_tf: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sv_inq_clsfCountAggregateOutputType | null
    _avg: Sv_inq_clsfAvgAggregateOutputType | null
    _sum: Sv_inq_clsfSumAggregateOutputType | null
    _min: Sv_inq_clsfMinAggregateOutputType | null
    _max: Sv_inq_clsfMaxAggregateOutputType | null
  }

  type GetSv_inq_clsfGroupByPayload<T extends sv_inq_clsfGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_inq_clsfGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_inq_clsfGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_inq_clsfGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_inq_clsfGroupByOutputType[P]>
        }
      >
    >


  export type sv_inq_clsfSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    inq_clsf_no?: boolean
    clco_no?: boolean
    inq_clsf_nm?: boolean
    expsr_seq?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_inq_clsf"]>



  export type sv_inq_clsfSelectScalar = {
    inq_clsf_no?: boolean
    clco_no?: boolean
    inq_clsf_nm?: boolean
    expsr_seq?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_inq_clsfOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"inq_clsf_no" | "clco_no" | "inq_clsf_nm" | "expsr_seq" | "use_tf" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_inq_clsf"]>

  export type $sv_inq_clsfPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_inq_clsf"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      inq_clsf_no: number
      clco_no: number
      inq_clsf_nm: string
      expsr_seq: number
      use_tf: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sv_inq_clsf"]>
    composites: {}
  }

  type sv_inq_clsfGetPayload<S extends boolean | null | undefined | sv_inq_clsfDefaultArgs> = $Result.GetResult<Prisma.$sv_inq_clsfPayload, S>

  type sv_inq_clsfCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_inq_clsfFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_inq_clsfCountAggregateInputType | true
    }

  export interface sv_inq_clsfDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_inq_clsf'], meta: { name: 'sv_inq_clsf' } }
    /**
     * Find zero or one Sv_inq_clsf that matches the filter.
     * @param {sv_inq_clsfFindUniqueArgs} args - Arguments to find a Sv_inq_clsf
     * @example
     * // Get one Sv_inq_clsf
     * const sv_inq_clsf = await prisma.sv_inq_clsf.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_inq_clsfFindUniqueArgs>(args: SelectSubset<T, sv_inq_clsfFindUniqueArgs<ExtArgs>>): Prisma__sv_inq_clsfClient<$Result.GetResult<Prisma.$sv_inq_clsfPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_inq_clsf that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_inq_clsfFindUniqueOrThrowArgs} args - Arguments to find a Sv_inq_clsf
     * @example
     * // Get one Sv_inq_clsf
     * const sv_inq_clsf = await prisma.sv_inq_clsf.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_inq_clsfFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_inq_clsfFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_inq_clsfClient<$Result.GetResult<Prisma.$sv_inq_clsfPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_inq_clsf that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_clsfFindFirstArgs} args - Arguments to find a Sv_inq_clsf
     * @example
     * // Get one Sv_inq_clsf
     * const sv_inq_clsf = await prisma.sv_inq_clsf.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_inq_clsfFindFirstArgs>(args?: SelectSubset<T, sv_inq_clsfFindFirstArgs<ExtArgs>>): Prisma__sv_inq_clsfClient<$Result.GetResult<Prisma.$sv_inq_clsfPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_inq_clsf that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_clsfFindFirstOrThrowArgs} args - Arguments to find a Sv_inq_clsf
     * @example
     * // Get one Sv_inq_clsf
     * const sv_inq_clsf = await prisma.sv_inq_clsf.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_inq_clsfFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_inq_clsfFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_inq_clsfClient<$Result.GetResult<Prisma.$sv_inq_clsfPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_inq_clsfs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_clsfFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_inq_clsfs
     * const sv_inq_clsfs = await prisma.sv_inq_clsf.findMany()
     * 
     * // Get first 10 Sv_inq_clsfs
     * const sv_inq_clsfs = await prisma.sv_inq_clsf.findMany({ take: 10 })
     * 
     * // Only select the `inq_clsf_no`
     * const sv_inq_clsfWithInq_clsf_noOnly = await prisma.sv_inq_clsf.findMany({ select: { inq_clsf_no: true } })
     * 
     */
    findMany<T extends sv_inq_clsfFindManyArgs>(args?: SelectSubset<T, sv_inq_clsfFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_inq_clsfPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_inq_clsf.
     * @param {sv_inq_clsfCreateArgs} args - Arguments to create a Sv_inq_clsf.
     * @example
     * // Create one Sv_inq_clsf
     * const Sv_inq_clsf = await prisma.sv_inq_clsf.create({
     *   data: {
     *     // ... data to create a Sv_inq_clsf
     *   }
     * })
     * 
     */
    create<T extends sv_inq_clsfCreateArgs>(args: SelectSubset<T, sv_inq_clsfCreateArgs<ExtArgs>>): Prisma__sv_inq_clsfClient<$Result.GetResult<Prisma.$sv_inq_clsfPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_inq_clsfs.
     * @param {sv_inq_clsfCreateManyArgs} args - Arguments to create many Sv_inq_clsfs.
     * @example
     * // Create many Sv_inq_clsfs
     * const sv_inq_clsf = await prisma.sv_inq_clsf.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_inq_clsfCreateManyArgs>(args?: SelectSubset<T, sv_inq_clsfCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_inq_clsf.
     * @param {sv_inq_clsfDeleteArgs} args - Arguments to delete one Sv_inq_clsf.
     * @example
     * // Delete one Sv_inq_clsf
     * const Sv_inq_clsf = await prisma.sv_inq_clsf.delete({
     *   where: {
     *     // ... filter to delete one Sv_inq_clsf
     *   }
     * })
     * 
     */
    delete<T extends sv_inq_clsfDeleteArgs>(args: SelectSubset<T, sv_inq_clsfDeleteArgs<ExtArgs>>): Prisma__sv_inq_clsfClient<$Result.GetResult<Prisma.$sv_inq_clsfPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_inq_clsf.
     * @param {sv_inq_clsfUpdateArgs} args - Arguments to update one Sv_inq_clsf.
     * @example
     * // Update one Sv_inq_clsf
     * const sv_inq_clsf = await prisma.sv_inq_clsf.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_inq_clsfUpdateArgs>(args: SelectSubset<T, sv_inq_clsfUpdateArgs<ExtArgs>>): Prisma__sv_inq_clsfClient<$Result.GetResult<Prisma.$sv_inq_clsfPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_inq_clsfs.
     * @param {sv_inq_clsfDeleteManyArgs} args - Arguments to filter Sv_inq_clsfs to delete.
     * @example
     * // Delete a few Sv_inq_clsfs
     * const { count } = await prisma.sv_inq_clsf.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_inq_clsfDeleteManyArgs>(args?: SelectSubset<T, sv_inq_clsfDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_inq_clsfs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_clsfUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_inq_clsfs
     * const sv_inq_clsf = await prisma.sv_inq_clsf.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_inq_clsfUpdateManyArgs>(args: SelectSubset<T, sv_inq_clsfUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_inq_clsf.
     * @param {sv_inq_clsfUpsertArgs} args - Arguments to update or create a Sv_inq_clsf.
     * @example
     * // Update or create a Sv_inq_clsf
     * const sv_inq_clsf = await prisma.sv_inq_clsf.upsert({
     *   create: {
     *     // ... data to create a Sv_inq_clsf
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_inq_clsf we want to update
     *   }
     * })
     */
    upsert<T extends sv_inq_clsfUpsertArgs>(args: SelectSubset<T, sv_inq_clsfUpsertArgs<ExtArgs>>): Prisma__sv_inq_clsfClient<$Result.GetResult<Prisma.$sv_inq_clsfPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_inq_clsfs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_clsfCountArgs} args - Arguments to filter Sv_inq_clsfs to count.
     * @example
     * // Count the number of Sv_inq_clsfs
     * const count = await prisma.sv_inq_clsf.count({
     *   where: {
     *     // ... the filter for the Sv_inq_clsfs we want to count
     *   }
     * })
    **/
    count<T extends sv_inq_clsfCountArgs>(
      args?: Subset<T, sv_inq_clsfCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_inq_clsfCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_inq_clsf.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_inq_clsfAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_inq_clsfAggregateArgs>(args: Subset<T, Sv_inq_clsfAggregateArgs>): Prisma.PrismaPromise<GetSv_inq_clsfAggregateType<T>>

    /**
     * Group by Sv_inq_clsf.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_inq_clsfGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_inq_clsfGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_inq_clsfGroupByArgs['orderBy'] }
        : { orderBy?: sv_inq_clsfGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_inq_clsfGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_inq_clsfGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_inq_clsf model
   */
  readonly fields: sv_inq_clsfFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_inq_clsf.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_inq_clsfClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_inq_clsf model
   */
  interface sv_inq_clsfFieldRefs {
    readonly inq_clsf_no: FieldRef<"sv_inq_clsf", 'Int'>
    readonly clco_no: FieldRef<"sv_inq_clsf", 'Int'>
    readonly inq_clsf_nm: FieldRef<"sv_inq_clsf", 'String'>
    readonly expsr_seq: FieldRef<"sv_inq_clsf", 'Int'>
    readonly use_tf: FieldRef<"sv_inq_clsf", 'String'>
    readonly regr_no: FieldRef<"sv_inq_clsf", 'Int'>
    readonly reg_dt: FieldRef<"sv_inq_clsf", 'DateTime'>
    readonly modr_no: FieldRef<"sv_inq_clsf", 'Int'>
    readonly mod_dt: FieldRef<"sv_inq_clsf", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_inq_clsf findUnique
   */
  export type sv_inq_clsfFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_clsf
     */
    select?: sv_inq_clsfSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_clsf
     */
    omit?: sv_inq_clsfOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_clsf to fetch.
     */
    where: sv_inq_clsfWhereUniqueInput
  }

  /**
   * sv_inq_clsf findUniqueOrThrow
   */
  export type sv_inq_clsfFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_clsf
     */
    select?: sv_inq_clsfSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_clsf
     */
    omit?: sv_inq_clsfOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_clsf to fetch.
     */
    where: sv_inq_clsfWhereUniqueInput
  }

  /**
   * sv_inq_clsf findFirst
   */
  export type sv_inq_clsfFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_clsf
     */
    select?: sv_inq_clsfSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_clsf
     */
    omit?: sv_inq_clsfOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_clsf to fetch.
     */
    where?: sv_inq_clsfWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inq_clsfs to fetch.
     */
    orderBy?: sv_inq_clsfOrderByWithRelationInput | sv_inq_clsfOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_inq_clsfs.
     */
    cursor?: sv_inq_clsfWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inq_clsfs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inq_clsfs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_inq_clsfs.
     */
    distinct?: Sv_inq_clsfScalarFieldEnum | Sv_inq_clsfScalarFieldEnum[]
  }

  /**
   * sv_inq_clsf findFirstOrThrow
   */
  export type sv_inq_clsfFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_clsf
     */
    select?: sv_inq_clsfSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_clsf
     */
    omit?: sv_inq_clsfOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_clsf to fetch.
     */
    where?: sv_inq_clsfWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inq_clsfs to fetch.
     */
    orderBy?: sv_inq_clsfOrderByWithRelationInput | sv_inq_clsfOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_inq_clsfs.
     */
    cursor?: sv_inq_clsfWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inq_clsfs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inq_clsfs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_inq_clsfs.
     */
    distinct?: Sv_inq_clsfScalarFieldEnum | Sv_inq_clsfScalarFieldEnum[]
  }

  /**
   * sv_inq_clsf findMany
   */
  export type sv_inq_clsfFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_clsf
     */
    select?: sv_inq_clsfSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_clsf
     */
    omit?: sv_inq_clsfOmit<ExtArgs> | null
    /**
     * Filter, which sv_inq_clsfs to fetch.
     */
    where?: sv_inq_clsfWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_inq_clsfs to fetch.
     */
    orderBy?: sv_inq_clsfOrderByWithRelationInput | sv_inq_clsfOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_inq_clsfs.
     */
    cursor?: sv_inq_clsfWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_inq_clsfs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_inq_clsfs.
     */
    skip?: number
    distinct?: Sv_inq_clsfScalarFieldEnum | Sv_inq_clsfScalarFieldEnum[]
  }

  /**
   * sv_inq_clsf create
   */
  export type sv_inq_clsfCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_clsf
     */
    select?: sv_inq_clsfSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_clsf
     */
    omit?: sv_inq_clsfOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_inq_clsf.
     */
    data: XOR<sv_inq_clsfCreateInput, sv_inq_clsfUncheckedCreateInput>
  }

  /**
   * sv_inq_clsf createMany
   */
  export type sv_inq_clsfCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_inq_clsfs.
     */
    data: sv_inq_clsfCreateManyInput | sv_inq_clsfCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_inq_clsf update
   */
  export type sv_inq_clsfUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_clsf
     */
    select?: sv_inq_clsfSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_clsf
     */
    omit?: sv_inq_clsfOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_inq_clsf.
     */
    data: XOR<sv_inq_clsfUpdateInput, sv_inq_clsfUncheckedUpdateInput>
    /**
     * Choose, which sv_inq_clsf to update.
     */
    where: sv_inq_clsfWhereUniqueInput
  }

  /**
   * sv_inq_clsf updateMany
   */
  export type sv_inq_clsfUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_inq_clsfs.
     */
    data: XOR<sv_inq_clsfUpdateManyMutationInput, sv_inq_clsfUncheckedUpdateManyInput>
    /**
     * Filter which sv_inq_clsfs to update
     */
    where?: sv_inq_clsfWhereInput
    /**
     * Limit how many sv_inq_clsfs to update.
     */
    limit?: number
  }

  /**
   * sv_inq_clsf upsert
   */
  export type sv_inq_clsfUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_clsf
     */
    select?: sv_inq_clsfSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_clsf
     */
    omit?: sv_inq_clsfOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_inq_clsf to update in case it exists.
     */
    where: sv_inq_clsfWhereUniqueInput
    /**
     * In case the sv_inq_clsf found by the `where` argument doesn't exist, create a new sv_inq_clsf with this data.
     */
    create: XOR<sv_inq_clsfCreateInput, sv_inq_clsfUncheckedCreateInput>
    /**
     * In case the sv_inq_clsf was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_inq_clsfUpdateInput, sv_inq_clsfUncheckedUpdateInput>
  }

  /**
   * sv_inq_clsf delete
   */
  export type sv_inq_clsfDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_clsf
     */
    select?: sv_inq_clsfSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_clsf
     */
    omit?: sv_inq_clsfOmit<ExtArgs> | null
    /**
     * Filter which sv_inq_clsf to delete.
     */
    where: sv_inq_clsfWhereUniqueInput
  }

  /**
   * sv_inq_clsf deleteMany
   */
  export type sv_inq_clsfDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_inq_clsfs to delete
     */
    where?: sv_inq_clsfWhereInput
    /**
     * Limit how many sv_inq_clsfs to delete.
     */
    limit?: number
  }

  /**
   * sv_inq_clsf without action
   */
  export type sv_inq_clsfDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_inq_clsf
     */
    select?: sv_inq_clsfSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_inq_clsf
     */
    omit?: sv_inq_clsfOmit<ExtArgs> | null
  }


  /**
   * Model sv_ntc
   */

  export type AggregateSv_ntc = {
    _count: Sv_ntcCountAggregateOutputType | null
    _avg: Sv_ntcAvgAggregateOutputType | null
    _sum: Sv_ntcSumAggregateOutputType | null
    _min: Sv_ntcMinAggregateOutputType | null
    _max: Sv_ntcMaxAggregateOutputType | null
  }

  export type Sv_ntcAvgAggregateOutputType = {
    ntc_no: number | null
    clco_no: number | null
    prjt_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_ntcSumAggregateOutputType = {
    ntc_no: number | null
    clco_no: number | null
    prjt_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_ntcMinAggregateOutputType = {
    ntc_no: number | null
    clco_no: number | null
    prjt_no: number | null
    expsr_tf: string | null
    uprw_fix_tf: string | null
    ntc_ttl: string | null
    expsr_end_dt_stng_tf: string | null
    expsr_bgng_dt: Date | null
    expsr_end_dt: Date | null
    ntc_cont: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_ntcMaxAggregateOutputType = {
    ntc_no: number | null
    clco_no: number | null
    prjt_no: number | null
    expsr_tf: string | null
    uprw_fix_tf: string | null
    ntc_ttl: string | null
    expsr_end_dt_stng_tf: string | null
    expsr_bgng_dt: Date | null
    expsr_end_dt: Date | null
    ntc_cont: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_ntcCountAggregateOutputType = {
    ntc_no: number
    clco_no: number
    prjt_no: number
    expsr_tf: number
    uprw_fix_tf: number
    ntc_ttl: number
    expsr_end_dt_stng_tf: number
    expsr_bgng_dt: number
    expsr_end_dt: number
    ntc_cont: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_ntcAvgAggregateInputType = {
    ntc_no?: true
    clco_no?: true
    prjt_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_ntcSumAggregateInputType = {
    ntc_no?: true
    clco_no?: true
    prjt_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_ntcMinAggregateInputType = {
    ntc_no?: true
    clco_no?: true
    prjt_no?: true
    expsr_tf?: true
    uprw_fix_tf?: true
    ntc_ttl?: true
    expsr_end_dt_stng_tf?: true
    expsr_bgng_dt?: true
    expsr_end_dt?: true
    ntc_cont?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_ntcMaxAggregateInputType = {
    ntc_no?: true
    clco_no?: true
    prjt_no?: true
    expsr_tf?: true
    uprw_fix_tf?: true
    ntc_ttl?: true
    expsr_end_dt_stng_tf?: true
    expsr_bgng_dt?: true
    expsr_end_dt?: true
    ntc_cont?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_ntcCountAggregateInputType = {
    ntc_no?: true
    clco_no?: true
    prjt_no?: true
    expsr_tf?: true
    uprw_fix_tf?: true
    ntc_ttl?: true
    expsr_end_dt_stng_tf?: true
    expsr_bgng_dt?: true
    expsr_end_dt?: true
    ntc_cont?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_ntcAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_ntc to aggregate.
     */
    where?: sv_ntcWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_ntcs to fetch.
     */
    orderBy?: sv_ntcOrderByWithRelationInput | sv_ntcOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_ntcWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_ntcs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_ntcs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_ntcs
    **/
    _count?: true | Sv_ntcCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_ntcAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_ntcSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_ntcMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_ntcMaxAggregateInputType
  }

  export type GetSv_ntcAggregateType<T extends Sv_ntcAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_ntc]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_ntc[P]>
      : GetScalarType<T[P], AggregateSv_ntc[P]>
  }




  export type sv_ntcGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_ntcWhereInput
    orderBy?: sv_ntcOrderByWithAggregationInput | sv_ntcOrderByWithAggregationInput[]
    by: Sv_ntcScalarFieldEnum[] | Sv_ntcScalarFieldEnum
    having?: sv_ntcScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_ntcCountAggregateInputType | true
    _avg?: Sv_ntcAvgAggregateInputType
    _sum?: Sv_ntcSumAggregateInputType
    _min?: Sv_ntcMinAggregateInputType
    _max?: Sv_ntcMaxAggregateInputType
  }

  export type Sv_ntcGroupByOutputType = {
    ntc_no: number
    clco_no: number
    prjt_no: number | null
    expsr_tf: string
    uprw_fix_tf: string
    ntc_ttl: string
    expsr_end_dt_stng_tf: string
    expsr_bgng_dt: Date
    expsr_end_dt: Date
    ntc_cont: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sv_ntcCountAggregateOutputType | null
    _avg: Sv_ntcAvgAggregateOutputType | null
    _sum: Sv_ntcSumAggregateOutputType | null
    _min: Sv_ntcMinAggregateOutputType | null
    _max: Sv_ntcMaxAggregateOutputType | null
  }

  type GetSv_ntcGroupByPayload<T extends sv_ntcGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_ntcGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_ntcGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_ntcGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_ntcGroupByOutputType[P]>
        }
      >
    >


  export type sv_ntcSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ntc_no?: boolean
    clco_no?: boolean
    prjt_no?: boolean
    expsr_tf?: boolean
    uprw_fix_tf?: boolean
    ntc_ttl?: boolean
    expsr_end_dt_stng_tf?: boolean
    expsr_bgng_dt?: boolean
    expsr_end_dt?: boolean
    ntc_cont?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_ntc"]>



  export type sv_ntcSelectScalar = {
    ntc_no?: boolean
    clco_no?: boolean
    prjt_no?: boolean
    expsr_tf?: boolean
    uprw_fix_tf?: boolean
    ntc_ttl?: boolean
    expsr_end_dt_stng_tf?: boolean
    expsr_bgng_dt?: boolean
    expsr_end_dt?: boolean
    ntc_cont?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_ntcOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ntc_no" | "clco_no" | "prjt_no" | "expsr_tf" | "uprw_fix_tf" | "ntc_ttl" | "expsr_end_dt_stng_tf" | "expsr_bgng_dt" | "expsr_end_dt" | "ntc_cont" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_ntc"]>

  export type $sv_ntcPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_ntc"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ntc_no: number
      clco_no: number
      prjt_no: number | null
      expsr_tf: string
      uprw_fix_tf: string
      ntc_ttl: string
      expsr_end_dt_stng_tf: string
      expsr_bgng_dt: Date
      expsr_end_dt: Date
      ntc_cont: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sv_ntc"]>
    composites: {}
  }

  type sv_ntcGetPayload<S extends boolean | null | undefined | sv_ntcDefaultArgs> = $Result.GetResult<Prisma.$sv_ntcPayload, S>

  type sv_ntcCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_ntcFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_ntcCountAggregateInputType | true
    }

  export interface sv_ntcDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_ntc'], meta: { name: 'sv_ntc' } }
    /**
     * Find zero or one Sv_ntc that matches the filter.
     * @param {sv_ntcFindUniqueArgs} args - Arguments to find a Sv_ntc
     * @example
     * // Get one Sv_ntc
     * const sv_ntc = await prisma.sv_ntc.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_ntcFindUniqueArgs>(args: SelectSubset<T, sv_ntcFindUniqueArgs<ExtArgs>>): Prisma__sv_ntcClient<$Result.GetResult<Prisma.$sv_ntcPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_ntc that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_ntcFindUniqueOrThrowArgs} args - Arguments to find a Sv_ntc
     * @example
     * // Get one Sv_ntc
     * const sv_ntc = await prisma.sv_ntc.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_ntcFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_ntcFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_ntcClient<$Result.GetResult<Prisma.$sv_ntcPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_ntc that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_ntcFindFirstArgs} args - Arguments to find a Sv_ntc
     * @example
     * // Get one Sv_ntc
     * const sv_ntc = await prisma.sv_ntc.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_ntcFindFirstArgs>(args?: SelectSubset<T, sv_ntcFindFirstArgs<ExtArgs>>): Prisma__sv_ntcClient<$Result.GetResult<Prisma.$sv_ntcPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_ntc that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_ntcFindFirstOrThrowArgs} args - Arguments to find a Sv_ntc
     * @example
     * // Get one Sv_ntc
     * const sv_ntc = await prisma.sv_ntc.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_ntcFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_ntcFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_ntcClient<$Result.GetResult<Prisma.$sv_ntcPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_ntcs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_ntcFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_ntcs
     * const sv_ntcs = await prisma.sv_ntc.findMany()
     * 
     * // Get first 10 Sv_ntcs
     * const sv_ntcs = await prisma.sv_ntc.findMany({ take: 10 })
     * 
     * // Only select the `ntc_no`
     * const sv_ntcWithNtc_noOnly = await prisma.sv_ntc.findMany({ select: { ntc_no: true } })
     * 
     */
    findMany<T extends sv_ntcFindManyArgs>(args?: SelectSubset<T, sv_ntcFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_ntcPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_ntc.
     * @param {sv_ntcCreateArgs} args - Arguments to create a Sv_ntc.
     * @example
     * // Create one Sv_ntc
     * const Sv_ntc = await prisma.sv_ntc.create({
     *   data: {
     *     // ... data to create a Sv_ntc
     *   }
     * })
     * 
     */
    create<T extends sv_ntcCreateArgs>(args: SelectSubset<T, sv_ntcCreateArgs<ExtArgs>>): Prisma__sv_ntcClient<$Result.GetResult<Prisma.$sv_ntcPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_ntcs.
     * @param {sv_ntcCreateManyArgs} args - Arguments to create many Sv_ntcs.
     * @example
     * // Create many Sv_ntcs
     * const sv_ntc = await prisma.sv_ntc.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_ntcCreateManyArgs>(args?: SelectSubset<T, sv_ntcCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_ntc.
     * @param {sv_ntcDeleteArgs} args - Arguments to delete one Sv_ntc.
     * @example
     * // Delete one Sv_ntc
     * const Sv_ntc = await prisma.sv_ntc.delete({
     *   where: {
     *     // ... filter to delete one Sv_ntc
     *   }
     * })
     * 
     */
    delete<T extends sv_ntcDeleteArgs>(args: SelectSubset<T, sv_ntcDeleteArgs<ExtArgs>>): Prisma__sv_ntcClient<$Result.GetResult<Prisma.$sv_ntcPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_ntc.
     * @param {sv_ntcUpdateArgs} args - Arguments to update one Sv_ntc.
     * @example
     * // Update one Sv_ntc
     * const sv_ntc = await prisma.sv_ntc.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_ntcUpdateArgs>(args: SelectSubset<T, sv_ntcUpdateArgs<ExtArgs>>): Prisma__sv_ntcClient<$Result.GetResult<Prisma.$sv_ntcPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_ntcs.
     * @param {sv_ntcDeleteManyArgs} args - Arguments to filter Sv_ntcs to delete.
     * @example
     * // Delete a few Sv_ntcs
     * const { count } = await prisma.sv_ntc.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_ntcDeleteManyArgs>(args?: SelectSubset<T, sv_ntcDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_ntcs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_ntcUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_ntcs
     * const sv_ntc = await prisma.sv_ntc.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_ntcUpdateManyArgs>(args: SelectSubset<T, sv_ntcUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_ntc.
     * @param {sv_ntcUpsertArgs} args - Arguments to update or create a Sv_ntc.
     * @example
     * // Update or create a Sv_ntc
     * const sv_ntc = await prisma.sv_ntc.upsert({
     *   create: {
     *     // ... data to create a Sv_ntc
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_ntc we want to update
     *   }
     * })
     */
    upsert<T extends sv_ntcUpsertArgs>(args: SelectSubset<T, sv_ntcUpsertArgs<ExtArgs>>): Prisma__sv_ntcClient<$Result.GetResult<Prisma.$sv_ntcPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_ntcs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_ntcCountArgs} args - Arguments to filter Sv_ntcs to count.
     * @example
     * // Count the number of Sv_ntcs
     * const count = await prisma.sv_ntc.count({
     *   where: {
     *     // ... the filter for the Sv_ntcs we want to count
     *   }
     * })
    **/
    count<T extends sv_ntcCountArgs>(
      args?: Subset<T, sv_ntcCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_ntcCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_ntc.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_ntcAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_ntcAggregateArgs>(args: Subset<T, Sv_ntcAggregateArgs>): Prisma.PrismaPromise<GetSv_ntcAggregateType<T>>

    /**
     * Group by Sv_ntc.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_ntcGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_ntcGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_ntcGroupByArgs['orderBy'] }
        : { orderBy?: sv_ntcGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_ntcGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_ntcGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_ntc model
   */
  readonly fields: sv_ntcFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_ntc.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_ntcClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_ntc model
   */
  interface sv_ntcFieldRefs {
    readonly ntc_no: FieldRef<"sv_ntc", 'Int'>
    readonly clco_no: FieldRef<"sv_ntc", 'Int'>
    readonly prjt_no: FieldRef<"sv_ntc", 'Int'>
    readonly expsr_tf: FieldRef<"sv_ntc", 'String'>
    readonly uprw_fix_tf: FieldRef<"sv_ntc", 'String'>
    readonly ntc_ttl: FieldRef<"sv_ntc", 'String'>
    readonly expsr_end_dt_stng_tf: FieldRef<"sv_ntc", 'String'>
    readonly expsr_bgng_dt: FieldRef<"sv_ntc", 'DateTime'>
    readonly expsr_end_dt: FieldRef<"sv_ntc", 'DateTime'>
    readonly ntc_cont: FieldRef<"sv_ntc", 'String'>
    readonly regr_no: FieldRef<"sv_ntc", 'Int'>
    readonly reg_dt: FieldRef<"sv_ntc", 'DateTime'>
    readonly modr_no: FieldRef<"sv_ntc", 'Int'>
    readonly mod_dt: FieldRef<"sv_ntc", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_ntc findUnique
   */
  export type sv_ntcFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc
     */
    select?: sv_ntcSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc
     */
    omit?: sv_ntcOmit<ExtArgs> | null
    /**
     * Filter, which sv_ntc to fetch.
     */
    where: sv_ntcWhereUniqueInput
  }

  /**
   * sv_ntc findUniqueOrThrow
   */
  export type sv_ntcFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc
     */
    select?: sv_ntcSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc
     */
    omit?: sv_ntcOmit<ExtArgs> | null
    /**
     * Filter, which sv_ntc to fetch.
     */
    where: sv_ntcWhereUniqueInput
  }

  /**
   * sv_ntc findFirst
   */
  export type sv_ntcFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc
     */
    select?: sv_ntcSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc
     */
    omit?: sv_ntcOmit<ExtArgs> | null
    /**
     * Filter, which sv_ntc to fetch.
     */
    where?: sv_ntcWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_ntcs to fetch.
     */
    orderBy?: sv_ntcOrderByWithRelationInput | sv_ntcOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_ntcs.
     */
    cursor?: sv_ntcWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_ntcs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_ntcs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_ntcs.
     */
    distinct?: Sv_ntcScalarFieldEnum | Sv_ntcScalarFieldEnum[]
  }

  /**
   * sv_ntc findFirstOrThrow
   */
  export type sv_ntcFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc
     */
    select?: sv_ntcSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc
     */
    omit?: sv_ntcOmit<ExtArgs> | null
    /**
     * Filter, which sv_ntc to fetch.
     */
    where?: sv_ntcWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_ntcs to fetch.
     */
    orderBy?: sv_ntcOrderByWithRelationInput | sv_ntcOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_ntcs.
     */
    cursor?: sv_ntcWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_ntcs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_ntcs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_ntcs.
     */
    distinct?: Sv_ntcScalarFieldEnum | Sv_ntcScalarFieldEnum[]
  }

  /**
   * sv_ntc findMany
   */
  export type sv_ntcFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc
     */
    select?: sv_ntcSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc
     */
    omit?: sv_ntcOmit<ExtArgs> | null
    /**
     * Filter, which sv_ntcs to fetch.
     */
    where?: sv_ntcWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_ntcs to fetch.
     */
    orderBy?: sv_ntcOrderByWithRelationInput | sv_ntcOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_ntcs.
     */
    cursor?: sv_ntcWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_ntcs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_ntcs.
     */
    skip?: number
    distinct?: Sv_ntcScalarFieldEnum | Sv_ntcScalarFieldEnum[]
  }

  /**
   * sv_ntc create
   */
  export type sv_ntcCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc
     */
    select?: sv_ntcSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc
     */
    omit?: sv_ntcOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_ntc.
     */
    data: XOR<sv_ntcCreateInput, sv_ntcUncheckedCreateInput>
  }

  /**
   * sv_ntc createMany
   */
  export type sv_ntcCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_ntcs.
     */
    data: sv_ntcCreateManyInput | sv_ntcCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_ntc update
   */
  export type sv_ntcUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc
     */
    select?: sv_ntcSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc
     */
    omit?: sv_ntcOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_ntc.
     */
    data: XOR<sv_ntcUpdateInput, sv_ntcUncheckedUpdateInput>
    /**
     * Choose, which sv_ntc to update.
     */
    where: sv_ntcWhereUniqueInput
  }

  /**
   * sv_ntc updateMany
   */
  export type sv_ntcUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_ntcs.
     */
    data: XOR<sv_ntcUpdateManyMutationInput, sv_ntcUncheckedUpdateManyInput>
    /**
     * Filter which sv_ntcs to update
     */
    where?: sv_ntcWhereInput
    /**
     * Limit how many sv_ntcs to update.
     */
    limit?: number
  }

  /**
   * sv_ntc upsert
   */
  export type sv_ntcUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc
     */
    select?: sv_ntcSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc
     */
    omit?: sv_ntcOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_ntc to update in case it exists.
     */
    where: sv_ntcWhereUniqueInput
    /**
     * In case the sv_ntc found by the `where` argument doesn't exist, create a new sv_ntc with this data.
     */
    create: XOR<sv_ntcCreateInput, sv_ntcUncheckedCreateInput>
    /**
     * In case the sv_ntc was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_ntcUpdateInput, sv_ntcUncheckedUpdateInput>
  }

  /**
   * sv_ntc delete
   */
  export type sv_ntcDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc
     */
    select?: sv_ntcSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc
     */
    omit?: sv_ntcOmit<ExtArgs> | null
    /**
     * Filter which sv_ntc to delete.
     */
    where: sv_ntcWhereUniqueInput
  }

  /**
   * sv_ntc deleteMany
   */
  export type sv_ntcDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_ntcs to delete
     */
    where?: sv_ntcWhereInput
    /**
     * Limit how many sv_ntcs to delete.
     */
    limit?: number
  }

  /**
   * sv_ntc without action
   */
  export type sv_ntcDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc
     */
    select?: sv_ntcSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc
     */
    omit?: sv_ntcOmit<ExtArgs> | null
  }


  /**
   * Model sv_ntc_atch_file
   */

  export type AggregateSv_ntc_atch_file = {
    _count: Sv_ntc_atch_fileCountAggregateOutputType | null
    _avg: Sv_ntc_atch_fileAvgAggregateOutputType | null
    _sum: Sv_ntc_atch_fileSumAggregateOutputType | null
    _min: Sv_ntc_atch_fileMinAggregateOutputType | null
    _max: Sv_ntc_atch_fileMaxAggregateOutputType | null
  }

  export type Sv_ntc_atch_fileAvgAggregateOutputType = {
    atch_file_no: number | null
    ntc_no: number | null
    atch_file_mng_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_ntc_atch_fileSumAggregateOutputType = {
    atch_file_no: number | null
    ntc_no: number | null
    atch_file_mng_no: bigint | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_ntc_atch_fileMinAggregateOutputType = {
    atch_file_no: number | null
    ntc_no: number | null
    atch_file_mng_no: bigint | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_ntc_atch_fileMaxAggregateOutputType = {
    atch_file_no: number | null
    ntc_no: number | null
    atch_file_mng_no: bigint | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_ntc_atch_fileCountAggregateOutputType = {
    atch_file_no: number
    ntc_no: number
    atch_file_mng_no: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_ntc_atch_fileAvgAggregateInputType = {
    atch_file_no?: true
    ntc_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_ntc_atch_fileSumAggregateInputType = {
    atch_file_no?: true
    ntc_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_ntc_atch_fileMinAggregateInputType = {
    atch_file_no?: true
    ntc_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_ntc_atch_fileMaxAggregateInputType = {
    atch_file_no?: true
    ntc_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_ntc_atch_fileCountAggregateInputType = {
    atch_file_no?: true
    ntc_no?: true
    atch_file_mng_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_ntc_atch_fileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_ntc_atch_file to aggregate.
     */
    where?: sv_ntc_atch_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_ntc_atch_files to fetch.
     */
    orderBy?: sv_ntc_atch_fileOrderByWithRelationInput | sv_ntc_atch_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_ntc_atch_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_ntc_atch_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_ntc_atch_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_ntc_atch_files
    **/
    _count?: true | Sv_ntc_atch_fileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_ntc_atch_fileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_ntc_atch_fileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_ntc_atch_fileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_ntc_atch_fileMaxAggregateInputType
  }

  export type GetSv_ntc_atch_fileAggregateType<T extends Sv_ntc_atch_fileAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_ntc_atch_file]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_ntc_atch_file[P]>
      : GetScalarType<T[P], AggregateSv_ntc_atch_file[P]>
  }




  export type sv_ntc_atch_fileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_ntc_atch_fileWhereInput
    orderBy?: sv_ntc_atch_fileOrderByWithAggregationInput | sv_ntc_atch_fileOrderByWithAggregationInput[]
    by: Sv_ntc_atch_fileScalarFieldEnum[] | Sv_ntc_atch_fileScalarFieldEnum
    having?: sv_ntc_atch_fileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_ntc_atch_fileCountAggregateInputType | true
    _avg?: Sv_ntc_atch_fileAvgAggregateInputType
    _sum?: Sv_ntc_atch_fileSumAggregateInputType
    _min?: Sv_ntc_atch_fileMinAggregateInputType
    _max?: Sv_ntc_atch_fileMaxAggregateInputType
  }

  export type Sv_ntc_atch_fileGroupByOutputType = {
    atch_file_no: number
    ntc_no: number
    atch_file_mng_no: bigint
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sv_ntc_atch_fileCountAggregateOutputType | null
    _avg: Sv_ntc_atch_fileAvgAggregateOutputType | null
    _sum: Sv_ntc_atch_fileSumAggregateOutputType | null
    _min: Sv_ntc_atch_fileMinAggregateOutputType | null
    _max: Sv_ntc_atch_fileMaxAggregateOutputType | null
  }

  type GetSv_ntc_atch_fileGroupByPayload<T extends sv_ntc_atch_fileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_ntc_atch_fileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_ntc_atch_fileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_ntc_atch_fileGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_ntc_atch_fileGroupByOutputType[P]>
        }
      >
    >


  export type sv_ntc_atch_fileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    atch_file_no?: boolean
    ntc_no?: boolean
    atch_file_mng_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_ntc_atch_file"]>



  export type sv_ntc_atch_fileSelectScalar = {
    atch_file_no?: boolean
    ntc_no?: boolean
    atch_file_mng_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_ntc_atch_fileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"atch_file_no" | "ntc_no" | "atch_file_mng_no" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_ntc_atch_file"]>

  export type $sv_ntc_atch_filePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_ntc_atch_file"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      atch_file_no: number
      ntc_no: number
      atch_file_mng_no: bigint
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sv_ntc_atch_file"]>
    composites: {}
  }

  type sv_ntc_atch_fileGetPayload<S extends boolean | null | undefined | sv_ntc_atch_fileDefaultArgs> = $Result.GetResult<Prisma.$sv_ntc_atch_filePayload, S>

  type sv_ntc_atch_fileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_ntc_atch_fileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_ntc_atch_fileCountAggregateInputType | true
    }

  export interface sv_ntc_atch_fileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_ntc_atch_file'], meta: { name: 'sv_ntc_atch_file' } }
    /**
     * Find zero or one Sv_ntc_atch_file that matches the filter.
     * @param {sv_ntc_atch_fileFindUniqueArgs} args - Arguments to find a Sv_ntc_atch_file
     * @example
     * // Get one Sv_ntc_atch_file
     * const sv_ntc_atch_file = await prisma.sv_ntc_atch_file.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_ntc_atch_fileFindUniqueArgs>(args: SelectSubset<T, sv_ntc_atch_fileFindUniqueArgs<ExtArgs>>): Prisma__sv_ntc_atch_fileClient<$Result.GetResult<Prisma.$sv_ntc_atch_filePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_ntc_atch_file that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_ntc_atch_fileFindUniqueOrThrowArgs} args - Arguments to find a Sv_ntc_atch_file
     * @example
     * // Get one Sv_ntc_atch_file
     * const sv_ntc_atch_file = await prisma.sv_ntc_atch_file.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_ntc_atch_fileFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_ntc_atch_fileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_ntc_atch_fileClient<$Result.GetResult<Prisma.$sv_ntc_atch_filePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_ntc_atch_file that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_ntc_atch_fileFindFirstArgs} args - Arguments to find a Sv_ntc_atch_file
     * @example
     * // Get one Sv_ntc_atch_file
     * const sv_ntc_atch_file = await prisma.sv_ntc_atch_file.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_ntc_atch_fileFindFirstArgs>(args?: SelectSubset<T, sv_ntc_atch_fileFindFirstArgs<ExtArgs>>): Prisma__sv_ntc_atch_fileClient<$Result.GetResult<Prisma.$sv_ntc_atch_filePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_ntc_atch_file that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_ntc_atch_fileFindFirstOrThrowArgs} args - Arguments to find a Sv_ntc_atch_file
     * @example
     * // Get one Sv_ntc_atch_file
     * const sv_ntc_atch_file = await prisma.sv_ntc_atch_file.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_ntc_atch_fileFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_ntc_atch_fileFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_ntc_atch_fileClient<$Result.GetResult<Prisma.$sv_ntc_atch_filePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_ntc_atch_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_ntc_atch_fileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_ntc_atch_files
     * const sv_ntc_atch_files = await prisma.sv_ntc_atch_file.findMany()
     * 
     * // Get first 10 Sv_ntc_atch_files
     * const sv_ntc_atch_files = await prisma.sv_ntc_atch_file.findMany({ take: 10 })
     * 
     * // Only select the `atch_file_no`
     * const sv_ntc_atch_fileWithAtch_file_noOnly = await prisma.sv_ntc_atch_file.findMany({ select: { atch_file_no: true } })
     * 
     */
    findMany<T extends sv_ntc_atch_fileFindManyArgs>(args?: SelectSubset<T, sv_ntc_atch_fileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_ntc_atch_filePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_ntc_atch_file.
     * @param {sv_ntc_atch_fileCreateArgs} args - Arguments to create a Sv_ntc_atch_file.
     * @example
     * // Create one Sv_ntc_atch_file
     * const Sv_ntc_atch_file = await prisma.sv_ntc_atch_file.create({
     *   data: {
     *     // ... data to create a Sv_ntc_atch_file
     *   }
     * })
     * 
     */
    create<T extends sv_ntc_atch_fileCreateArgs>(args: SelectSubset<T, sv_ntc_atch_fileCreateArgs<ExtArgs>>): Prisma__sv_ntc_atch_fileClient<$Result.GetResult<Prisma.$sv_ntc_atch_filePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_ntc_atch_files.
     * @param {sv_ntc_atch_fileCreateManyArgs} args - Arguments to create many Sv_ntc_atch_files.
     * @example
     * // Create many Sv_ntc_atch_files
     * const sv_ntc_atch_file = await prisma.sv_ntc_atch_file.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_ntc_atch_fileCreateManyArgs>(args?: SelectSubset<T, sv_ntc_atch_fileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_ntc_atch_file.
     * @param {sv_ntc_atch_fileDeleteArgs} args - Arguments to delete one Sv_ntc_atch_file.
     * @example
     * // Delete one Sv_ntc_atch_file
     * const Sv_ntc_atch_file = await prisma.sv_ntc_atch_file.delete({
     *   where: {
     *     // ... filter to delete one Sv_ntc_atch_file
     *   }
     * })
     * 
     */
    delete<T extends sv_ntc_atch_fileDeleteArgs>(args: SelectSubset<T, sv_ntc_atch_fileDeleteArgs<ExtArgs>>): Prisma__sv_ntc_atch_fileClient<$Result.GetResult<Prisma.$sv_ntc_atch_filePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_ntc_atch_file.
     * @param {sv_ntc_atch_fileUpdateArgs} args - Arguments to update one Sv_ntc_atch_file.
     * @example
     * // Update one Sv_ntc_atch_file
     * const sv_ntc_atch_file = await prisma.sv_ntc_atch_file.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_ntc_atch_fileUpdateArgs>(args: SelectSubset<T, sv_ntc_atch_fileUpdateArgs<ExtArgs>>): Prisma__sv_ntc_atch_fileClient<$Result.GetResult<Prisma.$sv_ntc_atch_filePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_ntc_atch_files.
     * @param {sv_ntc_atch_fileDeleteManyArgs} args - Arguments to filter Sv_ntc_atch_files to delete.
     * @example
     * // Delete a few Sv_ntc_atch_files
     * const { count } = await prisma.sv_ntc_atch_file.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_ntc_atch_fileDeleteManyArgs>(args?: SelectSubset<T, sv_ntc_atch_fileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_ntc_atch_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_ntc_atch_fileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_ntc_atch_files
     * const sv_ntc_atch_file = await prisma.sv_ntc_atch_file.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_ntc_atch_fileUpdateManyArgs>(args: SelectSubset<T, sv_ntc_atch_fileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_ntc_atch_file.
     * @param {sv_ntc_atch_fileUpsertArgs} args - Arguments to update or create a Sv_ntc_atch_file.
     * @example
     * // Update or create a Sv_ntc_atch_file
     * const sv_ntc_atch_file = await prisma.sv_ntc_atch_file.upsert({
     *   create: {
     *     // ... data to create a Sv_ntc_atch_file
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_ntc_atch_file we want to update
     *   }
     * })
     */
    upsert<T extends sv_ntc_atch_fileUpsertArgs>(args: SelectSubset<T, sv_ntc_atch_fileUpsertArgs<ExtArgs>>): Prisma__sv_ntc_atch_fileClient<$Result.GetResult<Prisma.$sv_ntc_atch_filePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_ntc_atch_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_ntc_atch_fileCountArgs} args - Arguments to filter Sv_ntc_atch_files to count.
     * @example
     * // Count the number of Sv_ntc_atch_files
     * const count = await prisma.sv_ntc_atch_file.count({
     *   where: {
     *     // ... the filter for the Sv_ntc_atch_files we want to count
     *   }
     * })
    **/
    count<T extends sv_ntc_atch_fileCountArgs>(
      args?: Subset<T, sv_ntc_atch_fileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_ntc_atch_fileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_ntc_atch_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_ntc_atch_fileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_ntc_atch_fileAggregateArgs>(args: Subset<T, Sv_ntc_atch_fileAggregateArgs>): Prisma.PrismaPromise<GetSv_ntc_atch_fileAggregateType<T>>

    /**
     * Group by Sv_ntc_atch_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_ntc_atch_fileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_ntc_atch_fileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_ntc_atch_fileGroupByArgs['orderBy'] }
        : { orderBy?: sv_ntc_atch_fileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_ntc_atch_fileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_ntc_atch_fileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_ntc_atch_file model
   */
  readonly fields: sv_ntc_atch_fileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_ntc_atch_file.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_ntc_atch_fileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_ntc_atch_file model
   */
  interface sv_ntc_atch_fileFieldRefs {
    readonly atch_file_no: FieldRef<"sv_ntc_atch_file", 'Int'>
    readonly ntc_no: FieldRef<"sv_ntc_atch_file", 'Int'>
    readonly atch_file_mng_no: FieldRef<"sv_ntc_atch_file", 'BigInt'>
    readonly regr_no: FieldRef<"sv_ntc_atch_file", 'Int'>
    readonly reg_dt: FieldRef<"sv_ntc_atch_file", 'DateTime'>
    readonly modr_no: FieldRef<"sv_ntc_atch_file", 'Int'>
    readonly mod_dt: FieldRef<"sv_ntc_atch_file", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_ntc_atch_file findUnique
   */
  export type sv_ntc_atch_fileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc_atch_file
     */
    select?: sv_ntc_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc_atch_file
     */
    omit?: sv_ntc_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_ntc_atch_file to fetch.
     */
    where: sv_ntc_atch_fileWhereUniqueInput
  }

  /**
   * sv_ntc_atch_file findUniqueOrThrow
   */
  export type sv_ntc_atch_fileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc_atch_file
     */
    select?: sv_ntc_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc_atch_file
     */
    omit?: sv_ntc_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_ntc_atch_file to fetch.
     */
    where: sv_ntc_atch_fileWhereUniqueInput
  }

  /**
   * sv_ntc_atch_file findFirst
   */
  export type sv_ntc_atch_fileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc_atch_file
     */
    select?: sv_ntc_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc_atch_file
     */
    omit?: sv_ntc_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_ntc_atch_file to fetch.
     */
    where?: sv_ntc_atch_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_ntc_atch_files to fetch.
     */
    orderBy?: sv_ntc_atch_fileOrderByWithRelationInput | sv_ntc_atch_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_ntc_atch_files.
     */
    cursor?: sv_ntc_atch_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_ntc_atch_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_ntc_atch_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_ntc_atch_files.
     */
    distinct?: Sv_ntc_atch_fileScalarFieldEnum | Sv_ntc_atch_fileScalarFieldEnum[]
  }

  /**
   * sv_ntc_atch_file findFirstOrThrow
   */
  export type sv_ntc_atch_fileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc_atch_file
     */
    select?: sv_ntc_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc_atch_file
     */
    omit?: sv_ntc_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_ntc_atch_file to fetch.
     */
    where?: sv_ntc_atch_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_ntc_atch_files to fetch.
     */
    orderBy?: sv_ntc_atch_fileOrderByWithRelationInput | sv_ntc_atch_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_ntc_atch_files.
     */
    cursor?: sv_ntc_atch_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_ntc_atch_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_ntc_atch_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_ntc_atch_files.
     */
    distinct?: Sv_ntc_atch_fileScalarFieldEnum | Sv_ntc_atch_fileScalarFieldEnum[]
  }

  /**
   * sv_ntc_atch_file findMany
   */
  export type sv_ntc_atch_fileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc_atch_file
     */
    select?: sv_ntc_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc_atch_file
     */
    omit?: sv_ntc_atch_fileOmit<ExtArgs> | null
    /**
     * Filter, which sv_ntc_atch_files to fetch.
     */
    where?: sv_ntc_atch_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_ntc_atch_files to fetch.
     */
    orderBy?: sv_ntc_atch_fileOrderByWithRelationInput | sv_ntc_atch_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_ntc_atch_files.
     */
    cursor?: sv_ntc_atch_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_ntc_atch_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_ntc_atch_files.
     */
    skip?: number
    distinct?: Sv_ntc_atch_fileScalarFieldEnum | Sv_ntc_atch_fileScalarFieldEnum[]
  }

  /**
   * sv_ntc_atch_file create
   */
  export type sv_ntc_atch_fileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc_atch_file
     */
    select?: sv_ntc_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc_atch_file
     */
    omit?: sv_ntc_atch_fileOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_ntc_atch_file.
     */
    data: XOR<sv_ntc_atch_fileCreateInput, sv_ntc_atch_fileUncheckedCreateInput>
  }

  /**
   * sv_ntc_atch_file createMany
   */
  export type sv_ntc_atch_fileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_ntc_atch_files.
     */
    data: sv_ntc_atch_fileCreateManyInput | sv_ntc_atch_fileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_ntc_atch_file update
   */
  export type sv_ntc_atch_fileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc_atch_file
     */
    select?: sv_ntc_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc_atch_file
     */
    omit?: sv_ntc_atch_fileOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_ntc_atch_file.
     */
    data: XOR<sv_ntc_atch_fileUpdateInput, sv_ntc_atch_fileUncheckedUpdateInput>
    /**
     * Choose, which sv_ntc_atch_file to update.
     */
    where: sv_ntc_atch_fileWhereUniqueInput
  }

  /**
   * sv_ntc_atch_file updateMany
   */
  export type sv_ntc_atch_fileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_ntc_atch_files.
     */
    data: XOR<sv_ntc_atch_fileUpdateManyMutationInput, sv_ntc_atch_fileUncheckedUpdateManyInput>
    /**
     * Filter which sv_ntc_atch_files to update
     */
    where?: sv_ntc_atch_fileWhereInput
    /**
     * Limit how many sv_ntc_atch_files to update.
     */
    limit?: number
  }

  /**
   * sv_ntc_atch_file upsert
   */
  export type sv_ntc_atch_fileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc_atch_file
     */
    select?: sv_ntc_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc_atch_file
     */
    omit?: sv_ntc_atch_fileOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_ntc_atch_file to update in case it exists.
     */
    where: sv_ntc_atch_fileWhereUniqueInput
    /**
     * In case the sv_ntc_atch_file found by the `where` argument doesn't exist, create a new sv_ntc_atch_file with this data.
     */
    create: XOR<sv_ntc_atch_fileCreateInput, sv_ntc_atch_fileUncheckedCreateInput>
    /**
     * In case the sv_ntc_atch_file was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_ntc_atch_fileUpdateInput, sv_ntc_atch_fileUncheckedUpdateInput>
  }

  /**
   * sv_ntc_atch_file delete
   */
  export type sv_ntc_atch_fileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc_atch_file
     */
    select?: sv_ntc_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc_atch_file
     */
    omit?: sv_ntc_atch_fileOmit<ExtArgs> | null
    /**
     * Filter which sv_ntc_atch_file to delete.
     */
    where: sv_ntc_atch_fileWhereUniqueInput
  }

  /**
   * sv_ntc_atch_file deleteMany
   */
  export type sv_ntc_atch_fileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_ntc_atch_files to delete
     */
    where?: sv_ntc_atch_fileWhereInput
    /**
     * Limit how many sv_ntc_atch_files to delete.
     */
    limit?: number
  }

  /**
   * sv_ntc_atch_file without action
   */
  export type sv_ntc_atch_fileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_ntc_atch_file
     */
    select?: sv_ntc_atch_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_ntc_atch_file
     */
    omit?: sv_ntc_atch_fileOmit<ExtArgs> | null
  }


  /**
   * Model sv_popup
   */

  export type AggregateSv_popup = {
    _count: Sv_popupCountAggregateOutputType | null
    _avg: Sv_popupAvgAggregateOutputType | null
    _sum: Sv_popupSumAggregateOutputType | null
    _min: Sv_popupMinAggregateOutputType | null
    _max: Sv_popupMaxAggregateOutputType | null
  }

  export type Sv_popupAvgAggregateOutputType = {
    popup_no: number | null
    clco_no: number | null
    prjt_no: number | null
    img_file_mng_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_popupSumAggregateOutputType = {
    popup_no: bigint | null
    clco_no: bigint | null
    prjt_no: bigint | null
    img_file_mng_no: bigint | null
    regr_no: bigint | null
    modr_no: bigint | null
  }

  export type Sv_popupMinAggregateOutputType = {
    popup_no: bigint | null
    clco_no: bigint | null
    prjt_no: bigint | null
    ttl: string | null
    expsr_tf: string | null
    expsr_bgng_ymd: Date | null
    expsr_end_ymd: Date | null
    img_file_mng_no: bigint | null
    cls_btn_use_tf: string | null
    re_expsr_phbt_cd: string | null
    btn_stng_cd: string | null
    popup_tp_cd: string | null
    dtl_url: string | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sv_popupMaxAggregateOutputType = {
    popup_no: bigint | null
    clco_no: bigint | null
    prjt_no: bigint | null
    ttl: string | null
    expsr_tf: string | null
    expsr_bgng_ymd: Date | null
    expsr_end_ymd: Date | null
    img_file_mng_no: bigint | null
    cls_btn_use_tf: string | null
    re_expsr_phbt_cd: string | null
    btn_stng_cd: string | null
    popup_tp_cd: string | null
    dtl_url: string | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sv_popupCountAggregateOutputType = {
    popup_no: number
    clco_no: number
    prjt_no: number
    ttl: number
    expsr_tf: number
    expsr_bgng_ymd: number
    expsr_end_ymd: number
    img_file_mng_no: number
    cls_btn_use_tf: number
    re_expsr_phbt_cd: number
    btn_stng_cd: number
    popup_tp_cd: number
    dtl_url: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_popupAvgAggregateInputType = {
    popup_no?: true
    clco_no?: true
    prjt_no?: true
    img_file_mng_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_popupSumAggregateInputType = {
    popup_no?: true
    clco_no?: true
    prjt_no?: true
    img_file_mng_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_popupMinAggregateInputType = {
    popup_no?: true
    clco_no?: true
    prjt_no?: true
    ttl?: true
    expsr_tf?: true
    expsr_bgng_ymd?: true
    expsr_end_ymd?: true
    img_file_mng_no?: true
    cls_btn_use_tf?: true
    re_expsr_phbt_cd?: true
    btn_stng_cd?: true
    popup_tp_cd?: true
    dtl_url?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_popupMaxAggregateInputType = {
    popup_no?: true
    clco_no?: true
    prjt_no?: true
    ttl?: true
    expsr_tf?: true
    expsr_bgng_ymd?: true
    expsr_end_ymd?: true
    img_file_mng_no?: true
    cls_btn_use_tf?: true
    re_expsr_phbt_cd?: true
    btn_stng_cd?: true
    popup_tp_cd?: true
    dtl_url?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_popupCountAggregateInputType = {
    popup_no?: true
    clco_no?: true
    prjt_no?: true
    ttl?: true
    expsr_tf?: true
    expsr_bgng_ymd?: true
    expsr_end_ymd?: true
    img_file_mng_no?: true
    cls_btn_use_tf?: true
    re_expsr_phbt_cd?: true
    btn_stng_cd?: true
    popup_tp_cd?: true
    dtl_url?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_popupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_popup to aggregate.
     */
    where?: sv_popupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_popups to fetch.
     */
    orderBy?: sv_popupOrderByWithRelationInput | sv_popupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_popupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_popups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_popups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_popups
    **/
    _count?: true | Sv_popupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_popupAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_popupSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_popupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_popupMaxAggregateInputType
  }

  export type GetSv_popupAggregateType<T extends Sv_popupAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_popup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_popup[P]>
      : GetScalarType<T[P], AggregateSv_popup[P]>
  }




  export type sv_popupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_popupWhereInput
    orderBy?: sv_popupOrderByWithAggregationInput | sv_popupOrderByWithAggregationInput[]
    by: Sv_popupScalarFieldEnum[] | Sv_popupScalarFieldEnum
    having?: sv_popupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_popupCountAggregateInputType | true
    _avg?: Sv_popupAvgAggregateInputType
    _sum?: Sv_popupSumAggregateInputType
    _min?: Sv_popupMinAggregateInputType
    _max?: Sv_popupMaxAggregateInputType
  }

  export type Sv_popupGroupByOutputType = {
    popup_no: bigint
    clco_no: bigint
    prjt_no: bigint
    ttl: string
    expsr_tf: string
    expsr_bgng_ymd: Date
    expsr_end_ymd: Date
    img_file_mng_no: bigint
    cls_btn_use_tf: string
    re_expsr_phbt_cd: string
    btn_stng_cd: string
    popup_tp_cd: string
    dtl_url: string | null
    regr_no: bigint
    reg_dt: Date
    modr_no: bigint
    mod_dt: Date
    _count: Sv_popupCountAggregateOutputType | null
    _avg: Sv_popupAvgAggregateOutputType | null
    _sum: Sv_popupSumAggregateOutputType | null
    _min: Sv_popupMinAggregateOutputType | null
    _max: Sv_popupMaxAggregateOutputType | null
  }

  type GetSv_popupGroupByPayload<T extends sv_popupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_popupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_popupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_popupGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_popupGroupByOutputType[P]>
        }
      >
    >


  export type sv_popupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    popup_no?: boolean
    clco_no?: boolean
    prjt_no?: boolean
    ttl?: boolean
    expsr_tf?: boolean
    expsr_bgng_ymd?: boolean
    expsr_end_ymd?: boolean
    img_file_mng_no?: boolean
    cls_btn_use_tf?: boolean
    re_expsr_phbt_cd?: boolean
    btn_stng_cd?: boolean
    popup_tp_cd?: boolean
    dtl_url?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_popup"]>



  export type sv_popupSelectScalar = {
    popup_no?: boolean
    clco_no?: boolean
    prjt_no?: boolean
    ttl?: boolean
    expsr_tf?: boolean
    expsr_bgng_ymd?: boolean
    expsr_end_ymd?: boolean
    img_file_mng_no?: boolean
    cls_btn_use_tf?: boolean
    re_expsr_phbt_cd?: boolean
    btn_stng_cd?: boolean
    popup_tp_cd?: boolean
    dtl_url?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_popupOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"popup_no" | "clco_no" | "prjt_no" | "ttl" | "expsr_tf" | "expsr_bgng_ymd" | "expsr_end_ymd" | "img_file_mng_no" | "cls_btn_use_tf" | "re_expsr_phbt_cd" | "btn_stng_cd" | "popup_tp_cd" | "dtl_url" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_popup"]>

  export type $sv_popupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_popup"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      popup_no: bigint
      clco_no: bigint
      prjt_no: bigint
      ttl: string
      expsr_tf: string
      expsr_bgng_ymd: Date
      expsr_end_ymd: Date
      img_file_mng_no: bigint
      cls_btn_use_tf: string
      re_expsr_phbt_cd: string
      btn_stng_cd: string
      popup_tp_cd: string
      dtl_url: string | null
      regr_no: bigint
      reg_dt: Date
      modr_no: bigint
      mod_dt: Date
    }, ExtArgs["result"]["sv_popup"]>
    composites: {}
  }

  type sv_popupGetPayload<S extends boolean | null | undefined | sv_popupDefaultArgs> = $Result.GetResult<Prisma.$sv_popupPayload, S>

  type sv_popupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_popupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_popupCountAggregateInputType | true
    }

  export interface sv_popupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_popup'], meta: { name: 'sv_popup' } }
    /**
     * Find zero or one Sv_popup that matches the filter.
     * @param {sv_popupFindUniqueArgs} args - Arguments to find a Sv_popup
     * @example
     * // Get one Sv_popup
     * const sv_popup = await prisma.sv_popup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_popupFindUniqueArgs>(args: SelectSubset<T, sv_popupFindUniqueArgs<ExtArgs>>): Prisma__sv_popupClient<$Result.GetResult<Prisma.$sv_popupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_popup that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_popupFindUniqueOrThrowArgs} args - Arguments to find a Sv_popup
     * @example
     * // Get one Sv_popup
     * const sv_popup = await prisma.sv_popup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_popupFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_popupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_popupClient<$Result.GetResult<Prisma.$sv_popupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_popup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_popupFindFirstArgs} args - Arguments to find a Sv_popup
     * @example
     * // Get one Sv_popup
     * const sv_popup = await prisma.sv_popup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_popupFindFirstArgs>(args?: SelectSubset<T, sv_popupFindFirstArgs<ExtArgs>>): Prisma__sv_popupClient<$Result.GetResult<Prisma.$sv_popupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_popup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_popupFindFirstOrThrowArgs} args - Arguments to find a Sv_popup
     * @example
     * // Get one Sv_popup
     * const sv_popup = await prisma.sv_popup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_popupFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_popupFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_popupClient<$Result.GetResult<Prisma.$sv_popupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_popups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_popupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_popups
     * const sv_popups = await prisma.sv_popup.findMany()
     * 
     * // Get first 10 Sv_popups
     * const sv_popups = await prisma.sv_popup.findMany({ take: 10 })
     * 
     * // Only select the `popup_no`
     * const sv_popupWithPopup_noOnly = await prisma.sv_popup.findMany({ select: { popup_no: true } })
     * 
     */
    findMany<T extends sv_popupFindManyArgs>(args?: SelectSubset<T, sv_popupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_popupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_popup.
     * @param {sv_popupCreateArgs} args - Arguments to create a Sv_popup.
     * @example
     * // Create one Sv_popup
     * const Sv_popup = await prisma.sv_popup.create({
     *   data: {
     *     // ... data to create a Sv_popup
     *   }
     * })
     * 
     */
    create<T extends sv_popupCreateArgs>(args: SelectSubset<T, sv_popupCreateArgs<ExtArgs>>): Prisma__sv_popupClient<$Result.GetResult<Prisma.$sv_popupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_popups.
     * @param {sv_popupCreateManyArgs} args - Arguments to create many Sv_popups.
     * @example
     * // Create many Sv_popups
     * const sv_popup = await prisma.sv_popup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_popupCreateManyArgs>(args?: SelectSubset<T, sv_popupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_popup.
     * @param {sv_popupDeleteArgs} args - Arguments to delete one Sv_popup.
     * @example
     * // Delete one Sv_popup
     * const Sv_popup = await prisma.sv_popup.delete({
     *   where: {
     *     // ... filter to delete one Sv_popup
     *   }
     * })
     * 
     */
    delete<T extends sv_popupDeleteArgs>(args: SelectSubset<T, sv_popupDeleteArgs<ExtArgs>>): Prisma__sv_popupClient<$Result.GetResult<Prisma.$sv_popupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_popup.
     * @param {sv_popupUpdateArgs} args - Arguments to update one Sv_popup.
     * @example
     * // Update one Sv_popup
     * const sv_popup = await prisma.sv_popup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_popupUpdateArgs>(args: SelectSubset<T, sv_popupUpdateArgs<ExtArgs>>): Prisma__sv_popupClient<$Result.GetResult<Prisma.$sv_popupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_popups.
     * @param {sv_popupDeleteManyArgs} args - Arguments to filter Sv_popups to delete.
     * @example
     * // Delete a few Sv_popups
     * const { count } = await prisma.sv_popup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_popupDeleteManyArgs>(args?: SelectSubset<T, sv_popupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_popups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_popupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_popups
     * const sv_popup = await prisma.sv_popup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_popupUpdateManyArgs>(args: SelectSubset<T, sv_popupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_popup.
     * @param {sv_popupUpsertArgs} args - Arguments to update or create a Sv_popup.
     * @example
     * // Update or create a Sv_popup
     * const sv_popup = await prisma.sv_popup.upsert({
     *   create: {
     *     // ... data to create a Sv_popup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_popup we want to update
     *   }
     * })
     */
    upsert<T extends sv_popupUpsertArgs>(args: SelectSubset<T, sv_popupUpsertArgs<ExtArgs>>): Prisma__sv_popupClient<$Result.GetResult<Prisma.$sv_popupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_popups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_popupCountArgs} args - Arguments to filter Sv_popups to count.
     * @example
     * // Count the number of Sv_popups
     * const count = await prisma.sv_popup.count({
     *   where: {
     *     // ... the filter for the Sv_popups we want to count
     *   }
     * })
    **/
    count<T extends sv_popupCountArgs>(
      args?: Subset<T, sv_popupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_popupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_popup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_popupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_popupAggregateArgs>(args: Subset<T, Sv_popupAggregateArgs>): Prisma.PrismaPromise<GetSv_popupAggregateType<T>>

    /**
     * Group by Sv_popup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_popupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_popupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_popupGroupByArgs['orderBy'] }
        : { orderBy?: sv_popupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_popupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_popupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_popup model
   */
  readonly fields: sv_popupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_popup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_popupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_popup model
   */
  interface sv_popupFieldRefs {
    readonly popup_no: FieldRef<"sv_popup", 'BigInt'>
    readonly clco_no: FieldRef<"sv_popup", 'BigInt'>
    readonly prjt_no: FieldRef<"sv_popup", 'BigInt'>
    readonly ttl: FieldRef<"sv_popup", 'String'>
    readonly expsr_tf: FieldRef<"sv_popup", 'String'>
    readonly expsr_bgng_ymd: FieldRef<"sv_popup", 'DateTime'>
    readonly expsr_end_ymd: FieldRef<"sv_popup", 'DateTime'>
    readonly img_file_mng_no: FieldRef<"sv_popup", 'BigInt'>
    readonly cls_btn_use_tf: FieldRef<"sv_popup", 'String'>
    readonly re_expsr_phbt_cd: FieldRef<"sv_popup", 'String'>
    readonly btn_stng_cd: FieldRef<"sv_popup", 'String'>
    readonly popup_tp_cd: FieldRef<"sv_popup", 'String'>
    readonly dtl_url: FieldRef<"sv_popup", 'String'>
    readonly regr_no: FieldRef<"sv_popup", 'BigInt'>
    readonly reg_dt: FieldRef<"sv_popup", 'DateTime'>
    readonly modr_no: FieldRef<"sv_popup", 'BigInt'>
    readonly mod_dt: FieldRef<"sv_popup", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_popup findUnique
   */
  export type sv_popupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_popup
     */
    select?: sv_popupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_popup
     */
    omit?: sv_popupOmit<ExtArgs> | null
    /**
     * Filter, which sv_popup to fetch.
     */
    where: sv_popupWhereUniqueInput
  }

  /**
   * sv_popup findUniqueOrThrow
   */
  export type sv_popupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_popup
     */
    select?: sv_popupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_popup
     */
    omit?: sv_popupOmit<ExtArgs> | null
    /**
     * Filter, which sv_popup to fetch.
     */
    where: sv_popupWhereUniqueInput
  }

  /**
   * sv_popup findFirst
   */
  export type sv_popupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_popup
     */
    select?: sv_popupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_popup
     */
    omit?: sv_popupOmit<ExtArgs> | null
    /**
     * Filter, which sv_popup to fetch.
     */
    where?: sv_popupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_popups to fetch.
     */
    orderBy?: sv_popupOrderByWithRelationInput | sv_popupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_popups.
     */
    cursor?: sv_popupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_popups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_popups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_popups.
     */
    distinct?: Sv_popupScalarFieldEnum | Sv_popupScalarFieldEnum[]
  }

  /**
   * sv_popup findFirstOrThrow
   */
  export type sv_popupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_popup
     */
    select?: sv_popupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_popup
     */
    omit?: sv_popupOmit<ExtArgs> | null
    /**
     * Filter, which sv_popup to fetch.
     */
    where?: sv_popupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_popups to fetch.
     */
    orderBy?: sv_popupOrderByWithRelationInput | sv_popupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_popups.
     */
    cursor?: sv_popupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_popups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_popups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_popups.
     */
    distinct?: Sv_popupScalarFieldEnum | Sv_popupScalarFieldEnum[]
  }

  /**
   * sv_popup findMany
   */
  export type sv_popupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_popup
     */
    select?: sv_popupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_popup
     */
    omit?: sv_popupOmit<ExtArgs> | null
    /**
     * Filter, which sv_popups to fetch.
     */
    where?: sv_popupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_popups to fetch.
     */
    orderBy?: sv_popupOrderByWithRelationInput | sv_popupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_popups.
     */
    cursor?: sv_popupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_popups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_popups.
     */
    skip?: number
    distinct?: Sv_popupScalarFieldEnum | Sv_popupScalarFieldEnum[]
  }

  /**
   * sv_popup create
   */
  export type sv_popupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_popup
     */
    select?: sv_popupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_popup
     */
    omit?: sv_popupOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_popup.
     */
    data: XOR<sv_popupCreateInput, sv_popupUncheckedCreateInput>
  }

  /**
   * sv_popup createMany
   */
  export type sv_popupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_popups.
     */
    data: sv_popupCreateManyInput | sv_popupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_popup update
   */
  export type sv_popupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_popup
     */
    select?: sv_popupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_popup
     */
    omit?: sv_popupOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_popup.
     */
    data: XOR<sv_popupUpdateInput, sv_popupUncheckedUpdateInput>
    /**
     * Choose, which sv_popup to update.
     */
    where: sv_popupWhereUniqueInput
  }

  /**
   * sv_popup updateMany
   */
  export type sv_popupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_popups.
     */
    data: XOR<sv_popupUpdateManyMutationInput, sv_popupUncheckedUpdateManyInput>
    /**
     * Filter which sv_popups to update
     */
    where?: sv_popupWhereInput
    /**
     * Limit how many sv_popups to update.
     */
    limit?: number
  }

  /**
   * sv_popup upsert
   */
  export type sv_popupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_popup
     */
    select?: sv_popupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_popup
     */
    omit?: sv_popupOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_popup to update in case it exists.
     */
    where: sv_popupWhereUniqueInput
    /**
     * In case the sv_popup found by the `where` argument doesn't exist, create a new sv_popup with this data.
     */
    create: XOR<sv_popupCreateInput, sv_popupUncheckedCreateInput>
    /**
     * In case the sv_popup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_popupUpdateInput, sv_popupUncheckedUpdateInput>
  }

  /**
   * sv_popup delete
   */
  export type sv_popupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_popup
     */
    select?: sv_popupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_popup
     */
    omit?: sv_popupOmit<ExtArgs> | null
    /**
     * Filter which sv_popup to delete.
     */
    where: sv_popupWhereUniqueInput
  }

  /**
   * sv_popup deleteMany
   */
  export type sv_popupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_popups to delete
     */
    where?: sv_popupWhereInput
    /**
     * Limit how many sv_popups to delete.
     */
    limit?: number
  }

  /**
   * sv_popup without action
   */
  export type sv_popupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_popup
     */
    select?: sv_popupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_popup
     */
    omit?: sv_popupOmit<ExtArgs> | null
  }


  /**
   * Model sv_progm
   */

  export type AggregateSv_progm = {
    _count: Sv_progmCountAggregateOutputType | null
    _avg: Sv_progmAvgAggregateOutputType | null
    _sum: Sv_progmSumAggregateOutputType | null
    _min: Sv_progmMinAggregateOutputType | null
    _max: Sv_progmMaxAggregateOutputType | null
  }

  export type Sv_progmAvgAggregateOutputType = {
    progm_no: number | null
    clco_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_progmSumAggregateOutputType = {
    progm_no: number | null
    clco_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_progmMinAggregateOutputType = {
    progm_no: number | null
    clco_no: number | null
    progm_nm: string | null
    mngr_memo: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_progmMaxAggregateOutputType = {
    progm_no: number | null
    clco_no: number | null
    progm_nm: string | null
    mngr_memo: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_progmCountAggregateOutputType = {
    progm_no: number
    clco_no: number
    progm_nm: number
    mngr_memo: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_progmAvgAggregateInputType = {
    progm_no?: true
    clco_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_progmSumAggregateInputType = {
    progm_no?: true
    clco_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_progmMinAggregateInputType = {
    progm_no?: true
    clco_no?: true
    progm_nm?: true
    mngr_memo?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_progmMaxAggregateInputType = {
    progm_no?: true
    clco_no?: true
    progm_nm?: true
    mngr_memo?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_progmCountAggregateInputType = {
    progm_no?: true
    clco_no?: true
    progm_nm?: true
    mngr_memo?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_progmAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_progm to aggregate.
     */
    where?: sv_progmWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_progms to fetch.
     */
    orderBy?: sv_progmOrderByWithRelationInput | sv_progmOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_progmWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_progms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_progms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_progms
    **/
    _count?: true | Sv_progmCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_progmAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_progmSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_progmMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_progmMaxAggregateInputType
  }

  export type GetSv_progmAggregateType<T extends Sv_progmAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_progm]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_progm[P]>
      : GetScalarType<T[P], AggregateSv_progm[P]>
  }




  export type sv_progmGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_progmWhereInput
    orderBy?: sv_progmOrderByWithAggregationInput | sv_progmOrderByWithAggregationInput[]
    by: Sv_progmScalarFieldEnum[] | Sv_progmScalarFieldEnum
    having?: sv_progmScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_progmCountAggregateInputType | true
    _avg?: Sv_progmAvgAggregateInputType
    _sum?: Sv_progmSumAggregateInputType
    _min?: Sv_progmMinAggregateInputType
    _max?: Sv_progmMaxAggregateInputType
  }

  export type Sv_progmGroupByOutputType = {
    progm_no: number
    clco_no: number
    progm_nm: string
    mngr_memo: string | null
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sv_progmCountAggregateOutputType | null
    _avg: Sv_progmAvgAggregateOutputType | null
    _sum: Sv_progmSumAggregateOutputType | null
    _min: Sv_progmMinAggregateOutputType | null
    _max: Sv_progmMaxAggregateOutputType | null
  }

  type GetSv_progmGroupByPayload<T extends sv_progmGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_progmGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_progmGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_progmGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_progmGroupByOutputType[P]>
        }
      >
    >


  export type sv_progmSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    progm_no?: boolean
    clco_no?: boolean
    progm_nm?: boolean
    mngr_memo?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_progm"]>



  export type sv_progmSelectScalar = {
    progm_no?: boolean
    clco_no?: boolean
    progm_nm?: boolean
    mngr_memo?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_progmOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"progm_no" | "clco_no" | "progm_nm" | "mngr_memo" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_progm"]>

  export type $sv_progmPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_progm"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      progm_no: number
      clco_no: number
      progm_nm: string
      mngr_memo: string | null
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sv_progm"]>
    composites: {}
  }

  type sv_progmGetPayload<S extends boolean | null | undefined | sv_progmDefaultArgs> = $Result.GetResult<Prisma.$sv_progmPayload, S>

  type sv_progmCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_progmFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_progmCountAggregateInputType | true
    }

  export interface sv_progmDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_progm'], meta: { name: 'sv_progm' } }
    /**
     * Find zero or one Sv_progm that matches the filter.
     * @param {sv_progmFindUniqueArgs} args - Arguments to find a Sv_progm
     * @example
     * // Get one Sv_progm
     * const sv_progm = await prisma.sv_progm.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_progmFindUniqueArgs>(args: SelectSubset<T, sv_progmFindUniqueArgs<ExtArgs>>): Prisma__sv_progmClient<$Result.GetResult<Prisma.$sv_progmPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_progm that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_progmFindUniqueOrThrowArgs} args - Arguments to find a Sv_progm
     * @example
     * // Get one Sv_progm
     * const sv_progm = await prisma.sv_progm.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_progmFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_progmFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_progmClient<$Result.GetResult<Prisma.$sv_progmPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_progm that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_progmFindFirstArgs} args - Arguments to find a Sv_progm
     * @example
     * // Get one Sv_progm
     * const sv_progm = await prisma.sv_progm.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_progmFindFirstArgs>(args?: SelectSubset<T, sv_progmFindFirstArgs<ExtArgs>>): Prisma__sv_progmClient<$Result.GetResult<Prisma.$sv_progmPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_progm that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_progmFindFirstOrThrowArgs} args - Arguments to find a Sv_progm
     * @example
     * // Get one Sv_progm
     * const sv_progm = await prisma.sv_progm.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_progmFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_progmFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_progmClient<$Result.GetResult<Prisma.$sv_progmPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_progms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_progmFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_progms
     * const sv_progms = await prisma.sv_progm.findMany()
     * 
     * // Get first 10 Sv_progms
     * const sv_progms = await prisma.sv_progm.findMany({ take: 10 })
     * 
     * // Only select the `progm_no`
     * const sv_progmWithProgm_noOnly = await prisma.sv_progm.findMany({ select: { progm_no: true } })
     * 
     */
    findMany<T extends sv_progmFindManyArgs>(args?: SelectSubset<T, sv_progmFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_progmPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_progm.
     * @param {sv_progmCreateArgs} args - Arguments to create a Sv_progm.
     * @example
     * // Create one Sv_progm
     * const Sv_progm = await prisma.sv_progm.create({
     *   data: {
     *     // ... data to create a Sv_progm
     *   }
     * })
     * 
     */
    create<T extends sv_progmCreateArgs>(args: SelectSubset<T, sv_progmCreateArgs<ExtArgs>>): Prisma__sv_progmClient<$Result.GetResult<Prisma.$sv_progmPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_progms.
     * @param {sv_progmCreateManyArgs} args - Arguments to create many Sv_progms.
     * @example
     * // Create many Sv_progms
     * const sv_progm = await prisma.sv_progm.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_progmCreateManyArgs>(args?: SelectSubset<T, sv_progmCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_progm.
     * @param {sv_progmDeleteArgs} args - Arguments to delete one Sv_progm.
     * @example
     * // Delete one Sv_progm
     * const Sv_progm = await prisma.sv_progm.delete({
     *   where: {
     *     // ... filter to delete one Sv_progm
     *   }
     * })
     * 
     */
    delete<T extends sv_progmDeleteArgs>(args: SelectSubset<T, sv_progmDeleteArgs<ExtArgs>>): Prisma__sv_progmClient<$Result.GetResult<Prisma.$sv_progmPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_progm.
     * @param {sv_progmUpdateArgs} args - Arguments to update one Sv_progm.
     * @example
     * // Update one Sv_progm
     * const sv_progm = await prisma.sv_progm.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_progmUpdateArgs>(args: SelectSubset<T, sv_progmUpdateArgs<ExtArgs>>): Prisma__sv_progmClient<$Result.GetResult<Prisma.$sv_progmPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_progms.
     * @param {sv_progmDeleteManyArgs} args - Arguments to filter Sv_progms to delete.
     * @example
     * // Delete a few Sv_progms
     * const { count } = await prisma.sv_progm.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_progmDeleteManyArgs>(args?: SelectSubset<T, sv_progmDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_progms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_progmUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_progms
     * const sv_progm = await prisma.sv_progm.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_progmUpdateManyArgs>(args: SelectSubset<T, sv_progmUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_progm.
     * @param {sv_progmUpsertArgs} args - Arguments to update or create a Sv_progm.
     * @example
     * // Update or create a Sv_progm
     * const sv_progm = await prisma.sv_progm.upsert({
     *   create: {
     *     // ... data to create a Sv_progm
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_progm we want to update
     *   }
     * })
     */
    upsert<T extends sv_progmUpsertArgs>(args: SelectSubset<T, sv_progmUpsertArgs<ExtArgs>>): Prisma__sv_progmClient<$Result.GetResult<Prisma.$sv_progmPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_progms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_progmCountArgs} args - Arguments to filter Sv_progms to count.
     * @example
     * // Count the number of Sv_progms
     * const count = await prisma.sv_progm.count({
     *   where: {
     *     // ... the filter for the Sv_progms we want to count
     *   }
     * })
    **/
    count<T extends sv_progmCountArgs>(
      args?: Subset<T, sv_progmCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_progmCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_progm.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_progmAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_progmAggregateArgs>(args: Subset<T, Sv_progmAggregateArgs>): Prisma.PrismaPromise<GetSv_progmAggregateType<T>>

    /**
     * Group by Sv_progm.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_progmGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_progmGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_progmGroupByArgs['orderBy'] }
        : { orderBy?: sv_progmGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_progmGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_progmGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_progm model
   */
  readonly fields: sv_progmFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_progm.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_progmClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_progm model
   */
  interface sv_progmFieldRefs {
    readonly progm_no: FieldRef<"sv_progm", 'Int'>
    readonly clco_no: FieldRef<"sv_progm", 'Int'>
    readonly progm_nm: FieldRef<"sv_progm", 'String'>
    readonly mngr_memo: FieldRef<"sv_progm", 'String'>
    readonly regr_no: FieldRef<"sv_progm", 'Int'>
    readonly reg_dt: FieldRef<"sv_progm", 'DateTime'>
    readonly modr_no: FieldRef<"sv_progm", 'Int'>
    readonly mod_dt: FieldRef<"sv_progm", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_progm findUnique
   */
  export type sv_progmFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_progm
     */
    select?: sv_progmSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_progm
     */
    omit?: sv_progmOmit<ExtArgs> | null
    /**
     * Filter, which sv_progm to fetch.
     */
    where: sv_progmWhereUniqueInput
  }

  /**
   * sv_progm findUniqueOrThrow
   */
  export type sv_progmFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_progm
     */
    select?: sv_progmSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_progm
     */
    omit?: sv_progmOmit<ExtArgs> | null
    /**
     * Filter, which sv_progm to fetch.
     */
    where: sv_progmWhereUniqueInput
  }

  /**
   * sv_progm findFirst
   */
  export type sv_progmFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_progm
     */
    select?: sv_progmSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_progm
     */
    omit?: sv_progmOmit<ExtArgs> | null
    /**
     * Filter, which sv_progm to fetch.
     */
    where?: sv_progmWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_progms to fetch.
     */
    orderBy?: sv_progmOrderByWithRelationInput | sv_progmOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_progms.
     */
    cursor?: sv_progmWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_progms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_progms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_progms.
     */
    distinct?: Sv_progmScalarFieldEnum | Sv_progmScalarFieldEnum[]
  }

  /**
   * sv_progm findFirstOrThrow
   */
  export type sv_progmFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_progm
     */
    select?: sv_progmSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_progm
     */
    omit?: sv_progmOmit<ExtArgs> | null
    /**
     * Filter, which sv_progm to fetch.
     */
    where?: sv_progmWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_progms to fetch.
     */
    orderBy?: sv_progmOrderByWithRelationInput | sv_progmOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_progms.
     */
    cursor?: sv_progmWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_progms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_progms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_progms.
     */
    distinct?: Sv_progmScalarFieldEnum | Sv_progmScalarFieldEnum[]
  }

  /**
   * sv_progm findMany
   */
  export type sv_progmFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_progm
     */
    select?: sv_progmSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_progm
     */
    omit?: sv_progmOmit<ExtArgs> | null
    /**
     * Filter, which sv_progms to fetch.
     */
    where?: sv_progmWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_progms to fetch.
     */
    orderBy?: sv_progmOrderByWithRelationInput | sv_progmOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_progms.
     */
    cursor?: sv_progmWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_progms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_progms.
     */
    skip?: number
    distinct?: Sv_progmScalarFieldEnum | Sv_progmScalarFieldEnum[]
  }

  /**
   * sv_progm create
   */
  export type sv_progmCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_progm
     */
    select?: sv_progmSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_progm
     */
    omit?: sv_progmOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_progm.
     */
    data: XOR<sv_progmCreateInput, sv_progmUncheckedCreateInput>
  }

  /**
   * sv_progm createMany
   */
  export type sv_progmCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_progms.
     */
    data: sv_progmCreateManyInput | sv_progmCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_progm update
   */
  export type sv_progmUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_progm
     */
    select?: sv_progmSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_progm
     */
    omit?: sv_progmOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_progm.
     */
    data: XOR<sv_progmUpdateInput, sv_progmUncheckedUpdateInput>
    /**
     * Choose, which sv_progm to update.
     */
    where: sv_progmWhereUniqueInput
  }

  /**
   * sv_progm updateMany
   */
  export type sv_progmUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_progms.
     */
    data: XOR<sv_progmUpdateManyMutationInput, sv_progmUncheckedUpdateManyInput>
    /**
     * Filter which sv_progms to update
     */
    where?: sv_progmWhereInput
    /**
     * Limit how many sv_progms to update.
     */
    limit?: number
  }

  /**
   * sv_progm upsert
   */
  export type sv_progmUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_progm
     */
    select?: sv_progmSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_progm
     */
    omit?: sv_progmOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_progm to update in case it exists.
     */
    where: sv_progmWhereUniqueInput
    /**
     * In case the sv_progm found by the `where` argument doesn't exist, create a new sv_progm with this data.
     */
    create: XOR<sv_progmCreateInput, sv_progmUncheckedCreateInput>
    /**
     * In case the sv_progm was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_progmUpdateInput, sv_progmUncheckedUpdateInput>
  }

  /**
   * sv_progm delete
   */
  export type sv_progmDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_progm
     */
    select?: sv_progmSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_progm
     */
    omit?: sv_progmOmit<ExtArgs> | null
    /**
     * Filter which sv_progm to delete.
     */
    where: sv_progmWhereUniqueInput
  }

  /**
   * sv_progm deleteMany
   */
  export type sv_progmDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_progms to delete
     */
    where?: sv_progmWhereInput
    /**
     * Limit how many sv_progms to delete.
     */
    limit?: number
  }

  /**
   * sv_progm without action
   */
  export type sv_progmDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_progm
     */
    select?: sv_progmSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_progm
     */
    omit?: sv_progmOmit<ExtArgs> | null
  }


  /**
   * Model sv_sms_sndng
   */

  export type AggregateSv_sms_sndng = {
    _count: Sv_sms_sndngCountAggregateOutputType | null
    _avg: Sv_sms_sndngAvgAggregateOutputType | null
    _sum: Sv_sms_sndngSumAggregateOutputType | null
    _min: Sv_sms_sndngMinAggregateOutputType | null
    _max: Sv_sms_sndngMaxAggregateOutputType | null
  }

  export type Sv_sms_sndngAvgAggregateOutputType = {
    sms_sndng_no: number | null
    atch_img_file_mng_no: number | null
    ttlt_sndng_cnt: number | null
    sndng_fail_cnt: number | null
    rcptn_idnty_cnt: number | null
    clco_no: number | null
    prjt_no: number | null
    prgm_no: number | null
    week: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_sms_sndngSumAggregateOutputType = {
    sms_sndng_no: bigint | null
    atch_img_file_mng_no: bigint | null
    ttlt_sndng_cnt: number | null
    sndng_fail_cnt: number | null
    rcptn_idnty_cnt: number | null
    clco_no: number | null
    prjt_no: number | null
    prgm_no: number | null
    week: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_sms_sndngMinAggregateOutputType = {
    sms_sndng_no: bigint | null
    sndng_trgt_cd: string | null
    sms_ttl: string | null
    sms_cont: string | null
    atch_img_file_mng_no: bigint | null
    sndng_tp_cd: string | null
    rsvt_sndng_dt: Date | null
    sndng_stts_cd: string | null
    ttlt_sndng_cnt: number | null
    sndng_fail_cnt: number | null
    rcptn_idnty_cnt: number | null
    clco_no: number | null
    prjt_no: number | null
    prgm_no: number | null
    week: number | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_sms_sndngMaxAggregateOutputType = {
    sms_sndng_no: bigint | null
    sndng_trgt_cd: string | null
    sms_ttl: string | null
    sms_cont: string | null
    atch_img_file_mng_no: bigint | null
    sndng_tp_cd: string | null
    rsvt_sndng_dt: Date | null
    sndng_stts_cd: string | null
    ttlt_sndng_cnt: number | null
    sndng_fail_cnt: number | null
    rcptn_idnty_cnt: number | null
    clco_no: number | null
    prjt_no: number | null
    prgm_no: number | null
    week: number | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_sms_sndngCountAggregateOutputType = {
    sms_sndng_no: number
    sndng_trgt_cd: number
    sms_ttl: number
    sms_cont: number
    atch_img_file_mng_no: number
    sndng_tp_cd: number
    rsvt_sndng_dt: number
    sndng_stts_cd: number
    ttlt_sndng_cnt: number
    sndng_fail_cnt: number
    rcptn_idnty_cnt: number
    clco_no: number
    prjt_no: number
    prgm_no: number
    week: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_sms_sndngAvgAggregateInputType = {
    sms_sndng_no?: true
    atch_img_file_mng_no?: true
    ttlt_sndng_cnt?: true
    sndng_fail_cnt?: true
    rcptn_idnty_cnt?: true
    clco_no?: true
    prjt_no?: true
    prgm_no?: true
    week?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_sms_sndngSumAggregateInputType = {
    sms_sndng_no?: true
    atch_img_file_mng_no?: true
    ttlt_sndng_cnt?: true
    sndng_fail_cnt?: true
    rcptn_idnty_cnt?: true
    clco_no?: true
    prjt_no?: true
    prgm_no?: true
    week?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_sms_sndngMinAggregateInputType = {
    sms_sndng_no?: true
    sndng_trgt_cd?: true
    sms_ttl?: true
    sms_cont?: true
    atch_img_file_mng_no?: true
    sndng_tp_cd?: true
    rsvt_sndng_dt?: true
    sndng_stts_cd?: true
    ttlt_sndng_cnt?: true
    sndng_fail_cnt?: true
    rcptn_idnty_cnt?: true
    clco_no?: true
    prjt_no?: true
    prgm_no?: true
    week?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_sms_sndngMaxAggregateInputType = {
    sms_sndng_no?: true
    sndng_trgt_cd?: true
    sms_ttl?: true
    sms_cont?: true
    atch_img_file_mng_no?: true
    sndng_tp_cd?: true
    rsvt_sndng_dt?: true
    sndng_stts_cd?: true
    ttlt_sndng_cnt?: true
    sndng_fail_cnt?: true
    rcptn_idnty_cnt?: true
    clco_no?: true
    prjt_no?: true
    prgm_no?: true
    week?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_sms_sndngCountAggregateInputType = {
    sms_sndng_no?: true
    sndng_trgt_cd?: true
    sms_ttl?: true
    sms_cont?: true
    atch_img_file_mng_no?: true
    sndng_tp_cd?: true
    rsvt_sndng_dt?: true
    sndng_stts_cd?: true
    ttlt_sndng_cnt?: true
    sndng_fail_cnt?: true
    rcptn_idnty_cnt?: true
    clco_no?: true
    prjt_no?: true
    prgm_no?: true
    week?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_sms_sndngAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_sms_sndng to aggregate.
     */
    where?: sv_sms_sndngWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_sms_sndngs to fetch.
     */
    orderBy?: sv_sms_sndngOrderByWithRelationInput | sv_sms_sndngOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_sms_sndngWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_sms_sndngs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_sms_sndngs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_sms_sndngs
    **/
    _count?: true | Sv_sms_sndngCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_sms_sndngAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_sms_sndngSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_sms_sndngMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_sms_sndngMaxAggregateInputType
  }

  export type GetSv_sms_sndngAggregateType<T extends Sv_sms_sndngAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_sms_sndng]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_sms_sndng[P]>
      : GetScalarType<T[P], AggregateSv_sms_sndng[P]>
  }




  export type sv_sms_sndngGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_sms_sndngWhereInput
    orderBy?: sv_sms_sndngOrderByWithAggregationInput | sv_sms_sndngOrderByWithAggregationInput[]
    by: Sv_sms_sndngScalarFieldEnum[] | Sv_sms_sndngScalarFieldEnum
    having?: sv_sms_sndngScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_sms_sndngCountAggregateInputType | true
    _avg?: Sv_sms_sndngAvgAggregateInputType
    _sum?: Sv_sms_sndngSumAggregateInputType
    _min?: Sv_sms_sndngMinAggregateInputType
    _max?: Sv_sms_sndngMaxAggregateInputType
  }

  export type Sv_sms_sndngGroupByOutputType = {
    sms_sndng_no: bigint
    sndng_trgt_cd: string
    sms_ttl: string | null
    sms_cont: string
    atch_img_file_mng_no: bigint | null
    sndng_tp_cd: string
    rsvt_sndng_dt: Date | null
    sndng_stts_cd: string | null
    ttlt_sndng_cnt: number | null
    sndng_fail_cnt: number | null
    rcptn_idnty_cnt: number | null
    clco_no: number | null
    prjt_no: number | null
    prgm_no: number | null
    week: number | null
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sv_sms_sndngCountAggregateOutputType | null
    _avg: Sv_sms_sndngAvgAggregateOutputType | null
    _sum: Sv_sms_sndngSumAggregateOutputType | null
    _min: Sv_sms_sndngMinAggregateOutputType | null
    _max: Sv_sms_sndngMaxAggregateOutputType | null
  }

  type GetSv_sms_sndngGroupByPayload<T extends sv_sms_sndngGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_sms_sndngGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_sms_sndngGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_sms_sndngGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_sms_sndngGroupByOutputType[P]>
        }
      >
    >


  export type sv_sms_sndngSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sms_sndng_no?: boolean
    sndng_trgt_cd?: boolean
    sms_ttl?: boolean
    sms_cont?: boolean
    atch_img_file_mng_no?: boolean
    sndng_tp_cd?: boolean
    rsvt_sndng_dt?: boolean
    sndng_stts_cd?: boolean
    ttlt_sndng_cnt?: boolean
    sndng_fail_cnt?: boolean
    rcptn_idnty_cnt?: boolean
    clco_no?: boolean
    prjt_no?: boolean
    prgm_no?: boolean
    week?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_sms_sndng"]>



  export type sv_sms_sndngSelectScalar = {
    sms_sndng_no?: boolean
    sndng_trgt_cd?: boolean
    sms_ttl?: boolean
    sms_cont?: boolean
    atch_img_file_mng_no?: boolean
    sndng_tp_cd?: boolean
    rsvt_sndng_dt?: boolean
    sndng_stts_cd?: boolean
    ttlt_sndng_cnt?: boolean
    sndng_fail_cnt?: boolean
    rcptn_idnty_cnt?: boolean
    clco_no?: boolean
    prjt_no?: boolean
    prgm_no?: boolean
    week?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_sms_sndngOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"sms_sndng_no" | "sndng_trgt_cd" | "sms_ttl" | "sms_cont" | "atch_img_file_mng_no" | "sndng_tp_cd" | "rsvt_sndng_dt" | "sndng_stts_cd" | "ttlt_sndng_cnt" | "sndng_fail_cnt" | "rcptn_idnty_cnt" | "clco_no" | "prjt_no" | "prgm_no" | "week" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_sms_sndng"]>

  export type $sv_sms_sndngPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_sms_sndng"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      sms_sndng_no: bigint
      sndng_trgt_cd: string
      sms_ttl: string | null
      sms_cont: string
      atch_img_file_mng_no: bigint | null
      sndng_tp_cd: string
      rsvt_sndng_dt: Date | null
      sndng_stts_cd: string | null
      ttlt_sndng_cnt: number | null
      sndng_fail_cnt: number | null
      rcptn_idnty_cnt: number | null
      clco_no: number | null
      prjt_no: number | null
      prgm_no: number | null
      week: number | null
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sv_sms_sndng"]>
    composites: {}
  }

  type sv_sms_sndngGetPayload<S extends boolean | null | undefined | sv_sms_sndngDefaultArgs> = $Result.GetResult<Prisma.$sv_sms_sndngPayload, S>

  type sv_sms_sndngCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_sms_sndngFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_sms_sndngCountAggregateInputType | true
    }

  export interface sv_sms_sndngDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_sms_sndng'], meta: { name: 'sv_sms_sndng' } }
    /**
     * Find zero or one Sv_sms_sndng that matches the filter.
     * @param {sv_sms_sndngFindUniqueArgs} args - Arguments to find a Sv_sms_sndng
     * @example
     * // Get one Sv_sms_sndng
     * const sv_sms_sndng = await prisma.sv_sms_sndng.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_sms_sndngFindUniqueArgs>(args: SelectSubset<T, sv_sms_sndngFindUniqueArgs<ExtArgs>>): Prisma__sv_sms_sndngClient<$Result.GetResult<Prisma.$sv_sms_sndngPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_sms_sndng that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_sms_sndngFindUniqueOrThrowArgs} args - Arguments to find a Sv_sms_sndng
     * @example
     * // Get one Sv_sms_sndng
     * const sv_sms_sndng = await prisma.sv_sms_sndng.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_sms_sndngFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_sms_sndngFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_sms_sndngClient<$Result.GetResult<Prisma.$sv_sms_sndngPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_sms_sndng that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_sms_sndngFindFirstArgs} args - Arguments to find a Sv_sms_sndng
     * @example
     * // Get one Sv_sms_sndng
     * const sv_sms_sndng = await prisma.sv_sms_sndng.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_sms_sndngFindFirstArgs>(args?: SelectSubset<T, sv_sms_sndngFindFirstArgs<ExtArgs>>): Prisma__sv_sms_sndngClient<$Result.GetResult<Prisma.$sv_sms_sndngPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_sms_sndng that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_sms_sndngFindFirstOrThrowArgs} args - Arguments to find a Sv_sms_sndng
     * @example
     * // Get one Sv_sms_sndng
     * const sv_sms_sndng = await prisma.sv_sms_sndng.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_sms_sndngFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_sms_sndngFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_sms_sndngClient<$Result.GetResult<Prisma.$sv_sms_sndngPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_sms_sndngs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_sms_sndngFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_sms_sndngs
     * const sv_sms_sndngs = await prisma.sv_sms_sndng.findMany()
     * 
     * // Get first 10 Sv_sms_sndngs
     * const sv_sms_sndngs = await prisma.sv_sms_sndng.findMany({ take: 10 })
     * 
     * // Only select the `sms_sndng_no`
     * const sv_sms_sndngWithSms_sndng_noOnly = await prisma.sv_sms_sndng.findMany({ select: { sms_sndng_no: true } })
     * 
     */
    findMany<T extends sv_sms_sndngFindManyArgs>(args?: SelectSubset<T, sv_sms_sndngFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_sms_sndngPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_sms_sndng.
     * @param {sv_sms_sndngCreateArgs} args - Arguments to create a Sv_sms_sndng.
     * @example
     * // Create one Sv_sms_sndng
     * const Sv_sms_sndng = await prisma.sv_sms_sndng.create({
     *   data: {
     *     // ... data to create a Sv_sms_sndng
     *   }
     * })
     * 
     */
    create<T extends sv_sms_sndngCreateArgs>(args: SelectSubset<T, sv_sms_sndngCreateArgs<ExtArgs>>): Prisma__sv_sms_sndngClient<$Result.GetResult<Prisma.$sv_sms_sndngPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_sms_sndngs.
     * @param {sv_sms_sndngCreateManyArgs} args - Arguments to create many Sv_sms_sndngs.
     * @example
     * // Create many Sv_sms_sndngs
     * const sv_sms_sndng = await prisma.sv_sms_sndng.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_sms_sndngCreateManyArgs>(args?: SelectSubset<T, sv_sms_sndngCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_sms_sndng.
     * @param {sv_sms_sndngDeleteArgs} args - Arguments to delete one Sv_sms_sndng.
     * @example
     * // Delete one Sv_sms_sndng
     * const Sv_sms_sndng = await prisma.sv_sms_sndng.delete({
     *   where: {
     *     // ... filter to delete one Sv_sms_sndng
     *   }
     * })
     * 
     */
    delete<T extends sv_sms_sndngDeleteArgs>(args: SelectSubset<T, sv_sms_sndngDeleteArgs<ExtArgs>>): Prisma__sv_sms_sndngClient<$Result.GetResult<Prisma.$sv_sms_sndngPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_sms_sndng.
     * @param {sv_sms_sndngUpdateArgs} args - Arguments to update one Sv_sms_sndng.
     * @example
     * // Update one Sv_sms_sndng
     * const sv_sms_sndng = await prisma.sv_sms_sndng.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_sms_sndngUpdateArgs>(args: SelectSubset<T, sv_sms_sndngUpdateArgs<ExtArgs>>): Prisma__sv_sms_sndngClient<$Result.GetResult<Prisma.$sv_sms_sndngPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_sms_sndngs.
     * @param {sv_sms_sndngDeleteManyArgs} args - Arguments to filter Sv_sms_sndngs to delete.
     * @example
     * // Delete a few Sv_sms_sndngs
     * const { count } = await prisma.sv_sms_sndng.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_sms_sndngDeleteManyArgs>(args?: SelectSubset<T, sv_sms_sndngDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_sms_sndngs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_sms_sndngUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_sms_sndngs
     * const sv_sms_sndng = await prisma.sv_sms_sndng.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_sms_sndngUpdateManyArgs>(args: SelectSubset<T, sv_sms_sndngUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_sms_sndng.
     * @param {sv_sms_sndngUpsertArgs} args - Arguments to update or create a Sv_sms_sndng.
     * @example
     * // Update or create a Sv_sms_sndng
     * const sv_sms_sndng = await prisma.sv_sms_sndng.upsert({
     *   create: {
     *     // ... data to create a Sv_sms_sndng
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_sms_sndng we want to update
     *   }
     * })
     */
    upsert<T extends sv_sms_sndngUpsertArgs>(args: SelectSubset<T, sv_sms_sndngUpsertArgs<ExtArgs>>): Prisma__sv_sms_sndngClient<$Result.GetResult<Prisma.$sv_sms_sndngPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_sms_sndngs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_sms_sndngCountArgs} args - Arguments to filter Sv_sms_sndngs to count.
     * @example
     * // Count the number of Sv_sms_sndngs
     * const count = await prisma.sv_sms_sndng.count({
     *   where: {
     *     // ... the filter for the Sv_sms_sndngs we want to count
     *   }
     * })
    **/
    count<T extends sv_sms_sndngCountArgs>(
      args?: Subset<T, sv_sms_sndngCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_sms_sndngCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_sms_sndng.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_sms_sndngAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_sms_sndngAggregateArgs>(args: Subset<T, Sv_sms_sndngAggregateArgs>): Prisma.PrismaPromise<GetSv_sms_sndngAggregateType<T>>

    /**
     * Group by Sv_sms_sndng.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_sms_sndngGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_sms_sndngGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_sms_sndngGroupByArgs['orderBy'] }
        : { orderBy?: sv_sms_sndngGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_sms_sndngGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_sms_sndngGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_sms_sndng model
   */
  readonly fields: sv_sms_sndngFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_sms_sndng.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_sms_sndngClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_sms_sndng model
   */
  interface sv_sms_sndngFieldRefs {
    readonly sms_sndng_no: FieldRef<"sv_sms_sndng", 'BigInt'>
    readonly sndng_trgt_cd: FieldRef<"sv_sms_sndng", 'String'>
    readonly sms_ttl: FieldRef<"sv_sms_sndng", 'String'>
    readonly sms_cont: FieldRef<"sv_sms_sndng", 'String'>
    readonly atch_img_file_mng_no: FieldRef<"sv_sms_sndng", 'BigInt'>
    readonly sndng_tp_cd: FieldRef<"sv_sms_sndng", 'String'>
    readonly rsvt_sndng_dt: FieldRef<"sv_sms_sndng", 'DateTime'>
    readonly sndng_stts_cd: FieldRef<"sv_sms_sndng", 'String'>
    readonly ttlt_sndng_cnt: FieldRef<"sv_sms_sndng", 'Int'>
    readonly sndng_fail_cnt: FieldRef<"sv_sms_sndng", 'Int'>
    readonly rcptn_idnty_cnt: FieldRef<"sv_sms_sndng", 'Int'>
    readonly clco_no: FieldRef<"sv_sms_sndng", 'Int'>
    readonly prjt_no: FieldRef<"sv_sms_sndng", 'Int'>
    readonly prgm_no: FieldRef<"sv_sms_sndng", 'Int'>
    readonly week: FieldRef<"sv_sms_sndng", 'Int'>
    readonly regr_no: FieldRef<"sv_sms_sndng", 'Int'>
    readonly reg_dt: FieldRef<"sv_sms_sndng", 'DateTime'>
    readonly modr_no: FieldRef<"sv_sms_sndng", 'Int'>
    readonly mod_dt: FieldRef<"sv_sms_sndng", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_sms_sndng findUnique
   */
  export type sv_sms_sndngFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_sndng
     */
    select?: sv_sms_sndngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_sndng
     */
    omit?: sv_sms_sndngOmit<ExtArgs> | null
    /**
     * Filter, which sv_sms_sndng to fetch.
     */
    where: sv_sms_sndngWhereUniqueInput
  }

  /**
   * sv_sms_sndng findUniqueOrThrow
   */
  export type sv_sms_sndngFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_sndng
     */
    select?: sv_sms_sndngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_sndng
     */
    omit?: sv_sms_sndngOmit<ExtArgs> | null
    /**
     * Filter, which sv_sms_sndng to fetch.
     */
    where: sv_sms_sndngWhereUniqueInput
  }

  /**
   * sv_sms_sndng findFirst
   */
  export type sv_sms_sndngFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_sndng
     */
    select?: sv_sms_sndngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_sndng
     */
    omit?: sv_sms_sndngOmit<ExtArgs> | null
    /**
     * Filter, which sv_sms_sndng to fetch.
     */
    where?: sv_sms_sndngWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_sms_sndngs to fetch.
     */
    orderBy?: sv_sms_sndngOrderByWithRelationInput | sv_sms_sndngOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_sms_sndngs.
     */
    cursor?: sv_sms_sndngWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_sms_sndngs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_sms_sndngs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_sms_sndngs.
     */
    distinct?: Sv_sms_sndngScalarFieldEnum | Sv_sms_sndngScalarFieldEnum[]
  }

  /**
   * sv_sms_sndng findFirstOrThrow
   */
  export type sv_sms_sndngFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_sndng
     */
    select?: sv_sms_sndngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_sndng
     */
    omit?: sv_sms_sndngOmit<ExtArgs> | null
    /**
     * Filter, which sv_sms_sndng to fetch.
     */
    where?: sv_sms_sndngWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_sms_sndngs to fetch.
     */
    orderBy?: sv_sms_sndngOrderByWithRelationInput | sv_sms_sndngOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_sms_sndngs.
     */
    cursor?: sv_sms_sndngWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_sms_sndngs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_sms_sndngs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_sms_sndngs.
     */
    distinct?: Sv_sms_sndngScalarFieldEnum | Sv_sms_sndngScalarFieldEnum[]
  }

  /**
   * sv_sms_sndng findMany
   */
  export type sv_sms_sndngFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_sndng
     */
    select?: sv_sms_sndngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_sndng
     */
    omit?: sv_sms_sndngOmit<ExtArgs> | null
    /**
     * Filter, which sv_sms_sndngs to fetch.
     */
    where?: sv_sms_sndngWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_sms_sndngs to fetch.
     */
    orderBy?: sv_sms_sndngOrderByWithRelationInput | sv_sms_sndngOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_sms_sndngs.
     */
    cursor?: sv_sms_sndngWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_sms_sndngs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_sms_sndngs.
     */
    skip?: number
    distinct?: Sv_sms_sndngScalarFieldEnum | Sv_sms_sndngScalarFieldEnum[]
  }

  /**
   * sv_sms_sndng create
   */
  export type sv_sms_sndngCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_sndng
     */
    select?: sv_sms_sndngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_sndng
     */
    omit?: sv_sms_sndngOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_sms_sndng.
     */
    data: XOR<sv_sms_sndngCreateInput, sv_sms_sndngUncheckedCreateInput>
  }

  /**
   * sv_sms_sndng createMany
   */
  export type sv_sms_sndngCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_sms_sndngs.
     */
    data: sv_sms_sndngCreateManyInput | sv_sms_sndngCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_sms_sndng update
   */
  export type sv_sms_sndngUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_sndng
     */
    select?: sv_sms_sndngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_sndng
     */
    omit?: sv_sms_sndngOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_sms_sndng.
     */
    data: XOR<sv_sms_sndngUpdateInput, sv_sms_sndngUncheckedUpdateInput>
    /**
     * Choose, which sv_sms_sndng to update.
     */
    where: sv_sms_sndngWhereUniqueInput
  }

  /**
   * sv_sms_sndng updateMany
   */
  export type sv_sms_sndngUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_sms_sndngs.
     */
    data: XOR<sv_sms_sndngUpdateManyMutationInput, sv_sms_sndngUncheckedUpdateManyInput>
    /**
     * Filter which sv_sms_sndngs to update
     */
    where?: sv_sms_sndngWhereInput
    /**
     * Limit how many sv_sms_sndngs to update.
     */
    limit?: number
  }

  /**
   * sv_sms_sndng upsert
   */
  export type sv_sms_sndngUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_sndng
     */
    select?: sv_sms_sndngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_sndng
     */
    omit?: sv_sms_sndngOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_sms_sndng to update in case it exists.
     */
    where: sv_sms_sndngWhereUniqueInput
    /**
     * In case the sv_sms_sndng found by the `where` argument doesn't exist, create a new sv_sms_sndng with this data.
     */
    create: XOR<sv_sms_sndngCreateInput, sv_sms_sndngUncheckedCreateInput>
    /**
     * In case the sv_sms_sndng was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_sms_sndngUpdateInput, sv_sms_sndngUncheckedUpdateInput>
  }

  /**
   * sv_sms_sndng delete
   */
  export type sv_sms_sndngDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_sndng
     */
    select?: sv_sms_sndngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_sndng
     */
    omit?: sv_sms_sndngOmit<ExtArgs> | null
    /**
     * Filter which sv_sms_sndng to delete.
     */
    where: sv_sms_sndngWhereUniqueInput
  }

  /**
   * sv_sms_sndng deleteMany
   */
  export type sv_sms_sndngDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_sms_sndngs to delete
     */
    where?: sv_sms_sndngWhereInput
    /**
     * Limit how many sv_sms_sndngs to delete.
     */
    limit?: number
  }

  /**
   * sv_sms_sndng without action
   */
  export type sv_sms_sndngDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_sndng
     */
    select?: sv_sms_sndngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_sndng
     */
    omit?: sv_sms_sndngOmit<ExtArgs> | null
  }


  /**
   * Model sv_sms_tmpl
   */

  export type AggregateSv_sms_tmpl = {
    _count: Sv_sms_tmplCountAggregateOutputType | null
    _avg: Sv_sms_tmplAvgAggregateOutputType | null
    _sum: Sv_sms_tmplSumAggregateOutputType | null
    _min: Sv_sms_tmplMinAggregateOutputType | null
    _max: Sv_sms_tmplMaxAggregateOutputType | null
  }

  export type Sv_sms_tmplAvgAggregateOutputType = {
    sms_tmpl_no: number | null
    atch_img_file_mng_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_sms_tmplSumAggregateOutputType = {
    sms_tmpl_no: number | null
    atch_img_file_mng_no: bigint | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_sms_tmplMinAggregateOutputType = {
    sms_tmpl_no: number | null
    sms_tmpl_sctn_cd: string | null
    sms_ttl: string | null
    sms_cont: string | null
    atch_img_file_mng_no: bigint | null
    aim_trgt_tf: string | null
    clco_trgt_tf: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_sms_tmplMaxAggregateOutputType = {
    sms_tmpl_no: number | null
    sms_tmpl_sctn_cd: string | null
    sms_ttl: string | null
    sms_cont: string | null
    atch_img_file_mng_no: bigint | null
    aim_trgt_tf: string | null
    clco_trgt_tf: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sv_sms_tmplCountAggregateOutputType = {
    sms_tmpl_no: number
    sms_tmpl_sctn_cd: number
    sms_ttl: number
    sms_cont: number
    atch_img_file_mng_no: number
    aim_trgt_tf: number
    clco_trgt_tf: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sv_sms_tmplAvgAggregateInputType = {
    sms_tmpl_no?: true
    atch_img_file_mng_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_sms_tmplSumAggregateInputType = {
    sms_tmpl_no?: true
    atch_img_file_mng_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_sms_tmplMinAggregateInputType = {
    sms_tmpl_no?: true
    sms_tmpl_sctn_cd?: true
    sms_ttl?: true
    sms_cont?: true
    atch_img_file_mng_no?: true
    aim_trgt_tf?: true
    clco_trgt_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_sms_tmplMaxAggregateInputType = {
    sms_tmpl_no?: true
    sms_tmpl_sctn_cd?: true
    sms_ttl?: true
    sms_cont?: true
    atch_img_file_mng_no?: true
    aim_trgt_tf?: true
    clco_trgt_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sv_sms_tmplCountAggregateInputType = {
    sms_tmpl_no?: true
    sms_tmpl_sctn_cd?: true
    sms_ttl?: true
    sms_cont?: true
    atch_img_file_mng_no?: true
    aim_trgt_tf?: true
    clco_trgt_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sv_sms_tmplAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_sms_tmpl to aggregate.
     */
    where?: sv_sms_tmplWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_sms_tmpls to fetch.
     */
    orderBy?: sv_sms_tmplOrderByWithRelationInput | sv_sms_tmplOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_sms_tmplWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_sms_tmpls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_sms_tmpls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_sms_tmpls
    **/
    _count?: true | Sv_sms_tmplCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_sms_tmplAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_sms_tmplSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_sms_tmplMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_sms_tmplMaxAggregateInputType
  }

  export type GetSv_sms_tmplAggregateType<T extends Sv_sms_tmplAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_sms_tmpl]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_sms_tmpl[P]>
      : GetScalarType<T[P], AggregateSv_sms_tmpl[P]>
  }




  export type sv_sms_tmplGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_sms_tmplWhereInput
    orderBy?: sv_sms_tmplOrderByWithAggregationInput | sv_sms_tmplOrderByWithAggregationInput[]
    by: Sv_sms_tmplScalarFieldEnum[] | Sv_sms_tmplScalarFieldEnum
    having?: sv_sms_tmplScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_sms_tmplCountAggregateInputType | true
    _avg?: Sv_sms_tmplAvgAggregateInputType
    _sum?: Sv_sms_tmplSumAggregateInputType
    _min?: Sv_sms_tmplMinAggregateInputType
    _max?: Sv_sms_tmplMaxAggregateInputType
  }

  export type Sv_sms_tmplGroupByOutputType = {
    sms_tmpl_no: number
    sms_tmpl_sctn_cd: string
    sms_ttl: string
    sms_cont: string
    atch_img_file_mng_no: bigint | null
    aim_trgt_tf: string
    clco_trgt_tf: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sv_sms_tmplCountAggregateOutputType | null
    _avg: Sv_sms_tmplAvgAggregateOutputType | null
    _sum: Sv_sms_tmplSumAggregateOutputType | null
    _min: Sv_sms_tmplMinAggregateOutputType | null
    _max: Sv_sms_tmplMaxAggregateOutputType | null
  }

  type GetSv_sms_tmplGroupByPayload<T extends sv_sms_tmplGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_sms_tmplGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_sms_tmplGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_sms_tmplGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_sms_tmplGroupByOutputType[P]>
        }
      >
    >


  export type sv_sms_tmplSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sms_tmpl_no?: boolean
    sms_tmpl_sctn_cd?: boolean
    sms_ttl?: boolean
    sms_cont?: boolean
    atch_img_file_mng_no?: boolean
    aim_trgt_tf?: boolean
    clco_trgt_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sv_sms_tmpl"]>



  export type sv_sms_tmplSelectScalar = {
    sms_tmpl_no?: boolean
    sms_tmpl_sctn_cd?: boolean
    sms_ttl?: boolean
    sms_cont?: boolean
    atch_img_file_mng_no?: boolean
    aim_trgt_tf?: boolean
    clco_trgt_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sv_sms_tmplOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"sms_tmpl_no" | "sms_tmpl_sctn_cd" | "sms_ttl" | "sms_cont" | "atch_img_file_mng_no" | "aim_trgt_tf" | "clco_trgt_tf" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sv_sms_tmpl"]>

  export type $sv_sms_tmplPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_sms_tmpl"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      sms_tmpl_no: number
      sms_tmpl_sctn_cd: string
      sms_ttl: string
      sms_cont: string
      atch_img_file_mng_no: bigint | null
      aim_trgt_tf: string
      clco_trgt_tf: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sv_sms_tmpl"]>
    composites: {}
  }

  type sv_sms_tmplGetPayload<S extends boolean | null | undefined | sv_sms_tmplDefaultArgs> = $Result.GetResult<Prisma.$sv_sms_tmplPayload, S>

  type sv_sms_tmplCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_sms_tmplFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_sms_tmplCountAggregateInputType | true
    }

  export interface sv_sms_tmplDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_sms_tmpl'], meta: { name: 'sv_sms_tmpl' } }
    /**
     * Find zero or one Sv_sms_tmpl that matches the filter.
     * @param {sv_sms_tmplFindUniqueArgs} args - Arguments to find a Sv_sms_tmpl
     * @example
     * // Get one Sv_sms_tmpl
     * const sv_sms_tmpl = await prisma.sv_sms_tmpl.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_sms_tmplFindUniqueArgs>(args: SelectSubset<T, sv_sms_tmplFindUniqueArgs<ExtArgs>>): Prisma__sv_sms_tmplClient<$Result.GetResult<Prisma.$sv_sms_tmplPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_sms_tmpl that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_sms_tmplFindUniqueOrThrowArgs} args - Arguments to find a Sv_sms_tmpl
     * @example
     * // Get one Sv_sms_tmpl
     * const sv_sms_tmpl = await prisma.sv_sms_tmpl.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_sms_tmplFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_sms_tmplFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_sms_tmplClient<$Result.GetResult<Prisma.$sv_sms_tmplPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_sms_tmpl that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_sms_tmplFindFirstArgs} args - Arguments to find a Sv_sms_tmpl
     * @example
     * // Get one Sv_sms_tmpl
     * const sv_sms_tmpl = await prisma.sv_sms_tmpl.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_sms_tmplFindFirstArgs>(args?: SelectSubset<T, sv_sms_tmplFindFirstArgs<ExtArgs>>): Prisma__sv_sms_tmplClient<$Result.GetResult<Prisma.$sv_sms_tmplPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_sms_tmpl that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_sms_tmplFindFirstOrThrowArgs} args - Arguments to find a Sv_sms_tmpl
     * @example
     * // Get one Sv_sms_tmpl
     * const sv_sms_tmpl = await prisma.sv_sms_tmpl.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_sms_tmplFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_sms_tmplFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_sms_tmplClient<$Result.GetResult<Prisma.$sv_sms_tmplPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_sms_tmpls that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_sms_tmplFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_sms_tmpls
     * const sv_sms_tmpls = await prisma.sv_sms_tmpl.findMany()
     * 
     * // Get first 10 Sv_sms_tmpls
     * const sv_sms_tmpls = await prisma.sv_sms_tmpl.findMany({ take: 10 })
     * 
     * // Only select the `sms_tmpl_no`
     * const sv_sms_tmplWithSms_tmpl_noOnly = await prisma.sv_sms_tmpl.findMany({ select: { sms_tmpl_no: true } })
     * 
     */
    findMany<T extends sv_sms_tmplFindManyArgs>(args?: SelectSubset<T, sv_sms_tmplFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_sms_tmplPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_sms_tmpl.
     * @param {sv_sms_tmplCreateArgs} args - Arguments to create a Sv_sms_tmpl.
     * @example
     * // Create one Sv_sms_tmpl
     * const Sv_sms_tmpl = await prisma.sv_sms_tmpl.create({
     *   data: {
     *     // ... data to create a Sv_sms_tmpl
     *   }
     * })
     * 
     */
    create<T extends sv_sms_tmplCreateArgs>(args: SelectSubset<T, sv_sms_tmplCreateArgs<ExtArgs>>): Prisma__sv_sms_tmplClient<$Result.GetResult<Prisma.$sv_sms_tmplPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_sms_tmpls.
     * @param {sv_sms_tmplCreateManyArgs} args - Arguments to create many Sv_sms_tmpls.
     * @example
     * // Create many Sv_sms_tmpls
     * const sv_sms_tmpl = await prisma.sv_sms_tmpl.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_sms_tmplCreateManyArgs>(args?: SelectSubset<T, sv_sms_tmplCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_sms_tmpl.
     * @param {sv_sms_tmplDeleteArgs} args - Arguments to delete one Sv_sms_tmpl.
     * @example
     * // Delete one Sv_sms_tmpl
     * const Sv_sms_tmpl = await prisma.sv_sms_tmpl.delete({
     *   where: {
     *     // ... filter to delete one Sv_sms_tmpl
     *   }
     * })
     * 
     */
    delete<T extends sv_sms_tmplDeleteArgs>(args: SelectSubset<T, sv_sms_tmplDeleteArgs<ExtArgs>>): Prisma__sv_sms_tmplClient<$Result.GetResult<Prisma.$sv_sms_tmplPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_sms_tmpl.
     * @param {sv_sms_tmplUpdateArgs} args - Arguments to update one Sv_sms_tmpl.
     * @example
     * // Update one Sv_sms_tmpl
     * const sv_sms_tmpl = await prisma.sv_sms_tmpl.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_sms_tmplUpdateArgs>(args: SelectSubset<T, sv_sms_tmplUpdateArgs<ExtArgs>>): Prisma__sv_sms_tmplClient<$Result.GetResult<Prisma.$sv_sms_tmplPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_sms_tmpls.
     * @param {sv_sms_tmplDeleteManyArgs} args - Arguments to filter Sv_sms_tmpls to delete.
     * @example
     * // Delete a few Sv_sms_tmpls
     * const { count } = await prisma.sv_sms_tmpl.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_sms_tmplDeleteManyArgs>(args?: SelectSubset<T, sv_sms_tmplDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_sms_tmpls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_sms_tmplUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_sms_tmpls
     * const sv_sms_tmpl = await prisma.sv_sms_tmpl.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_sms_tmplUpdateManyArgs>(args: SelectSubset<T, sv_sms_tmplUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_sms_tmpl.
     * @param {sv_sms_tmplUpsertArgs} args - Arguments to update or create a Sv_sms_tmpl.
     * @example
     * // Update or create a Sv_sms_tmpl
     * const sv_sms_tmpl = await prisma.sv_sms_tmpl.upsert({
     *   create: {
     *     // ... data to create a Sv_sms_tmpl
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_sms_tmpl we want to update
     *   }
     * })
     */
    upsert<T extends sv_sms_tmplUpsertArgs>(args: SelectSubset<T, sv_sms_tmplUpsertArgs<ExtArgs>>): Prisma__sv_sms_tmplClient<$Result.GetResult<Prisma.$sv_sms_tmplPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_sms_tmpls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_sms_tmplCountArgs} args - Arguments to filter Sv_sms_tmpls to count.
     * @example
     * // Count the number of Sv_sms_tmpls
     * const count = await prisma.sv_sms_tmpl.count({
     *   where: {
     *     // ... the filter for the Sv_sms_tmpls we want to count
     *   }
     * })
    **/
    count<T extends sv_sms_tmplCountArgs>(
      args?: Subset<T, sv_sms_tmplCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_sms_tmplCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_sms_tmpl.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_sms_tmplAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_sms_tmplAggregateArgs>(args: Subset<T, Sv_sms_tmplAggregateArgs>): Prisma.PrismaPromise<GetSv_sms_tmplAggregateType<T>>

    /**
     * Group by Sv_sms_tmpl.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_sms_tmplGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_sms_tmplGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_sms_tmplGroupByArgs['orderBy'] }
        : { orderBy?: sv_sms_tmplGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_sms_tmplGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_sms_tmplGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_sms_tmpl model
   */
  readonly fields: sv_sms_tmplFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_sms_tmpl.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_sms_tmplClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_sms_tmpl model
   */
  interface sv_sms_tmplFieldRefs {
    readonly sms_tmpl_no: FieldRef<"sv_sms_tmpl", 'Int'>
    readonly sms_tmpl_sctn_cd: FieldRef<"sv_sms_tmpl", 'String'>
    readonly sms_ttl: FieldRef<"sv_sms_tmpl", 'String'>
    readonly sms_cont: FieldRef<"sv_sms_tmpl", 'String'>
    readonly atch_img_file_mng_no: FieldRef<"sv_sms_tmpl", 'BigInt'>
    readonly aim_trgt_tf: FieldRef<"sv_sms_tmpl", 'String'>
    readonly clco_trgt_tf: FieldRef<"sv_sms_tmpl", 'String'>
    readonly regr_no: FieldRef<"sv_sms_tmpl", 'Int'>
    readonly reg_dt: FieldRef<"sv_sms_tmpl", 'DateTime'>
    readonly modr_no: FieldRef<"sv_sms_tmpl", 'Int'>
    readonly mod_dt: FieldRef<"sv_sms_tmpl", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sv_sms_tmpl findUnique
   */
  export type sv_sms_tmplFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_tmpl
     */
    select?: sv_sms_tmplSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_tmpl
     */
    omit?: sv_sms_tmplOmit<ExtArgs> | null
    /**
     * Filter, which sv_sms_tmpl to fetch.
     */
    where: sv_sms_tmplWhereUniqueInput
  }

  /**
   * sv_sms_tmpl findUniqueOrThrow
   */
  export type sv_sms_tmplFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_tmpl
     */
    select?: sv_sms_tmplSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_tmpl
     */
    omit?: sv_sms_tmplOmit<ExtArgs> | null
    /**
     * Filter, which sv_sms_tmpl to fetch.
     */
    where: sv_sms_tmplWhereUniqueInput
  }

  /**
   * sv_sms_tmpl findFirst
   */
  export type sv_sms_tmplFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_tmpl
     */
    select?: sv_sms_tmplSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_tmpl
     */
    omit?: sv_sms_tmplOmit<ExtArgs> | null
    /**
     * Filter, which sv_sms_tmpl to fetch.
     */
    where?: sv_sms_tmplWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_sms_tmpls to fetch.
     */
    orderBy?: sv_sms_tmplOrderByWithRelationInput | sv_sms_tmplOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_sms_tmpls.
     */
    cursor?: sv_sms_tmplWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_sms_tmpls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_sms_tmpls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_sms_tmpls.
     */
    distinct?: Sv_sms_tmplScalarFieldEnum | Sv_sms_tmplScalarFieldEnum[]
  }

  /**
   * sv_sms_tmpl findFirstOrThrow
   */
  export type sv_sms_tmplFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_tmpl
     */
    select?: sv_sms_tmplSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_tmpl
     */
    omit?: sv_sms_tmplOmit<ExtArgs> | null
    /**
     * Filter, which sv_sms_tmpl to fetch.
     */
    where?: sv_sms_tmplWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_sms_tmpls to fetch.
     */
    orderBy?: sv_sms_tmplOrderByWithRelationInput | sv_sms_tmplOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_sms_tmpls.
     */
    cursor?: sv_sms_tmplWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_sms_tmpls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_sms_tmpls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_sms_tmpls.
     */
    distinct?: Sv_sms_tmplScalarFieldEnum | Sv_sms_tmplScalarFieldEnum[]
  }

  /**
   * sv_sms_tmpl findMany
   */
  export type sv_sms_tmplFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_tmpl
     */
    select?: sv_sms_tmplSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_tmpl
     */
    omit?: sv_sms_tmplOmit<ExtArgs> | null
    /**
     * Filter, which sv_sms_tmpls to fetch.
     */
    where?: sv_sms_tmplWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_sms_tmpls to fetch.
     */
    orderBy?: sv_sms_tmplOrderByWithRelationInput | sv_sms_tmplOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_sms_tmpls.
     */
    cursor?: sv_sms_tmplWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_sms_tmpls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_sms_tmpls.
     */
    skip?: number
    distinct?: Sv_sms_tmplScalarFieldEnum | Sv_sms_tmplScalarFieldEnum[]
  }

  /**
   * sv_sms_tmpl create
   */
  export type sv_sms_tmplCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_tmpl
     */
    select?: sv_sms_tmplSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_tmpl
     */
    omit?: sv_sms_tmplOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_sms_tmpl.
     */
    data: XOR<sv_sms_tmplCreateInput, sv_sms_tmplUncheckedCreateInput>
  }

  /**
   * sv_sms_tmpl createMany
   */
  export type sv_sms_tmplCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_sms_tmpls.
     */
    data: sv_sms_tmplCreateManyInput | sv_sms_tmplCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_sms_tmpl update
   */
  export type sv_sms_tmplUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_tmpl
     */
    select?: sv_sms_tmplSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_tmpl
     */
    omit?: sv_sms_tmplOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_sms_tmpl.
     */
    data: XOR<sv_sms_tmplUpdateInput, sv_sms_tmplUncheckedUpdateInput>
    /**
     * Choose, which sv_sms_tmpl to update.
     */
    where: sv_sms_tmplWhereUniqueInput
  }

  /**
   * sv_sms_tmpl updateMany
   */
  export type sv_sms_tmplUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_sms_tmpls.
     */
    data: XOR<sv_sms_tmplUpdateManyMutationInput, sv_sms_tmplUncheckedUpdateManyInput>
    /**
     * Filter which sv_sms_tmpls to update
     */
    where?: sv_sms_tmplWhereInput
    /**
     * Limit how many sv_sms_tmpls to update.
     */
    limit?: number
  }

  /**
   * sv_sms_tmpl upsert
   */
  export type sv_sms_tmplUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_tmpl
     */
    select?: sv_sms_tmplSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_tmpl
     */
    omit?: sv_sms_tmplOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_sms_tmpl to update in case it exists.
     */
    where: sv_sms_tmplWhereUniqueInput
    /**
     * In case the sv_sms_tmpl found by the `where` argument doesn't exist, create a new sv_sms_tmpl with this data.
     */
    create: XOR<sv_sms_tmplCreateInput, sv_sms_tmplUncheckedCreateInput>
    /**
     * In case the sv_sms_tmpl was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_sms_tmplUpdateInput, sv_sms_tmplUncheckedUpdateInput>
  }

  /**
   * sv_sms_tmpl delete
   */
  export type sv_sms_tmplDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_tmpl
     */
    select?: sv_sms_tmplSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_tmpl
     */
    omit?: sv_sms_tmplOmit<ExtArgs> | null
    /**
     * Filter which sv_sms_tmpl to delete.
     */
    where: sv_sms_tmplWhereUniqueInput
  }

  /**
   * sv_sms_tmpl deleteMany
   */
  export type sv_sms_tmplDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_sms_tmpls to delete
     */
    where?: sv_sms_tmplWhereInput
    /**
     * Limit how many sv_sms_tmpls to delete.
     */
    limit?: number
  }

  /**
   * sv_sms_tmpl without action
   */
  export type sv_sms_tmplDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_sms_tmpl
     */
    select?: sv_sms_tmplSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_sms_tmpl
     */
    omit?: sv_sms_tmplOmit<ExtArgs> | null
  }


  /**
   * Model sv_trms
   */

  export type AggregateSv_trms = {
    _count: Sv_trmsCountAggregateOutputType | null
    _avg: Sv_trmsAvgAggregateOutputType | null
    _sum: Sv_trmsSumAggregateOutputType | null
    _min: Sv_trmsMinAggregateOutputType | null
    _max: Sv_trmsMaxAggregateOutputType | null
  }

  export type Sv_trmsAvgAggregateOutputType = {
    trms_no: number | null
    clco_no: number | null
    sort_seq: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_trmsSumAggregateOutputType = {
    trms_no: bigint | null
    clco_no: bigint | null
    sort_seq: number | null
    regr_no: bigint | null
    modr_no: bigint | null
  }

  export type Sv_trmsMinAggregateOutputType = {
    trms_no: bigint | null
    clco_no: bigint | null
    trms_knd_cd: string | null
    esntl_agr_tf: string | null
    sort_seq: number | null
    trms_cont: string | null
    use_tf: string | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
    trms_ttl: string | null
  }

  export type Sv_trmsMaxAggregateOutputType = {
    trms_no: bigint | null
    clco_no: bigint | null
    trms_knd_cd: string | null
    esntl_agr_tf: string | null
    sort_seq: number | null
    trms_cont: string | null
    use_tf: string | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
    trms_ttl: string | null
  }

  export type Sv_trmsCountAggregateOutputType = {
    trms_no: number
    clco_no: number
    trms_knd_cd: number
    esntl_agr_tf: number
    sort_seq: number
    trms_cont: number
    use_tf: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    trms_ttl: number
    _all: number
  }


  export type Sv_trmsAvgAggregateInputType = {
    trms_no?: true
    clco_no?: true
    sort_seq?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_trmsSumAggregateInputType = {
    trms_no?: true
    clco_no?: true
    sort_seq?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_trmsMinAggregateInputType = {
    trms_no?: true
    clco_no?: true
    trms_knd_cd?: true
    esntl_agr_tf?: true
    sort_seq?: true
    trms_cont?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    trms_ttl?: true
  }

  export type Sv_trmsMaxAggregateInputType = {
    trms_no?: true
    clco_no?: true
    trms_knd_cd?: true
    esntl_agr_tf?: true
    sort_seq?: true
    trms_cont?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    trms_ttl?: true
  }

  export type Sv_trmsCountAggregateInputType = {
    trms_no?: true
    clco_no?: true
    trms_knd_cd?: true
    esntl_agr_tf?: true
    sort_seq?: true
    trms_cont?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    trms_ttl?: true
    _all?: true
  }

  export type Sv_trmsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_trms to aggregate.
     */
    where?: sv_trmsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_trms to fetch.
     */
    orderBy?: sv_trmsOrderByWithRelationInput | sv_trmsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_trmsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_trms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_trms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_trms
    **/
    _count?: true | Sv_trmsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_trmsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_trmsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_trmsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_trmsMaxAggregateInputType
  }

  export type GetSv_trmsAggregateType<T extends Sv_trmsAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_trms]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_trms[P]>
      : GetScalarType<T[P], AggregateSv_trms[P]>
  }




  export type sv_trmsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_trmsWhereInput
    orderBy?: sv_trmsOrderByWithAggregationInput | sv_trmsOrderByWithAggregationInput[]
    by: Sv_trmsScalarFieldEnum[] | Sv_trmsScalarFieldEnum
    having?: sv_trmsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_trmsCountAggregateInputType | true
    _avg?: Sv_trmsAvgAggregateInputType
    _sum?: Sv_trmsSumAggregateInputType
    _min?: Sv_trmsMinAggregateInputType
    _max?: Sv_trmsMaxAggregateInputType
  }

  export type Sv_trmsGroupByOutputType = {
    trms_no: bigint
    clco_no: bigint
    trms_knd_cd: string
    esntl_agr_tf: string
    sort_seq: number
    trms_cont: string
    use_tf: string
    regr_no: bigint
    reg_dt: Date
    modr_no: bigint
    mod_dt: Date
    trms_ttl: string
    _count: Sv_trmsCountAggregateOutputType | null
    _avg: Sv_trmsAvgAggregateOutputType | null
    _sum: Sv_trmsSumAggregateOutputType | null
    _min: Sv_trmsMinAggregateOutputType | null
    _max: Sv_trmsMaxAggregateOutputType | null
  }

  type GetSv_trmsGroupByPayload<T extends sv_trmsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_trmsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_trmsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_trmsGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_trmsGroupByOutputType[P]>
        }
      >
    >


  export type sv_trmsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    trms_no?: boolean
    clco_no?: boolean
    trms_knd_cd?: boolean
    esntl_agr_tf?: boolean
    sort_seq?: boolean
    trms_cont?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
    trms_ttl?: boolean
  }, ExtArgs["result"]["sv_trms"]>



  export type sv_trmsSelectScalar = {
    trms_no?: boolean
    clco_no?: boolean
    trms_knd_cd?: boolean
    esntl_agr_tf?: boolean
    sort_seq?: boolean
    trms_cont?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
    trms_ttl?: boolean
  }

  export type sv_trmsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"trms_no" | "clco_no" | "trms_knd_cd" | "esntl_agr_tf" | "sort_seq" | "trms_cont" | "use_tf" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt" | "trms_ttl", ExtArgs["result"]["sv_trms"]>

  export type $sv_trmsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_trms"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      trms_no: bigint
      clco_no: bigint
      trms_knd_cd: string
      esntl_agr_tf: string
      sort_seq: number
      trms_cont: string
      use_tf: string
      regr_no: bigint
      reg_dt: Date
      modr_no: bigint
      mod_dt: Date
      trms_ttl: string
    }, ExtArgs["result"]["sv_trms"]>
    composites: {}
  }

  type sv_trmsGetPayload<S extends boolean | null | undefined | sv_trmsDefaultArgs> = $Result.GetResult<Prisma.$sv_trmsPayload, S>

  type sv_trmsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_trmsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_trmsCountAggregateInputType | true
    }

  export interface sv_trmsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_trms'], meta: { name: 'sv_trms' } }
    /**
     * Find zero or one Sv_trms that matches the filter.
     * @param {sv_trmsFindUniqueArgs} args - Arguments to find a Sv_trms
     * @example
     * // Get one Sv_trms
     * const sv_trms = await prisma.sv_trms.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_trmsFindUniqueArgs>(args: SelectSubset<T, sv_trmsFindUniqueArgs<ExtArgs>>): Prisma__sv_trmsClient<$Result.GetResult<Prisma.$sv_trmsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_trms that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_trmsFindUniqueOrThrowArgs} args - Arguments to find a Sv_trms
     * @example
     * // Get one Sv_trms
     * const sv_trms = await prisma.sv_trms.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_trmsFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_trmsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_trmsClient<$Result.GetResult<Prisma.$sv_trmsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_trms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_trmsFindFirstArgs} args - Arguments to find a Sv_trms
     * @example
     * // Get one Sv_trms
     * const sv_trms = await prisma.sv_trms.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_trmsFindFirstArgs>(args?: SelectSubset<T, sv_trmsFindFirstArgs<ExtArgs>>): Prisma__sv_trmsClient<$Result.GetResult<Prisma.$sv_trmsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_trms that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_trmsFindFirstOrThrowArgs} args - Arguments to find a Sv_trms
     * @example
     * // Get one Sv_trms
     * const sv_trms = await prisma.sv_trms.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_trmsFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_trmsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_trmsClient<$Result.GetResult<Prisma.$sv_trmsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_trms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_trmsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_trms
     * const sv_trms = await prisma.sv_trms.findMany()
     * 
     * // Get first 10 Sv_trms
     * const sv_trms = await prisma.sv_trms.findMany({ take: 10 })
     * 
     * // Only select the `trms_no`
     * const sv_trmsWithTrms_noOnly = await prisma.sv_trms.findMany({ select: { trms_no: true } })
     * 
     */
    findMany<T extends sv_trmsFindManyArgs>(args?: SelectSubset<T, sv_trmsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_trmsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_trms.
     * @param {sv_trmsCreateArgs} args - Arguments to create a Sv_trms.
     * @example
     * // Create one Sv_trms
     * const Sv_trms = await prisma.sv_trms.create({
     *   data: {
     *     // ... data to create a Sv_trms
     *   }
     * })
     * 
     */
    create<T extends sv_trmsCreateArgs>(args: SelectSubset<T, sv_trmsCreateArgs<ExtArgs>>): Prisma__sv_trmsClient<$Result.GetResult<Prisma.$sv_trmsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_trms.
     * @param {sv_trmsCreateManyArgs} args - Arguments to create many Sv_trms.
     * @example
     * // Create many Sv_trms
     * const sv_trms = await prisma.sv_trms.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_trmsCreateManyArgs>(args?: SelectSubset<T, sv_trmsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_trms.
     * @param {sv_trmsDeleteArgs} args - Arguments to delete one Sv_trms.
     * @example
     * // Delete one Sv_trms
     * const Sv_trms = await prisma.sv_trms.delete({
     *   where: {
     *     // ... filter to delete one Sv_trms
     *   }
     * })
     * 
     */
    delete<T extends sv_trmsDeleteArgs>(args: SelectSubset<T, sv_trmsDeleteArgs<ExtArgs>>): Prisma__sv_trmsClient<$Result.GetResult<Prisma.$sv_trmsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_trms.
     * @param {sv_trmsUpdateArgs} args - Arguments to update one Sv_trms.
     * @example
     * // Update one Sv_trms
     * const sv_trms = await prisma.sv_trms.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_trmsUpdateArgs>(args: SelectSubset<T, sv_trmsUpdateArgs<ExtArgs>>): Prisma__sv_trmsClient<$Result.GetResult<Prisma.$sv_trmsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_trms.
     * @param {sv_trmsDeleteManyArgs} args - Arguments to filter Sv_trms to delete.
     * @example
     * // Delete a few Sv_trms
     * const { count } = await prisma.sv_trms.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_trmsDeleteManyArgs>(args?: SelectSubset<T, sv_trmsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_trms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_trmsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_trms
     * const sv_trms = await prisma.sv_trms.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_trmsUpdateManyArgs>(args: SelectSubset<T, sv_trmsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_trms.
     * @param {sv_trmsUpsertArgs} args - Arguments to update or create a Sv_trms.
     * @example
     * // Update or create a Sv_trms
     * const sv_trms = await prisma.sv_trms.upsert({
     *   create: {
     *     // ... data to create a Sv_trms
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_trms we want to update
     *   }
     * })
     */
    upsert<T extends sv_trmsUpsertArgs>(args: SelectSubset<T, sv_trmsUpsertArgs<ExtArgs>>): Prisma__sv_trmsClient<$Result.GetResult<Prisma.$sv_trmsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_trms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_trmsCountArgs} args - Arguments to filter Sv_trms to count.
     * @example
     * // Count the number of Sv_trms
     * const count = await prisma.sv_trms.count({
     *   where: {
     *     // ... the filter for the Sv_trms we want to count
     *   }
     * })
    **/
    count<T extends sv_trmsCountArgs>(
      args?: Subset<T, sv_trmsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_trmsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_trms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_trmsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_trmsAggregateArgs>(args: Subset<T, Sv_trmsAggregateArgs>): Prisma.PrismaPromise<GetSv_trmsAggregateType<T>>

    /**
     * Group by Sv_trms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_trmsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_trmsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_trmsGroupByArgs['orderBy'] }
        : { orderBy?: sv_trmsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_trmsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_trmsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_trms model
   */
  readonly fields: sv_trmsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_trms.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_trmsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_trms model
   */
  interface sv_trmsFieldRefs {
    readonly trms_no: FieldRef<"sv_trms", 'BigInt'>
    readonly clco_no: FieldRef<"sv_trms", 'BigInt'>
    readonly trms_knd_cd: FieldRef<"sv_trms", 'String'>
    readonly esntl_agr_tf: FieldRef<"sv_trms", 'String'>
    readonly sort_seq: FieldRef<"sv_trms", 'Int'>
    readonly trms_cont: FieldRef<"sv_trms", 'String'>
    readonly use_tf: FieldRef<"sv_trms", 'String'>
    readonly regr_no: FieldRef<"sv_trms", 'BigInt'>
    readonly reg_dt: FieldRef<"sv_trms", 'DateTime'>
    readonly modr_no: FieldRef<"sv_trms", 'BigInt'>
    readonly mod_dt: FieldRef<"sv_trms", 'DateTime'>
    readonly trms_ttl: FieldRef<"sv_trms", 'String'>
  }
    

  // Custom InputTypes
  /**
   * sv_trms findUnique
   */
  export type sv_trmsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms
     */
    select?: sv_trmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms
     */
    omit?: sv_trmsOmit<ExtArgs> | null
    /**
     * Filter, which sv_trms to fetch.
     */
    where: sv_trmsWhereUniqueInput
  }

  /**
   * sv_trms findUniqueOrThrow
   */
  export type sv_trmsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms
     */
    select?: sv_trmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms
     */
    omit?: sv_trmsOmit<ExtArgs> | null
    /**
     * Filter, which sv_trms to fetch.
     */
    where: sv_trmsWhereUniqueInput
  }

  /**
   * sv_trms findFirst
   */
  export type sv_trmsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms
     */
    select?: sv_trmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms
     */
    omit?: sv_trmsOmit<ExtArgs> | null
    /**
     * Filter, which sv_trms to fetch.
     */
    where?: sv_trmsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_trms to fetch.
     */
    orderBy?: sv_trmsOrderByWithRelationInput | sv_trmsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_trms.
     */
    cursor?: sv_trmsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_trms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_trms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_trms.
     */
    distinct?: Sv_trmsScalarFieldEnum | Sv_trmsScalarFieldEnum[]
  }

  /**
   * sv_trms findFirstOrThrow
   */
  export type sv_trmsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms
     */
    select?: sv_trmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms
     */
    omit?: sv_trmsOmit<ExtArgs> | null
    /**
     * Filter, which sv_trms to fetch.
     */
    where?: sv_trmsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_trms to fetch.
     */
    orderBy?: sv_trmsOrderByWithRelationInput | sv_trmsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_trms.
     */
    cursor?: sv_trmsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_trms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_trms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_trms.
     */
    distinct?: Sv_trmsScalarFieldEnum | Sv_trmsScalarFieldEnum[]
  }

  /**
   * sv_trms findMany
   */
  export type sv_trmsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms
     */
    select?: sv_trmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms
     */
    omit?: sv_trmsOmit<ExtArgs> | null
    /**
     * Filter, which sv_trms to fetch.
     */
    where?: sv_trmsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_trms to fetch.
     */
    orderBy?: sv_trmsOrderByWithRelationInput | sv_trmsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_trms.
     */
    cursor?: sv_trmsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_trms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_trms.
     */
    skip?: number
    distinct?: Sv_trmsScalarFieldEnum | Sv_trmsScalarFieldEnum[]
  }

  /**
   * sv_trms create
   */
  export type sv_trmsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms
     */
    select?: sv_trmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms
     */
    omit?: sv_trmsOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_trms.
     */
    data: XOR<sv_trmsCreateInput, sv_trmsUncheckedCreateInput>
  }

  /**
   * sv_trms createMany
   */
  export type sv_trmsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_trms.
     */
    data: sv_trmsCreateManyInput | sv_trmsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_trms update
   */
  export type sv_trmsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms
     */
    select?: sv_trmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms
     */
    omit?: sv_trmsOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_trms.
     */
    data: XOR<sv_trmsUpdateInput, sv_trmsUncheckedUpdateInput>
    /**
     * Choose, which sv_trms to update.
     */
    where: sv_trmsWhereUniqueInput
  }

  /**
   * sv_trms updateMany
   */
  export type sv_trmsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_trms.
     */
    data: XOR<sv_trmsUpdateManyMutationInput, sv_trmsUncheckedUpdateManyInput>
    /**
     * Filter which sv_trms to update
     */
    where?: sv_trmsWhereInput
    /**
     * Limit how many sv_trms to update.
     */
    limit?: number
  }

  /**
   * sv_trms upsert
   */
  export type sv_trmsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms
     */
    select?: sv_trmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms
     */
    omit?: sv_trmsOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_trms to update in case it exists.
     */
    where: sv_trmsWhereUniqueInput
    /**
     * In case the sv_trms found by the `where` argument doesn't exist, create a new sv_trms with this data.
     */
    create: XOR<sv_trmsCreateInput, sv_trmsUncheckedCreateInput>
    /**
     * In case the sv_trms was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_trmsUpdateInput, sv_trmsUncheckedUpdateInput>
  }

  /**
   * sv_trms delete
   */
  export type sv_trmsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms
     */
    select?: sv_trmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms
     */
    omit?: sv_trmsOmit<ExtArgs> | null
    /**
     * Filter which sv_trms to delete.
     */
    where: sv_trmsWhereUniqueInput
  }

  /**
   * sv_trms deleteMany
   */
  export type sv_trmsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_trms to delete
     */
    where?: sv_trmsWhereInput
    /**
     * Limit how many sv_trms to delete.
     */
    limit?: number
  }

  /**
   * sv_trms without action
   */
  export type sv_trmsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms
     */
    select?: sv_trmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms
     */
    omit?: sv_trmsOmit<ExtArgs> | null
  }


  /**
   * Model sv_trms_hist
   */

  export type AggregateSv_trms_hist = {
    _count: Sv_trms_histCountAggregateOutputType | null
    _avg: Sv_trms_histAvgAggregateOutputType | null
    _sum: Sv_trms_histSumAggregateOutputType | null
    _min: Sv_trms_histMinAggregateOutputType | null
    _max: Sv_trms_histMaxAggregateOutputType | null
  }

  export type Sv_trms_histAvgAggregateOutputType = {
    hist_no: number | null
    trms_no: number | null
    clco_no: number | null
    sort_seq: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sv_trms_histSumAggregateOutputType = {
    hist_no: bigint | null
    trms_no: bigint | null
    clco_no: bigint | null
    sort_seq: number | null
    regr_no: bigint | null
    modr_no: bigint | null
  }

  export type Sv_trms_histMinAggregateOutputType = {
    hist_no: bigint | null
    trms_no: bigint | null
    clco_no: bigint | null
    trms_knd_cd: string | null
    esntl_agr_tf: string | null
    sort_seq: number | null
    trms_cont: string | null
    use_tf: string | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
    trms_ttl: string | null
  }

  export type Sv_trms_histMaxAggregateOutputType = {
    hist_no: bigint | null
    trms_no: bigint | null
    clco_no: bigint | null
    trms_knd_cd: string | null
    esntl_agr_tf: string | null
    sort_seq: number | null
    trms_cont: string | null
    use_tf: string | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
    trms_ttl: string | null
  }

  export type Sv_trms_histCountAggregateOutputType = {
    hist_no: number
    trms_no: number
    clco_no: number
    trms_knd_cd: number
    esntl_agr_tf: number
    sort_seq: number
    trms_cont: number
    use_tf: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    trms_ttl: number
    _all: number
  }


  export type Sv_trms_histAvgAggregateInputType = {
    hist_no?: true
    trms_no?: true
    clco_no?: true
    sort_seq?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_trms_histSumAggregateInputType = {
    hist_no?: true
    trms_no?: true
    clco_no?: true
    sort_seq?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sv_trms_histMinAggregateInputType = {
    hist_no?: true
    trms_no?: true
    clco_no?: true
    trms_knd_cd?: true
    esntl_agr_tf?: true
    sort_seq?: true
    trms_cont?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    trms_ttl?: true
  }

  export type Sv_trms_histMaxAggregateInputType = {
    hist_no?: true
    trms_no?: true
    clco_no?: true
    trms_knd_cd?: true
    esntl_agr_tf?: true
    sort_seq?: true
    trms_cont?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    trms_ttl?: true
  }

  export type Sv_trms_histCountAggregateInputType = {
    hist_no?: true
    trms_no?: true
    clco_no?: true
    trms_knd_cd?: true
    esntl_agr_tf?: true
    sort_seq?: true
    trms_cont?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    trms_ttl?: true
    _all?: true
  }

  export type Sv_trms_histAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_trms_hist to aggregate.
     */
    where?: sv_trms_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_trms_hists to fetch.
     */
    orderBy?: sv_trms_histOrderByWithRelationInput | sv_trms_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sv_trms_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_trms_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_trms_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sv_trms_hists
    **/
    _count?: true | Sv_trms_histCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sv_trms_histAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sv_trms_histSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sv_trms_histMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sv_trms_histMaxAggregateInputType
  }

  export type GetSv_trms_histAggregateType<T extends Sv_trms_histAggregateArgs> = {
        [P in keyof T & keyof AggregateSv_trms_hist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSv_trms_hist[P]>
      : GetScalarType<T[P], AggregateSv_trms_hist[P]>
  }




  export type sv_trms_histGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sv_trms_histWhereInput
    orderBy?: sv_trms_histOrderByWithAggregationInput | sv_trms_histOrderByWithAggregationInput[]
    by: Sv_trms_histScalarFieldEnum[] | Sv_trms_histScalarFieldEnum
    having?: sv_trms_histScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sv_trms_histCountAggregateInputType | true
    _avg?: Sv_trms_histAvgAggregateInputType
    _sum?: Sv_trms_histSumAggregateInputType
    _min?: Sv_trms_histMinAggregateInputType
    _max?: Sv_trms_histMaxAggregateInputType
  }

  export type Sv_trms_histGroupByOutputType = {
    hist_no: bigint
    trms_no: bigint
    clco_no: bigint
    trms_knd_cd: string
    esntl_agr_tf: string
    sort_seq: number
    trms_cont: string
    use_tf: string
    regr_no: bigint
    reg_dt: Date
    modr_no: bigint
    mod_dt: Date
    trms_ttl: string
    _count: Sv_trms_histCountAggregateOutputType | null
    _avg: Sv_trms_histAvgAggregateOutputType | null
    _sum: Sv_trms_histSumAggregateOutputType | null
    _min: Sv_trms_histMinAggregateOutputType | null
    _max: Sv_trms_histMaxAggregateOutputType | null
  }

  type GetSv_trms_histGroupByPayload<T extends sv_trms_histGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sv_trms_histGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sv_trms_histGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sv_trms_histGroupByOutputType[P]>
            : GetScalarType<T[P], Sv_trms_histGroupByOutputType[P]>
        }
      >
    >


  export type sv_trms_histSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    hist_no?: boolean
    trms_no?: boolean
    clco_no?: boolean
    trms_knd_cd?: boolean
    esntl_agr_tf?: boolean
    sort_seq?: boolean
    trms_cont?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
    trms_ttl?: boolean
  }, ExtArgs["result"]["sv_trms_hist"]>



  export type sv_trms_histSelectScalar = {
    hist_no?: boolean
    trms_no?: boolean
    clco_no?: boolean
    trms_knd_cd?: boolean
    esntl_agr_tf?: boolean
    sort_seq?: boolean
    trms_cont?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
    trms_ttl?: boolean
  }

  export type sv_trms_histOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"hist_no" | "trms_no" | "clco_no" | "trms_knd_cd" | "esntl_agr_tf" | "sort_seq" | "trms_cont" | "use_tf" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt" | "trms_ttl", ExtArgs["result"]["sv_trms_hist"]>

  export type $sv_trms_histPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sv_trms_hist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      hist_no: bigint
      trms_no: bigint
      clco_no: bigint
      trms_knd_cd: string
      esntl_agr_tf: string
      sort_seq: number
      trms_cont: string
      use_tf: string
      regr_no: bigint
      reg_dt: Date
      modr_no: bigint
      mod_dt: Date
      trms_ttl: string
    }, ExtArgs["result"]["sv_trms_hist"]>
    composites: {}
  }

  type sv_trms_histGetPayload<S extends boolean | null | undefined | sv_trms_histDefaultArgs> = $Result.GetResult<Prisma.$sv_trms_histPayload, S>

  type sv_trms_histCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sv_trms_histFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sv_trms_histCountAggregateInputType | true
    }

  export interface sv_trms_histDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sv_trms_hist'], meta: { name: 'sv_trms_hist' } }
    /**
     * Find zero or one Sv_trms_hist that matches the filter.
     * @param {sv_trms_histFindUniqueArgs} args - Arguments to find a Sv_trms_hist
     * @example
     * // Get one Sv_trms_hist
     * const sv_trms_hist = await prisma.sv_trms_hist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sv_trms_histFindUniqueArgs>(args: SelectSubset<T, sv_trms_histFindUniqueArgs<ExtArgs>>): Prisma__sv_trms_histClient<$Result.GetResult<Prisma.$sv_trms_histPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sv_trms_hist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sv_trms_histFindUniqueOrThrowArgs} args - Arguments to find a Sv_trms_hist
     * @example
     * // Get one Sv_trms_hist
     * const sv_trms_hist = await prisma.sv_trms_hist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sv_trms_histFindUniqueOrThrowArgs>(args: SelectSubset<T, sv_trms_histFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sv_trms_histClient<$Result.GetResult<Prisma.$sv_trms_histPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_trms_hist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_trms_histFindFirstArgs} args - Arguments to find a Sv_trms_hist
     * @example
     * // Get one Sv_trms_hist
     * const sv_trms_hist = await prisma.sv_trms_hist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sv_trms_histFindFirstArgs>(args?: SelectSubset<T, sv_trms_histFindFirstArgs<ExtArgs>>): Prisma__sv_trms_histClient<$Result.GetResult<Prisma.$sv_trms_histPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sv_trms_hist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_trms_histFindFirstOrThrowArgs} args - Arguments to find a Sv_trms_hist
     * @example
     * // Get one Sv_trms_hist
     * const sv_trms_hist = await prisma.sv_trms_hist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sv_trms_histFindFirstOrThrowArgs>(args?: SelectSubset<T, sv_trms_histFindFirstOrThrowArgs<ExtArgs>>): Prisma__sv_trms_histClient<$Result.GetResult<Prisma.$sv_trms_histPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sv_trms_hists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_trms_histFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sv_trms_hists
     * const sv_trms_hists = await prisma.sv_trms_hist.findMany()
     * 
     * // Get first 10 Sv_trms_hists
     * const sv_trms_hists = await prisma.sv_trms_hist.findMany({ take: 10 })
     * 
     * // Only select the `hist_no`
     * const sv_trms_histWithHist_noOnly = await prisma.sv_trms_hist.findMany({ select: { hist_no: true } })
     * 
     */
    findMany<T extends sv_trms_histFindManyArgs>(args?: SelectSubset<T, sv_trms_histFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sv_trms_histPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sv_trms_hist.
     * @param {sv_trms_histCreateArgs} args - Arguments to create a Sv_trms_hist.
     * @example
     * // Create one Sv_trms_hist
     * const Sv_trms_hist = await prisma.sv_trms_hist.create({
     *   data: {
     *     // ... data to create a Sv_trms_hist
     *   }
     * })
     * 
     */
    create<T extends sv_trms_histCreateArgs>(args: SelectSubset<T, sv_trms_histCreateArgs<ExtArgs>>): Prisma__sv_trms_histClient<$Result.GetResult<Prisma.$sv_trms_histPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sv_trms_hists.
     * @param {sv_trms_histCreateManyArgs} args - Arguments to create many Sv_trms_hists.
     * @example
     * // Create many Sv_trms_hists
     * const sv_trms_hist = await prisma.sv_trms_hist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sv_trms_histCreateManyArgs>(args?: SelectSubset<T, sv_trms_histCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sv_trms_hist.
     * @param {sv_trms_histDeleteArgs} args - Arguments to delete one Sv_trms_hist.
     * @example
     * // Delete one Sv_trms_hist
     * const Sv_trms_hist = await prisma.sv_trms_hist.delete({
     *   where: {
     *     // ... filter to delete one Sv_trms_hist
     *   }
     * })
     * 
     */
    delete<T extends sv_trms_histDeleteArgs>(args: SelectSubset<T, sv_trms_histDeleteArgs<ExtArgs>>): Prisma__sv_trms_histClient<$Result.GetResult<Prisma.$sv_trms_histPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sv_trms_hist.
     * @param {sv_trms_histUpdateArgs} args - Arguments to update one Sv_trms_hist.
     * @example
     * // Update one Sv_trms_hist
     * const sv_trms_hist = await prisma.sv_trms_hist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sv_trms_histUpdateArgs>(args: SelectSubset<T, sv_trms_histUpdateArgs<ExtArgs>>): Prisma__sv_trms_histClient<$Result.GetResult<Prisma.$sv_trms_histPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sv_trms_hists.
     * @param {sv_trms_histDeleteManyArgs} args - Arguments to filter Sv_trms_hists to delete.
     * @example
     * // Delete a few Sv_trms_hists
     * const { count } = await prisma.sv_trms_hist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sv_trms_histDeleteManyArgs>(args?: SelectSubset<T, sv_trms_histDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sv_trms_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_trms_histUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sv_trms_hists
     * const sv_trms_hist = await prisma.sv_trms_hist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sv_trms_histUpdateManyArgs>(args: SelectSubset<T, sv_trms_histUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sv_trms_hist.
     * @param {sv_trms_histUpsertArgs} args - Arguments to update or create a Sv_trms_hist.
     * @example
     * // Update or create a Sv_trms_hist
     * const sv_trms_hist = await prisma.sv_trms_hist.upsert({
     *   create: {
     *     // ... data to create a Sv_trms_hist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sv_trms_hist we want to update
     *   }
     * })
     */
    upsert<T extends sv_trms_histUpsertArgs>(args: SelectSubset<T, sv_trms_histUpsertArgs<ExtArgs>>): Prisma__sv_trms_histClient<$Result.GetResult<Prisma.$sv_trms_histPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sv_trms_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_trms_histCountArgs} args - Arguments to filter Sv_trms_hists to count.
     * @example
     * // Count the number of Sv_trms_hists
     * const count = await prisma.sv_trms_hist.count({
     *   where: {
     *     // ... the filter for the Sv_trms_hists we want to count
     *   }
     * })
    **/
    count<T extends sv_trms_histCountArgs>(
      args?: Subset<T, sv_trms_histCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sv_trms_histCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sv_trms_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sv_trms_histAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sv_trms_histAggregateArgs>(args: Subset<T, Sv_trms_histAggregateArgs>): Prisma.PrismaPromise<GetSv_trms_histAggregateType<T>>

    /**
     * Group by Sv_trms_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sv_trms_histGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sv_trms_histGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sv_trms_histGroupByArgs['orderBy'] }
        : { orderBy?: sv_trms_histGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sv_trms_histGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSv_trms_histGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sv_trms_hist model
   */
  readonly fields: sv_trms_histFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sv_trms_hist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sv_trms_histClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sv_trms_hist model
   */
  interface sv_trms_histFieldRefs {
    readonly hist_no: FieldRef<"sv_trms_hist", 'BigInt'>
    readonly trms_no: FieldRef<"sv_trms_hist", 'BigInt'>
    readonly clco_no: FieldRef<"sv_trms_hist", 'BigInt'>
    readonly trms_knd_cd: FieldRef<"sv_trms_hist", 'String'>
    readonly esntl_agr_tf: FieldRef<"sv_trms_hist", 'String'>
    readonly sort_seq: FieldRef<"sv_trms_hist", 'Int'>
    readonly trms_cont: FieldRef<"sv_trms_hist", 'String'>
    readonly use_tf: FieldRef<"sv_trms_hist", 'String'>
    readonly regr_no: FieldRef<"sv_trms_hist", 'BigInt'>
    readonly reg_dt: FieldRef<"sv_trms_hist", 'DateTime'>
    readonly modr_no: FieldRef<"sv_trms_hist", 'BigInt'>
    readonly mod_dt: FieldRef<"sv_trms_hist", 'DateTime'>
    readonly trms_ttl: FieldRef<"sv_trms_hist", 'String'>
  }
    

  // Custom InputTypes
  /**
   * sv_trms_hist findUnique
   */
  export type sv_trms_histFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms_hist
     */
    select?: sv_trms_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms_hist
     */
    omit?: sv_trms_histOmit<ExtArgs> | null
    /**
     * Filter, which sv_trms_hist to fetch.
     */
    where: sv_trms_histWhereUniqueInput
  }

  /**
   * sv_trms_hist findUniqueOrThrow
   */
  export type sv_trms_histFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms_hist
     */
    select?: sv_trms_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms_hist
     */
    omit?: sv_trms_histOmit<ExtArgs> | null
    /**
     * Filter, which sv_trms_hist to fetch.
     */
    where: sv_trms_histWhereUniqueInput
  }

  /**
   * sv_trms_hist findFirst
   */
  export type sv_trms_histFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms_hist
     */
    select?: sv_trms_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms_hist
     */
    omit?: sv_trms_histOmit<ExtArgs> | null
    /**
     * Filter, which sv_trms_hist to fetch.
     */
    where?: sv_trms_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_trms_hists to fetch.
     */
    orderBy?: sv_trms_histOrderByWithRelationInput | sv_trms_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_trms_hists.
     */
    cursor?: sv_trms_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_trms_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_trms_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_trms_hists.
     */
    distinct?: Sv_trms_histScalarFieldEnum | Sv_trms_histScalarFieldEnum[]
  }

  /**
   * sv_trms_hist findFirstOrThrow
   */
  export type sv_trms_histFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms_hist
     */
    select?: sv_trms_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms_hist
     */
    omit?: sv_trms_histOmit<ExtArgs> | null
    /**
     * Filter, which sv_trms_hist to fetch.
     */
    where?: sv_trms_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_trms_hists to fetch.
     */
    orderBy?: sv_trms_histOrderByWithRelationInput | sv_trms_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sv_trms_hists.
     */
    cursor?: sv_trms_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_trms_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_trms_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sv_trms_hists.
     */
    distinct?: Sv_trms_histScalarFieldEnum | Sv_trms_histScalarFieldEnum[]
  }

  /**
   * sv_trms_hist findMany
   */
  export type sv_trms_histFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms_hist
     */
    select?: sv_trms_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms_hist
     */
    omit?: sv_trms_histOmit<ExtArgs> | null
    /**
     * Filter, which sv_trms_hists to fetch.
     */
    where?: sv_trms_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sv_trms_hists to fetch.
     */
    orderBy?: sv_trms_histOrderByWithRelationInput | sv_trms_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sv_trms_hists.
     */
    cursor?: sv_trms_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sv_trms_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sv_trms_hists.
     */
    skip?: number
    distinct?: Sv_trms_histScalarFieldEnum | Sv_trms_histScalarFieldEnum[]
  }

  /**
   * sv_trms_hist create
   */
  export type sv_trms_histCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms_hist
     */
    select?: sv_trms_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms_hist
     */
    omit?: sv_trms_histOmit<ExtArgs> | null
    /**
     * The data needed to create a sv_trms_hist.
     */
    data: XOR<sv_trms_histCreateInput, sv_trms_histUncheckedCreateInput>
  }

  /**
   * sv_trms_hist createMany
   */
  export type sv_trms_histCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sv_trms_hists.
     */
    data: sv_trms_histCreateManyInput | sv_trms_histCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sv_trms_hist update
   */
  export type sv_trms_histUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms_hist
     */
    select?: sv_trms_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms_hist
     */
    omit?: sv_trms_histOmit<ExtArgs> | null
    /**
     * The data needed to update a sv_trms_hist.
     */
    data: XOR<sv_trms_histUpdateInput, sv_trms_histUncheckedUpdateInput>
    /**
     * Choose, which sv_trms_hist to update.
     */
    where: sv_trms_histWhereUniqueInput
  }

  /**
   * sv_trms_hist updateMany
   */
  export type sv_trms_histUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sv_trms_hists.
     */
    data: XOR<sv_trms_histUpdateManyMutationInput, sv_trms_histUncheckedUpdateManyInput>
    /**
     * Filter which sv_trms_hists to update
     */
    where?: sv_trms_histWhereInput
    /**
     * Limit how many sv_trms_hists to update.
     */
    limit?: number
  }

  /**
   * sv_trms_hist upsert
   */
  export type sv_trms_histUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms_hist
     */
    select?: sv_trms_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms_hist
     */
    omit?: sv_trms_histOmit<ExtArgs> | null
    /**
     * The filter to search for the sv_trms_hist to update in case it exists.
     */
    where: sv_trms_histWhereUniqueInput
    /**
     * In case the sv_trms_hist found by the `where` argument doesn't exist, create a new sv_trms_hist with this data.
     */
    create: XOR<sv_trms_histCreateInput, sv_trms_histUncheckedCreateInput>
    /**
     * In case the sv_trms_hist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sv_trms_histUpdateInput, sv_trms_histUncheckedUpdateInput>
  }

  /**
   * sv_trms_hist delete
   */
  export type sv_trms_histDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms_hist
     */
    select?: sv_trms_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms_hist
     */
    omit?: sv_trms_histOmit<ExtArgs> | null
    /**
     * Filter which sv_trms_hist to delete.
     */
    where: sv_trms_histWhereUniqueInput
  }

  /**
   * sv_trms_hist deleteMany
   */
  export type sv_trms_histDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sv_trms_hists to delete
     */
    where?: sv_trms_histWhereInput
    /**
     * Limit how many sv_trms_hists to delete.
     */
    limit?: number
  }

  /**
   * sv_trms_hist without action
   */
  export type sv_trms_histDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sv_trms_hist
     */
    select?: sv_trms_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sv_trms_hist
     */
    omit?: sv_trms_histOmit<ExtArgs> | null
  }


  /**
   * Model sy_atch_file_mng
   */

  export type AggregateSy_atch_file_mng = {
    _count: Sy_atch_file_mngCountAggregateOutputType | null
    _avg: Sy_atch_file_mngAvgAggregateOutputType | null
    _sum: Sy_atch_file_mngSumAggregateOutputType | null
    _min: Sy_atch_file_mngMinAggregateOutputType | null
    _max: Sy_atch_file_mngMaxAggregateOutputType | null
  }

  export type Sy_atch_file_mngAvgAggregateOutputType = {
    file_mng_no: number | null
    file_sz: number | null
    mbr_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_atch_file_mngSumAggregateOutputType = {
    file_mng_no: bigint | null
    file_sz: bigint | null
    mbr_no: bigint | null
    regr_no: bigint | null
    modr_no: bigint | null
  }

  export type Sy_atch_file_mngMinAggregateOutputType = {
    file_mng_no: bigint | null
    file_path_nm: string | null
    uld_file_nm: string | null
    strg_file_nm: string | null
    file_sz: bigint | null
    extn_nm: string | null
    mbr_no: bigint | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sy_atch_file_mngMaxAggregateOutputType = {
    file_mng_no: bigint | null
    file_path_nm: string | null
    uld_file_nm: string | null
    strg_file_nm: string | null
    file_sz: bigint | null
    extn_nm: string | null
    mbr_no: bigint | null
    regr_no: bigint | null
    reg_dt: Date | null
    modr_no: bigint | null
    mod_dt: Date | null
  }

  export type Sy_atch_file_mngCountAggregateOutputType = {
    file_mng_no: number
    file_path_nm: number
    uld_file_nm: number
    strg_file_nm: number
    file_sz: number
    extn_nm: number
    mbr_no: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sy_atch_file_mngAvgAggregateInputType = {
    file_mng_no?: true
    file_sz?: true
    mbr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_atch_file_mngSumAggregateInputType = {
    file_mng_no?: true
    file_sz?: true
    mbr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_atch_file_mngMinAggregateInputType = {
    file_mng_no?: true
    file_path_nm?: true
    uld_file_nm?: true
    strg_file_nm?: true
    file_sz?: true
    extn_nm?: true
    mbr_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_atch_file_mngMaxAggregateInputType = {
    file_mng_no?: true
    file_path_nm?: true
    uld_file_nm?: true
    strg_file_nm?: true
    file_sz?: true
    extn_nm?: true
    mbr_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_atch_file_mngCountAggregateInputType = {
    file_mng_no?: true
    file_path_nm?: true
    uld_file_nm?: true
    strg_file_nm?: true
    file_sz?: true
    extn_nm?: true
    mbr_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sy_atch_file_mngAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_atch_file_mng to aggregate.
     */
    where?: sy_atch_file_mngWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_atch_file_mngs to fetch.
     */
    orderBy?: sy_atch_file_mngOrderByWithRelationInput | sy_atch_file_mngOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_atch_file_mngWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_atch_file_mngs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_atch_file_mngs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_atch_file_mngs
    **/
    _count?: true | Sy_atch_file_mngCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_atch_file_mngAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_atch_file_mngSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_atch_file_mngMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_atch_file_mngMaxAggregateInputType
  }

  export type GetSy_atch_file_mngAggregateType<T extends Sy_atch_file_mngAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_atch_file_mng]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_atch_file_mng[P]>
      : GetScalarType<T[P], AggregateSy_atch_file_mng[P]>
  }




  export type sy_atch_file_mngGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_atch_file_mngWhereInput
    orderBy?: sy_atch_file_mngOrderByWithAggregationInput | sy_atch_file_mngOrderByWithAggregationInput[]
    by: Sy_atch_file_mngScalarFieldEnum[] | Sy_atch_file_mngScalarFieldEnum
    having?: sy_atch_file_mngScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_atch_file_mngCountAggregateInputType | true
    _avg?: Sy_atch_file_mngAvgAggregateInputType
    _sum?: Sy_atch_file_mngSumAggregateInputType
    _min?: Sy_atch_file_mngMinAggregateInputType
    _max?: Sy_atch_file_mngMaxAggregateInputType
  }

  export type Sy_atch_file_mngGroupByOutputType = {
    file_mng_no: bigint
    file_path_nm: string
    uld_file_nm: string
    strg_file_nm: string
    file_sz: bigint
    extn_nm: string | null
    mbr_no: bigint | null
    regr_no: bigint
    reg_dt: Date
    modr_no: bigint
    mod_dt: Date
    _count: Sy_atch_file_mngCountAggregateOutputType | null
    _avg: Sy_atch_file_mngAvgAggregateOutputType | null
    _sum: Sy_atch_file_mngSumAggregateOutputType | null
    _min: Sy_atch_file_mngMinAggregateOutputType | null
    _max: Sy_atch_file_mngMaxAggregateOutputType | null
  }

  type GetSy_atch_file_mngGroupByPayload<T extends sy_atch_file_mngGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_atch_file_mngGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_atch_file_mngGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_atch_file_mngGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_atch_file_mngGroupByOutputType[P]>
        }
      >
    >


  export type sy_atch_file_mngSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    file_mng_no?: boolean
    file_path_nm?: boolean
    uld_file_nm?: boolean
    strg_file_nm?: boolean
    file_sz?: boolean
    extn_nm?: boolean
    mbr_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sy_atch_file_mng"]>



  export type sy_atch_file_mngSelectScalar = {
    file_mng_no?: boolean
    file_path_nm?: boolean
    uld_file_nm?: boolean
    strg_file_nm?: boolean
    file_sz?: boolean
    extn_nm?: boolean
    mbr_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sy_atch_file_mngOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"file_mng_no" | "file_path_nm" | "uld_file_nm" | "strg_file_nm" | "file_sz" | "extn_nm" | "mbr_no" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sy_atch_file_mng"]>

  export type $sy_atch_file_mngPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_atch_file_mng"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      file_mng_no: bigint
      file_path_nm: string
      uld_file_nm: string
      strg_file_nm: string
      file_sz: bigint
      extn_nm: string | null
      mbr_no: bigint | null
      regr_no: bigint
      reg_dt: Date
      modr_no: bigint
      mod_dt: Date
    }, ExtArgs["result"]["sy_atch_file_mng"]>
    composites: {}
  }

  type sy_atch_file_mngGetPayload<S extends boolean | null | undefined | sy_atch_file_mngDefaultArgs> = $Result.GetResult<Prisma.$sy_atch_file_mngPayload, S>

  type sy_atch_file_mngCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_atch_file_mngFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_atch_file_mngCountAggregateInputType | true
    }

  export interface sy_atch_file_mngDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_atch_file_mng'], meta: { name: 'sy_atch_file_mng' } }
    /**
     * Find zero or one Sy_atch_file_mng that matches the filter.
     * @param {sy_atch_file_mngFindUniqueArgs} args - Arguments to find a Sy_atch_file_mng
     * @example
     * // Get one Sy_atch_file_mng
     * const sy_atch_file_mng = await prisma.sy_atch_file_mng.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_atch_file_mngFindUniqueArgs>(args: SelectSubset<T, sy_atch_file_mngFindUniqueArgs<ExtArgs>>): Prisma__sy_atch_file_mngClient<$Result.GetResult<Prisma.$sy_atch_file_mngPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_atch_file_mng that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_atch_file_mngFindUniqueOrThrowArgs} args - Arguments to find a Sy_atch_file_mng
     * @example
     * // Get one Sy_atch_file_mng
     * const sy_atch_file_mng = await prisma.sy_atch_file_mng.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_atch_file_mngFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_atch_file_mngFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_atch_file_mngClient<$Result.GetResult<Prisma.$sy_atch_file_mngPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_atch_file_mng that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_atch_file_mngFindFirstArgs} args - Arguments to find a Sy_atch_file_mng
     * @example
     * // Get one Sy_atch_file_mng
     * const sy_atch_file_mng = await prisma.sy_atch_file_mng.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_atch_file_mngFindFirstArgs>(args?: SelectSubset<T, sy_atch_file_mngFindFirstArgs<ExtArgs>>): Prisma__sy_atch_file_mngClient<$Result.GetResult<Prisma.$sy_atch_file_mngPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_atch_file_mng that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_atch_file_mngFindFirstOrThrowArgs} args - Arguments to find a Sy_atch_file_mng
     * @example
     * // Get one Sy_atch_file_mng
     * const sy_atch_file_mng = await prisma.sy_atch_file_mng.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_atch_file_mngFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_atch_file_mngFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_atch_file_mngClient<$Result.GetResult<Prisma.$sy_atch_file_mngPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_atch_file_mngs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_atch_file_mngFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_atch_file_mngs
     * const sy_atch_file_mngs = await prisma.sy_atch_file_mng.findMany()
     * 
     * // Get first 10 Sy_atch_file_mngs
     * const sy_atch_file_mngs = await prisma.sy_atch_file_mng.findMany({ take: 10 })
     * 
     * // Only select the `file_mng_no`
     * const sy_atch_file_mngWithFile_mng_noOnly = await prisma.sy_atch_file_mng.findMany({ select: { file_mng_no: true } })
     * 
     */
    findMany<T extends sy_atch_file_mngFindManyArgs>(args?: SelectSubset<T, sy_atch_file_mngFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_atch_file_mngPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_atch_file_mng.
     * @param {sy_atch_file_mngCreateArgs} args - Arguments to create a Sy_atch_file_mng.
     * @example
     * // Create one Sy_atch_file_mng
     * const Sy_atch_file_mng = await prisma.sy_atch_file_mng.create({
     *   data: {
     *     // ... data to create a Sy_atch_file_mng
     *   }
     * })
     * 
     */
    create<T extends sy_atch_file_mngCreateArgs>(args: SelectSubset<T, sy_atch_file_mngCreateArgs<ExtArgs>>): Prisma__sy_atch_file_mngClient<$Result.GetResult<Prisma.$sy_atch_file_mngPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_atch_file_mngs.
     * @param {sy_atch_file_mngCreateManyArgs} args - Arguments to create many Sy_atch_file_mngs.
     * @example
     * // Create many Sy_atch_file_mngs
     * const sy_atch_file_mng = await prisma.sy_atch_file_mng.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_atch_file_mngCreateManyArgs>(args?: SelectSubset<T, sy_atch_file_mngCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_atch_file_mng.
     * @param {sy_atch_file_mngDeleteArgs} args - Arguments to delete one Sy_atch_file_mng.
     * @example
     * // Delete one Sy_atch_file_mng
     * const Sy_atch_file_mng = await prisma.sy_atch_file_mng.delete({
     *   where: {
     *     // ... filter to delete one Sy_atch_file_mng
     *   }
     * })
     * 
     */
    delete<T extends sy_atch_file_mngDeleteArgs>(args: SelectSubset<T, sy_atch_file_mngDeleteArgs<ExtArgs>>): Prisma__sy_atch_file_mngClient<$Result.GetResult<Prisma.$sy_atch_file_mngPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_atch_file_mng.
     * @param {sy_atch_file_mngUpdateArgs} args - Arguments to update one Sy_atch_file_mng.
     * @example
     * // Update one Sy_atch_file_mng
     * const sy_atch_file_mng = await prisma.sy_atch_file_mng.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_atch_file_mngUpdateArgs>(args: SelectSubset<T, sy_atch_file_mngUpdateArgs<ExtArgs>>): Prisma__sy_atch_file_mngClient<$Result.GetResult<Prisma.$sy_atch_file_mngPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_atch_file_mngs.
     * @param {sy_atch_file_mngDeleteManyArgs} args - Arguments to filter Sy_atch_file_mngs to delete.
     * @example
     * // Delete a few Sy_atch_file_mngs
     * const { count } = await prisma.sy_atch_file_mng.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_atch_file_mngDeleteManyArgs>(args?: SelectSubset<T, sy_atch_file_mngDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_atch_file_mngs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_atch_file_mngUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_atch_file_mngs
     * const sy_atch_file_mng = await prisma.sy_atch_file_mng.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_atch_file_mngUpdateManyArgs>(args: SelectSubset<T, sy_atch_file_mngUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_atch_file_mng.
     * @param {sy_atch_file_mngUpsertArgs} args - Arguments to update or create a Sy_atch_file_mng.
     * @example
     * // Update or create a Sy_atch_file_mng
     * const sy_atch_file_mng = await prisma.sy_atch_file_mng.upsert({
     *   create: {
     *     // ... data to create a Sy_atch_file_mng
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_atch_file_mng we want to update
     *   }
     * })
     */
    upsert<T extends sy_atch_file_mngUpsertArgs>(args: SelectSubset<T, sy_atch_file_mngUpsertArgs<ExtArgs>>): Prisma__sy_atch_file_mngClient<$Result.GetResult<Prisma.$sy_atch_file_mngPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_atch_file_mngs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_atch_file_mngCountArgs} args - Arguments to filter Sy_atch_file_mngs to count.
     * @example
     * // Count the number of Sy_atch_file_mngs
     * const count = await prisma.sy_atch_file_mng.count({
     *   where: {
     *     // ... the filter for the Sy_atch_file_mngs we want to count
     *   }
     * })
    **/
    count<T extends sy_atch_file_mngCountArgs>(
      args?: Subset<T, sy_atch_file_mngCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_atch_file_mngCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_atch_file_mng.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_atch_file_mngAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_atch_file_mngAggregateArgs>(args: Subset<T, Sy_atch_file_mngAggregateArgs>): Prisma.PrismaPromise<GetSy_atch_file_mngAggregateType<T>>

    /**
     * Group by Sy_atch_file_mng.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_atch_file_mngGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_atch_file_mngGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_atch_file_mngGroupByArgs['orderBy'] }
        : { orderBy?: sy_atch_file_mngGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_atch_file_mngGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_atch_file_mngGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_atch_file_mng model
   */
  readonly fields: sy_atch_file_mngFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_atch_file_mng.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_atch_file_mngClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_atch_file_mng model
   */
  interface sy_atch_file_mngFieldRefs {
    readonly file_mng_no: FieldRef<"sy_atch_file_mng", 'BigInt'>
    readonly file_path_nm: FieldRef<"sy_atch_file_mng", 'String'>
    readonly uld_file_nm: FieldRef<"sy_atch_file_mng", 'String'>
    readonly strg_file_nm: FieldRef<"sy_atch_file_mng", 'String'>
    readonly file_sz: FieldRef<"sy_atch_file_mng", 'BigInt'>
    readonly extn_nm: FieldRef<"sy_atch_file_mng", 'String'>
    readonly mbr_no: FieldRef<"sy_atch_file_mng", 'BigInt'>
    readonly regr_no: FieldRef<"sy_atch_file_mng", 'BigInt'>
    readonly reg_dt: FieldRef<"sy_atch_file_mng", 'DateTime'>
    readonly modr_no: FieldRef<"sy_atch_file_mng", 'BigInt'>
    readonly mod_dt: FieldRef<"sy_atch_file_mng", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sy_atch_file_mng findUnique
   */
  export type sy_atch_file_mngFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_atch_file_mng
     */
    select?: sy_atch_file_mngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_atch_file_mng
     */
    omit?: sy_atch_file_mngOmit<ExtArgs> | null
    /**
     * Filter, which sy_atch_file_mng to fetch.
     */
    where: sy_atch_file_mngWhereUniqueInput
  }

  /**
   * sy_atch_file_mng findUniqueOrThrow
   */
  export type sy_atch_file_mngFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_atch_file_mng
     */
    select?: sy_atch_file_mngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_atch_file_mng
     */
    omit?: sy_atch_file_mngOmit<ExtArgs> | null
    /**
     * Filter, which sy_atch_file_mng to fetch.
     */
    where: sy_atch_file_mngWhereUniqueInput
  }

  /**
   * sy_atch_file_mng findFirst
   */
  export type sy_atch_file_mngFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_atch_file_mng
     */
    select?: sy_atch_file_mngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_atch_file_mng
     */
    omit?: sy_atch_file_mngOmit<ExtArgs> | null
    /**
     * Filter, which sy_atch_file_mng to fetch.
     */
    where?: sy_atch_file_mngWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_atch_file_mngs to fetch.
     */
    orderBy?: sy_atch_file_mngOrderByWithRelationInput | sy_atch_file_mngOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_atch_file_mngs.
     */
    cursor?: sy_atch_file_mngWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_atch_file_mngs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_atch_file_mngs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_atch_file_mngs.
     */
    distinct?: Sy_atch_file_mngScalarFieldEnum | Sy_atch_file_mngScalarFieldEnum[]
  }

  /**
   * sy_atch_file_mng findFirstOrThrow
   */
  export type sy_atch_file_mngFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_atch_file_mng
     */
    select?: sy_atch_file_mngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_atch_file_mng
     */
    omit?: sy_atch_file_mngOmit<ExtArgs> | null
    /**
     * Filter, which sy_atch_file_mng to fetch.
     */
    where?: sy_atch_file_mngWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_atch_file_mngs to fetch.
     */
    orderBy?: sy_atch_file_mngOrderByWithRelationInput | sy_atch_file_mngOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_atch_file_mngs.
     */
    cursor?: sy_atch_file_mngWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_atch_file_mngs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_atch_file_mngs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_atch_file_mngs.
     */
    distinct?: Sy_atch_file_mngScalarFieldEnum | Sy_atch_file_mngScalarFieldEnum[]
  }

  /**
   * sy_atch_file_mng findMany
   */
  export type sy_atch_file_mngFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_atch_file_mng
     */
    select?: sy_atch_file_mngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_atch_file_mng
     */
    omit?: sy_atch_file_mngOmit<ExtArgs> | null
    /**
     * Filter, which sy_atch_file_mngs to fetch.
     */
    where?: sy_atch_file_mngWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_atch_file_mngs to fetch.
     */
    orderBy?: sy_atch_file_mngOrderByWithRelationInput | sy_atch_file_mngOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_atch_file_mngs.
     */
    cursor?: sy_atch_file_mngWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_atch_file_mngs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_atch_file_mngs.
     */
    skip?: number
    distinct?: Sy_atch_file_mngScalarFieldEnum | Sy_atch_file_mngScalarFieldEnum[]
  }

  /**
   * sy_atch_file_mng create
   */
  export type sy_atch_file_mngCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_atch_file_mng
     */
    select?: sy_atch_file_mngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_atch_file_mng
     */
    omit?: sy_atch_file_mngOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_atch_file_mng.
     */
    data: XOR<sy_atch_file_mngCreateInput, sy_atch_file_mngUncheckedCreateInput>
  }

  /**
   * sy_atch_file_mng createMany
   */
  export type sy_atch_file_mngCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_atch_file_mngs.
     */
    data: sy_atch_file_mngCreateManyInput | sy_atch_file_mngCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_atch_file_mng update
   */
  export type sy_atch_file_mngUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_atch_file_mng
     */
    select?: sy_atch_file_mngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_atch_file_mng
     */
    omit?: sy_atch_file_mngOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_atch_file_mng.
     */
    data: XOR<sy_atch_file_mngUpdateInput, sy_atch_file_mngUncheckedUpdateInput>
    /**
     * Choose, which sy_atch_file_mng to update.
     */
    where: sy_atch_file_mngWhereUniqueInput
  }

  /**
   * sy_atch_file_mng updateMany
   */
  export type sy_atch_file_mngUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_atch_file_mngs.
     */
    data: XOR<sy_atch_file_mngUpdateManyMutationInput, sy_atch_file_mngUncheckedUpdateManyInput>
    /**
     * Filter which sy_atch_file_mngs to update
     */
    where?: sy_atch_file_mngWhereInput
    /**
     * Limit how many sy_atch_file_mngs to update.
     */
    limit?: number
  }

  /**
   * sy_atch_file_mng upsert
   */
  export type sy_atch_file_mngUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_atch_file_mng
     */
    select?: sy_atch_file_mngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_atch_file_mng
     */
    omit?: sy_atch_file_mngOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_atch_file_mng to update in case it exists.
     */
    where: sy_atch_file_mngWhereUniqueInput
    /**
     * In case the sy_atch_file_mng found by the `where` argument doesn't exist, create a new sy_atch_file_mng with this data.
     */
    create: XOR<sy_atch_file_mngCreateInput, sy_atch_file_mngUncheckedCreateInput>
    /**
     * In case the sy_atch_file_mng was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_atch_file_mngUpdateInput, sy_atch_file_mngUncheckedUpdateInput>
  }

  /**
   * sy_atch_file_mng delete
   */
  export type sy_atch_file_mngDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_atch_file_mng
     */
    select?: sy_atch_file_mngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_atch_file_mng
     */
    omit?: sy_atch_file_mngOmit<ExtArgs> | null
    /**
     * Filter which sy_atch_file_mng to delete.
     */
    where: sy_atch_file_mngWhereUniqueInput
  }

  /**
   * sy_atch_file_mng deleteMany
   */
  export type sy_atch_file_mngDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_atch_file_mngs to delete
     */
    where?: sy_atch_file_mngWhereInput
    /**
     * Limit how many sy_atch_file_mngs to delete.
     */
    limit?: number
  }

  /**
   * sy_atch_file_mng without action
   */
  export type sy_atch_file_mngDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_atch_file_mng
     */
    select?: sy_atch_file_mngSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_atch_file_mng
     */
    omit?: sy_atch_file_mngOmit<ExtArgs> | null
  }


  /**
   * Model sy_auth
   */

  export type AggregateSy_auth = {
    _count: Sy_authCountAggregateOutputType | null
    _avg: Sy_authAvgAggregateOutputType | null
    _sum: Sy_authSumAggregateOutputType | null
    _min: Sy_authMinAggregateOutputType | null
    _max: Sy_authMaxAggregateOutputType | null
  }

  export type Sy_authAvgAggregateOutputType = {
    auth_no: number | null
    scrn_no: number | null
    menu_no: number | null
    auth_grp_no: number | null
    mngr_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_authSumAggregateOutputType = {
    auth_no: number | null
    scrn_no: number | null
    menu_no: number | null
    auth_grp_no: number | null
    mngr_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_authMinAggregateOutputType = {
    auth_no: number | null
    auth_trgt_sctn_cd: string | null
    auth_grnt_sctn_cd: string | null
    scrn_no: number | null
    menu_no: number | null
    auth_yn: string | null
    auth_grp_no: number | null
    mngr_no: number | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_authMaxAggregateOutputType = {
    auth_no: number | null
    auth_trgt_sctn_cd: string | null
    auth_grnt_sctn_cd: string | null
    scrn_no: number | null
    menu_no: number | null
    auth_yn: string | null
    auth_grp_no: number | null
    mngr_no: number | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_authCountAggregateOutputType = {
    auth_no: number
    auth_trgt_sctn_cd: number
    auth_grnt_sctn_cd: number
    scrn_no: number
    menu_no: number
    auth_yn: number
    auth_grp_no: number
    mngr_no: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sy_authAvgAggregateInputType = {
    auth_no?: true
    scrn_no?: true
    menu_no?: true
    auth_grp_no?: true
    mngr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_authSumAggregateInputType = {
    auth_no?: true
    scrn_no?: true
    menu_no?: true
    auth_grp_no?: true
    mngr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_authMinAggregateInputType = {
    auth_no?: true
    auth_trgt_sctn_cd?: true
    auth_grnt_sctn_cd?: true
    scrn_no?: true
    menu_no?: true
    auth_yn?: true
    auth_grp_no?: true
    mngr_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_authMaxAggregateInputType = {
    auth_no?: true
    auth_trgt_sctn_cd?: true
    auth_grnt_sctn_cd?: true
    scrn_no?: true
    menu_no?: true
    auth_yn?: true
    auth_grp_no?: true
    mngr_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_authCountAggregateInputType = {
    auth_no?: true
    auth_trgt_sctn_cd?: true
    auth_grnt_sctn_cd?: true
    scrn_no?: true
    menu_no?: true
    auth_yn?: true
    auth_grp_no?: true
    mngr_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sy_authAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_auth to aggregate.
     */
    where?: sy_authWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_auths to fetch.
     */
    orderBy?: sy_authOrderByWithRelationInput | sy_authOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_authWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_auths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_auths.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_auths
    **/
    _count?: true | Sy_authCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_authAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_authSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_authMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_authMaxAggregateInputType
  }

  export type GetSy_authAggregateType<T extends Sy_authAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_auth]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_auth[P]>
      : GetScalarType<T[P], AggregateSy_auth[P]>
  }




  export type sy_authGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_authWhereInput
    orderBy?: sy_authOrderByWithAggregationInput | sy_authOrderByWithAggregationInput[]
    by: Sy_authScalarFieldEnum[] | Sy_authScalarFieldEnum
    having?: sy_authScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_authCountAggregateInputType | true
    _avg?: Sy_authAvgAggregateInputType
    _sum?: Sy_authSumAggregateInputType
    _min?: Sy_authMinAggregateInputType
    _max?: Sy_authMaxAggregateInputType
  }

  export type Sy_authGroupByOutputType = {
    auth_no: number
    auth_trgt_sctn_cd: string
    auth_grnt_sctn_cd: string
    scrn_no: number | null
    menu_no: number | null
    auth_yn: string
    auth_grp_no: number | null
    mngr_no: number | null
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sy_authCountAggregateOutputType | null
    _avg: Sy_authAvgAggregateOutputType | null
    _sum: Sy_authSumAggregateOutputType | null
    _min: Sy_authMinAggregateOutputType | null
    _max: Sy_authMaxAggregateOutputType | null
  }

  type GetSy_authGroupByPayload<T extends sy_authGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_authGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_authGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_authGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_authGroupByOutputType[P]>
        }
      >
    >


  export type sy_authSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    auth_no?: boolean
    auth_trgt_sctn_cd?: boolean
    auth_grnt_sctn_cd?: boolean
    scrn_no?: boolean
    menu_no?: boolean
    auth_yn?: boolean
    auth_grp_no?: boolean
    mngr_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sy_auth"]>



  export type sy_authSelectScalar = {
    auth_no?: boolean
    auth_trgt_sctn_cd?: boolean
    auth_grnt_sctn_cd?: boolean
    scrn_no?: boolean
    menu_no?: boolean
    auth_yn?: boolean
    auth_grp_no?: boolean
    mngr_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sy_authOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"auth_no" | "auth_trgt_sctn_cd" | "auth_grnt_sctn_cd" | "scrn_no" | "menu_no" | "auth_yn" | "auth_grp_no" | "mngr_no" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sy_auth"]>

  export type $sy_authPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_auth"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      auth_no: number
      auth_trgt_sctn_cd: string
      auth_grnt_sctn_cd: string
      scrn_no: number | null
      menu_no: number | null
      auth_yn: string
      auth_grp_no: number | null
      mngr_no: number | null
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sy_auth"]>
    composites: {}
  }

  type sy_authGetPayload<S extends boolean | null | undefined | sy_authDefaultArgs> = $Result.GetResult<Prisma.$sy_authPayload, S>

  type sy_authCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_authFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_authCountAggregateInputType | true
    }

  export interface sy_authDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_auth'], meta: { name: 'sy_auth' } }
    /**
     * Find zero or one Sy_auth that matches the filter.
     * @param {sy_authFindUniqueArgs} args - Arguments to find a Sy_auth
     * @example
     * // Get one Sy_auth
     * const sy_auth = await prisma.sy_auth.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_authFindUniqueArgs>(args: SelectSubset<T, sy_authFindUniqueArgs<ExtArgs>>): Prisma__sy_authClient<$Result.GetResult<Prisma.$sy_authPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_auth that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_authFindUniqueOrThrowArgs} args - Arguments to find a Sy_auth
     * @example
     * // Get one Sy_auth
     * const sy_auth = await prisma.sy_auth.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_authFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_authFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_authClient<$Result.GetResult<Prisma.$sy_authPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_auth that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_authFindFirstArgs} args - Arguments to find a Sy_auth
     * @example
     * // Get one Sy_auth
     * const sy_auth = await prisma.sy_auth.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_authFindFirstArgs>(args?: SelectSubset<T, sy_authFindFirstArgs<ExtArgs>>): Prisma__sy_authClient<$Result.GetResult<Prisma.$sy_authPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_auth that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_authFindFirstOrThrowArgs} args - Arguments to find a Sy_auth
     * @example
     * // Get one Sy_auth
     * const sy_auth = await prisma.sy_auth.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_authFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_authFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_authClient<$Result.GetResult<Prisma.$sy_authPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_auths that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_authFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_auths
     * const sy_auths = await prisma.sy_auth.findMany()
     * 
     * // Get first 10 Sy_auths
     * const sy_auths = await prisma.sy_auth.findMany({ take: 10 })
     * 
     * // Only select the `auth_no`
     * const sy_authWithAuth_noOnly = await prisma.sy_auth.findMany({ select: { auth_no: true } })
     * 
     */
    findMany<T extends sy_authFindManyArgs>(args?: SelectSubset<T, sy_authFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_authPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_auth.
     * @param {sy_authCreateArgs} args - Arguments to create a Sy_auth.
     * @example
     * // Create one Sy_auth
     * const Sy_auth = await prisma.sy_auth.create({
     *   data: {
     *     // ... data to create a Sy_auth
     *   }
     * })
     * 
     */
    create<T extends sy_authCreateArgs>(args: SelectSubset<T, sy_authCreateArgs<ExtArgs>>): Prisma__sy_authClient<$Result.GetResult<Prisma.$sy_authPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_auths.
     * @param {sy_authCreateManyArgs} args - Arguments to create many Sy_auths.
     * @example
     * // Create many Sy_auths
     * const sy_auth = await prisma.sy_auth.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_authCreateManyArgs>(args?: SelectSubset<T, sy_authCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_auth.
     * @param {sy_authDeleteArgs} args - Arguments to delete one Sy_auth.
     * @example
     * // Delete one Sy_auth
     * const Sy_auth = await prisma.sy_auth.delete({
     *   where: {
     *     // ... filter to delete one Sy_auth
     *   }
     * })
     * 
     */
    delete<T extends sy_authDeleteArgs>(args: SelectSubset<T, sy_authDeleteArgs<ExtArgs>>): Prisma__sy_authClient<$Result.GetResult<Prisma.$sy_authPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_auth.
     * @param {sy_authUpdateArgs} args - Arguments to update one Sy_auth.
     * @example
     * // Update one Sy_auth
     * const sy_auth = await prisma.sy_auth.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_authUpdateArgs>(args: SelectSubset<T, sy_authUpdateArgs<ExtArgs>>): Prisma__sy_authClient<$Result.GetResult<Prisma.$sy_authPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_auths.
     * @param {sy_authDeleteManyArgs} args - Arguments to filter Sy_auths to delete.
     * @example
     * // Delete a few Sy_auths
     * const { count } = await prisma.sy_auth.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_authDeleteManyArgs>(args?: SelectSubset<T, sy_authDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_auths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_authUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_auths
     * const sy_auth = await prisma.sy_auth.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_authUpdateManyArgs>(args: SelectSubset<T, sy_authUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_auth.
     * @param {sy_authUpsertArgs} args - Arguments to update or create a Sy_auth.
     * @example
     * // Update or create a Sy_auth
     * const sy_auth = await prisma.sy_auth.upsert({
     *   create: {
     *     // ... data to create a Sy_auth
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_auth we want to update
     *   }
     * })
     */
    upsert<T extends sy_authUpsertArgs>(args: SelectSubset<T, sy_authUpsertArgs<ExtArgs>>): Prisma__sy_authClient<$Result.GetResult<Prisma.$sy_authPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_auths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_authCountArgs} args - Arguments to filter Sy_auths to count.
     * @example
     * // Count the number of Sy_auths
     * const count = await prisma.sy_auth.count({
     *   where: {
     *     // ... the filter for the Sy_auths we want to count
     *   }
     * })
    **/
    count<T extends sy_authCountArgs>(
      args?: Subset<T, sy_authCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_authCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_auth.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_authAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_authAggregateArgs>(args: Subset<T, Sy_authAggregateArgs>): Prisma.PrismaPromise<GetSy_authAggregateType<T>>

    /**
     * Group by Sy_auth.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_authGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_authGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_authGroupByArgs['orderBy'] }
        : { orderBy?: sy_authGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_authGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_authGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_auth model
   */
  readonly fields: sy_authFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_auth.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_authClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_auth model
   */
  interface sy_authFieldRefs {
    readonly auth_no: FieldRef<"sy_auth", 'Int'>
    readonly auth_trgt_sctn_cd: FieldRef<"sy_auth", 'String'>
    readonly auth_grnt_sctn_cd: FieldRef<"sy_auth", 'String'>
    readonly scrn_no: FieldRef<"sy_auth", 'Int'>
    readonly menu_no: FieldRef<"sy_auth", 'Int'>
    readonly auth_yn: FieldRef<"sy_auth", 'String'>
    readonly auth_grp_no: FieldRef<"sy_auth", 'Int'>
    readonly mngr_no: FieldRef<"sy_auth", 'Int'>
    readonly regr_no: FieldRef<"sy_auth", 'Int'>
    readonly reg_dt: FieldRef<"sy_auth", 'DateTime'>
    readonly modr_no: FieldRef<"sy_auth", 'Int'>
    readonly mod_dt: FieldRef<"sy_auth", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sy_auth findUnique
   */
  export type sy_authFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth
     */
    select?: sy_authSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth
     */
    omit?: sy_authOmit<ExtArgs> | null
    /**
     * Filter, which sy_auth to fetch.
     */
    where: sy_authWhereUniqueInput
  }

  /**
   * sy_auth findUniqueOrThrow
   */
  export type sy_authFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth
     */
    select?: sy_authSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth
     */
    omit?: sy_authOmit<ExtArgs> | null
    /**
     * Filter, which sy_auth to fetch.
     */
    where: sy_authWhereUniqueInput
  }

  /**
   * sy_auth findFirst
   */
  export type sy_authFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth
     */
    select?: sy_authSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth
     */
    omit?: sy_authOmit<ExtArgs> | null
    /**
     * Filter, which sy_auth to fetch.
     */
    where?: sy_authWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_auths to fetch.
     */
    orderBy?: sy_authOrderByWithRelationInput | sy_authOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_auths.
     */
    cursor?: sy_authWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_auths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_auths.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_auths.
     */
    distinct?: Sy_authScalarFieldEnum | Sy_authScalarFieldEnum[]
  }

  /**
   * sy_auth findFirstOrThrow
   */
  export type sy_authFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth
     */
    select?: sy_authSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth
     */
    omit?: sy_authOmit<ExtArgs> | null
    /**
     * Filter, which sy_auth to fetch.
     */
    where?: sy_authWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_auths to fetch.
     */
    orderBy?: sy_authOrderByWithRelationInput | sy_authOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_auths.
     */
    cursor?: sy_authWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_auths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_auths.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_auths.
     */
    distinct?: Sy_authScalarFieldEnum | Sy_authScalarFieldEnum[]
  }

  /**
   * sy_auth findMany
   */
  export type sy_authFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth
     */
    select?: sy_authSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth
     */
    omit?: sy_authOmit<ExtArgs> | null
    /**
     * Filter, which sy_auths to fetch.
     */
    where?: sy_authWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_auths to fetch.
     */
    orderBy?: sy_authOrderByWithRelationInput | sy_authOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_auths.
     */
    cursor?: sy_authWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_auths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_auths.
     */
    skip?: number
    distinct?: Sy_authScalarFieldEnum | Sy_authScalarFieldEnum[]
  }

  /**
   * sy_auth create
   */
  export type sy_authCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth
     */
    select?: sy_authSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth
     */
    omit?: sy_authOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_auth.
     */
    data: XOR<sy_authCreateInput, sy_authUncheckedCreateInput>
  }

  /**
   * sy_auth createMany
   */
  export type sy_authCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_auths.
     */
    data: sy_authCreateManyInput | sy_authCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_auth update
   */
  export type sy_authUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth
     */
    select?: sy_authSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth
     */
    omit?: sy_authOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_auth.
     */
    data: XOR<sy_authUpdateInput, sy_authUncheckedUpdateInput>
    /**
     * Choose, which sy_auth to update.
     */
    where: sy_authWhereUniqueInput
  }

  /**
   * sy_auth updateMany
   */
  export type sy_authUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_auths.
     */
    data: XOR<sy_authUpdateManyMutationInput, sy_authUncheckedUpdateManyInput>
    /**
     * Filter which sy_auths to update
     */
    where?: sy_authWhereInput
    /**
     * Limit how many sy_auths to update.
     */
    limit?: number
  }

  /**
   * sy_auth upsert
   */
  export type sy_authUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth
     */
    select?: sy_authSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth
     */
    omit?: sy_authOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_auth to update in case it exists.
     */
    where: sy_authWhereUniqueInput
    /**
     * In case the sy_auth found by the `where` argument doesn't exist, create a new sy_auth with this data.
     */
    create: XOR<sy_authCreateInput, sy_authUncheckedCreateInput>
    /**
     * In case the sy_auth was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_authUpdateInput, sy_authUncheckedUpdateInput>
  }

  /**
   * sy_auth delete
   */
  export type sy_authDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth
     */
    select?: sy_authSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth
     */
    omit?: sy_authOmit<ExtArgs> | null
    /**
     * Filter which sy_auth to delete.
     */
    where: sy_authWhereUniqueInput
  }

  /**
   * sy_auth deleteMany
   */
  export type sy_authDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_auths to delete
     */
    where?: sy_authWhereInput
    /**
     * Limit how many sy_auths to delete.
     */
    limit?: number
  }

  /**
   * sy_auth without action
   */
  export type sy_authDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth
     */
    select?: sy_authSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth
     */
    omit?: sy_authOmit<ExtArgs> | null
  }


  /**
   * Model sy_auth_grp
   */

  export type AggregateSy_auth_grp = {
    _count: Sy_auth_grpCountAggregateOutputType | null
    _avg: Sy_auth_grpAvgAggregateOutputType | null
    _sum: Sy_auth_grpSumAggregateOutputType | null
    _min: Sy_auth_grpMinAggregateOutputType | null
    _max: Sy_auth_grpMaxAggregateOutputType | null
  }

  export type Sy_auth_grpAvgAggregateOutputType = {
    auth_grp_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_auth_grpSumAggregateOutputType = {
    auth_grp_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_auth_grpMinAggregateOutputType = {
    auth_grp_no: number | null
    auth_grp_nm: string | null
    auth_grp_sctn_cd: string | null
    auth_grp_desc: string | null
    use_tf: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_auth_grpMaxAggregateOutputType = {
    auth_grp_no: number | null
    auth_grp_nm: string | null
    auth_grp_sctn_cd: string | null
    auth_grp_desc: string | null
    use_tf: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_auth_grpCountAggregateOutputType = {
    auth_grp_no: number
    auth_grp_nm: number
    auth_grp_sctn_cd: number
    auth_grp_desc: number
    use_tf: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sy_auth_grpAvgAggregateInputType = {
    auth_grp_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_auth_grpSumAggregateInputType = {
    auth_grp_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_auth_grpMinAggregateInputType = {
    auth_grp_no?: true
    auth_grp_nm?: true
    auth_grp_sctn_cd?: true
    auth_grp_desc?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_auth_grpMaxAggregateInputType = {
    auth_grp_no?: true
    auth_grp_nm?: true
    auth_grp_sctn_cd?: true
    auth_grp_desc?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_auth_grpCountAggregateInputType = {
    auth_grp_no?: true
    auth_grp_nm?: true
    auth_grp_sctn_cd?: true
    auth_grp_desc?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sy_auth_grpAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_auth_grp to aggregate.
     */
    where?: sy_auth_grpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_auth_grps to fetch.
     */
    orderBy?: sy_auth_grpOrderByWithRelationInput | sy_auth_grpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_auth_grpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_auth_grps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_auth_grps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_auth_grps
    **/
    _count?: true | Sy_auth_grpCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_auth_grpAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_auth_grpSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_auth_grpMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_auth_grpMaxAggregateInputType
  }

  export type GetSy_auth_grpAggregateType<T extends Sy_auth_grpAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_auth_grp]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_auth_grp[P]>
      : GetScalarType<T[P], AggregateSy_auth_grp[P]>
  }




  export type sy_auth_grpGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_auth_grpWhereInput
    orderBy?: sy_auth_grpOrderByWithAggregationInput | sy_auth_grpOrderByWithAggregationInput[]
    by: Sy_auth_grpScalarFieldEnum[] | Sy_auth_grpScalarFieldEnum
    having?: sy_auth_grpScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_auth_grpCountAggregateInputType | true
    _avg?: Sy_auth_grpAvgAggregateInputType
    _sum?: Sy_auth_grpSumAggregateInputType
    _min?: Sy_auth_grpMinAggregateInputType
    _max?: Sy_auth_grpMaxAggregateInputType
  }

  export type Sy_auth_grpGroupByOutputType = {
    auth_grp_no: number
    auth_grp_nm: string
    auth_grp_sctn_cd: string
    auth_grp_desc: string | null
    use_tf: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sy_auth_grpCountAggregateOutputType | null
    _avg: Sy_auth_grpAvgAggregateOutputType | null
    _sum: Sy_auth_grpSumAggregateOutputType | null
    _min: Sy_auth_grpMinAggregateOutputType | null
    _max: Sy_auth_grpMaxAggregateOutputType | null
  }

  type GetSy_auth_grpGroupByPayload<T extends sy_auth_grpGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_auth_grpGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_auth_grpGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_auth_grpGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_auth_grpGroupByOutputType[P]>
        }
      >
    >


  export type sy_auth_grpSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    auth_grp_no?: boolean
    auth_grp_nm?: boolean
    auth_grp_sctn_cd?: boolean
    auth_grp_desc?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sy_auth_grp"]>



  export type sy_auth_grpSelectScalar = {
    auth_grp_no?: boolean
    auth_grp_nm?: boolean
    auth_grp_sctn_cd?: boolean
    auth_grp_desc?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sy_auth_grpOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"auth_grp_no" | "auth_grp_nm" | "auth_grp_sctn_cd" | "auth_grp_desc" | "use_tf" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sy_auth_grp"]>

  export type $sy_auth_grpPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_auth_grp"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      auth_grp_no: number
      auth_grp_nm: string
      auth_grp_sctn_cd: string
      auth_grp_desc: string | null
      use_tf: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sy_auth_grp"]>
    composites: {}
  }

  type sy_auth_grpGetPayload<S extends boolean | null | undefined | sy_auth_grpDefaultArgs> = $Result.GetResult<Prisma.$sy_auth_grpPayload, S>

  type sy_auth_grpCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_auth_grpFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_auth_grpCountAggregateInputType | true
    }

  export interface sy_auth_grpDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_auth_grp'], meta: { name: 'sy_auth_grp' } }
    /**
     * Find zero or one Sy_auth_grp that matches the filter.
     * @param {sy_auth_grpFindUniqueArgs} args - Arguments to find a Sy_auth_grp
     * @example
     * // Get one Sy_auth_grp
     * const sy_auth_grp = await prisma.sy_auth_grp.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_auth_grpFindUniqueArgs>(args: SelectSubset<T, sy_auth_grpFindUniqueArgs<ExtArgs>>): Prisma__sy_auth_grpClient<$Result.GetResult<Prisma.$sy_auth_grpPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_auth_grp that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_auth_grpFindUniqueOrThrowArgs} args - Arguments to find a Sy_auth_grp
     * @example
     * // Get one Sy_auth_grp
     * const sy_auth_grp = await prisma.sy_auth_grp.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_auth_grpFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_auth_grpFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_auth_grpClient<$Result.GetResult<Prisma.$sy_auth_grpPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_auth_grp that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_auth_grpFindFirstArgs} args - Arguments to find a Sy_auth_grp
     * @example
     * // Get one Sy_auth_grp
     * const sy_auth_grp = await prisma.sy_auth_grp.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_auth_grpFindFirstArgs>(args?: SelectSubset<T, sy_auth_grpFindFirstArgs<ExtArgs>>): Prisma__sy_auth_grpClient<$Result.GetResult<Prisma.$sy_auth_grpPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_auth_grp that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_auth_grpFindFirstOrThrowArgs} args - Arguments to find a Sy_auth_grp
     * @example
     * // Get one Sy_auth_grp
     * const sy_auth_grp = await prisma.sy_auth_grp.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_auth_grpFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_auth_grpFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_auth_grpClient<$Result.GetResult<Prisma.$sy_auth_grpPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_auth_grps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_auth_grpFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_auth_grps
     * const sy_auth_grps = await prisma.sy_auth_grp.findMany()
     * 
     * // Get first 10 Sy_auth_grps
     * const sy_auth_grps = await prisma.sy_auth_grp.findMany({ take: 10 })
     * 
     * // Only select the `auth_grp_no`
     * const sy_auth_grpWithAuth_grp_noOnly = await prisma.sy_auth_grp.findMany({ select: { auth_grp_no: true } })
     * 
     */
    findMany<T extends sy_auth_grpFindManyArgs>(args?: SelectSubset<T, sy_auth_grpFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_auth_grpPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_auth_grp.
     * @param {sy_auth_grpCreateArgs} args - Arguments to create a Sy_auth_grp.
     * @example
     * // Create one Sy_auth_grp
     * const Sy_auth_grp = await prisma.sy_auth_grp.create({
     *   data: {
     *     // ... data to create a Sy_auth_grp
     *   }
     * })
     * 
     */
    create<T extends sy_auth_grpCreateArgs>(args: SelectSubset<T, sy_auth_grpCreateArgs<ExtArgs>>): Prisma__sy_auth_grpClient<$Result.GetResult<Prisma.$sy_auth_grpPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_auth_grps.
     * @param {sy_auth_grpCreateManyArgs} args - Arguments to create many Sy_auth_grps.
     * @example
     * // Create many Sy_auth_grps
     * const sy_auth_grp = await prisma.sy_auth_grp.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_auth_grpCreateManyArgs>(args?: SelectSubset<T, sy_auth_grpCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_auth_grp.
     * @param {sy_auth_grpDeleteArgs} args - Arguments to delete one Sy_auth_grp.
     * @example
     * // Delete one Sy_auth_grp
     * const Sy_auth_grp = await prisma.sy_auth_grp.delete({
     *   where: {
     *     // ... filter to delete one Sy_auth_grp
     *   }
     * })
     * 
     */
    delete<T extends sy_auth_grpDeleteArgs>(args: SelectSubset<T, sy_auth_grpDeleteArgs<ExtArgs>>): Prisma__sy_auth_grpClient<$Result.GetResult<Prisma.$sy_auth_grpPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_auth_grp.
     * @param {sy_auth_grpUpdateArgs} args - Arguments to update one Sy_auth_grp.
     * @example
     * // Update one Sy_auth_grp
     * const sy_auth_grp = await prisma.sy_auth_grp.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_auth_grpUpdateArgs>(args: SelectSubset<T, sy_auth_grpUpdateArgs<ExtArgs>>): Prisma__sy_auth_grpClient<$Result.GetResult<Prisma.$sy_auth_grpPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_auth_grps.
     * @param {sy_auth_grpDeleteManyArgs} args - Arguments to filter Sy_auth_grps to delete.
     * @example
     * // Delete a few Sy_auth_grps
     * const { count } = await prisma.sy_auth_grp.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_auth_grpDeleteManyArgs>(args?: SelectSubset<T, sy_auth_grpDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_auth_grps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_auth_grpUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_auth_grps
     * const sy_auth_grp = await prisma.sy_auth_grp.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_auth_grpUpdateManyArgs>(args: SelectSubset<T, sy_auth_grpUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_auth_grp.
     * @param {sy_auth_grpUpsertArgs} args - Arguments to update or create a Sy_auth_grp.
     * @example
     * // Update or create a Sy_auth_grp
     * const sy_auth_grp = await prisma.sy_auth_grp.upsert({
     *   create: {
     *     // ... data to create a Sy_auth_grp
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_auth_grp we want to update
     *   }
     * })
     */
    upsert<T extends sy_auth_grpUpsertArgs>(args: SelectSubset<T, sy_auth_grpUpsertArgs<ExtArgs>>): Prisma__sy_auth_grpClient<$Result.GetResult<Prisma.$sy_auth_grpPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_auth_grps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_auth_grpCountArgs} args - Arguments to filter Sy_auth_grps to count.
     * @example
     * // Count the number of Sy_auth_grps
     * const count = await prisma.sy_auth_grp.count({
     *   where: {
     *     // ... the filter for the Sy_auth_grps we want to count
     *   }
     * })
    **/
    count<T extends sy_auth_grpCountArgs>(
      args?: Subset<T, sy_auth_grpCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_auth_grpCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_auth_grp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_auth_grpAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_auth_grpAggregateArgs>(args: Subset<T, Sy_auth_grpAggregateArgs>): Prisma.PrismaPromise<GetSy_auth_grpAggregateType<T>>

    /**
     * Group by Sy_auth_grp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_auth_grpGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_auth_grpGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_auth_grpGroupByArgs['orderBy'] }
        : { orderBy?: sy_auth_grpGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_auth_grpGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_auth_grpGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_auth_grp model
   */
  readonly fields: sy_auth_grpFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_auth_grp.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_auth_grpClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_auth_grp model
   */
  interface sy_auth_grpFieldRefs {
    readonly auth_grp_no: FieldRef<"sy_auth_grp", 'Int'>
    readonly auth_grp_nm: FieldRef<"sy_auth_grp", 'String'>
    readonly auth_grp_sctn_cd: FieldRef<"sy_auth_grp", 'String'>
    readonly auth_grp_desc: FieldRef<"sy_auth_grp", 'String'>
    readonly use_tf: FieldRef<"sy_auth_grp", 'String'>
    readonly regr_no: FieldRef<"sy_auth_grp", 'Int'>
    readonly reg_dt: FieldRef<"sy_auth_grp", 'DateTime'>
    readonly modr_no: FieldRef<"sy_auth_grp", 'Int'>
    readonly mod_dt: FieldRef<"sy_auth_grp", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sy_auth_grp findUnique
   */
  export type sy_auth_grpFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth_grp
     */
    select?: sy_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth_grp
     */
    omit?: sy_auth_grpOmit<ExtArgs> | null
    /**
     * Filter, which sy_auth_grp to fetch.
     */
    where: sy_auth_grpWhereUniqueInput
  }

  /**
   * sy_auth_grp findUniqueOrThrow
   */
  export type sy_auth_grpFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth_grp
     */
    select?: sy_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth_grp
     */
    omit?: sy_auth_grpOmit<ExtArgs> | null
    /**
     * Filter, which sy_auth_grp to fetch.
     */
    where: sy_auth_grpWhereUniqueInput
  }

  /**
   * sy_auth_grp findFirst
   */
  export type sy_auth_grpFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth_grp
     */
    select?: sy_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth_grp
     */
    omit?: sy_auth_grpOmit<ExtArgs> | null
    /**
     * Filter, which sy_auth_grp to fetch.
     */
    where?: sy_auth_grpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_auth_grps to fetch.
     */
    orderBy?: sy_auth_grpOrderByWithRelationInput | sy_auth_grpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_auth_grps.
     */
    cursor?: sy_auth_grpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_auth_grps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_auth_grps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_auth_grps.
     */
    distinct?: Sy_auth_grpScalarFieldEnum | Sy_auth_grpScalarFieldEnum[]
  }

  /**
   * sy_auth_grp findFirstOrThrow
   */
  export type sy_auth_grpFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth_grp
     */
    select?: sy_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth_grp
     */
    omit?: sy_auth_grpOmit<ExtArgs> | null
    /**
     * Filter, which sy_auth_grp to fetch.
     */
    where?: sy_auth_grpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_auth_grps to fetch.
     */
    orderBy?: sy_auth_grpOrderByWithRelationInput | sy_auth_grpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_auth_grps.
     */
    cursor?: sy_auth_grpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_auth_grps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_auth_grps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_auth_grps.
     */
    distinct?: Sy_auth_grpScalarFieldEnum | Sy_auth_grpScalarFieldEnum[]
  }

  /**
   * sy_auth_grp findMany
   */
  export type sy_auth_grpFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth_grp
     */
    select?: sy_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth_grp
     */
    omit?: sy_auth_grpOmit<ExtArgs> | null
    /**
     * Filter, which sy_auth_grps to fetch.
     */
    where?: sy_auth_grpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_auth_grps to fetch.
     */
    orderBy?: sy_auth_grpOrderByWithRelationInput | sy_auth_grpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_auth_grps.
     */
    cursor?: sy_auth_grpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_auth_grps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_auth_grps.
     */
    skip?: number
    distinct?: Sy_auth_grpScalarFieldEnum | Sy_auth_grpScalarFieldEnum[]
  }

  /**
   * sy_auth_grp create
   */
  export type sy_auth_grpCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth_grp
     */
    select?: sy_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth_grp
     */
    omit?: sy_auth_grpOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_auth_grp.
     */
    data: XOR<sy_auth_grpCreateInput, sy_auth_grpUncheckedCreateInput>
  }

  /**
   * sy_auth_grp createMany
   */
  export type sy_auth_grpCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_auth_grps.
     */
    data: sy_auth_grpCreateManyInput | sy_auth_grpCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_auth_grp update
   */
  export type sy_auth_grpUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth_grp
     */
    select?: sy_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth_grp
     */
    omit?: sy_auth_grpOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_auth_grp.
     */
    data: XOR<sy_auth_grpUpdateInput, sy_auth_grpUncheckedUpdateInput>
    /**
     * Choose, which sy_auth_grp to update.
     */
    where: sy_auth_grpWhereUniqueInput
  }

  /**
   * sy_auth_grp updateMany
   */
  export type sy_auth_grpUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_auth_grps.
     */
    data: XOR<sy_auth_grpUpdateManyMutationInput, sy_auth_grpUncheckedUpdateManyInput>
    /**
     * Filter which sy_auth_grps to update
     */
    where?: sy_auth_grpWhereInput
    /**
     * Limit how many sy_auth_grps to update.
     */
    limit?: number
  }

  /**
   * sy_auth_grp upsert
   */
  export type sy_auth_grpUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth_grp
     */
    select?: sy_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth_grp
     */
    omit?: sy_auth_grpOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_auth_grp to update in case it exists.
     */
    where: sy_auth_grpWhereUniqueInput
    /**
     * In case the sy_auth_grp found by the `where` argument doesn't exist, create a new sy_auth_grp with this data.
     */
    create: XOR<sy_auth_grpCreateInput, sy_auth_grpUncheckedCreateInput>
    /**
     * In case the sy_auth_grp was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_auth_grpUpdateInput, sy_auth_grpUncheckedUpdateInput>
  }

  /**
   * sy_auth_grp delete
   */
  export type sy_auth_grpDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth_grp
     */
    select?: sy_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth_grp
     */
    omit?: sy_auth_grpOmit<ExtArgs> | null
    /**
     * Filter which sy_auth_grp to delete.
     */
    where: sy_auth_grpWhereUniqueInput
  }

  /**
   * sy_auth_grp deleteMany
   */
  export type sy_auth_grpDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_auth_grps to delete
     */
    where?: sy_auth_grpWhereInput
    /**
     * Limit how many sy_auth_grps to delete.
     */
    limit?: number
  }

  /**
   * sy_auth_grp without action
   */
  export type sy_auth_grpDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_auth_grp
     */
    select?: sy_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_auth_grp
     */
    omit?: sy_auth_grpOmit<ExtArgs> | null
  }


  /**
   * Model sy_clco
   */

  export type AggregateSy_clco = {
    _count: Sy_clcoCountAggregateOutputType | null
    _avg: Sy_clcoAvgAggregateOutputType | null
    _sum: Sy_clcoSumAggregateOutputType | null
    _min: Sy_clcoMinAggregateOutputType | null
    _max: Sy_clcoMaxAggregateOutputType | null
  }

  export type Sy_clcoAvgAggregateOutputType = {
    clco_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_clcoSumAggregateOutputType = {
    clco_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_clcoMinAggregateOutputType = {
    clco_no: number | null
    clco_nm: string | null
    clco_sctn_cd: string | null
    use_url: string | null
    hlth_rsrv_url: string | null
    use_bgng_ymd: Date | null
    use_end_ymd: Date | null
    use_stts_cd: string | null
    pic_nm: string | null
    pic_dept_nm: string | null
    pic_telno: string | null
    b2b_type: string | null
    comp_code: string | null
    bot_code: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_clcoMaxAggregateOutputType = {
    clco_no: number | null
    clco_nm: string | null
    clco_sctn_cd: string | null
    use_url: string | null
    hlth_rsrv_url: string | null
    use_bgng_ymd: Date | null
    use_end_ymd: Date | null
    use_stts_cd: string | null
    pic_nm: string | null
    pic_dept_nm: string | null
    pic_telno: string | null
    b2b_type: string | null
    comp_code: string | null
    bot_code: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_clcoCountAggregateOutputType = {
    clco_no: number
    clco_nm: number
    clco_sctn_cd: number
    use_url: number
    hlth_rsrv_url: number
    use_bgng_ymd: number
    use_end_ymd: number
    use_stts_cd: number
    pic_nm: number
    pic_dept_nm: number
    pic_telno: number
    b2b_type: number
    comp_code: number
    bot_code: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sy_clcoAvgAggregateInputType = {
    clco_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_clcoSumAggregateInputType = {
    clco_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_clcoMinAggregateInputType = {
    clco_no?: true
    clco_nm?: true
    clco_sctn_cd?: true
    use_url?: true
    hlth_rsrv_url?: true
    use_bgng_ymd?: true
    use_end_ymd?: true
    use_stts_cd?: true
    pic_nm?: true
    pic_dept_nm?: true
    pic_telno?: true
    b2b_type?: true
    comp_code?: true
    bot_code?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_clcoMaxAggregateInputType = {
    clco_no?: true
    clco_nm?: true
    clco_sctn_cd?: true
    use_url?: true
    hlth_rsrv_url?: true
    use_bgng_ymd?: true
    use_end_ymd?: true
    use_stts_cd?: true
    pic_nm?: true
    pic_dept_nm?: true
    pic_telno?: true
    b2b_type?: true
    comp_code?: true
    bot_code?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_clcoCountAggregateInputType = {
    clco_no?: true
    clco_nm?: true
    clco_sctn_cd?: true
    use_url?: true
    hlth_rsrv_url?: true
    use_bgng_ymd?: true
    use_end_ymd?: true
    use_stts_cd?: true
    pic_nm?: true
    pic_dept_nm?: true
    pic_telno?: true
    b2b_type?: true
    comp_code?: true
    bot_code?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sy_clcoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_clco to aggregate.
     */
    where?: sy_clcoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_clcos to fetch.
     */
    orderBy?: sy_clcoOrderByWithRelationInput | sy_clcoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_clcoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_clcos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_clcos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_clcos
    **/
    _count?: true | Sy_clcoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_clcoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_clcoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_clcoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_clcoMaxAggregateInputType
  }

  export type GetSy_clcoAggregateType<T extends Sy_clcoAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_clco]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_clco[P]>
      : GetScalarType<T[P], AggregateSy_clco[P]>
  }




  export type sy_clcoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_clcoWhereInput
    orderBy?: sy_clcoOrderByWithAggregationInput | sy_clcoOrderByWithAggregationInput[]
    by: Sy_clcoScalarFieldEnum[] | Sy_clcoScalarFieldEnum
    having?: sy_clcoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_clcoCountAggregateInputType | true
    _avg?: Sy_clcoAvgAggregateInputType
    _sum?: Sy_clcoSumAggregateInputType
    _min?: Sy_clcoMinAggregateInputType
    _max?: Sy_clcoMaxAggregateInputType
  }

  export type Sy_clcoGroupByOutputType = {
    clco_no: number
    clco_nm: string
    clco_sctn_cd: string | null
    use_url: string | null
    hlth_rsrv_url: string | null
    use_bgng_ymd: Date
    use_end_ymd: Date
    use_stts_cd: string
    pic_nm: string | null
    pic_dept_nm: string | null
    pic_telno: string | null
    b2b_type: string | null
    comp_code: string | null
    bot_code: string | null
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sy_clcoCountAggregateOutputType | null
    _avg: Sy_clcoAvgAggregateOutputType | null
    _sum: Sy_clcoSumAggregateOutputType | null
    _min: Sy_clcoMinAggregateOutputType | null
    _max: Sy_clcoMaxAggregateOutputType | null
  }

  type GetSy_clcoGroupByPayload<T extends sy_clcoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_clcoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_clcoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_clcoGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_clcoGroupByOutputType[P]>
        }
      >
    >


  export type sy_clcoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clco_no?: boolean
    clco_nm?: boolean
    clco_sctn_cd?: boolean
    use_url?: boolean
    hlth_rsrv_url?: boolean
    use_bgng_ymd?: boolean
    use_end_ymd?: boolean
    use_stts_cd?: boolean
    pic_nm?: boolean
    pic_dept_nm?: boolean
    pic_telno?: boolean
    b2b_type?: boolean
    comp_code?: boolean
    bot_code?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sy_clco"]>



  export type sy_clcoSelectScalar = {
    clco_no?: boolean
    clco_nm?: boolean
    clco_sctn_cd?: boolean
    use_url?: boolean
    hlth_rsrv_url?: boolean
    use_bgng_ymd?: boolean
    use_end_ymd?: boolean
    use_stts_cd?: boolean
    pic_nm?: boolean
    pic_dept_nm?: boolean
    pic_telno?: boolean
    b2b_type?: boolean
    comp_code?: boolean
    bot_code?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sy_clcoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"clco_no" | "clco_nm" | "clco_sctn_cd" | "use_url" | "hlth_rsrv_url" | "use_bgng_ymd" | "use_end_ymd" | "use_stts_cd" | "pic_nm" | "pic_dept_nm" | "pic_telno" | "b2b_type" | "comp_code" | "bot_code" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sy_clco"]>

  export type $sy_clcoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_clco"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      clco_no: number
      clco_nm: string
      clco_sctn_cd: string | null
      use_url: string | null
      hlth_rsrv_url: string | null
      use_bgng_ymd: Date
      use_end_ymd: Date
      use_stts_cd: string
      pic_nm: string | null
      pic_dept_nm: string | null
      pic_telno: string | null
      b2b_type: string | null
      comp_code: string | null
      bot_code: string | null
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sy_clco"]>
    composites: {}
  }

  type sy_clcoGetPayload<S extends boolean | null | undefined | sy_clcoDefaultArgs> = $Result.GetResult<Prisma.$sy_clcoPayload, S>

  type sy_clcoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_clcoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_clcoCountAggregateInputType | true
    }

  export interface sy_clcoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_clco'], meta: { name: 'sy_clco' } }
    /**
     * Find zero or one Sy_clco that matches the filter.
     * @param {sy_clcoFindUniqueArgs} args - Arguments to find a Sy_clco
     * @example
     * // Get one Sy_clco
     * const sy_clco = await prisma.sy_clco.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_clcoFindUniqueArgs>(args: SelectSubset<T, sy_clcoFindUniqueArgs<ExtArgs>>): Prisma__sy_clcoClient<$Result.GetResult<Prisma.$sy_clcoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_clco that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_clcoFindUniqueOrThrowArgs} args - Arguments to find a Sy_clco
     * @example
     * // Get one Sy_clco
     * const sy_clco = await prisma.sy_clco.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_clcoFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_clcoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_clcoClient<$Result.GetResult<Prisma.$sy_clcoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_clco that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_clcoFindFirstArgs} args - Arguments to find a Sy_clco
     * @example
     * // Get one Sy_clco
     * const sy_clco = await prisma.sy_clco.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_clcoFindFirstArgs>(args?: SelectSubset<T, sy_clcoFindFirstArgs<ExtArgs>>): Prisma__sy_clcoClient<$Result.GetResult<Prisma.$sy_clcoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_clco that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_clcoFindFirstOrThrowArgs} args - Arguments to find a Sy_clco
     * @example
     * // Get one Sy_clco
     * const sy_clco = await prisma.sy_clco.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_clcoFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_clcoFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_clcoClient<$Result.GetResult<Prisma.$sy_clcoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_clcos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_clcoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_clcos
     * const sy_clcos = await prisma.sy_clco.findMany()
     * 
     * // Get first 10 Sy_clcos
     * const sy_clcos = await prisma.sy_clco.findMany({ take: 10 })
     * 
     * // Only select the `clco_no`
     * const sy_clcoWithClco_noOnly = await prisma.sy_clco.findMany({ select: { clco_no: true } })
     * 
     */
    findMany<T extends sy_clcoFindManyArgs>(args?: SelectSubset<T, sy_clcoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_clcoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_clco.
     * @param {sy_clcoCreateArgs} args - Arguments to create a Sy_clco.
     * @example
     * // Create one Sy_clco
     * const Sy_clco = await prisma.sy_clco.create({
     *   data: {
     *     // ... data to create a Sy_clco
     *   }
     * })
     * 
     */
    create<T extends sy_clcoCreateArgs>(args: SelectSubset<T, sy_clcoCreateArgs<ExtArgs>>): Prisma__sy_clcoClient<$Result.GetResult<Prisma.$sy_clcoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_clcos.
     * @param {sy_clcoCreateManyArgs} args - Arguments to create many Sy_clcos.
     * @example
     * // Create many Sy_clcos
     * const sy_clco = await prisma.sy_clco.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_clcoCreateManyArgs>(args?: SelectSubset<T, sy_clcoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_clco.
     * @param {sy_clcoDeleteArgs} args - Arguments to delete one Sy_clco.
     * @example
     * // Delete one Sy_clco
     * const Sy_clco = await prisma.sy_clco.delete({
     *   where: {
     *     // ... filter to delete one Sy_clco
     *   }
     * })
     * 
     */
    delete<T extends sy_clcoDeleteArgs>(args: SelectSubset<T, sy_clcoDeleteArgs<ExtArgs>>): Prisma__sy_clcoClient<$Result.GetResult<Prisma.$sy_clcoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_clco.
     * @param {sy_clcoUpdateArgs} args - Arguments to update one Sy_clco.
     * @example
     * // Update one Sy_clco
     * const sy_clco = await prisma.sy_clco.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_clcoUpdateArgs>(args: SelectSubset<T, sy_clcoUpdateArgs<ExtArgs>>): Prisma__sy_clcoClient<$Result.GetResult<Prisma.$sy_clcoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_clcos.
     * @param {sy_clcoDeleteManyArgs} args - Arguments to filter Sy_clcos to delete.
     * @example
     * // Delete a few Sy_clcos
     * const { count } = await prisma.sy_clco.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_clcoDeleteManyArgs>(args?: SelectSubset<T, sy_clcoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_clcos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_clcoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_clcos
     * const sy_clco = await prisma.sy_clco.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_clcoUpdateManyArgs>(args: SelectSubset<T, sy_clcoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_clco.
     * @param {sy_clcoUpsertArgs} args - Arguments to update or create a Sy_clco.
     * @example
     * // Update or create a Sy_clco
     * const sy_clco = await prisma.sy_clco.upsert({
     *   create: {
     *     // ... data to create a Sy_clco
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_clco we want to update
     *   }
     * })
     */
    upsert<T extends sy_clcoUpsertArgs>(args: SelectSubset<T, sy_clcoUpsertArgs<ExtArgs>>): Prisma__sy_clcoClient<$Result.GetResult<Prisma.$sy_clcoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_clcos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_clcoCountArgs} args - Arguments to filter Sy_clcos to count.
     * @example
     * // Count the number of Sy_clcos
     * const count = await prisma.sy_clco.count({
     *   where: {
     *     // ... the filter for the Sy_clcos we want to count
     *   }
     * })
    **/
    count<T extends sy_clcoCountArgs>(
      args?: Subset<T, sy_clcoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_clcoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_clco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_clcoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_clcoAggregateArgs>(args: Subset<T, Sy_clcoAggregateArgs>): Prisma.PrismaPromise<GetSy_clcoAggregateType<T>>

    /**
     * Group by Sy_clco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_clcoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_clcoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_clcoGroupByArgs['orderBy'] }
        : { orderBy?: sy_clcoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_clcoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_clcoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_clco model
   */
  readonly fields: sy_clcoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_clco.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_clcoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_clco model
   */
  interface sy_clcoFieldRefs {
    readonly clco_no: FieldRef<"sy_clco", 'Int'>
    readonly clco_nm: FieldRef<"sy_clco", 'String'>
    readonly clco_sctn_cd: FieldRef<"sy_clco", 'String'>
    readonly use_url: FieldRef<"sy_clco", 'String'>
    readonly hlth_rsrv_url: FieldRef<"sy_clco", 'String'>
    readonly use_bgng_ymd: FieldRef<"sy_clco", 'DateTime'>
    readonly use_end_ymd: FieldRef<"sy_clco", 'DateTime'>
    readonly use_stts_cd: FieldRef<"sy_clco", 'String'>
    readonly pic_nm: FieldRef<"sy_clco", 'String'>
    readonly pic_dept_nm: FieldRef<"sy_clco", 'String'>
    readonly pic_telno: FieldRef<"sy_clco", 'String'>
    readonly b2b_type: FieldRef<"sy_clco", 'String'>
    readonly comp_code: FieldRef<"sy_clco", 'String'>
    readonly bot_code: FieldRef<"sy_clco", 'String'>
    readonly regr_no: FieldRef<"sy_clco", 'Int'>
    readonly reg_dt: FieldRef<"sy_clco", 'DateTime'>
    readonly modr_no: FieldRef<"sy_clco", 'Int'>
    readonly mod_dt: FieldRef<"sy_clco", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sy_clco findUnique
   */
  export type sy_clcoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco
     */
    select?: sy_clcoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco
     */
    omit?: sy_clcoOmit<ExtArgs> | null
    /**
     * Filter, which sy_clco to fetch.
     */
    where: sy_clcoWhereUniqueInput
  }

  /**
   * sy_clco findUniqueOrThrow
   */
  export type sy_clcoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco
     */
    select?: sy_clcoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco
     */
    omit?: sy_clcoOmit<ExtArgs> | null
    /**
     * Filter, which sy_clco to fetch.
     */
    where: sy_clcoWhereUniqueInput
  }

  /**
   * sy_clco findFirst
   */
  export type sy_clcoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco
     */
    select?: sy_clcoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco
     */
    omit?: sy_clcoOmit<ExtArgs> | null
    /**
     * Filter, which sy_clco to fetch.
     */
    where?: sy_clcoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_clcos to fetch.
     */
    orderBy?: sy_clcoOrderByWithRelationInput | sy_clcoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_clcos.
     */
    cursor?: sy_clcoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_clcos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_clcos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_clcos.
     */
    distinct?: Sy_clcoScalarFieldEnum | Sy_clcoScalarFieldEnum[]
  }

  /**
   * sy_clco findFirstOrThrow
   */
  export type sy_clcoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco
     */
    select?: sy_clcoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco
     */
    omit?: sy_clcoOmit<ExtArgs> | null
    /**
     * Filter, which sy_clco to fetch.
     */
    where?: sy_clcoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_clcos to fetch.
     */
    orderBy?: sy_clcoOrderByWithRelationInput | sy_clcoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_clcos.
     */
    cursor?: sy_clcoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_clcos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_clcos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_clcos.
     */
    distinct?: Sy_clcoScalarFieldEnum | Sy_clcoScalarFieldEnum[]
  }

  /**
   * sy_clco findMany
   */
  export type sy_clcoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco
     */
    select?: sy_clcoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco
     */
    omit?: sy_clcoOmit<ExtArgs> | null
    /**
     * Filter, which sy_clcos to fetch.
     */
    where?: sy_clcoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_clcos to fetch.
     */
    orderBy?: sy_clcoOrderByWithRelationInput | sy_clcoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_clcos.
     */
    cursor?: sy_clcoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_clcos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_clcos.
     */
    skip?: number
    distinct?: Sy_clcoScalarFieldEnum | Sy_clcoScalarFieldEnum[]
  }

  /**
   * sy_clco create
   */
  export type sy_clcoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco
     */
    select?: sy_clcoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco
     */
    omit?: sy_clcoOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_clco.
     */
    data: XOR<sy_clcoCreateInput, sy_clcoUncheckedCreateInput>
  }

  /**
   * sy_clco createMany
   */
  export type sy_clcoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_clcos.
     */
    data: sy_clcoCreateManyInput | sy_clcoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_clco update
   */
  export type sy_clcoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco
     */
    select?: sy_clcoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco
     */
    omit?: sy_clcoOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_clco.
     */
    data: XOR<sy_clcoUpdateInput, sy_clcoUncheckedUpdateInput>
    /**
     * Choose, which sy_clco to update.
     */
    where: sy_clcoWhereUniqueInput
  }

  /**
   * sy_clco updateMany
   */
  export type sy_clcoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_clcos.
     */
    data: XOR<sy_clcoUpdateManyMutationInput, sy_clcoUncheckedUpdateManyInput>
    /**
     * Filter which sy_clcos to update
     */
    where?: sy_clcoWhereInput
    /**
     * Limit how many sy_clcos to update.
     */
    limit?: number
  }

  /**
   * sy_clco upsert
   */
  export type sy_clcoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco
     */
    select?: sy_clcoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco
     */
    omit?: sy_clcoOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_clco to update in case it exists.
     */
    where: sy_clcoWhereUniqueInput
    /**
     * In case the sy_clco found by the `where` argument doesn't exist, create a new sy_clco with this data.
     */
    create: XOR<sy_clcoCreateInput, sy_clcoUncheckedCreateInput>
    /**
     * In case the sy_clco was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_clcoUpdateInput, sy_clcoUncheckedUpdateInput>
  }

  /**
   * sy_clco delete
   */
  export type sy_clcoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco
     */
    select?: sy_clcoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco
     */
    omit?: sy_clcoOmit<ExtArgs> | null
    /**
     * Filter which sy_clco to delete.
     */
    where: sy_clcoWhereUniqueInput
  }

  /**
   * sy_clco deleteMany
   */
  export type sy_clcoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_clcos to delete
     */
    where?: sy_clcoWhereInput
    /**
     * Limit how many sy_clcos to delete.
     */
    limit?: number
  }

  /**
   * sy_clco without action
   */
  export type sy_clcoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco
     */
    select?: sy_clcoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco
     */
    omit?: sy_clcoOmit<ExtArgs> | null
  }


  /**
   * Model sy_clco_dept
   */

  export type AggregateSy_clco_dept = {
    _count: Sy_clco_deptCountAggregateOutputType | null
    _avg: Sy_clco_deptAvgAggregateOutputType | null
    _sum: Sy_clco_deptSumAggregateOutputType | null
    _min: Sy_clco_deptMinAggregateOutputType | null
    _max: Sy_clco_deptMaxAggregateOutputType | null
  }

  export type Sy_clco_deptAvgAggregateOutputType = {
    clco_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_clco_deptSumAggregateOutputType = {
    clco_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_clco_deptMinAggregateOutputType = {
    clco_no: number | null
    clco_dept_cd: string | null
    clco_dept_nm: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_clco_deptMaxAggregateOutputType = {
    clco_no: number | null
    clco_dept_cd: string | null
    clco_dept_nm: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_clco_deptCountAggregateOutputType = {
    clco_no: number
    clco_dept_cd: number
    clco_dept_nm: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sy_clco_deptAvgAggregateInputType = {
    clco_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_clco_deptSumAggregateInputType = {
    clco_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_clco_deptMinAggregateInputType = {
    clco_no?: true
    clco_dept_cd?: true
    clco_dept_nm?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_clco_deptMaxAggregateInputType = {
    clco_no?: true
    clco_dept_cd?: true
    clco_dept_nm?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_clco_deptCountAggregateInputType = {
    clco_no?: true
    clco_dept_cd?: true
    clco_dept_nm?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sy_clco_deptAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_clco_dept to aggregate.
     */
    where?: sy_clco_deptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_clco_depts to fetch.
     */
    orderBy?: sy_clco_deptOrderByWithRelationInput | sy_clco_deptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_clco_deptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_clco_depts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_clco_depts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_clco_depts
    **/
    _count?: true | Sy_clco_deptCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_clco_deptAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_clco_deptSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_clco_deptMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_clco_deptMaxAggregateInputType
  }

  export type GetSy_clco_deptAggregateType<T extends Sy_clco_deptAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_clco_dept]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_clco_dept[P]>
      : GetScalarType<T[P], AggregateSy_clco_dept[P]>
  }




  export type sy_clco_deptGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_clco_deptWhereInput
    orderBy?: sy_clco_deptOrderByWithAggregationInput | sy_clco_deptOrderByWithAggregationInput[]
    by: Sy_clco_deptScalarFieldEnum[] | Sy_clco_deptScalarFieldEnum
    having?: sy_clco_deptScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_clco_deptCountAggregateInputType | true
    _avg?: Sy_clco_deptAvgAggregateInputType
    _sum?: Sy_clco_deptSumAggregateInputType
    _min?: Sy_clco_deptMinAggregateInputType
    _max?: Sy_clco_deptMaxAggregateInputType
  }

  export type Sy_clco_deptGroupByOutputType = {
    clco_no: number
    clco_dept_cd: string
    clco_dept_nm: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sy_clco_deptCountAggregateOutputType | null
    _avg: Sy_clco_deptAvgAggregateOutputType | null
    _sum: Sy_clco_deptSumAggregateOutputType | null
    _min: Sy_clco_deptMinAggregateOutputType | null
    _max: Sy_clco_deptMaxAggregateOutputType | null
  }

  type GetSy_clco_deptGroupByPayload<T extends sy_clco_deptGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_clco_deptGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_clco_deptGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_clco_deptGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_clco_deptGroupByOutputType[P]>
        }
      >
    >


  export type sy_clco_deptSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clco_no?: boolean
    clco_dept_cd?: boolean
    clco_dept_nm?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sy_clco_dept"]>



  export type sy_clco_deptSelectScalar = {
    clco_no?: boolean
    clco_dept_cd?: boolean
    clco_dept_nm?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sy_clco_deptOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"clco_no" | "clco_dept_cd" | "clco_dept_nm" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sy_clco_dept"]>

  export type $sy_clco_deptPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_clco_dept"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      clco_no: number
      clco_dept_cd: string
      clco_dept_nm: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sy_clco_dept"]>
    composites: {}
  }

  type sy_clco_deptGetPayload<S extends boolean | null | undefined | sy_clco_deptDefaultArgs> = $Result.GetResult<Prisma.$sy_clco_deptPayload, S>

  type sy_clco_deptCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_clco_deptFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_clco_deptCountAggregateInputType | true
    }

  export interface sy_clco_deptDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_clco_dept'], meta: { name: 'sy_clco_dept' } }
    /**
     * Find zero or one Sy_clco_dept that matches the filter.
     * @param {sy_clco_deptFindUniqueArgs} args - Arguments to find a Sy_clco_dept
     * @example
     * // Get one Sy_clco_dept
     * const sy_clco_dept = await prisma.sy_clco_dept.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_clco_deptFindUniqueArgs>(args: SelectSubset<T, sy_clco_deptFindUniqueArgs<ExtArgs>>): Prisma__sy_clco_deptClient<$Result.GetResult<Prisma.$sy_clco_deptPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_clco_dept that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_clco_deptFindUniqueOrThrowArgs} args - Arguments to find a Sy_clco_dept
     * @example
     * // Get one Sy_clco_dept
     * const sy_clco_dept = await prisma.sy_clco_dept.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_clco_deptFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_clco_deptFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_clco_deptClient<$Result.GetResult<Prisma.$sy_clco_deptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_clco_dept that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_clco_deptFindFirstArgs} args - Arguments to find a Sy_clco_dept
     * @example
     * // Get one Sy_clco_dept
     * const sy_clco_dept = await prisma.sy_clco_dept.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_clco_deptFindFirstArgs>(args?: SelectSubset<T, sy_clco_deptFindFirstArgs<ExtArgs>>): Prisma__sy_clco_deptClient<$Result.GetResult<Prisma.$sy_clco_deptPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_clco_dept that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_clco_deptFindFirstOrThrowArgs} args - Arguments to find a Sy_clco_dept
     * @example
     * // Get one Sy_clco_dept
     * const sy_clco_dept = await prisma.sy_clco_dept.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_clco_deptFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_clco_deptFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_clco_deptClient<$Result.GetResult<Prisma.$sy_clco_deptPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_clco_depts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_clco_deptFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_clco_depts
     * const sy_clco_depts = await prisma.sy_clco_dept.findMany()
     * 
     * // Get first 10 Sy_clco_depts
     * const sy_clco_depts = await prisma.sy_clco_dept.findMany({ take: 10 })
     * 
     * // Only select the `clco_no`
     * const sy_clco_deptWithClco_noOnly = await prisma.sy_clco_dept.findMany({ select: { clco_no: true } })
     * 
     */
    findMany<T extends sy_clco_deptFindManyArgs>(args?: SelectSubset<T, sy_clco_deptFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_clco_deptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_clco_dept.
     * @param {sy_clco_deptCreateArgs} args - Arguments to create a Sy_clco_dept.
     * @example
     * // Create one Sy_clco_dept
     * const Sy_clco_dept = await prisma.sy_clco_dept.create({
     *   data: {
     *     // ... data to create a Sy_clco_dept
     *   }
     * })
     * 
     */
    create<T extends sy_clco_deptCreateArgs>(args: SelectSubset<T, sy_clco_deptCreateArgs<ExtArgs>>): Prisma__sy_clco_deptClient<$Result.GetResult<Prisma.$sy_clco_deptPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_clco_depts.
     * @param {sy_clco_deptCreateManyArgs} args - Arguments to create many Sy_clco_depts.
     * @example
     * // Create many Sy_clco_depts
     * const sy_clco_dept = await prisma.sy_clco_dept.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_clco_deptCreateManyArgs>(args?: SelectSubset<T, sy_clco_deptCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_clco_dept.
     * @param {sy_clco_deptDeleteArgs} args - Arguments to delete one Sy_clco_dept.
     * @example
     * // Delete one Sy_clco_dept
     * const Sy_clco_dept = await prisma.sy_clco_dept.delete({
     *   where: {
     *     // ... filter to delete one Sy_clco_dept
     *   }
     * })
     * 
     */
    delete<T extends sy_clco_deptDeleteArgs>(args: SelectSubset<T, sy_clco_deptDeleteArgs<ExtArgs>>): Prisma__sy_clco_deptClient<$Result.GetResult<Prisma.$sy_clco_deptPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_clco_dept.
     * @param {sy_clco_deptUpdateArgs} args - Arguments to update one Sy_clco_dept.
     * @example
     * // Update one Sy_clco_dept
     * const sy_clco_dept = await prisma.sy_clco_dept.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_clco_deptUpdateArgs>(args: SelectSubset<T, sy_clco_deptUpdateArgs<ExtArgs>>): Prisma__sy_clco_deptClient<$Result.GetResult<Prisma.$sy_clco_deptPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_clco_depts.
     * @param {sy_clco_deptDeleteManyArgs} args - Arguments to filter Sy_clco_depts to delete.
     * @example
     * // Delete a few Sy_clco_depts
     * const { count } = await prisma.sy_clco_dept.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_clco_deptDeleteManyArgs>(args?: SelectSubset<T, sy_clco_deptDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_clco_depts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_clco_deptUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_clco_depts
     * const sy_clco_dept = await prisma.sy_clco_dept.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_clco_deptUpdateManyArgs>(args: SelectSubset<T, sy_clco_deptUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_clco_dept.
     * @param {sy_clco_deptUpsertArgs} args - Arguments to update or create a Sy_clco_dept.
     * @example
     * // Update or create a Sy_clco_dept
     * const sy_clco_dept = await prisma.sy_clco_dept.upsert({
     *   create: {
     *     // ... data to create a Sy_clco_dept
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_clco_dept we want to update
     *   }
     * })
     */
    upsert<T extends sy_clco_deptUpsertArgs>(args: SelectSubset<T, sy_clco_deptUpsertArgs<ExtArgs>>): Prisma__sy_clco_deptClient<$Result.GetResult<Prisma.$sy_clco_deptPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_clco_depts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_clco_deptCountArgs} args - Arguments to filter Sy_clco_depts to count.
     * @example
     * // Count the number of Sy_clco_depts
     * const count = await prisma.sy_clco_dept.count({
     *   where: {
     *     // ... the filter for the Sy_clco_depts we want to count
     *   }
     * })
    **/
    count<T extends sy_clco_deptCountArgs>(
      args?: Subset<T, sy_clco_deptCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_clco_deptCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_clco_dept.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_clco_deptAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_clco_deptAggregateArgs>(args: Subset<T, Sy_clco_deptAggregateArgs>): Prisma.PrismaPromise<GetSy_clco_deptAggregateType<T>>

    /**
     * Group by Sy_clco_dept.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_clco_deptGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_clco_deptGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_clco_deptGroupByArgs['orderBy'] }
        : { orderBy?: sy_clco_deptGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_clco_deptGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_clco_deptGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_clco_dept model
   */
  readonly fields: sy_clco_deptFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_clco_dept.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_clco_deptClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_clco_dept model
   */
  interface sy_clco_deptFieldRefs {
    readonly clco_no: FieldRef<"sy_clco_dept", 'Int'>
    readonly clco_dept_cd: FieldRef<"sy_clco_dept", 'String'>
    readonly clco_dept_nm: FieldRef<"sy_clco_dept", 'String'>
    readonly regr_no: FieldRef<"sy_clco_dept", 'Int'>
    readonly reg_dt: FieldRef<"sy_clco_dept", 'DateTime'>
    readonly modr_no: FieldRef<"sy_clco_dept", 'Int'>
    readonly mod_dt: FieldRef<"sy_clco_dept", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sy_clco_dept findUnique
   */
  export type sy_clco_deptFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco_dept
     */
    select?: sy_clco_deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco_dept
     */
    omit?: sy_clco_deptOmit<ExtArgs> | null
    /**
     * Filter, which sy_clco_dept to fetch.
     */
    where: sy_clco_deptWhereUniqueInput
  }

  /**
   * sy_clco_dept findUniqueOrThrow
   */
  export type sy_clco_deptFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco_dept
     */
    select?: sy_clco_deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco_dept
     */
    omit?: sy_clco_deptOmit<ExtArgs> | null
    /**
     * Filter, which sy_clco_dept to fetch.
     */
    where: sy_clco_deptWhereUniqueInput
  }

  /**
   * sy_clco_dept findFirst
   */
  export type sy_clco_deptFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco_dept
     */
    select?: sy_clco_deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco_dept
     */
    omit?: sy_clco_deptOmit<ExtArgs> | null
    /**
     * Filter, which sy_clco_dept to fetch.
     */
    where?: sy_clco_deptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_clco_depts to fetch.
     */
    orderBy?: sy_clco_deptOrderByWithRelationInput | sy_clco_deptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_clco_depts.
     */
    cursor?: sy_clco_deptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_clco_depts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_clco_depts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_clco_depts.
     */
    distinct?: Sy_clco_deptScalarFieldEnum | Sy_clco_deptScalarFieldEnum[]
  }

  /**
   * sy_clco_dept findFirstOrThrow
   */
  export type sy_clco_deptFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco_dept
     */
    select?: sy_clco_deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco_dept
     */
    omit?: sy_clco_deptOmit<ExtArgs> | null
    /**
     * Filter, which sy_clco_dept to fetch.
     */
    where?: sy_clco_deptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_clco_depts to fetch.
     */
    orderBy?: sy_clco_deptOrderByWithRelationInput | sy_clco_deptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_clco_depts.
     */
    cursor?: sy_clco_deptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_clco_depts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_clco_depts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_clco_depts.
     */
    distinct?: Sy_clco_deptScalarFieldEnum | Sy_clco_deptScalarFieldEnum[]
  }

  /**
   * sy_clco_dept findMany
   */
  export type sy_clco_deptFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco_dept
     */
    select?: sy_clco_deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco_dept
     */
    omit?: sy_clco_deptOmit<ExtArgs> | null
    /**
     * Filter, which sy_clco_depts to fetch.
     */
    where?: sy_clco_deptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_clco_depts to fetch.
     */
    orderBy?: sy_clco_deptOrderByWithRelationInput | sy_clco_deptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_clco_depts.
     */
    cursor?: sy_clco_deptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_clco_depts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_clco_depts.
     */
    skip?: number
    distinct?: Sy_clco_deptScalarFieldEnum | Sy_clco_deptScalarFieldEnum[]
  }

  /**
   * sy_clco_dept create
   */
  export type sy_clco_deptCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco_dept
     */
    select?: sy_clco_deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco_dept
     */
    omit?: sy_clco_deptOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_clco_dept.
     */
    data: XOR<sy_clco_deptCreateInput, sy_clco_deptUncheckedCreateInput>
  }

  /**
   * sy_clco_dept createMany
   */
  export type sy_clco_deptCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_clco_depts.
     */
    data: sy_clco_deptCreateManyInput | sy_clco_deptCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_clco_dept update
   */
  export type sy_clco_deptUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco_dept
     */
    select?: sy_clco_deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco_dept
     */
    omit?: sy_clco_deptOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_clco_dept.
     */
    data: XOR<sy_clco_deptUpdateInput, sy_clco_deptUncheckedUpdateInput>
    /**
     * Choose, which sy_clco_dept to update.
     */
    where: sy_clco_deptWhereUniqueInput
  }

  /**
   * sy_clco_dept updateMany
   */
  export type sy_clco_deptUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_clco_depts.
     */
    data: XOR<sy_clco_deptUpdateManyMutationInput, sy_clco_deptUncheckedUpdateManyInput>
    /**
     * Filter which sy_clco_depts to update
     */
    where?: sy_clco_deptWhereInput
    /**
     * Limit how many sy_clco_depts to update.
     */
    limit?: number
  }

  /**
   * sy_clco_dept upsert
   */
  export type sy_clco_deptUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco_dept
     */
    select?: sy_clco_deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco_dept
     */
    omit?: sy_clco_deptOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_clco_dept to update in case it exists.
     */
    where: sy_clco_deptWhereUniqueInput
    /**
     * In case the sy_clco_dept found by the `where` argument doesn't exist, create a new sy_clco_dept with this data.
     */
    create: XOR<sy_clco_deptCreateInput, sy_clco_deptUncheckedCreateInput>
    /**
     * In case the sy_clco_dept was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_clco_deptUpdateInput, sy_clco_deptUncheckedUpdateInput>
  }

  /**
   * sy_clco_dept delete
   */
  export type sy_clco_deptDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco_dept
     */
    select?: sy_clco_deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco_dept
     */
    omit?: sy_clco_deptOmit<ExtArgs> | null
    /**
     * Filter which sy_clco_dept to delete.
     */
    where: sy_clco_deptWhereUniqueInput
  }

  /**
   * sy_clco_dept deleteMany
   */
  export type sy_clco_deptDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_clco_depts to delete
     */
    where?: sy_clco_deptWhereInput
    /**
     * Limit how many sy_clco_depts to delete.
     */
    limit?: number
  }

  /**
   * sy_clco_dept without action
   */
  export type sy_clco_deptDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_clco_dept
     */
    select?: sy_clco_deptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_clco_dept
     */
    omit?: sy_clco_deptOmit<ExtArgs> | null
  }


  /**
   * Model sy_dtl_cd
   */

  export type AggregateSy_dtl_cd = {
    _count: Sy_dtl_cdCountAggregateOutputType | null
    _avg: Sy_dtl_cdAvgAggregateOutputType | null
    _sum: Sy_dtl_cdSumAggregateOutputType | null
    _min: Sy_dtl_cdMinAggregateOutputType | null
    _max: Sy_dtl_cdMaxAggregateOutputType | null
  }

  export type Sy_dtl_cdAvgAggregateOutputType = {
    sort_seq: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_dtl_cdSumAggregateOutputType = {
    sort_seq: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_dtl_cdMinAggregateOutputType = {
    grp_cd: string | null
    cd: string | null
    cd_nm: string | null
    cd_desc: string | null
    sort_seq: number | null
    use_tf: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_dtl_cdMaxAggregateOutputType = {
    grp_cd: string | null
    cd: string | null
    cd_nm: string | null
    cd_desc: string | null
    sort_seq: number | null
    use_tf: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_dtl_cdCountAggregateOutputType = {
    grp_cd: number
    cd: number
    cd_nm: number
    cd_desc: number
    sort_seq: number
    use_tf: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sy_dtl_cdAvgAggregateInputType = {
    sort_seq?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_dtl_cdSumAggregateInputType = {
    sort_seq?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_dtl_cdMinAggregateInputType = {
    grp_cd?: true
    cd?: true
    cd_nm?: true
    cd_desc?: true
    sort_seq?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_dtl_cdMaxAggregateInputType = {
    grp_cd?: true
    cd?: true
    cd_nm?: true
    cd_desc?: true
    sort_seq?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_dtl_cdCountAggregateInputType = {
    grp_cd?: true
    cd?: true
    cd_nm?: true
    cd_desc?: true
    sort_seq?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sy_dtl_cdAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_dtl_cd to aggregate.
     */
    where?: sy_dtl_cdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_dtl_cds to fetch.
     */
    orderBy?: sy_dtl_cdOrderByWithRelationInput | sy_dtl_cdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_dtl_cdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_dtl_cds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_dtl_cds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_dtl_cds
    **/
    _count?: true | Sy_dtl_cdCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_dtl_cdAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_dtl_cdSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_dtl_cdMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_dtl_cdMaxAggregateInputType
  }

  export type GetSy_dtl_cdAggregateType<T extends Sy_dtl_cdAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_dtl_cd]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_dtl_cd[P]>
      : GetScalarType<T[P], AggregateSy_dtl_cd[P]>
  }




  export type sy_dtl_cdGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_dtl_cdWhereInput
    orderBy?: sy_dtl_cdOrderByWithAggregationInput | sy_dtl_cdOrderByWithAggregationInput[]
    by: Sy_dtl_cdScalarFieldEnum[] | Sy_dtl_cdScalarFieldEnum
    having?: sy_dtl_cdScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_dtl_cdCountAggregateInputType | true
    _avg?: Sy_dtl_cdAvgAggregateInputType
    _sum?: Sy_dtl_cdSumAggregateInputType
    _min?: Sy_dtl_cdMinAggregateInputType
    _max?: Sy_dtl_cdMaxAggregateInputType
  }

  export type Sy_dtl_cdGroupByOutputType = {
    grp_cd: string
    cd: string
    cd_nm: string
    cd_desc: string | null
    sort_seq: number | null
    use_tf: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sy_dtl_cdCountAggregateOutputType | null
    _avg: Sy_dtl_cdAvgAggregateOutputType | null
    _sum: Sy_dtl_cdSumAggregateOutputType | null
    _min: Sy_dtl_cdMinAggregateOutputType | null
    _max: Sy_dtl_cdMaxAggregateOutputType | null
  }

  type GetSy_dtl_cdGroupByPayload<T extends sy_dtl_cdGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_dtl_cdGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_dtl_cdGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_dtl_cdGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_dtl_cdGroupByOutputType[P]>
        }
      >
    >


  export type sy_dtl_cdSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    grp_cd?: boolean
    cd?: boolean
    cd_nm?: boolean
    cd_desc?: boolean
    sort_seq?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sy_dtl_cd"]>



  export type sy_dtl_cdSelectScalar = {
    grp_cd?: boolean
    cd?: boolean
    cd_nm?: boolean
    cd_desc?: boolean
    sort_seq?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sy_dtl_cdOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"grp_cd" | "cd" | "cd_nm" | "cd_desc" | "sort_seq" | "use_tf" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sy_dtl_cd"]>

  export type $sy_dtl_cdPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_dtl_cd"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      grp_cd: string
      cd: string
      cd_nm: string
      cd_desc: string | null
      sort_seq: number | null
      use_tf: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sy_dtl_cd"]>
    composites: {}
  }

  type sy_dtl_cdGetPayload<S extends boolean | null | undefined | sy_dtl_cdDefaultArgs> = $Result.GetResult<Prisma.$sy_dtl_cdPayload, S>

  type sy_dtl_cdCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_dtl_cdFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_dtl_cdCountAggregateInputType | true
    }

  export interface sy_dtl_cdDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_dtl_cd'], meta: { name: 'sy_dtl_cd' } }
    /**
     * Find zero or one Sy_dtl_cd that matches the filter.
     * @param {sy_dtl_cdFindUniqueArgs} args - Arguments to find a Sy_dtl_cd
     * @example
     * // Get one Sy_dtl_cd
     * const sy_dtl_cd = await prisma.sy_dtl_cd.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_dtl_cdFindUniqueArgs>(args: SelectSubset<T, sy_dtl_cdFindUniqueArgs<ExtArgs>>): Prisma__sy_dtl_cdClient<$Result.GetResult<Prisma.$sy_dtl_cdPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_dtl_cd that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_dtl_cdFindUniqueOrThrowArgs} args - Arguments to find a Sy_dtl_cd
     * @example
     * // Get one Sy_dtl_cd
     * const sy_dtl_cd = await prisma.sy_dtl_cd.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_dtl_cdFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_dtl_cdFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_dtl_cdClient<$Result.GetResult<Prisma.$sy_dtl_cdPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_dtl_cd that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_dtl_cdFindFirstArgs} args - Arguments to find a Sy_dtl_cd
     * @example
     * // Get one Sy_dtl_cd
     * const sy_dtl_cd = await prisma.sy_dtl_cd.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_dtl_cdFindFirstArgs>(args?: SelectSubset<T, sy_dtl_cdFindFirstArgs<ExtArgs>>): Prisma__sy_dtl_cdClient<$Result.GetResult<Prisma.$sy_dtl_cdPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_dtl_cd that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_dtl_cdFindFirstOrThrowArgs} args - Arguments to find a Sy_dtl_cd
     * @example
     * // Get one Sy_dtl_cd
     * const sy_dtl_cd = await prisma.sy_dtl_cd.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_dtl_cdFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_dtl_cdFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_dtl_cdClient<$Result.GetResult<Prisma.$sy_dtl_cdPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_dtl_cds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_dtl_cdFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_dtl_cds
     * const sy_dtl_cds = await prisma.sy_dtl_cd.findMany()
     * 
     * // Get first 10 Sy_dtl_cds
     * const sy_dtl_cds = await prisma.sy_dtl_cd.findMany({ take: 10 })
     * 
     * // Only select the `grp_cd`
     * const sy_dtl_cdWithGrp_cdOnly = await prisma.sy_dtl_cd.findMany({ select: { grp_cd: true } })
     * 
     */
    findMany<T extends sy_dtl_cdFindManyArgs>(args?: SelectSubset<T, sy_dtl_cdFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_dtl_cdPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_dtl_cd.
     * @param {sy_dtl_cdCreateArgs} args - Arguments to create a Sy_dtl_cd.
     * @example
     * // Create one Sy_dtl_cd
     * const Sy_dtl_cd = await prisma.sy_dtl_cd.create({
     *   data: {
     *     // ... data to create a Sy_dtl_cd
     *   }
     * })
     * 
     */
    create<T extends sy_dtl_cdCreateArgs>(args: SelectSubset<T, sy_dtl_cdCreateArgs<ExtArgs>>): Prisma__sy_dtl_cdClient<$Result.GetResult<Prisma.$sy_dtl_cdPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_dtl_cds.
     * @param {sy_dtl_cdCreateManyArgs} args - Arguments to create many Sy_dtl_cds.
     * @example
     * // Create many Sy_dtl_cds
     * const sy_dtl_cd = await prisma.sy_dtl_cd.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_dtl_cdCreateManyArgs>(args?: SelectSubset<T, sy_dtl_cdCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_dtl_cd.
     * @param {sy_dtl_cdDeleteArgs} args - Arguments to delete one Sy_dtl_cd.
     * @example
     * // Delete one Sy_dtl_cd
     * const Sy_dtl_cd = await prisma.sy_dtl_cd.delete({
     *   where: {
     *     // ... filter to delete one Sy_dtl_cd
     *   }
     * })
     * 
     */
    delete<T extends sy_dtl_cdDeleteArgs>(args: SelectSubset<T, sy_dtl_cdDeleteArgs<ExtArgs>>): Prisma__sy_dtl_cdClient<$Result.GetResult<Prisma.$sy_dtl_cdPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_dtl_cd.
     * @param {sy_dtl_cdUpdateArgs} args - Arguments to update one Sy_dtl_cd.
     * @example
     * // Update one Sy_dtl_cd
     * const sy_dtl_cd = await prisma.sy_dtl_cd.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_dtl_cdUpdateArgs>(args: SelectSubset<T, sy_dtl_cdUpdateArgs<ExtArgs>>): Prisma__sy_dtl_cdClient<$Result.GetResult<Prisma.$sy_dtl_cdPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_dtl_cds.
     * @param {sy_dtl_cdDeleteManyArgs} args - Arguments to filter Sy_dtl_cds to delete.
     * @example
     * // Delete a few Sy_dtl_cds
     * const { count } = await prisma.sy_dtl_cd.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_dtl_cdDeleteManyArgs>(args?: SelectSubset<T, sy_dtl_cdDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_dtl_cds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_dtl_cdUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_dtl_cds
     * const sy_dtl_cd = await prisma.sy_dtl_cd.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_dtl_cdUpdateManyArgs>(args: SelectSubset<T, sy_dtl_cdUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_dtl_cd.
     * @param {sy_dtl_cdUpsertArgs} args - Arguments to update or create a Sy_dtl_cd.
     * @example
     * // Update or create a Sy_dtl_cd
     * const sy_dtl_cd = await prisma.sy_dtl_cd.upsert({
     *   create: {
     *     // ... data to create a Sy_dtl_cd
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_dtl_cd we want to update
     *   }
     * })
     */
    upsert<T extends sy_dtl_cdUpsertArgs>(args: SelectSubset<T, sy_dtl_cdUpsertArgs<ExtArgs>>): Prisma__sy_dtl_cdClient<$Result.GetResult<Prisma.$sy_dtl_cdPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_dtl_cds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_dtl_cdCountArgs} args - Arguments to filter Sy_dtl_cds to count.
     * @example
     * // Count the number of Sy_dtl_cds
     * const count = await prisma.sy_dtl_cd.count({
     *   where: {
     *     // ... the filter for the Sy_dtl_cds we want to count
     *   }
     * })
    **/
    count<T extends sy_dtl_cdCountArgs>(
      args?: Subset<T, sy_dtl_cdCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_dtl_cdCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_dtl_cd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_dtl_cdAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_dtl_cdAggregateArgs>(args: Subset<T, Sy_dtl_cdAggregateArgs>): Prisma.PrismaPromise<GetSy_dtl_cdAggregateType<T>>

    /**
     * Group by Sy_dtl_cd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_dtl_cdGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_dtl_cdGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_dtl_cdGroupByArgs['orderBy'] }
        : { orderBy?: sy_dtl_cdGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_dtl_cdGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_dtl_cdGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_dtl_cd model
   */
  readonly fields: sy_dtl_cdFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_dtl_cd.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_dtl_cdClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_dtl_cd model
   */
  interface sy_dtl_cdFieldRefs {
    readonly grp_cd: FieldRef<"sy_dtl_cd", 'String'>
    readonly cd: FieldRef<"sy_dtl_cd", 'String'>
    readonly cd_nm: FieldRef<"sy_dtl_cd", 'String'>
    readonly cd_desc: FieldRef<"sy_dtl_cd", 'String'>
    readonly sort_seq: FieldRef<"sy_dtl_cd", 'Int'>
    readonly use_tf: FieldRef<"sy_dtl_cd", 'String'>
    readonly regr_no: FieldRef<"sy_dtl_cd", 'Int'>
    readonly reg_dt: FieldRef<"sy_dtl_cd", 'DateTime'>
    readonly modr_no: FieldRef<"sy_dtl_cd", 'Int'>
    readonly mod_dt: FieldRef<"sy_dtl_cd", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sy_dtl_cd findUnique
   */
  export type sy_dtl_cdFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_dtl_cd
     */
    select?: sy_dtl_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_dtl_cd
     */
    omit?: sy_dtl_cdOmit<ExtArgs> | null
    /**
     * Filter, which sy_dtl_cd to fetch.
     */
    where: sy_dtl_cdWhereUniqueInput
  }

  /**
   * sy_dtl_cd findUniqueOrThrow
   */
  export type sy_dtl_cdFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_dtl_cd
     */
    select?: sy_dtl_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_dtl_cd
     */
    omit?: sy_dtl_cdOmit<ExtArgs> | null
    /**
     * Filter, which sy_dtl_cd to fetch.
     */
    where: sy_dtl_cdWhereUniqueInput
  }

  /**
   * sy_dtl_cd findFirst
   */
  export type sy_dtl_cdFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_dtl_cd
     */
    select?: sy_dtl_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_dtl_cd
     */
    omit?: sy_dtl_cdOmit<ExtArgs> | null
    /**
     * Filter, which sy_dtl_cd to fetch.
     */
    where?: sy_dtl_cdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_dtl_cds to fetch.
     */
    orderBy?: sy_dtl_cdOrderByWithRelationInput | sy_dtl_cdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_dtl_cds.
     */
    cursor?: sy_dtl_cdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_dtl_cds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_dtl_cds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_dtl_cds.
     */
    distinct?: Sy_dtl_cdScalarFieldEnum | Sy_dtl_cdScalarFieldEnum[]
  }

  /**
   * sy_dtl_cd findFirstOrThrow
   */
  export type sy_dtl_cdFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_dtl_cd
     */
    select?: sy_dtl_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_dtl_cd
     */
    omit?: sy_dtl_cdOmit<ExtArgs> | null
    /**
     * Filter, which sy_dtl_cd to fetch.
     */
    where?: sy_dtl_cdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_dtl_cds to fetch.
     */
    orderBy?: sy_dtl_cdOrderByWithRelationInput | sy_dtl_cdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_dtl_cds.
     */
    cursor?: sy_dtl_cdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_dtl_cds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_dtl_cds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_dtl_cds.
     */
    distinct?: Sy_dtl_cdScalarFieldEnum | Sy_dtl_cdScalarFieldEnum[]
  }

  /**
   * sy_dtl_cd findMany
   */
  export type sy_dtl_cdFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_dtl_cd
     */
    select?: sy_dtl_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_dtl_cd
     */
    omit?: sy_dtl_cdOmit<ExtArgs> | null
    /**
     * Filter, which sy_dtl_cds to fetch.
     */
    where?: sy_dtl_cdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_dtl_cds to fetch.
     */
    orderBy?: sy_dtl_cdOrderByWithRelationInput | sy_dtl_cdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_dtl_cds.
     */
    cursor?: sy_dtl_cdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_dtl_cds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_dtl_cds.
     */
    skip?: number
    distinct?: Sy_dtl_cdScalarFieldEnum | Sy_dtl_cdScalarFieldEnum[]
  }

  /**
   * sy_dtl_cd create
   */
  export type sy_dtl_cdCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_dtl_cd
     */
    select?: sy_dtl_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_dtl_cd
     */
    omit?: sy_dtl_cdOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_dtl_cd.
     */
    data: XOR<sy_dtl_cdCreateInput, sy_dtl_cdUncheckedCreateInput>
  }

  /**
   * sy_dtl_cd createMany
   */
  export type sy_dtl_cdCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_dtl_cds.
     */
    data: sy_dtl_cdCreateManyInput | sy_dtl_cdCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_dtl_cd update
   */
  export type sy_dtl_cdUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_dtl_cd
     */
    select?: sy_dtl_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_dtl_cd
     */
    omit?: sy_dtl_cdOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_dtl_cd.
     */
    data: XOR<sy_dtl_cdUpdateInput, sy_dtl_cdUncheckedUpdateInput>
    /**
     * Choose, which sy_dtl_cd to update.
     */
    where: sy_dtl_cdWhereUniqueInput
  }

  /**
   * sy_dtl_cd updateMany
   */
  export type sy_dtl_cdUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_dtl_cds.
     */
    data: XOR<sy_dtl_cdUpdateManyMutationInput, sy_dtl_cdUncheckedUpdateManyInput>
    /**
     * Filter which sy_dtl_cds to update
     */
    where?: sy_dtl_cdWhereInput
    /**
     * Limit how many sy_dtl_cds to update.
     */
    limit?: number
  }

  /**
   * sy_dtl_cd upsert
   */
  export type sy_dtl_cdUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_dtl_cd
     */
    select?: sy_dtl_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_dtl_cd
     */
    omit?: sy_dtl_cdOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_dtl_cd to update in case it exists.
     */
    where: sy_dtl_cdWhereUniqueInput
    /**
     * In case the sy_dtl_cd found by the `where` argument doesn't exist, create a new sy_dtl_cd with this data.
     */
    create: XOR<sy_dtl_cdCreateInput, sy_dtl_cdUncheckedCreateInput>
    /**
     * In case the sy_dtl_cd was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_dtl_cdUpdateInput, sy_dtl_cdUncheckedUpdateInput>
  }

  /**
   * sy_dtl_cd delete
   */
  export type sy_dtl_cdDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_dtl_cd
     */
    select?: sy_dtl_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_dtl_cd
     */
    omit?: sy_dtl_cdOmit<ExtArgs> | null
    /**
     * Filter which sy_dtl_cd to delete.
     */
    where: sy_dtl_cdWhereUniqueInput
  }

  /**
   * sy_dtl_cd deleteMany
   */
  export type sy_dtl_cdDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_dtl_cds to delete
     */
    where?: sy_dtl_cdWhereInput
    /**
     * Limit how many sy_dtl_cds to delete.
     */
    limit?: number
  }

  /**
   * sy_dtl_cd without action
   */
  export type sy_dtl_cdDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_dtl_cd
     */
    select?: sy_dtl_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_dtl_cd
     */
    omit?: sy_dtl_cdOmit<ExtArgs> | null
  }


  /**
   * Model sy_excel_hist
   */

  export type AggregateSy_excel_hist = {
    _count: Sy_excel_histCountAggregateOutputType | null
    _avg: Sy_excel_histAvgAggregateOutputType | null
    _sum: Sy_excel_histSumAggregateOutputType | null
    _min: Sy_excel_histMinAggregateOutputType | null
    _max: Sy_excel_histMaxAggregateOutputType | null
  }

  export type Sy_excel_histAvgAggregateOutputType = {
    hist_no: number | null
    row_cnt: number | null
    regr_no: number | null
  }

  export type Sy_excel_histSumAggregateOutputType = {
    hist_no: bigint | null
    row_cnt: number | null
    regr_no: bigint | null
  }

  export type Sy_excel_histMinAggregateOutputType = {
    hist_no: bigint | null
    file_nm: string | null
    row_cnt: number | null
    regr_no: bigint | null
    reg_dt: Date | null
  }

  export type Sy_excel_histMaxAggregateOutputType = {
    hist_no: bigint | null
    file_nm: string | null
    row_cnt: number | null
    regr_no: bigint | null
    reg_dt: Date | null
  }

  export type Sy_excel_histCountAggregateOutputType = {
    hist_no: number
    file_nm: number
    row_cnt: number
    regr_no: number
    reg_dt: number
    _all: number
  }


  export type Sy_excel_histAvgAggregateInputType = {
    hist_no?: true
    row_cnt?: true
    regr_no?: true
  }

  export type Sy_excel_histSumAggregateInputType = {
    hist_no?: true
    row_cnt?: true
    regr_no?: true
  }

  export type Sy_excel_histMinAggregateInputType = {
    hist_no?: true
    file_nm?: true
    row_cnt?: true
    regr_no?: true
    reg_dt?: true
  }

  export type Sy_excel_histMaxAggregateInputType = {
    hist_no?: true
    file_nm?: true
    row_cnt?: true
    regr_no?: true
    reg_dt?: true
  }

  export type Sy_excel_histCountAggregateInputType = {
    hist_no?: true
    file_nm?: true
    row_cnt?: true
    regr_no?: true
    reg_dt?: true
    _all?: true
  }

  export type Sy_excel_histAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_excel_hist to aggregate.
     */
    where?: sy_excel_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_excel_hists to fetch.
     */
    orderBy?: sy_excel_histOrderByWithRelationInput | sy_excel_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_excel_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_excel_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_excel_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_excel_hists
    **/
    _count?: true | Sy_excel_histCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_excel_histAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_excel_histSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_excel_histMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_excel_histMaxAggregateInputType
  }

  export type GetSy_excel_histAggregateType<T extends Sy_excel_histAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_excel_hist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_excel_hist[P]>
      : GetScalarType<T[P], AggregateSy_excel_hist[P]>
  }




  export type sy_excel_histGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_excel_histWhereInput
    orderBy?: sy_excel_histOrderByWithAggregationInput | sy_excel_histOrderByWithAggregationInput[]
    by: Sy_excel_histScalarFieldEnum[] | Sy_excel_histScalarFieldEnum
    having?: sy_excel_histScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_excel_histCountAggregateInputType | true
    _avg?: Sy_excel_histAvgAggregateInputType
    _sum?: Sy_excel_histSumAggregateInputType
    _min?: Sy_excel_histMinAggregateInputType
    _max?: Sy_excel_histMaxAggregateInputType
  }

  export type Sy_excel_histGroupByOutputType = {
    hist_no: bigint
    file_nm: string
    row_cnt: number
    regr_no: bigint
    reg_dt: Date
    _count: Sy_excel_histCountAggregateOutputType | null
    _avg: Sy_excel_histAvgAggregateOutputType | null
    _sum: Sy_excel_histSumAggregateOutputType | null
    _min: Sy_excel_histMinAggregateOutputType | null
    _max: Sy_excel_histMaxAggregateOutputType | null
  }

  type GetSy_excel_histGroupByPayload<T extends sy_excel_histGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_excel_histGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_excel_histGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_excel_histGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_excel_histGroupByOutputType[P]>
        }
      >
    >


  export type sy_excel_histSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    hist_no?: boolean
    file_nm?: boolean
    row_cnt?: boolean
    regr_no?: boolean
    reg_dt?: boolean
  }, ExtArgs["result"]["sy_excel_hist"]>



  export type sy_excel_histSelectScalar = {
    hist_no?: boolean
    file_nm?: boolean
    row_cnt?: boolean
    regr_no?: boolean
    reg_dt?: boolean
  }

  export type sy_excel_histOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"hist_no" | "file_nm" | "row_cnt" | "regr_no" | "reg_dt", ExtArgs["result"]["sy_excel_hist"]>

  export type $sy_excel_histPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_excel_hist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      hist_no: bigint
      file_nm: string
      row_cnt: number
      regr_no: bigint
      reg_dt: Date
    }, ExtArgs["result"]["sy_excel_hist"]>
    composites: {}
  }

  type sy_excel_histGetPayload<S extends boolean | null | undefined | sy_excel_histDefaultArgs> = $Result.GetResult<Prisma.$sy_excel_histPayload, S>

  type sy_excel_histCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_excel_histFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_excel_histCountAggregateInputType | true
    }

  export interface sy_excel_histDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_excel_hist'], meta: { name: 'sy_excel_hist' } }
    /**
     * Find zero or one Sy_excel_hist that matches the filter.
     * @param {sy_excel_histFindUniqueArgs} args - Arguments to find a Sy_excel_hist
     * @example
     * // Get one Sy_excel_hist
     * const sy_excel_hist = await prisma.sy_excel_hist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_excel_histFindUniqueArgs>(args: SelectSubset<T, sy_excel_histFindUniqueArgs<ExtArgs>>): Prisma__sy_excel_histClient<$Result.GetResult<Prisma.$sy_excel_histPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_excel_hist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_excel_histFindUniqueOrThrowArgs} args - Arguments to find a Sy_excel_hist
     * @example
     * // Get one Sy_excel_hist
     * const sy_excel_hist = await prisma.sy_excel_hist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_excel_histFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_excel_histFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_excel_histClient<$Result.GetResult<Prisma.$sy_excel_histPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_excel_hist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_excel_histFindFirstArgs} args - Arguments to find a Sy_excel_hist
     * @example
     * // Get one Sy_excel_hist
     * const sy_excel_hist = await prisma.sy_excel_hist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_excel_histFindFirstArgs>(args?: SelectSubset<T, sy_excel_histFindFirstArgs<ExtArgs>>): Prisma__sy_excel_histClient<$Result.GetResult<Prisma.$sy_excel_histPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_excel_hist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_excel_histFindFirstOrThrowArgs} args - Arguments to find a Sy_excel_hist
     * @example
     * // Get one Sy_excel_hist
     * const sy_excel_hist = await prisma.sy_excel_hist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_excel_histFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_excel_histFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_excel_histClient<$Result.GetResult<Prisma.$sy_excel_histPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_excel_hists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_excel_histFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_excel_hists
     * const sy_excel_hists = await prisma.sy_excel_hist.findMany()
     * 
     * // Get first 10 Sy_excel_hists
     * const sy_excel_hists = await prisma.sy_excel_hist.findMany({ take: 10 })
     * 
     * // Only select the `hist_no`
     * const sy_excel_histWithHist_noOnly = await prisma.sy_excel_hist.findMany({ select: { hist_no: true } })
     * 
     */
    findMany<T extends sy_excel_histFindManyArgs>(args?: SelectSubset<T, sy_excel_histFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_excel_histPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_excel_hist.
     * @param {sy_excel_histCreateArgs} args - Arguments to create a Sy_excel_hist.
     * @example
     * // Create one Sy_excel_hist
     * const Sy_excel_hist = await prisma.sy_excel_hist.create({
     *   data: {
     *     // ... data to create a Sy_excel_hist
     *   }
     * })
     * 
     */
    create<T extends sy_excel_histCreateArgs>(args: SelectSubset<T, sy_excel_histCreateArgs<ExtArgs>>): Prisma__sy_excel_histClient<$Result.GetResult<Prisma.$sy_excel_histPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_excel_hists.
     * @param {sy_excel_histCreateManyArgs} args - Arguments to create many Sy_excel_hists.
     * @example
     * // Create many Sy_excel_hists
     * const sy_excel_hist = await prisma.sy_excel_hist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_excel_histCreateManyArgs>(args?: SelectSubset<T, sy_excel_histCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_excel_hist.
     * @param {sy_excel_histDeleteArgs} args - Arguments to delete one Sy_excel_hist.
     * @example
     * // Delete one Sy_excel_hist
     * const Sy_excel_hist = await prisma.sy_excel_hist.delete({
     *   where: {
     *     // ... filter to delete one Sy_excel_hist
     *   }
     * })
     * 
     */
    delete<T extends sy_excel_histDeleteArgs>(args: SelectSubset<T, sy_excel_histDeleteArgs<ExtArgs>>): Prisma__sy_excel_histClient<$Result.GetResult<Prisma.$sy_excel_histPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_excel_hist.
     * @param {sy_excel_histUpdateArgs} args - Arguments to update one Sy_excel_hist.
     * @example
     * // Update one Sy_excel_hist
     * const sy_excel_hist = await prisma.sy_excel_hist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_excel_histUpdateArgs>(args: SelectSubset<T, sy_excel_histUpdateArgs<ExtArgs>>): Prisma__sy_excel_histClient<$Result.GetResult<Prisma.$sy_excel_histPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_excel_hists.
     * @param {sy_excel_histDeleteManyArgs} args - Arguments to filter Sy_excel_hists to delete.
     * @example
     * // Delete a few Sy_excel_hists
     * const { count } = await prisma.sy_excel_hist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_excel_histDeleteManyArgs>(args?: SelectSubset<T, sy_excel_histDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_excel_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_excel_histUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_excel_hists
     * const sy_excel_hist = await prisma.sy_excel_hist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_excel_histUpdateManyArgs>(args: SelectSubset<T, sy_excel_histUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_excel_hist.
     * @param {sy_excel_histUpsertArgs} args - Arguments to update or create a Sy_excel_hist.
     * @example
     * // Update or create a Sy_excel_hist
     * const sy_excel_hist = await prisma.sy_excel_hist.upsert({
     *   create: {
     *     // ... data to create a Sy_excel_hist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_excel_hist we want to update
     *   }
     * })
     */
    upsert<T extends sy_excel_histUpsertArgs>(args: SelectSubset<T, sy_excel_histUpsertArgs<ExtArgs>>): Prisma__sy_excel_histClient<$Result.GetResult<Prisma.$sy_excel_histPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_excel_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_excel_histCountArgs} args - Arguments to filter Sy_excel_hists to count.
     * @example
     * // Count the number of Sy_excel_hists
     * const count = await prisma.sy_excel_hist.count({
     *   where: {
     *     // ... the filter for the Sy_excel_hists we want to count
     *   }
     * })
    **/
    count<T extends sy_excel_histCountArgs>(
      args?: Subset<T, sy_excel_histCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_excel_histCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_excel_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_excel_histAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_excel_histAggregateArgs>(args: Subset<T, Sy_excel_histAggregateArgs>): Prisma.PrismaPromise<GetSy_excel_histAggregateType<T>>

    /**
     * Group by Sy_excel_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_excel_histGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_excel_histGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_excel_histGroupByArgs['orderBy'] }
        : { orderBy?: sy_excel_histGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_excel_histGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_excel_histGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_excel_hist model
   */
  readonly fields: sy_excel_histFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_excel_hist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_excel_histClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_excel_hist model
   */
  interface sy_excel_histFieldRefs {
    readonly hist_no: FieldRef<"sy_excel_hist", 'BigInt'>
    readonly file_nm: FieldRef<"sy_excel_hist", 'String'>
    readonly row_cnt: FieldRef<"sy_excel_hist", 'Int'>
    readonly regr_no: FieldRef<"sy_excel_hist", 'BigInt'>
    readonly reg_dt: FieldRef<"sy_excel_hist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sy_excel_hist findUnique
   */
  export type sy_excel_histFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_excel_hist
     */
    select?: sy_excel_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_excel_hist
     */
    omit?: sy_excel_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_excel_hist to fetch.
     */
    where: sy_excel_histWhereUniqueInput
  }

  /**
   * sy_excel_hist findUniqueOrThrow
   */
  export type sy_excel_histFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_excel_hist
     */
    select?: sy_excel_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_excel_hist
     */
    omit?: sy_excel_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_excel_hist to fetch.
     */
    where: sy_excel_histWhereUniqueInput
  }

  /**
   * sy_excel_hist findFirst
   */
  export type sy_excel_histFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_excel_hist
     */
    select?: sy_excel_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_excel_hist
     */
    omit?: sy_excel_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_excel_hist to fetch.
     */
    where?: sy_excel_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_excel_hists to fetch.
     */
    orderBy?: sy_excel_histOrderByWithRelationInput | sy_excel_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_excel_hists.
     */
    cursor?: sy_excel_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_excel_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_excel_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_excel_hists.
     */
    distinct?: Sy_excel_histScalarFieldEnum | Sy_excel_histScalarFieldEnum[]
  }

  /**
   * sy_excel_hist findFirstOrThrow
   */
  export type sy_excel_histFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_excel_hist
     */
    select?: sy_excel_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_excel_hist
     */
    omit?: sy_excel_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_excel_hist to fetch.
     */
    where?: sy_excel_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_excel_hists to fetch.
     */
    orderBy?: sy_excel_histOrderByWithRelationInput | sy_excel_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_excel_hists.
     */
    cursor?: sy_excel_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_excel_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_excel_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_excel_hists.
     */
    distinct?: Sy_excel_histScalarFieldEnum | Sy_excel_histScalarFieldEnum[]
  }

  /**
   * sy_excel_hist findMany
   */
  export type sy_excel_histFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_excel_hist
     */
    select?: sy_excel_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_excel_hist
     */
    omit?: sy_excel_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_excel_hists to fetch.
     */
    where?: sy_excel_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_excel_hists to fetch.
     */
    orderBy?: sy_excel_histOrderByWithRelationInput | sy_excel_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_excel_hists.
     */
    cursor?: sy_excel_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_excel_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_excel_hists.
     */
    skip?: number
    distinct?: Sy_excel_histScalarFieldEnum | Sy_excel_histScalarFieldEnum[]
  }

  /**
   * sy_excel_hist create
   */
  export type sy_excel_histCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_excel_hist
     */
    select?: sy_excel_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_excel_hist
     */
    omit?: sy_excel_histOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_excel_hist.
     */
    data: XOR<sy_excel_histCreateInput, sy_excel_histUncheckedCreateInput>
  }

  /**
   * sy_excel_hist createMany
   */
  export type sy_excel_histCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_excel_hists.
     */
    data: sy_excel_histCreateManyInput | sy_excel_histCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_excel_hist update
   */
  export type sy_excel_histUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_excel_hist
     */
    select?: sy_excel_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_excel_hist
     */
    omit?: sy_excel_histOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_excel_hist.
     */
    data: XOR<sy_excel_histUpdateInput, sy_excel_histUncheckedUpdateInput>
    /**
     * Choose, which sy_excel_hist to update.
     */
    where: sy_excel_histWhereUniqueInput
  }

  /**
   * sy_excel_hist updateMany
   */
  export type sy_excel_histUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_excel_hists.
     */
    data: XOR<sy_excel_histUpdateManyMutationInput, sy_excel_histUncheckedUpdateManyInput>
    /**
     * Filter which sy_excel_hists to update
     */
    where?: sy_excel_histWhereInput
    /**
     * Limit how many sy_excel_hists to update.
     */
    limit?: number
  }

  /**
   * sy_excel_hist upsert
   */
  export type sy_excel_histUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_excel_hist
     */
    select?: sy_excel_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_excel_hist
     */
    omit?: sy_excel_histOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_excel_hist to update in case it exists.
     */
    where: sy_excel_histWhereUniqueInput
    /**
     * In case the sy_excel_hist found by the `where` argument doesn't exist, create a new sy_excel_hist with this data.
     */
    create: XOR<sy_excel_histCreateInput, sy_excel_histUncheckedCreateInput>
    /**
     * In case the sy_excel_hist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_excel_histUpdateInput, sy_excel_histUncheckedUpdateInput>
  }

  /**
   * sy_excel_hist delete
   */
  export type sy_excel_histDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_excel_hist
     */
    select?: sy_excel_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_excel_hist
     */
    omit?: sy_excel_histOmit<ExtArgs> | null
    /**
     * Filter which sy_excel_hist to delete.
     */
    where: sy_excel_histWhereUniqueInput
  }

  /**
   * sy_excel_hist deleteMany
   */
  export type sy_excel_histDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_excel_hists to delete
     */
    where?: sy_excel_histWhereInput
    /**
     * Limit how many sy_excel_hists to delete.
     */
    limit?: number
  }

  /**
   * sy_excel_hist without action
   */
  export type sy_excel_histDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_excel_hist
     */
    select?: sy_excel_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_excel_hist
     */
    omit?: sy_excel_histOmit<ExtArgs> | null
  }


  /**
   * Model sy_grp_cd
   */

  export type AggregateSy_grp_cd = {
    _count: Sy_grp_cdCountAggregateOutputType | null
    _avg: Sy_grp_cdAvgAggregateOutputType | null
    _sum: Sy_grp_cdSumAggregateOutputType | null
    _min: Sy_grp_cdMinAggregateOutputType | null
    _max: Sy_grp_cdMaxAggregateOutputType | null
  }

  export type Sy_grp_cdAvgAggregateOutputType = {
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_grp_cdSumAggregateOutputType = {
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_grp_cdMinAggregateOutputType = {
    grp_cd: string | null
    grp_cd_nm: string | null
    grp_cd_desc: string | null
    use_tf: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_grp_cdMaxAggregateOutputType = {
    grp_cd: string | null
    grp_cd_nm: string | null
    grp_cd_desc: string | null
    use_tf: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_grp_cdCountAggregateOutputType = {
    grp_cd: number
    grp_cd_nm: number
    grp_cd_desc: number
    use_tf: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sy_grp_cdAvgAggregateInputType = {
    regr_no?: true
    modr_no?: true
  }

  export type Sy_grp_cdSumAggregateInputType = {
    regr_no?: true
    modr_no?: true
  }

  export type Sy_grp_cdMinAggregateInputType = {
    grp_cd?: true
    grp_cd_nm?: true
    grp_cd_desc?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_grp_cdMaxAggregateInputType = {
    grp_cd?: true
    grp_cd_nm?: true
    grp_cd_desc?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_grp_cdCountAggregateInputType = {
    grp_cd?: true
    grp_cd_nm?: true
    grp_cd_desc?: true
    use_tf?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sy_grp_cdAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_grp_cd to aggregate.
     */
    where?: sy_grp_cdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_grp_cds to fetch.
     */
    orderBy?: sy_grp_cdOrderByWithRelationInput | sy_grp_cdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_grp_cdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_grp_cds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_grp_cds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_grp_cds
    **/
    _count?: true | Sy_grp_cdCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_grp_cdAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_grp_cdSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_grp_cdMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_grp_cdMaxAggregateInputType
  }

  export type GetSy_grp_cdAggregateType<T extends Sy_grp_cdAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_grp_cd]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_grp_cd[P]>
      : GetScalarType<T[P], AggregateSy_grp_cd[P]>
  }




  export type sy_grp_cdGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_grp_cdWhereInput
    orderBy?: sy_grp_cdOrderByWithAggregationInput | sy_grp_cdOrderByWithAggregationInput[]
    by: Sy_grp_cdScalarFieldEnum[] | Sy_grp_cdScalarFieldEnum
    having?: sy_grp_cdScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_grp_cdCountAggregateInputType | true
    _avg?: Sy_grp_cdAvgAggregateInputType
    _sum?: Sy_grp_cdSumAggregateInputType
    _min?: Sy_grp_cdMinAggregateInputType
    _max?: Sy_grp_cdMaxAggregateInputType
  }

  export type Sy_grp_cdGroupByOutputType = {
    grp_cd: string
    grp_cd_nm: string
    grp_cd_desc: string | null
    use_tf: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sy_grp_cdCountAggregateOutputType | null
    _avg: Sy_grp_cdAvgAggregateOutputType | null
    _sum: Sy_grp_cdSumAggregateOutputType | null
    _min: Sy_grp_cdMinAggregateOutputType | null
    _max: Sy_grp_cdMaxAggregateOutputType | null
  }

  type GetSy_grp_cdGroupByPayload<T extends sy_grp_cdGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_grp_cdGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_grp_cdGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_grp_cdGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_grp_cdGroupByOutputType[P]>
        }
      >
    >


  export type sy_grp_cdSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    grp_cd?: boolean
    grp_cd_nm?: boolean
    grp_cd_desc?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sy_grp_cd"]>



  export type sy_grp_cdSelectScalar = {
    grp_cd?: boolean
    grp_cd_nm?: boolean
    grp_cd_desc?: boolean
    use_tf?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sy_grp_cdOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"grp_cd" | "grp_cd_nm" | "grp_cd_desc" | "use_tf" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sy_grp_cd"]>

  export type $sy_grp_cdPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_grp_cd"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      grp_cd: string
      grp_cd_nm: string
      grp_cd_desc: string | null
      use_tf: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sy_grp_cd"]>
    composites: {}
  }

  type sy_grp_cdGetPayload<S extends boolean | null | undefined | sy_grp_cdDefaultArgs> = $Result.GetResult<Prisma.$sy_grp_cdPayload, S>

  type sy_grp_cdCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_grp_cdFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_grp_cdCountAggregateInputType | true
    }

  export interface sy_grp_cdDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_grp_cd'], meta: { name: 'sy_grp_cd' } }
    /**
     * Find zero or one Sy_grp_cd that matches the filter.
     * @param {sy_grp_cdFindUniqueArgs} args - Arguments to find a Sy_grp_cd
     * @example
     * // Get one Sy_grp_cd
     * const sy_grp_cd = await prisma.sy_grp_cd.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_grp_cdFindUniqueArgs>(args: SelectSubset<T, sy_grp_cdFindUniqueArgs<ExtArgs>>): Prisma__sy_grp_cdClient<$Result.GetResult<Prisma.$sy_grp_cdPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_grp_cd that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_grp_cdFindUniqueOrThrowArgs} args - Arguments to find a Sy_grp_cd
     * @example
     * // Get one Sy_grp_cd
     * const sy_grp_cd = await prisma.sy_grp_cd.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_grp_cdFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_grp_cdFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_grp_cdClient<$Result.GetResult<Prisma.$sy_grp_cdPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_grp_cd that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_grp_cdFindFirstArgs} args - Arguments to find a Sy_grp_cd
     * @example
     * // Get one Sy_grp_cd
     * const sy_grp_cd = await prisma.sy_grp_cd.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_grp_cdFindFirstArgs>(args?: SelectSubset<T, sy_grp_cdFindFirstArgs<ExtArgs>>): Prisma__sy_grp_cdClient<$Result.GetResult<Prisma.$sy_grp_cdPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_grp_cd that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_grp_cdFindFirstOrThrowArgs} args - Arguments to find a Sy_grp_cd
     * @example
     * // Get one Sy_grp_cd
     * const sy_grp_cd = await prisma.sy_grp_cd.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_grp_cdFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_grp_cdFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_grp_cdClient<$Result.GetResult<Prisma.$sy_grp_cdPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_grp_cds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_grp_cdFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_grp_cds
     * const sy_grp_cds = await prisma.sy_grp_cd.findMany()
     * 
     * // Get first 10 Sy_grp_cds
     * const sy_grp_cds = await prisma.sy_grp_cd.findMany({ take: 10 })
     * 
     * // Only select the `grp_cd`
     * const sy_grp_cdWithGrp_cdOnly = await prisma.sy_grp_cd.findMany({ select: { grp_cd: true } })
     * 
     */
    findMany<T extends sy_grp_cdFindManyArgs>(args?: SelectSubset<T, sy_grp_cdFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_grp_cdPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_grp_cd.
     * @param {sy_grp_cdCreateArgs} args - Arguments to create a Sy_grp_cd.
     * @example
     * // Create one Sy_grp_cd
     * const Sy_grp_cd = await prisma.sy_grp_cd.create({
     *   data: {
     *     // ... data to create a Sy_grp_cd
     *   }
     * })
     * 
     */
    create<T extends sy_grp_cdCreateArgs>(args: SelectSubset<T, sy_grp_cdCreateArgs<ExtArgs>>): Prisma__sy_grp_cdClient<$Result.GetResult<Prisma.$sy_grp_cdPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_grp_cds.
     * @param {sy_grp_cdCreateManyArgs} args - Arguments to create many Sy_grp_cds.
     * @example
     * // Create many Sy_grp_cds
     * const sy_grp_cd = await prisma.sy_grp_cd.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_grp_cdCreateManyArgs>(args?: SelectSubset<T, sy_grp_cdCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_grp_cd.
     * @param {sy_grp_cdDeleteArgs} args - Arguments to delete one Sy_grp_cd.
     * @example
     * // Delete one Sy_grp_cd
     * const Sy_grp_cd = await prisma.sy_grp_cd.delete({
     *   where: {
     *     // ... filter to delete one Sy_grp_cd
     *   }
     * })
     * 
     */
    delete<T extends sy_grp_cdDeleteArgs>(args: SelectSubset<T, sy_grp_cdDeleteArgs<ExtArgs>>): Prisma__sy_grp_cdClient<$Result.GetResult<Prisma.$sy_grp_cdPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_grp_cd.
     * @param {sy_grp_cdUpdateArgs} args - Arguments to update one Sy_grp_cd.
     * @example
     * // Update one Sy_grp_cd
     * const sy_grp_cd = await prisma.sy_grp_cd.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_grp_cdUpdateArgs>(args: SelectSubset<T, sy_grp_cdUpdateArgs<ExtArgs>>): Prisma__sy_grp_cdClient<$Result.GetResult<Prisma.$sy_grp_cdPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_grp_cds.
     * @param {sy_grp_cdDeleteManyArgs} args - Arguments to filter Sy_grp_cds to delete.
     * @example
     * // Delete a few Sy_grp_cds
     * const { count } = await prisma.sy_grp_cd.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_grp_cdDeleteManyArgs>(args?: SelectSubset<T, sy_grp_cdDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_grp_cds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_grp_cdUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_grp_cds
     * const sy_grp_cd = await prisma.sy_grp_cd.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_grp_cdUpdateManyArgs>(args: SelectSubset<T, sy_grp_cdUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_grp_cd.
     * @param {sy_grp_cdUpsertArgs} args - Arguments to update or create a Sy_grp_cd.
     * @example
     * // Update or create a Sy_grp_cd
     * const sy_grp_cd = await prisma.sy_grp_cd.upsert({
     *   create: {
     *     // ... data to create a Sy_grp_cd
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_grp_cd we want to update
     *   }
     * })
     */
    upsert<T extends sy_grp_cdUpsertArgs>(args: SelectSubset<T, sy_grp_cdUpsertArgs<ExtArgs>>): Prisma__sy_grp_cdClient<$Result.GetResult<Prisma.$sy_grp_cdPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_grp_cds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_grp_cdCountArgs} args - Arguments to filter Sy_grp_cds to count.
     * @example
     * // Count the number of Sy_grp_cds
     * const count = await prisma.sy_grp_cd.count({
     *   where: {
     *     // ... the filter for the Sy_grp_cds we want to count
     *   }
     * })
    **/
    count<T extends sy_grp_cdCountArgs>(
      args?: Subset<T, sy_grp_cdCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_grp_cdCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_grp_cd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_grp_cdAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_grp_cdAggregateArgs>(args: Subset<T, Sy_grp_cdAggregateArgs>): Prisma.PrismaPromise<GetSy_grp_cdAggregateType<T>>

    /**
     * Group by Sy_grp_cd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_grp_cdGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_grp_cdGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_grp_cdGroupByArgs['orderBy'] }
        : { orderBy?: sy_grp_cdGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_grp_cdGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_grp_cdGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_grp_cd model
   */
  readonly fields: sy_grp_cdFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_grp_cd.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_grp_cdClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_grp_cd model
   */
  interface sy_grp_cdFieldRefs {
    readonly grp_cd: FieldRef<"sy_grp_cd", 'String'>
    readonly grp_cd_nm: FieldRef<"sy_grp_cd", 'String'>
    readonly grp_cd_desc: FieldRef<"sy_grp_cd", 'String'>
    readonly use_tf: FieldRef<"sy_grp_cd", 'String'>
    readonly regr_no: FieldRef<"sy_grp_cd", 'Int'>
    readonly reg_dt: FieldRef<"sy_grp_cd", 'DateTime'>
    readonly modr_no: FieldRef<"sy_grp_cd", 'Int'>
    readonly mod_dt: FieldRef<"sy_grp_cd", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sy_grp_cd findUnique
   */
  export type sy_grp_cdFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_grp_cd
     */
    select?: sy_grp_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_grp_cd
     */
    omit?: sy_grp_cdOmit<ExtArgs> | null
    /**
     * Filter, which sy_grp_cd to fetch.
     */
    where: sy_grp_cdWhereUniqueInput
  }

  /**
   * sy_grp_cd findUniqueOrThrow
   */
  export type sy_grp_cdFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_grp_cd
     */
    select?: sy_grp_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_grp_cd
     */
    omit?: sy_grp_cdOmit<ExtArgs> | null
    /**
     * Filter, which sy_grp_cd to fetch.
     */
    where: sy_grp_cdWhereUniqueInput
  }

  /**
   * sy_grp_cd findFirst
   */
  export type sy_grp_cdFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_grp_cd
     */
    select?: sy_grp_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_grp_cd
     */
    omit?: sy_grp_cdOmit<ExtArgs> | null
    /**
     * Filter, which sy_grp_cd to fetch.
     */
    where?: sy_grp_cdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_grp_cds to fetch.
     */
    orderBy?: sy_grp_cdOrderByWithRelationInput | sy_grp_cdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_grp_cds.
     */
    cursor?: sy_grp_cdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_grp_cds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_grp_cds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_grp_cds.
     */
    distinct?: Sy_grp_cdScalarFieldEnum | Sy_grp_cdScalarFieldEnum[]
  }

  /**
   * sy_grp_cd findFirstOrThrow
   */
  export type sy_grp_cdFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_grp_cd
     */
    select?: sy_grp_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_grp_cd
     */
    omit?: sy_grp_cdOmit<ExtArgs> | null
    /**
     * Filter, which sy_grp_cd to fetch.
     */
    where?: sy_grp_cdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_grp_cds to fetch.
     */
    orderBy?: sy_grp_cdOrderByWithRelationInput | sy_grp_cdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_grp_cds.
     */
    cursor?: sy_grp_cdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_grp_cds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_grp_cds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_grp_cds.
     */
    distinct?: Sy_grp_cdScalarFieldEnum | Sy_grp_cdScalarFieldEnum[]
  }

  /**
   * sy_grp_cd findMany
   */
  export type sy_grp_cdFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_grp_cd
     */
    select?: sy_grp_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_grp_cd
     */
    omit?: sy_grp_cdOmit<ExtArgs> | null
    /**
     * Filter, which sy_grp_cds to fetch.
     */
    where?: sy_grp_cdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_grp_cds to fetch.
     */
    orderBy?: sy_grp_cdOrderByWithRelationInput | sy_grp_cdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_grp_cds.
     */
    cursor?: sy_grp_cdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_grp_cds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_grp_cds.
     */
    skip?: number
    distinct?: Sy_grp_cdScalarFieldEnum | Sy_grp_cdScalarFieldEnum[]
  }

  /**
   * sy_grp_cd create
   */
  export type sy_grp_cdCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_grp_cd
     */
    select?: sy_grp_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_grp_cd
     */
    omit?: sy_grp_cdOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_grp_cd.
     */
    data: XOR<sy_grp_cdCreateInput, sy_grp_cdUncheckedCreateInput>
  }

  /**
   * sy_grp_cd createMany
   */
  export type sy_grp_cdCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_grp_cds.
     */
    data: sy_grp_cdCreateManyInput | sy_grp_cdCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_grp_cd update
   */
  export type sy_grp_cdUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_grp_cd
     */
    select?: sy_grp_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_grp_cd
     */
    omit?: sy_grp_cdOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_grp_cd.
     */
    data: XOR<sy_grp_cdUpdateInput, sy_grp_cdUncheckedUpdateInput>
    /**
     * Choose, which sy_grp_cd to update.
     */
    where: sy_grp_cdWhereUniqueInput
  }

  /**
   * sy_grp_cd updateMany
   */
  export type sy_grp_cdUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_grp_cds.
     */
    data: XOR<sy_grp_cdUpdateManyMutationInput, sy_grp_cdUncheckedUpdateManyInput>
    /**
     * Filter which sy_grp_cds to update
     */
    where?: sy_grp_cdWhereInput
    /**
     * Limit how many sy_grp_cds to update.
     */
    limit?: number
  }

  /**
   * sy_grp_cd upsert
   */
  export type sy_grp_cdUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_grp_cd
     */
    select?: sy_grp_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_grp_cd
     */
    omit?: sy_grp_cdOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_grp_cd to update in case it exists.
     */
    where: sy_grp_cdWhereUniqueInput
    /**
     * In case the sy_grp_cd found by the `where` argument doesn't exist, create a new sy_grp_cd with this data.
     */
    create: XOR<sy_grp_cdCreateInput, sy_grp_cdUncheckedCreateInput>
    /**
     * In case the sy_grp_cd was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_grp_cdUpdateInput, sy_grp_cdUncheckedUpdateInput>
  }

  /**
   * sy_grp_cd delete
   */
  export type sy_grp_cdDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_grp_cd
     */
    select?: sy_grp_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_grp_cd
     */
    omit?: sy_grp_cdOmit<ExtArgs> | null
    /**
     * Filter which sy_grp_cd to delete.
     */
    where: sy_grp_cdWhereUniqueInput
  }

  /**
   * sy_grp_cd deleteMany
   */
  export type sy_grp_cdDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_grp_cds to delete
     */
    where?: sy_grp_cdWhereInput
    /**
     * Limit how many sy_grp_cds to delete.
     */
    limit?: number
  }

  /**
   * sy_grp_cd without action
   */
  export type sy_grp_cdDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_grp_cd
     */
    select?: sy_grp_cdSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_grp_cd
     */
    omit?: sy_grp_cdOmit<ExtArgs> | null
  }


  /**
   * Model sy_menu
   */

  export type AggregateSy_menu = {
    _count: Sy_menuCountAggregateOutputType | null
    _avg: Sy_menuAvgAggregateOutputType | null
    _sum: Sy_menuSumAggregateOutputType | null
    _min: Sy_menuMinAggregateOutputType | null
    _max: Sy_menuMaxAggregateOutputType | null
  }

  export type Sy_menuAvgAggregateOutputType = {
    menu_no: number | null
    indct_seq: number | null
    up_menu_no: number | null
    link_scrn_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_menuSumAggregateOutputType = {
    menu_no: number | null
    indct_seq: number | null
    up_menu_no: number | null
    link_scrn_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_menuMinAggregateOutputType = {
    menu_no: number | null
    menu_nm: string | null
    use_tf: string | null
    expsr_tf: string | null
    indct_seq: number | null
    menu_desc: string | null
    up_menu_no: number | null
    note_cont: string | null
    link_scrn_no: number | null
    icon_nm: string | null
    menu_url: string | null
    vrsn: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_menuMaxAggregateOutputType = {
    menu_no: number | null
    menu_nm: string | null
    use_tf: string | null
    expsr_tf: string | null
    indct_seq: number | null
    menu_desc: string | null
    up_menu_no: number | null
    note_cont: string | null
    link_scrn_no: number | null
    icon_nm: string | null
    menu_url: string | null
    vrsn: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_menuCountAggregateOutputType = {
    menu_no: number
    menu_nm: number
    use_tf: number
    expsr_tf: number
    indct_seq: number
    menu_desc: number
    up_menu_no: number
    note_cont: number
    link_scrn_no: number
    icon_nm: number
    menu_url: number
    vrsn: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sy_menuAvgAggregateInputType = {
    menu_no?: true
    indct_seq?: true
    up_menu_no?: true
    link_scrn_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_menuSumAggregateInputType = {
    menu_no?: true
    indct_seq?: true
    up_menu_no?: true
    link_scrn_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_menuMinAggregateInputType = {
    menu_no?: true
    menu_nm?: true
    use_tf?: true
    expsr_tf?: true
    indct_seq?: true
    menu_desc?: true
    up_menu_no?: true
    note_cont?: true
    link_scrn_no?: true
    icon_nm?: true
    menu_url?: true
    vrsn?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_menuMaxAggregateInputType = {
    menu_no?: true
    menu_nm?: true
    use_tf?: true
    expsr_tf?: true
    indct_seq?: true
    menu_desc?: true
    up_menu_no?: true
    note_cont?: true
    link_scrn_no?: true
    icon_nm?: true
    menu_url?: true
    vrsn?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_menuCountAggregateInputType = {
    menu_no?: true
    menu_nm?: true
    use_tf?: true
    expsr_tf?: true
    indct_seq?: true
    menu_desc?: true
    up_menu_no?: true
    note_cont?: true
    link_scrn_no?: true
    icon_nm?: true
    menu_url?: true
    vrsn?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sy_menuAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_menu to aggregate.
     */
    where?: sy_menuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_menus to fetch.
     */
    orderBy?: sy_menuOrderByWithRelationInput | sy_menuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_menuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_menus
    **/
    _count?: true | Sy_menuCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_menuAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_menuSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_menuMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_menuMaxAggregateInputType
  }

  export type GetSy_menuAggregateType<T extends Sy_menuAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_menu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_menu[P]>
      : GetScalarType<T[P], AggregateSy_menu[P]>
  }




  export type sy_menuGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_menuWhereInput
    orderBy?: sy_menuOrderByWithAggregationInput | sy_menuOrderByWithAggregationInput[]
    by: Sy_menuScalarFieldEnum[] | Sy_menuScalarFieldEnum
    having?: sy_menuScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_menuCountAggregateInputType | true
    _avg?: Sy_menuAvgAggregateInputType
    _sum?: Sy_menuSumAggregateInputType
    _min?: Sy_menuMinAggregateInputType
    _max?: Sy_menuMaxAggregateInputType
  }

  export type Sy_menuGroupByOutputType = {
    menu_no: number
    menu_nm: string
    use_tf: string
    expsr_tf: string
    indct_seq: number
    menu_desc: string | null
    up_menu_no: number | null
    note_cont: string | null
    link_scrn_no: number | null
    icon_nm: string | null
    menu_url: string | null
    vrsn: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sy_menuCountAggregateOutputType | null
    _avg: Sy_menuAvgAggregateOutputType | null
    _sum: Sy_menuSumAggregateOutputType | null
    _min: Sy_menuMinAggregateOutputType | null
    _max: Sy_menuMaxAggregateOutputType | null
  }

  type GetSy_menuGroupByPayload<T extends sy_menuGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_menuGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_menuGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_menuGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_menuGroupByOutputType[P]>
        }
      >
    >


  export type sy_menuSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    menu_no?: boolean
    menu_nm?: boolean
    use_tf?: boolean
    expsr_tf?: boolean
    indct_seq?: boolean
    menu_desc?: boolean
    up_menu_no?: boolean
    note_cont?: boolean
    link_scrn_no?: boolean
    icon_nm?: boolean
    menu_url?: boolean
    vrsn?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sy_menu"]>



  export type sy_menuSelectScalar = {
    menu_no?: boolean
    menu_nm?: boolean
    use_tf?: boolean
    expsr_tf?: boolean
    indct_seq?: boolean
    menu_desc?: boolean
    up_menu_no?: boolean
    note_cont?: boolean
    link_scrn_no?: boolean
    icon_nm?: boolean
    menu_url?: boolean
    vrsn?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sy_menuOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"menu_no" | "menu_nm" | "use_tf" | "expsr_tf" | "indct_seq" | "menu_desc" | "up_menu_no" | "note_cont" | "link_scrn_no" | "icon_nm" | "menu_url" | "vrsn" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sy_menu"]>

  export type $sy_menuPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_menu"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      menu_no: number
      menu_nm: string
      use_tf: string
      expsr_tf: string
      indct_seq: number
      menu_desc: string | null
      up_menu_no: number | null
      note_cont: string | null
      link_scrn_no: number | null
      icon_nm: string | null
      menu_url: string | null
      vrsn: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sy_menu"]>
    composites: {}
  }

  type sy_menuGetPayload<S extends boolean | null | undefined | sy_menuDefaultArgs> = $Result.GetResult<Prisma.$sy_menuPayload, S>

  type sy_menuCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_menuFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_menuCountAggregateInputType | true
    }

  export interface sy_menuDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_menu'], meta: { name: 'sy_menu' } }
    /**
     * Find zero or one Sy_menu that matches the filter.
     * @param {sy_menuFindUniqueArgs} args - Arguments to find a Sy_menu
     * @example
     * // Get one Sy_menu
     * const sy_menu = await prisma.sy_menu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_menuFindUniqueArgs>(args: SelectSubset<T, sy_menuFindUniqueArgs<ExtArgs>>): Prisma__sy_menuClient<$Result.GetResult<Prisma.$sy_menuPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_menu that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_menuFindUniqueOrThrowArgs} args - Arguments to find a Sy_menu
     * @example
     * // Get one Sy_menu
     * const sy_menu = await prisma.sy_menu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_menuFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_menuFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_menuClient<$Result.GetResult<Prisma.$sy_menuPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_menu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_menuFindFirstArgs} args - Arguments to find a Sy_menu
     * @example
     * // Get one Sy_menu
     * const sy_menu = await prisma.sy_menu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_menuFindFirstArgs>(args?: SelectSubset<T, sy_menuFindFirstArgs<ExtArgs>>): Prisma__sy_menuClient<$Result.GetResult<Prisma.$sy_menuPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_menu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_menuFindFirstOrThrowArgs} args - Arguments to find a Sy_menu
     * @example
     * // Get one Sy_menu
     * const sy_menu = await prisma.sy_menu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_menuFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_menuFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_menuClient<$Result.GetResult<Prisma.$sy_menuPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_menus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_menuFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_menus
     * const sy_menus = await prisma.sy_menu.findMany()
     * 
     * // Get first 10 Sy_menus
     * const sy_menus = await prisma.sy_menu.findMany({ take: 10 })
     * 
     * // Only select the `menu_no`
     * const sy_menuWithMenu_noOnly = await prisma.sy_menu.findMany({ select: { menu_no: true } })
     * 
     */
    findMany<T extends sy_menuFindManyArgs>(args?: SelectSubset<T, sy_menuFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_menuPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_menu.
     * @param {sy_menuCreateArgs} args - Arguments to create a Sy_menu.
     * @example
     * // Create one Sy_menu
     * const Sy_menu = await prisma.sy_menu.create({
     *   data: {
     *     // ... data to create a Sy_menu
     *   }
     * })
     * 
     */
    create<T extends sy_menuCreateArgs>(args: SelectSubset<T, sy_menuCreateArgs<ExtArgs>>): Prisma__sy_menuClient<$Result.GetResult<Prisma.$sy_menuPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_menus.
     * @param {sy_menuCreateManyArgs} args - Arguments to create many Sy_menus.
     * @example
     * // Create many Sy_menus
     * const sy_menu = await prisma.sy_menu.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_menuCreateManyArgs>(args?: SelectSubset<T, sy_menuCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_menu.
     * @param {sy_menuDeleteArgs} args - Arguments to delete one Sy_menu.
     * @example
     * // Delete one Sy_menu
     * const Sy_menu = await prisma.sy_menu.delete({
     *   where: {
     *     // ... filter to delete one Sy_menu
     *   }
     * })
     * 
     */
    delete<T extends sy_menuDeleteArgs>(args: SelectSubset<T, sy_menuDeleteArgs<ExtArgs>>): Prisma__sy_menuClient<$Result.GetResult<Prisma.$sy_menuPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_menu.
     * @param {sy_menuUpdateArgs} args - Arguments to update one Sy_menu.
     * @example
     * // Update one Sy_menu
     * const sy_menu = await prisma.sy_menu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_menuUpdateArgs>(args: SelectSubset<T, sy_menuUpdateArgs<ExtArgs>>): Prisma__sy_menuClient<$Result.GetResult<Prisma.$sy_menuPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_menus.
     * @param {sy_menuDeleteManyArgs} args - Arguments to filter Sy_menus to delete.
     * @example
     * // Delete a few Sy_menus
     * const { count } = await prisma.sy_menu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_menuDeleteManyArgs>(args?: SelectSubset<T, sy_menuDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_menuUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_menus
     * const sy_menu = await prisma.sy_menu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_menuUpdateManyArgs>(args: SelectSubset<T, sy_menuUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_menu.
     * @param {sy_menuUpsertArgs} args - Arguments to update or create a Sy_menu.
     * @example
     * // Update or create a Sy_menu
     * const sy_menu = await prisma.sy_menu.upsert({
     *   create: {
     *     // ... data to create a Sy_menu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_menu we want to update
     *   }
     * })
     */
    upsert<T extends sy_menuUpsertArgs>(args: SelectSubset<T, sy_menuUpsertArgs<ExtArgs>>): Prisma__sy_menuClient<$Result.GetResult<Prisma.$sy_menuPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_menuCountArgs} args - Arguments to filter Sy_menus to count.
     * @example
     * // Count the number of Sy_menus
     * const count = await prisma.sy_menu.count({
     *   where: {
     *     // ... the filter for the Sy_menus we want to count
     *   }
     * })
    **/
    count<T extends sy_menuCountArgs>(
      args?: Subset<T, sy_menuCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_menuCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_menu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_menuAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_menuAggregateArgs>(args: Subset<T, Sy_menuAggregateArgs>): Prisma.PrismaPromise<GetSy_menuAggregateType<T>>

    /**
     * Group by Sy_menu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_menuGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_menuGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_menuGroupByArgs['orderBy'] }
        : { orderBy?: sy_menuGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_menuGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_menuGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_menu model
   */
  readonly fields: sy_menuFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_menu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_menuClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_menu model
   */
  interface sy_menuFieldRefs {
    readonly menu_no: FieldRef<"sy_menu", 'Int'>
    readonly menu_nm: FieldRef<"sy_menu", 'String'>
    readonly use_tf: FieldRef<"sy_menu", 'String'>
    readonly expsr_tf: FieldRef<"sy_menu", 'String'>
    readonly indct_seq: FieldRef<"sy_menu", 'Int'>
    readonly menu_desc: FieldRef<"sy_menu", 'String'>
    readonly up_menu_no: FieldRef<"sy_menu", 'Int'>
    readonly note_cont: FieldRef<"sy_menu", 'String'>
    readonly link_scrn_no: FieldRef<"sy_menu", 'Int'>
    readonly icon_nm: FieldRef<"sy_menu", 'String'>
    readonly menu_url: FieldRef<"sy_menu", 'String'>
    readonly vrsn: FieldRef<"sy_menu", 'String'>
    readonly regr_no: FieldRef<"sy_menu", 'Int'>
    readonly reg_dt: FieldRef<"sy_menu", 'DateTime'>
    readonly modr_no: FieldRef<"sy_menu", 'Int'>
    readonly mod_dt: FieldRef<"sy_menu", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sy_menu findUnique
   */
  export type sy_menuFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_menu
     */
    select?: sy_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_menu
     */
    omit?: sy_menuOmit<ExtArgs> | null
    /**
     * Filter, which sy_menu to fetch.
     */
    where: sy_menuWhereUniqueInput
  }

  /**
   * sy_menu findUniqueOrThrow
   */
  export type sy_menuFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_menu
     */
    select?: sy_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_menu
     */
    omit?: sy_menuOmit<ExtArgs> | null
    /**
     * Filter, which sy_menu to fetch.
     */
    where: sy_menuWhereUniqueInput
  }

  /**
   * sy_menu findFirst
   */
  export type sy_menuFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_menu
     */
    select?: sy_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_menu
     */
    omit?: sy_menuOmit<ExtArgs> | null
    /**
     * Filter, which sy_menu to fetch.
     */
    where?: sy_menuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_menus to fetch.
     */
    orderBy?: sy_menuOrderByWithRelationInput | sy_menuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_menus.
     */
    cursor?: sy_menuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_menus.
     */
    distinct?: Sy_menuScalarFieldEnum | Sy_menuScalarFieldEnum[]
  }

  /**
   * sy_menu findFirstOrThrow
   */
  export type sy_menuFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_menu
     */
    select?: sy_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_menu
     */
    omit?: sy_menuOmit<ExtArgs> | null
    /**
     * Filter, which sy_menu to fetch.
     */
    where?: sy_menuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_menus to fetch.
     */
    orderBy?: sy_menuOrderByWithRelationInput | sy_menuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_menus.
     */
    cursor?: sy_menuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_menus.
     */
    distinct?: Sy_menuScalarFieldEnum | Sy_menuScalarFieldEnum[]
  }

  /**
   * sy_menu findMany
   */
  export type sy_menuFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_menu
     */
    select?: sy_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_menu
     */
    omit?: sy_menuOmit<ExtArgs> | null
    /**
     * Filter, which sy_menus to fetch.
     */
    where?: sy_menuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_menus to fetch.
     */
    orderBy?: sy_menuOrderByWithRelationInput | sy_menuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_menus.
     */
    cursor?: sy_menuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_menus.
     */
    skip?: number
    distinct?: Sy_menuScalarFieldEnum | Sy_menuScalarFieldEnum[]
  }

  /**
   * sy_menu create
   */
  export type sy_menuCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_menu
     */
    select?: sy_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_menu
     */
    omit?: sy_menuOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_menu.
     */
    data: XOR<sy_menuCreateInput, sy_menuUncheckedCreateInput>
  }

  /**
   * sy_menu createMany
   */
  export type sy_menuCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_menus.
     */
    data: sy_menuCreateManyInput | sy_menuCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_menu update
   */
  export type sy_menuUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_menu
     */
    select?: sy_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_menu
     */
    omit?: sy_menuOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_menu.
     */
    data: XOR<sy_menuUpdateInput, sy_menuUncheckedUpdateInput>
    /**
     * Choose, which sy_menu to update.
     */
    where: sy_menuWhereUniqueInput
  }

  /**
   * sy_menu updateMany
   */
  export type sy_menuUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_menus.
     */
    data: XOR<sy_menuUpdateManyMutationInput, sy_menuUncheckedUpdateManyInput>
    /**
     * Filter which sy_menus to update
     */
    where?: sy_menuWhereInput
    /**
     * Limit how many sy_menus to update.
     */
    limit?: number
  }

  /**
   * sy_menu upsert
   */
  export type sy_menuUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_menu
     */
    select?: sy_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_menu
     */
    omit?: sy_menuOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_menu to update in case it exists.
     */
    where: sy_menuWhereUniqueInput
    /**
     * In case the sy_menu found by the `where` argument doesn't exist, create a new sy_menu with this data.
     */
    create: XOR<sy_menuCreateInput, sy_menuUncheckedCreateInput>
    /**
     * In case the sy_menu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_menuUpdateInput, sy_menuUncheckedUpdateInput>
  }

  /**
   * sy_menu delete
   */
  export type sy_menuDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_menu
     */
    select?: sy_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_menu
     */
    omit?: sy_menuOmit<ExtArgs> | null
    /**
     * Filter which sy_menu to delete.
     */
    where: sy_menuWhereUniqueInput
  }

  /**
   * sy_menu deleteMany
   */
  export type sy_menuDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_menus to delete
     */
    where?: sy_menuWhereInput
    /**
     * Limit how many sy_menus to delete.
     */
    limit?: number
  }

  /**
   * sy_menu without action
   */
  export type sy_menuDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_menu
     */
    select?: sy_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_menu
     */
    omit?: sy_menuOmit<ExtArgs> | null
  }


  /**
   * Model sy_mngr
   */

  export type AggregateSy_mngr = {
    _count: Sy_mngrCountAggregateOutputType | null
    _avg: Sy_mngrAvgAggregateOutputType | null
    _sum: Sy_mngrSumAggregateOutputType | null
    _min: Sy_mngrMinAggregateOutputType | null
    _max: Sy_mngrMaxAggregateOutputType | null
  }

  export type Sy_mngrAvgAggregateOutputType = {
    mngr_no: number | null
    clco_no: number | null
    fail_cnt: number | null
    modr_no: number | null
    regr_no: number | null
  }

  export type Sy_mngrSumAggregateOutputType = {
    mngr_no: number | null
    clco_no: number | null
    fail_cnt: number | null
    modr_no: number | null
    regr_no: number | null
  }

  export type Sy_mngrMinAggregateOutputType = {
    mngr_no: number | null
    mngr_id: string | null
    mngr_pswd: string | null
    mngr_nm: string | null
    mngr_sctn_cd: string | null
    mngr_stts_cd: string | null
    email: string | null
    mbph_no: string | null
    use_tf: string | null
    clco_no: number | null
    clco_dept_cd: string | null
    use_bgng_ymd: Date | null
    use_end_ymd: Date | null
    salt_val: string | null
    cnsr_sctn_cd: string | null
    fail_cnt: number | null
    auth_suces_tf: string | null
    auth_key: string | null
    auth_token: string | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
    regr_no: number | null
  }

  export type Sy_mngrMaxAggregateOutputType = {
    mngr_no: number | null
    mngr_id: string | null
    mngr_pswd: string | null
    mngr_nm: string | null
    mngr_sctn_cd: string | null
    mngr_stts_cd: string | null
    email: string | null
    mbph_no: string | null
    use_tf: string | null
    clco_no: number | null
    clco_dept_cd: string | null
    use_bgng_ymd: Date | null
    use_end_ymd: Date | null
    salt_val: string | null
    cnsr_sctn_cd: string | null
    fail_cnt: number | null
    auth_suces_tf: string | null
    auth_key: string | null
    auth_token: string | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
    regr_no: number | null
  }

  export type Sy_mngrCountAggregateOutputType = {
    mngr_no: number
    mngr_id: number
    mngr_pswd: number
    mngr_nm: number
    mngr_sctn_cd: number
    mngr_stts_cd: number
    email: number
    mbph_no: number
    use_tf: number
    clco_no: number
    clco_dept_cd: number
    use_bgng_ymd: number
    use_end_ymd: number
    salt_val: number
    cnsr_sctn_cd: number
    fail_cnt: number
    auth_suces_tf: number
    auth_key: number
    auth_token: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    regr_no: number
    _all: number
  }


  export type Sy_mngrAvgAggregateInputType = {
    mngr_no?: true
    clco_no?: true
    fail_cnt?: true
    modr_no?: true
    regr_no?: true
  }

  export type Sy_mngrSumAggregateInputType = {
    mngr_no?: true
    clco_no?: true
    fail_cnt?: true
    modr_no?: true
    regr_no?: true
  }

  export type Sy_mngrMinAggregateInputType = {
    mngr_no?: true
    mngr_id?: true
    mngr_pswd?: true
    mngr_nm?: true
    mngr_sctn_cd?: true
    mngr_stts_cd?: true
    email?: true
    mbph_no?: true
    use_tf?: true
    clco_no?: true
    clco_dept_cd?: true
    use_bgng_ymd?: true
    use_end_ymd?: true
    salt_val?: true
    cnsr_sctn_cd?: true
    fail_cnt?: true
    auth_suces_tf?: true
    auth_key?: true
    auth_token?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    regr_no?: true
  }

  export type Sy_mngrMaxAggregateInputType = {
    mngr_no?: true
    mngr_id?: true
    mngr_pswd?: true
    mngr_nm?: true
    mngr_sctn_cd?: true
    mngr_stts_cd?: true
    email?: true
    mbph_no?: true
    use_tf?: true
    clco_no?: true
    clco_dept_cd?: true
    use_bgng_ymd?: true
    use_end_ymd?: true
    salt_val?: true
    cnsr_sctn_cd?: true
    fail_cnt?: true
    auth_suces_tf?: true
    auth_key?: true
    auth_token?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    regr_no?: true
  }

  export type Sy_mngrCountAggregateInputType = {
    mngr_no?: true
    mngr_id?: true
    mngr_pswd?: true
    mngr_nm?: true
    mngr_sctn_cd?: true
    mngr_stts_cd?: true
    email?: true
    mbph_no?: true
    use_tf?: true
    clco_no?: true
    clco_dept_cd?: true
    use_bgng_ymd?: true
    use_end_ymd?: true
    salt_val?: true
    cnsr_sctn_cd?: true
    fail_cnt?: true
    auth_suces_tf?: true
    auth_key?: true
    auth_token?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    regr_no?: true
    _all?: true
  }

  export type Sy_mngrAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_mngr to aggregate.
     */
    where?: sy_mngrWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngrs to fetch.
     */
    orderBy?: sy_mngrOrderByWithRelationInput | sy_mngrOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_mngrWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngrs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngrs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_mngrs
    **/
    _count?: true | Sy_mngrCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_mngrAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_mngrSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_mngrMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_mngrMaxAggregateInputType
  }

  export type GetSy_mngrAggregateType<T extends Sy_mngrAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_mngr]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_mngr[P]>
      : GetScalarType<T[P], AggregateSy_mngr[P]>
  }




  export type sy_mngrGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_mngrWhereInput
    orderBy?: sy_mngrOrderByWithAggregationInput | sy_mngrOrderByWithAggregationInput[]
    by: Sy_mngrScalarFieldEnum[] | Sy_mngrScalarFieldEnum
    having?: sy_mngrScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_mngrCountAggregateInputType | true
    _avg?: Sy_mngrAvgAggregateInputType
    _sum?: Sy_mngrSumAggregateInputType
    _min?: Sy_mngrMinAggregateInputType
    _max?: Sy_mngrMaxAggregateInputType
  }

  export type Sy_mngrGroupByOutputType = {
    mngr_no: number
    mngr_id: string
    mngr_pswd: string
    mngr_nm: string
    mngr_sctn_cd: string
    mngr_stts_cd: string | null
    email: string
    mbph_no: string
    use_tf: string
    clco_no: number | null
    clco_dept_cd: string | null
    use_bgng_ymd: Date | null
    use_end_ymd: Date | null
    salt_val: string | null
    cnsr_sctn_cd: string | null
    fail_cnt: number | null
    auth_suces_tf: string | null
    auth_key: string | null
    auth_token: string | null
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    regr_no: number
    _count: Sy_mngrCountAggregateOutputType | null
    _avg: Sy_mngrAvgAggregateOutputType | null
    _sum: Sy_mngrSumAggregateOutputType | null
    _min: Sy_mngrMinAggregateOutputType | null
    _max: Sy_mngrMaxAggregateOutputType | null
  }

  type GetSy_mngrGroupByPayload<T extends sy_mngrGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_mngrGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_mngrGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_mngrGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_mngrGroupByOutputType[P]>
        }
      >
    >


  export type sy_mngrSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    mngr_no?: boolean
    mngr_id?: boolean
    mngr_pswd?: boolean
    mngr_nm?: boolean
    mngr_sctn_cd?: boolean
    mngr_stts_cd?: boolean
    email?: boolean
    mbph_no?: boolean
    use_tf?: boolean
    clco_no?: boolean
    clco_dept_cd?: boolean
    use_bgng_ymd?: boolean
    use_end_ymd?: boolean
    salt_val?: boolean
    cnsr_sctn_cd?: boolean
    fail_cnt?: boolean
    auth_suces_tf?: boolean
    auth_key?: boolean
    auth_token?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
    regr_no?: boolean
  }, ExtArgs["result"]["sy_mngr"]>



  export type sy_mngrSelectScalar = {
    mngr_no?: boolean
    mngr_id?: boolean
    mngr_pswd?: boolean
    mngr_nm?: boolean
    mngr_sctn_cd?: boolean
    mngr_stts_cd?: boolean
    email?: boolean
    mbph_no?: boolean
    use_tf?: boolean
    clco_no?: boolean
    clco_dept_cd?: boolean
    use_bgng_ymd?: boolean
    use_end_ymd?: boolean
    salt_val?: boolean
    cnsr_sctn_cd?: boolean
    fail_cnt?: boolean
    auth_suces_tf?: boolean
    auth_key?: boolean
    auth_token?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
    regr_no?: boolean
  }

  export type sy_mngrOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"mngr_no" | "mngr_id" | "mngr_pswd" | "mngr_nm" | "mngr_sctn_cd" | "mngr_stts_cd" | "email" | "mbph_no" | "use_tf" | "clco_no" | "clco_dept_cd" | "use_bgng_ymd" | "use_end_ymd" | "salt_val" | "cnsr_sctn_cd" | "fail_cnt" | "auth_suces_tf" | "auth_key" | "auth_token" | "reg_dt" | "modr_no" | "mod_dt" | "regr_no", ExtArgs["result"]["sy_mngr"]>

  export type $sy_mngrPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_mngr"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      mngr_no: number
      mngr_id: string
      mngr_pswd: string
      mngr_nm: string
      mngr_sctn_cd: string
      mngr_stts_cd: string | null
      email: string
      mbph_no: string
      use_tf: string
      clco_no: number | null
      clco_dept_cd: string | null
      use_bgng_ymd: Date | null
      use_end_ymd: Date | null
      salt_val: string | null
      cnsr_sctn_cd: string | null
      fail_cnt: number | null
      auth_suces_tf: string | null
      auth_key: string | null
      auth_token: string | null
      reg_dt: Date
      modr_no: number
      mod_dt: Date
      regr_no: number
    }, ExtArgs["result"]["sy_mngr"]>
    composites: {}
  }

  type sy_mngrGetPayload<S extends boolean | null | undefined | sy_mngrDefaultArgs> = $Result.GetResult<Prisma.$sy_mngrPayload, S>

  type sy_mngrCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_mngrFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_mngrCountAggregateInputType | true
    }

  export interface sy_mngrDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_mngr'], meta: { name: 'sy_mngr' } }
    /**
     * Find zero or one Sy_mngr that matches the filter.
     * @param {sy_mngrFindUniqueArgs} args - Arguments to find a Sy_mngr
     * @example
     * // Get one Sy_mngr
     * const sy_mngr = await prisma.sy_mngr.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_mngrFindUniqueArgs>(args: SelectSubset<T, sy_mngrFindUniqueArgs<ExtArgs>>): Prisma__sy_mngrClient<$Result.GetResult<Prisma.$sy_mngrPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_mngr that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_mngrFindUniqueOrThrowArgs} args - Arguments to find a Sy_mngr
     * @example
     * // Get one Sy_mngr
     * const sy_mngr = await prisma.sy_mngr.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_mngrFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_mngrFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_mngrClient<$Result.GetResult<Prisma.$sy_mngrPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_mngr that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngrFindFirstArgs} args - Arguments to find a Sy_mngr
     * @example
     * // Get one Sy_mngr
     * const sy_mngr = await prisma.sy_mngr.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_mngrFindFirstArgs>(args?: SelectSubset<T, sy_mngrFindFirstArgs<ExtArgs>>): Prisma__sy_mngrClient<$Result.GetResult<Prisma.$sy_mngrPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_mngr that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngrFindFirstOrThrowArgs} args - Arguments to find a Sy_mngr
     * @example
     * // Get one Sy_mngr
     * const sy_mngr = await prisma.sy_mngr.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_mngrFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_mngrFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_mngrClient<$Result.GetResult<Prisma.$sy_mngrPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_mngrs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngrFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_mngrs
     * const sy_mngrs = await prisma.sy_mngr.findMany()
     * 
     * // Get first 10 Sy_mngrs
     * const sy_mngrs = await prisma.sy_mngr.findMany({ take: 10 })
     * 
     * // Only select the `mngr_no`
     * const sy_mngrWithMngr_noOnly = await prisma.sy_mngr.findMany({ select: { mngr_no: true } })
     * 
     */
    findMany<T extends sy_mngrFindManyArgs>(args?: SelectSubset<T, sy_mngrFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_mngrPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_mngr.
     * @param {sy_mngrCreateArgs} args - Arguments to create a Sy_mngr.
     * @example
     * // Create one Sy_mngr
     * const Sy_mngr = await prisma.sy_mngr.create({
     *   data: {
     *     // ... data to create a Sy_mngr
     *   }
     * })
     * 
     */
    create<T extends sy_mngrCreateArgs>(args: SelectSubset<T, sy_mngrCreateArgs<ExtArgs>>): Prisma__sy_mngrClient<$Result.GetResult<Prisma.$sy_mngrPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_mngrs.
     * @param {sy_mngrCreateManyArgs} args - Arguments to create many Sy_mngrs.
     * @example
     * // Create many Sy_mngrs
     * const sy_mngr = await prisma.sy_mngr.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_mngrCreateManyArgs>(args?: SelectSubset<T, sy_mngrCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_mngr.
     * @param {sy_mngrDeleteArgs} args - Arguments to delete one Sy_mngr.
     * @example
     * // Delete one Sy_mngr
     * const Sy_mngr = await prisma.sy_mngr.delete({
     *   where: {
     *     // ... filter to delete one Sy_mngr
     *   }
     * })
     * 
     */
    delete<T extends sy_mngrDeleteArgs>(args: SelectSubset<T, sy_mngrDeleteArgs<ExtArgs>>): Prisma__sy_mngrClient<$Result.GetResult<Prisma.$sy_mngrPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_mngr.
     * @param {sy_mngrUpdateArgs} args - Arguments to update one Sy_mngr.
     * @example
     * // Update one Sy_mngr
     * const sy_mngr = await prisma.sy_mngr.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_mngrUpdateArgs>(args: SelectSubset<T, sy_mngrUpdateArgs<ExtArgs>>): Prisma__sy_mngrClient<$Result.GetResult<Prisma.$sy_mngrPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_mngrs.
     * @param {sy_mngrDeleteManyArgs} args - Arguments to filter Sy_mngrs to delete.
     * @example
     * // Delete a few Sy_mngrs
     * const { count } = await prisma.sy_mngr.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_mngrDeleteManyArgs>(args?: SelectSubset<T, sy_mngrDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_mngrs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngrUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_mngrs
     * const sy_mngr = await prisma.sy_mngr.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_mngrUpdateManyArgs>(args: SelectSubset<T, sy_mngrUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_mngr.
     * @param {sy_mngrUpsertArgs} args - Arguments to update or create a Sy_mngr.
     * @example
     * // Update or create a Sy_mngr
     * const sy_mngr = await prisma.sy_mngr.upsert({
     *   create: {
     *     // ... data to create a Sy_mngr
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_mngr we want to update
     *   }
     * })
     */
    upsert<T extends sy_mngrUpsertArgs>(args: SelectSubset<T, sy_mngrUpsertArgs<ExtArgs>>): Prisma__sy_mngrClient<$Result.GetResult<Prisma.$sy_mngrPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_mngrs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngrCountArgs} args - Arguments to filter Sy_mngrs to count.
     * @example
     * // Count the number of Sy_mngrs
     * const count = await prisma.sy_mngr.count({
     *   where: {
     *     // ... the filter for the Sy_mngrs we want to count
     *   }
     * })
    **/
    count<T extends sy_mngrCountArgs>(
      args?: Subset<T, sy_mngrCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_mngrCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_mngr.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_mngrAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_mngrAggregateArgs>(args: Subset<T, Sy_mngrAggregateArgs>): Prisma.PrismaPromise<GetSy_mngrAggregateType<T>>

    /**
     * Group by Sy_mngr.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngrGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_mngrGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_mngrGroupByArgs['orderBy'] }
        : { orderBy?: sy_mngrGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_mngrGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_mngrGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_mngr model
   */
  readonly fields: sy_mngrFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_mngr.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_mngrClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_mngr model
   */
  interface sy_mngrFieldRefs {
    readonly mngr_no: FieldRef<"sy_mngr", 'Int'>
    readonly mngr_id: FieldRef<"sy_mngr", 'String'>
    readonly mngr_pswd: FieldRef<"sy_mngr", 'String'>
    readonly mngr_nm: FieldRef<"sy_mngr", 'String'>
    readonly mngr_sctn_cd: FieldRef<"sy_mngr", 'String'>
    readonly mngr_stts_cd: FieldRef<"sy_mngr", 'String'>
    readonly email: FieldRef<"sy_mngr", 'String'>
    readonly mbph_no: FieldRef<"sy_mngr", 'String'>
    readonly use_tf: FieldRef<"sy_mngr", 'String'>
    readonly clco_no: FieldRef<"sy_mngr", 'Int'>
    readonly clco_dept_cd: FieldRef<"sy_mngr", 'String'>
    readonly use_bgng_ymd: FieldRef<"sy_mngr", 'DateTime'>
    readonly use_end_ymd: FieldRef<"sy_mngr", 'DateTime'>
    readonly salt_val: FieldRef<"sy_mngr", 'String'>
    readonly cnsr_sctn_cd: FieldRef<"sy_mngr", 'String'>
    readonly fail_cnt: FieldRef<"sy_mngr", 'Int'>
    readonly auth_suces_tf: FieldRef<"sy_mngr", 'String'>
    readonly auth_key: FieldRef<"sy_mngr", 'String'>
    readonly auth_token: FieldRef<"sy_mngr", 'String'>
    readonly reg_dt: FieldRef<"sy_mngr", 'DateTime'>
    readonly modr_no: FieldRef<"sy_mngr", 'Int'>
    readonly mod_dt: FieldRef<"sy_mngr", 'DateTime'>
    readonly regr_no: FieldRef<"sy_mngr", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * sy_mngr findUnique
   */
  export type sy_mngrFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr
     */
    select?: sy_mngrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr
     */
    omit?: sy_mngrOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr to fetch.
     */
    where: sy_mngrWhereUniqueInput
  }

  /**
   * sy_mngr findUniqueOrThrow
   */
  export type sy_mngrFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr
     */
    select?: sy_mngrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr
     */
    omit?: sy_mngrOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr to fetch.
     */
    where: sy_mngrWhereUniqueInput
  }

  /**
   * sy_mngr findFirst
   */
  export type sy_mngrFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr
     */
    select?: sy_mngrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr
     */
    omit?: sy_mngrOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr to fetch.
     */
    where?: sy_mngrWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngrs to fetch.
     */
    orderBy?: sy_mngrOrderByWithRelationInput | sy_mngrOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_mngrs.
     */
    cursor?: sy_mngrWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngrs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngrs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_mngrs.
     */
    distinct?: Sy_mngrScalarFieldEnum | Sy_mngrScalarFieldEnum[]
  }

  /**
   * sy_mngr findFirstOrThrow
   */
  export type sy_mngrFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr
     */
    select?: sy_mngrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr
     */
    omit?: sy_mngrOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr to fetch.
     */
    where?: sy_mngrWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngrs to fetch.
     */
    orderBy?: sy_mngrOrderByWithRelationInput | sy_mngrOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_mngrs.
     */
    cursor?: sy_mngrWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngrs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngrs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_mngrs.
     */
    distinct?: Sy_mngrScalarFieldEnum | Sy_mngrScalarFieldEnum[]
  }

  /**
   * sy_mngr findMany
   */
  export type sy_mngrFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr
     */
    select?: sy_mngrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr
     */
    omit?: sy_mngrOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngrs to fetch.
     */
    where?: sy_mngrWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngrs to fetch.
     */
    orderBy?: sy_mngrOrderByWithRelationInput | sy_mngrOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_mngrs.
     */
    cursor?: sy_mngrWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngrs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngrs.
     */
    skip?: number
    distinct?: Sy_mngrScalarFieldEnum | Sy_mngrScalarFieldEnum[]
  }

  /**
   * sy_mngr create
   */
  export type sy_mngrCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr
     */
    select?: sy_mngrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr
     */
    omit?: sy_mngrOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_mngr.
     */
    data: XOR<sy_mngrCreateInput, sy_mngrUncheckedCreateInput>
  }

  /**
   * sy_mngr createMany
   */
  export type sy_mngrCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_mngrs.
     */
    data: sy_mngrCreateManyInput | sy_mngrCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_mngr update
   */
  export type sy_mngrUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr
     */
    select?: sy_mngrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr
     */
    omit?: sy_mngrOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_mngr.
     */
    data: XOR<sy_mngrUpdateInput, sy_mngrUncheckedUpdateInput>
    /**
     * Choose, which sy_mngr to update.
     */
    where: sy_mngrWhereUniqueInput
  }

  /**
   * sy_mngr updateMany
   */
  export type sy_mngrUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_mngrs.
     */
    data: XOR<sy_mngrUpdateManyMutationInput, sy_mngrUncheckedUpdateManyInput>
    /**
     * Filter which sy_mngrs to update
     */
    where?: sy_mngrWhereInput
    /**
     * Limit how many sy_mngrs to update.
     */
    limit?: number
  }

  /**
   * sy_mngr upsert
   */
  export type sy_mngrUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr
     */
    select?: sy_mngrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr
     */
    omit?: sy_mngrOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_mngr to update in case it exists.
     */
    where: sy_mngrWhereUniqueInput
    /**
     * In case the sy_mngr found by the `where` argument doesn't exist, create a new sy_mngr with this data.
     */
    create: XOR<sy_mngrCreateInput, sy_mngrUncheckedCreateInput>
    /**
     * In case the sy_mngr was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_mngrUpdateInput, sy_mngrUncheckedUpdateInput>
  }

  /**
   * sy_mngr delete
   */
  export type sy_mngrDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr
     */
    select?: sy_mngrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr
     */
    omit?: sy_mngrOmit<ExtArgs> | null
    /**
     * Filter which sy_mngr to delete.
     */
    where: sy_mngrWhereUniqueInput
  }

  /**
   * sy_mngr deleteMany
   */
  export type sy_mngrDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_mngrs to delete
     */
    where?: sy_mngrWhereInput
    /**
     * Limit how many sy_mngrs to delete.
     */
    limit?: number
  }

  /**
   * sy_mngr without action
   */
  export type sy_mngrDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr
     */
    select?: sy_mngrSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr
     */
    omit?: sy_mngrOmit<ExtArgs> | null
  }


  /**
   * Model sy_mngr_auth_grp
   */

  export type AggregateSy_mngr_auth_grp = {
    _count: Sy_mngr_auth_grpCountAggregateOutputType | null
    _avg: Sy_mngr_auth_grpAvgAggregateOutputType | null
    _sum: Sy_mngr_auth_grpSumAggregateOutputType | null
    _min: Sy_mngr_auth_grpMinAggregateOutputType | null
    _max: Sy_mngr_auth_grpMaxAggregateOutputType | null
  }

  export type Sy_mngr_auth_grpAvgAggregateOutputType = {
    mngr_no: number | null
    auth_grp_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_mngr_auth_grpSumAggregateOutputType = {
    mngr_no: number | null
    auth_grp_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_mngr_auth_grpMinAggregateOutputType = {
    mngr_no: number | null
    auth_grp_no: number | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_mngr_auth_grpMaxAggregateOutputType = {
    mngr_no: number | null
    auth_grp_no: number | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_mngr_auth_grpCountAggregateOutputType = {
    mngr_no: number
    auth_grp_no: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sy_mngr_auth_grpAvgAggregateInputType = {
    mngr_no?: true
    auth_grp_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_mngr_auth_grpSumAggregateInputType = {
    mngr_no?: true
    auth_grp_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_mngr_auth_grpMinAggregateInputType = {
    mngr_no?: true
    auth_grp_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_mngr_auth_grpMaxAggregateInputType = {
    mngr_no?: true
    auth_grp_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_mngr_auth_grpCountAggregateInputType = {
    mngr_no?: true
    auth_grp_no?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sy_mngr_auth_grpAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_mngr_auth_grp to aggregate.
     */
    where?: sy_mngr_auth_grpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_auth_grps to fetch.
     */
    orderBy?: sy_mngr_auth_grpOrderByWithRelationInput | sy_mngr_auth_grpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_mngr_auth_grpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_auth_grps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_auth_grps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_mngr_auth_grps
    **/
    _count?: true | Sy_mngr_auth_grpCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_mngr_auth_grpAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_mngr_auth_grpSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_mngr_auth_grpMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_mngr_auth_grpMaxAggregateInputType
  }

  export type GetSy_mngr_auth_grpAggregateType<T extends Sy_mngr_auth_grpAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_mngr_auth_grp]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_mngr_auth_grp[P]>
      : GetScalarType<T[P], AggregateSy_mngr_auth_grp[P]>
  }




  export type sy_mngr_auth_grpGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_mngr_auth_grpWhereInput
    orderBy?: sy_mngr_auth_grpOrderByWithAggregationInput | sy_mngr_auth_grpOrderByWithAggregationInput[]
    by: Sy_mngr_auth_grpScalarFieldEnum[] | Sy_mngr_auth_grpScalarFieldEnum
    having?: sy_mngr_auth_grpScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_mngr_auth_grpCountAggregateInputType | true
    _avg?: Sy_mngr_auth_grpAvgAggregateInputType
    _sum?: Sy_mngr_auth_grpSumAggregateInputType
    _min?: Sy_mngr_auth_grpMinAggregateInputType
    _max?: Sy_mngr_auth_grpMaxAggregateInputType
  }

  export type Sy_mngr_auth_grpGroupByOutputType = {
    mngr_no: number
    auth_grp_no: number
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sy_mngr_auth_grpCountAggregateOutputType | null
    _avg: Sy_mngr_auth_grpAvgAggregateOutputType | null
    _sum: Sy_mngr_auth_grpSumAggregateOutputType | null
    _min: Sy_mngr_auth_grpMinAggregateOutputType | null
    _max: Sy_mngr_auth_grpMaxAggregateOutputType | null
  }

  type GetSy_mngr_auth_grpGroupByPayload<T extends sy_mngr_auth_grpGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_mngr_auth_grpGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_mngr_auth_grpGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_mngr_auth_grpGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_mngr_auth_grpGroupByOutputType[P]>
        }
      >
    >


  export type sy_mngr_auth_grpSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    mngr_no?: boolean
    auth_grp_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sy_mngr_auth_grp"]>



  export type sy_mngr_auth_grpSelectScalar = {
    mngr_no?: boolean
    auth_grp_no?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sy_mngr_auth_grpOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"mngr_no" | "auth_grp_no" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sy_mngr_auth_grp"]>

  export type $sy_mngr_auth_grpPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_mngr_auth_grp"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      mngr_no: number
      auth_grp_no: number
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sy_mngr_auth_grp"]>
    composites: {}
  }

  type sy_mngr_auth_grpGetPayload<S extends boolean | null | undefined | sy_mngr_auth_grpDefaultArgs> = $Result.GetResult<Prisma.$sy_mngr_auth_grpPayload, S>

  type sy_mngr_auth_grpCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_mngr_auth_grpFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_mngr_auth_grpCountAggregateInputType | true
    }

  export interface sy_mngr_auth_grpDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_mngr_auth_grp'], meta: { name: 'sy_mngr_auth_grp' } }
    /**
     * Find zero or one Sy_mngr_auth_grp that matches the filter.
     * @param {sy_mngr_auth_grpFindUniqueArgs} args - Arguments to find a Sy_mngr_auth_grp
     * @example
     * // Get one Sy_mngr_auth_grp
     * const sy_mngr_auth_grp = await prisma.sy_mngr_auth_grp.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_mngr_auth_grpFindUniqueArgs>(args: SelectSubset<T, sy_mngr_auth_grpFindUniqueArgs<ExtArgs>>): Prisma__sy_mngr_auth_grpClient<$Result.GetResult<Prisma.$sy_mngr_auth_grpPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_mngr_auth_grp that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_mngr_auth_grpFindUniqueOrThrowArgs} args - Arguments to find a Sy_mngr_auth_grp
     * @example
     * // Get one Sy_mngr_auth_grp
     * const sy_mngr_auth_grp = await prisma.sy_mngr_auth_grp.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_mngr_auth_grpFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_mngr_auth_grpFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_mngr_auth_grpClient<$Result.GetResult<Prisma.$sy_mngr_auth_grpPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_mngr_auth_grp that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_auth_grpFindFirstArgs} args - Arguments to find a Sy_mngr_auth_grp
     * @example
     * // Get one Sy_mngr_auth_grp
     * const sy_mngr_auth_grp = await prisma.sy_mngr_auth_grp.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_mngr_auth_grpFindFirstArgs>(args?: SelectSubset<T, sy_mngr_auth_grpFindFirstArgs<ExtArgs>>): Prisma__sy_mngr_auth_grpClient<$Result.GetResult<Prisma.$sy_mngr_auth_grpPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_mngr_auth_grp that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_auth_grpFindFirstOrThrowArgs} args - Arguments to find a Sy_mngr_auth_grp
     * @example
     * // Get one Sy_mngr_auth_grp
     * const sy_mngr_auth_grp = await prisma.sy_mngr_auth_grp.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_mngr_auth_grpFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_mngr_auth_grpFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_mngr_auth_grpClient<$Result.GetResult<Prisma.$sy_mngr_auth_grpPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_mngr_auth_grps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_auth_grpFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_mngr_auth_grps
     * const sy_mngr_auth_grps = await prisma.sy_mngr_auth_grp.findMany()
     * 
     * // Get first 10 Sy_mngr_auth_grps
     * const sy_mngr_auth_grps = await prisma.sy_mngr_auth_grp.findMany({ take: 10 })
     * 
     * // Only select the `mngr_no`
     * const sy_mngr_auth_grpWithMngr_noOnly = await prisma.sy_mngr_auth_grp.findMany({ select: { mngr_no: true } })
     * 
     */
    findMany<T extends sy_mngr_auth_grpFindManyArgs>(args?: SelectSubset<T, sy_mngr_auth_grpFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_mngr_auth_grpPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_mngr_auth_grp.
     * @param {sy_mngr_auth_grpCreateArgs} args - Arguments to create a Sy_mngr_auth_grp.
     * @example
     * // Create one Sy_mngr_auth_grp
     * const Sy_mngr_auth_grp = await prisma.sy_mngr_auth_grp.create({
     *   data: {
     *     // ... data to create a Sy_mngr_auth_grp
     *   }
     * })
     * 
     */
    create<T extends sy_mngr_auth_grpCreateArgs>(args: SelectSubset<T, sy_mngr_auth_grpCreateArgs<ExtArgs>>): Prisma__sy_mngr_auth_grpClient<$Result.GetResult<Prisma.$sy_mngr_auth_grpPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_mngr_auth_grps.
     * @param {sy_mngr_auth_grpCreateManyArgs} args - Arguments to create many Sy_mngr_auth_grps.
     * @example
     * // Create many Sy_mngr_auth_grps
     * const sy_mngr_auth_grp = await prisma.sy_mngr_auth_grp.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_mngr_auth_grpCreateManyArgs>(args?: SelectSubset<T, sy_mngr_auth_grpCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_mngr_auth_grp.
     * @param {sy_mngr_auth_grpDeleteArgs} args - Arguments to delete one Sy_mngr_auth_grp.
     * @example
     * // Delete one Sy_mngr_auth_grp
     * const Sy_mngr_auth_grp = await prisma.sy_mngr_auth_grp.delete({
     *   where: {
     *     // ... filter to delete one Sy_mngr_auth_grp
     *   }
     * })
     * 
     */
    delete<T extends sy_mngr_auth_grpDeleteArgs>(args: SelectSubset<T, sy_mngr_auth_grpDeleteArgs<ExtArgs>>): Prisma__sy_mngr_auth_grpClient<$Result.GetResult<Prisma.$sy_mngr_auth_grpPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_mngr_auth_grp.
     * @param {sy_mngr_auth_grpUpdateArgs} args - Arguments to update one Sy_mngr_auth_grp.
     * @example
     * // Update one Sy_mngr_auth_grp
     * const sy_mngr_auth_grp = await prisma.sy_mngr_auth_grp.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_mngr_auth_grpUpdateArgs>(args: SelectSubset<T, sy_mngr_auth_grpUpdateArgs<ExtArgs>>): Prisma__sy_mngr_auth_grpClient<$Result.GetResult<Prisma.$sy_mngr_auth_grpPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_mngr_auth_grps.
     * @param {sy_mngr_auth_grpDeleteManyArgs} args - Arguments to filter Sy_mngr_auth_grps to delete.
     * @example
     * // Delete a few Sy_mngr_auth_grps
     * const { count } = await prisma.sy_mngr_auth_grp.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_mngr_auth_grpDeleteManyArgs>(args?: SelectSubset<T, sy_mngr_auth_grpDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_mngr_auth_grps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_auth_grpUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_mngr_auth_grps
     * const sy_mngr_auth_grp = await prisma.sy_mngr_auth_grp.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_mngr_auth_grpUpdateManyArgs>(args: SelectSubset<T, sy_mngr_auth_grpUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_mngr_auth_grp.
     * @param {sy_mngr_auth_grpUpsertArgs} args - Arguments to update or create a Sy_mngr_auth_grp.
     * @example
     * // Update or create a Sy_mngr_auth_grp
     * const sy_mngr_auth_grp = await prisma.sy_mngr_auth_grp.upsert({
     *   create: {
     *     // ... data to create a Sy_mngr_auth_grp
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_mngr_auth_grp we want to update
     *   }
     * })
     */
    upsert<T extends sy_mngr_auth_grpUpsertArgs>(args: SelectSubset<T, sy_mngr_auth_grpUpsertArgs<ExtArgs>>): Prisma__sy_mngr_auth_grpClient<$Result.GetResult<Prisma.$sy_mngr_auth_grpPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_mngr_auth_grps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_auth_grpCountArgs} args - Arguments to filter Sy_mngr_auth_grps to count.
     * @example
     * // Count the number of Sy_mngr_auth_grps
     * const count = await prisma.sy_mngr_auth_grp.count({
     *   where: {
     *     // ... the filter for the Sy_mngr_auth_grps we want to count
     *   }
     * })
    **/
    count<T extends sy_mngr_auth_grpCountArgs>(
      args?: Subset<T, sy_mngr_auth_grpCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_mngr_auth_grpCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_mngr_auth_grp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_mngr_auth_grpAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_mngr_auth_grpAggregateArgs>(args: Subset<T, Sy_mngr_auth_grpAggregateArgs>): Prisma.PrismaPromise<GetSy_mngr_auth_grpAggregateType<T>>

    /**
     * Group by Sy_mngr_auth_grp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_auth_grpGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_mngr_auth_grpGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_mngr_auth_grpGroupByArgs['orderBy'] }
        : { orderBy?: sy_mngr_auth_grpGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_mngr_auth_grpGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_mngr_auth_grpGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_mngr_auth_grp model
   */
  readonly fields: sy_mngr_auth_grpFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_mngr_auth_grp.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_mngr_auth_grpClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_mngr_auth_grp model
   */
  interface sy_mngr_auth_grpFieldRefs {
    readonly mngr_no: FieldRef<"sy_mngr_auth_grp", 'Int'>
    readonly auth_grp_no: FieldRef<"sy_mngr_auth_grp", 'Int'>
    readonly regr_no: FieldRef<"sy_mngr_auth_grp", 'Int'>
    readonly reg_dt: FieldRef<"sy_mngr_auth_grp", 'DateTime'>
    readonly modr_no: FieldRef<"sy_mngr_auth_grp", 'Int'>
    readonly mod_dt: FieldRef<"sy_mngr_auth_grp", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sy_mngr_auth_grp findUnique
   */
  export type sy_mngr_auth_grpFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp
     */
    select?: sy_mngr_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp
     */
    omit?: sy_mngr_auth_grpOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_auth_grp to fetch.
     */
    where: sy_mngr_auth_grpWhereUniqueInput
  }

  /**
   * sy_mngr_auth_grp findUniqueOrThrow
   */
  export type sy_mngr_auth_grpFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp
     */
    select?: sy_mngr_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp
     */
    omit?: sy_mngr_auth_grpOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_auth_grp to fetch.
     */
    where: sy_mngr_auth_grpWhereUniqueInput
  }

  /**
   * sy_mngr_auth_grp findFirst
   */
  export type sy_mngr_auth_grpFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp
     */
    select?: sy_mngr_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp
     */
    omit?: sy_mngr_auth_grpOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_auth_grp to fetch.
     */
    where?: sy_mngr_auth_grpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_auth_grps to fetch.
     */
    orderBy?: sy_mngr_auth_grpOrderByWithRelationInput | sy_mngr_auth_grpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_mngr_auth_grps.
     */
    cursor?: sy_mngr_auth_grpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_auth_grps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_auth_grps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_mngr_auth_grps.
     */
    distinct?: Sy_mngr_auth_grpScalarFieldEnum | Sy_mngr_auth_grpScalarFieldEnum[]
  }

  /**
   * sy_mngr_auth_grp findFirstOrThrow
   */
  export type sy_mngr_auth_grpFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp
     */
    select?: sy_mngr_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp
     */
    omit?: sy_mngr_auth_grpOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_auth_grp to fetch.
     */
    where?: sy_mngr_auth_grpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_auth_grps to fetch.
     */
    orderBy?: sy_mngr_auth_grpOrderByWithRelationInput | sy_mngr_auth_grpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_mngr_auth_grps.
     */
    cursor?: sy_mngr_auth_grpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_auth_grps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_auth_grps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_mngr_auth_grps.
     */
    distinct?: Sy_mngr_auth_grpScalarFieldEnum | Sy_mngr_auth_grpScalarFieldEnum[]
  }

  /**
   * sy_mngr_auth_grp findMany
   */
  export type sy_mngr_auth_grpFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp
     */
    select?: sy_mngr_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp
     */
    omit?: sy_mngr_auth_grpOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_auth_grps to fetch.
     */
    where?: sy_mngr_auth_grpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_auth_grps to fetch.
     */
    orderBy?: sy_mngr_auth_grpOrderByWithRelationInput | sy_mngr_auth_grpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_mngr_auth_grps.
     */
    cursor?: sy_mngr_auth_grpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_auth_grps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_auth_grps.
     */
    skip?: number
    distinct?: Sy_mngr_auth_grpScalarFieldEnum | Sy_mngr_auth_grpScalarFieldEnum[]
  }

  /**
   * sy_mngr_auth_grp create
   */
  export type sy_mngr_auth_grpCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp
     */
    select?: sy_mngr_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp
     */
    omit?: sy_mngr_auth_grpOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_mngr_auth_grp.
     */
    data: XOR<sy_mngr_auth_grpCreateInput, sy_mngr_auth_grpUncheckedCreateInput>
  }

  /**
   * sy_mngr_auth_grp createMany
   */
  export type sy_mngr_auth_grpCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_mngr_auth_grps.
     */
    data: sy_mngr_auth_grpCreateManyInput | sy_mngr_auth_grpCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_mngr_auth_grp update
   */
  export type sy_mngr_auth_grpUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp
     */
    select?: sy_mngr_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp
     */
    omit?: sy_mngr_auth_grpOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_mngr_auth_grp.
     */
    data: XOR<sy_mngr_auth_grpUpdateInput, sy_mngr_auth_grpUncheckedUpdateInput>
    /**
     * Choose, which sy_mngr_auth_grp to update.
     */
    where: sy_mngr_auth_grpWhereUniqueInput
  }

  /**
   * sy_mngr_auth_grp updateMany
   */
  export type sy_mngr_auth_grpUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_mngr_auth_grps.
     */
    data: XOR<sy_mngr_auth_grpUpdateManyMutationInput, sy_mngr_auth_grpUncheckedUpdateManyInput>
    /**
     * Filter which sy_mngr_auth_grps to update
     */
    where?: sy_mngr_auth_grpWhereInput
    /**
     * Limit how many sy_mngr_auth_grps to update.
     */
    limit?: number
  }

  /**
   * sy_mngr_auth_grp upsert
   */
  export type sy_mngr_auth_grpUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp
     */
    select?: sy_mngr_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp
     */
    omit?: sy_mngr_auth_grpOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_mngr_auth_grp to update in case it exists.
     */
    where: sy_mngr_auth_grpWhereUniqueInput
    /**
     * In case the sy_mngr_auth_grp found by the `where` argument doesn't exist, create a new sy_mngr_auth_grp with this data.
     */
    create: XOR<sy_mngr_auth_grpCreateInput, sy_mngr_auth_grpUncheckedCreateInput>
    /**
     * In case the sy_mngr_auth_grp was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_mngr_auth_grpUpdateInput, sy_mngr_auth_grpUncheckedUpdateInput>
  }

  /**
   * sy_mngr_auth_grp delete
   */
  export type sy_mngr_auth_grpDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp
     */
    select?: sy_mngr_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp
     */
    omit?: sy_mngr_auth_grpOmit<ExtArgs> | null
    /**
     * Filter which sy_mngr_auth_grp to delete.
     */
    where: sy_mngr_auth_grpWhereUniqueInput
  }

  /**
   * sy_mngr_auth_grp deleteMany
   */
  export type sy_mngr_auth_grpDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_mngr_auth_grps to delete
     */
    where?: sy_mngr_auth_grpWhereInput
    /**
     * Limit how many sy_mngr_auth_grps to delete.
     */
    limit?: number
  }

  /**
   * sy_mngr_auth_grp without action
   */
  export type sy_mngr_auth_grpDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp
     */
    select?: sy_mngr_auth_grpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp
     */
    omit?: sy_mngr_auth_grpOmit<ExtArgs> | null
  }


  /**
   * Model sy_mngr_auth_grp_hist
   */

  export type AggregateSy_mngr_auth_grp_hist = {
    _count: Sy_mngr_auth_grp_histCountAggregateOutputType | null
    _avg: Sy_mngr_auth_grp_histAvgAggregateOutputType | null
    _sum: Sy_mngr_auth_grp_histSumAggregateOutputType | null
    _min: Sy_mngr_auth_grp_histMinAggregateOutputType | null
    _max: Sy_mngr_auth_grp_histMaxAggregateOutputType | null
  }

  export type Sy_mngr_auth_grp_histAvgAggregateOutputType = {
    hist_no: number | null
    mngr_no: number | null
    auth_grp_no: number | null
    modr_no: number | null
    regr_no: number | null
  }

  export type Sy_mngr_auth_grp_histSumAggregateOutputType = {
    hist_no: bigint | null
    mngr_no: number | null
    auth_grp_no: number | null
    modr_no: number | null
    regr_no: number | null
  }

  export type Sy_mngr_auth_grp_histMinAggregateOutputType = {
    hist_no: bigint | null
    mngr_no: number | null
    auth_grp_no: number | null
    type: string | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
    regr_no: number | null
  }

  export type Sy_mngr_auth_grp_histMaxAggregateOutputType = {
    hist_no: bigint | null
    mngr_no: number | null
    auth_grp_no: number | null
    type: string | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
    regr_no: number | null
  }

  export type Sy_mngr_auth_grp_histCountAggregateOutputType = {
    hist_no: number
    mngr_no: number
    auth_grp_no: number
    type: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    regr_no: number
    _all: number
  }


  export type Sy_mngr_auth_grp_histAvgAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    auth_grp_no?: true
    modr_no?: true
    regr_no?: true
  }

  export type Sy_mngr_auth_grp_histSumAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    auth_grp_no?: true
    modr_no?: true
    regr_no?: true
  }

  export type Sy_mngr_auth_grp_histMinAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    auth_grp_no?: true
    type?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    regr_no?: true
  }

  export type Sy_mngr_auth_grp_histMaxAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    auth_grp_no?: true
    type?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    regr_no?: true
  }

  export type Sy_mngr_auth_grp_histCountAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    auth_grp_no?: true
    type?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    regr_no?: true
    _all?: true
  }

  export type Sy_mngr_auth_grp_histAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_mngr_auth_grp_hist to aggregate.
     */
    where?: sy_mngr_auth_grp_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_auth_grp_hists to fetch.
     */
    orderBy?: sy_mngr_auth_grp_histOrderByWithRelationInput | sy_mngr_auth_grp_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_mngr_auth_grp_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_auth_grp_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_auth_grp_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_mngr_auth_grp_hists
    **/
    _count?: true | Sy_mngr_auth_grp_histCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_mngr_auth_grp_histAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_mngr_auth_grp_histSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_mngr_auth_grp_histMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_mngr_auth_grp_histMaxAggregateInputType
  }

  export type GetSy_mngr_auth_grp_histAggregateType<T extends Sy_mngr_auth_grp_histAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_mngr_auth_grp_hist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_mngr_auth_grp_hist[P]>
      : GetScalarType<T[P], AggregateSy_mngr_auth_grp_hist[P]>
  }




  export type sy_mngr_auth_grp_histGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_mngr_auth_grp_histWhereInput
    orderBy?: sy_mngr_auth_grp_histOrderByWithAggregationInput | sy_mngr_auth_grp_histOrderByWithAggregationInput[]
    by: Sy_mngr_auth_grp_histScalarFieldEnum[] | Sy_mngr_auth_grp_histScalarFieldEnum
    having?: sy_mngr_auth_grp_histScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_mngr_auth_grp_histCountAggregateInputType | true
    _avg?: Sy_mngr_auth_grp_histAvgAggregateInputType
    _sum?: Sy_mngr_auth_grp_histSumAggregateInputType
    _min?: Sy_mngr_auth_grp_histMinAggregateInputType
    _max?: Sy_mngr_auth_grp_histMaxAggregateInputType
  }

  export type Sy_mngr_auth_grp_histGroupByOutputType = {
    hist_no: bigint
    mngr_no: number
    auth_grp_no: number
    type: string
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    regr_no: number
    _count: Sy_mngr_auth_grp_histCountAggregateOutputType | null
    _avg: Sy_mngr_auth_grp_histAvgAggregateOutputType | null
    _sum: Sy_mngr_auth_grp_histSumAggregateOutputType | null
    _min: Sy_mngr_auth_grp_histMinAggregateOutputType | null
    _max: Sy_mngr_auth_grp_histMaxAggregateOutputType | null
  }

  type GetSy_mngr_auth_grp_histGroupByPayload<T extends sy_mngr_auth_grp_histGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_mngr_auth_grp_histGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_mngr_auth_grp_histGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_mngr_auth_grp_histGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_mngr_auth_grp_histGroupByOutputType[P]>
        }
      >
    >


  export type sy_mngr_auth_grp_histSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    hist_no?: boolean
    mngr_no?: boolean
    auth_grp_no?: boolean
    type?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
    regr_no?: boolean
  }, ExtArgs["result"]["sy_mngr_auth_grp_hist"]>



  export type sy_mngr_auth_grp_histSelectScalar = {
    hist_no?: boolean
    mngr_no?: boolean
    auth_grp_no?: boolean
    type?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
    regr_no?: boolean
  }

  export type sy_mngr_auth_grp_histOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"hist_no" | "mngr_no" | "auth_grp_no" | "type" | "reg_dt" | "modr_no" | "mod_dt" | "regr_no", ExtArgs["result"]["sy_mngr_auth_grp_hist"]>

  export type $sy_mngr_auth_grp_histPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_mngr_auth_grp_hist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      hist_no: bigint
      mngr_no: number
      auth_grp_no: number
      type: string
      reg_dt: Date
      modr_no: number
      mod_dt: Date
      regr_no: number
    }, ExtArgs["result"]["sy_mngr_auth_grp_hist"]>
    composites: {}
  }

  type sy_mngr_auth_grp_histGetPayload<S extends boolean | null | undefined | sy_mngr_auth_grp_histDefaultArgs> = $Result.GetResult<Prisma.$sy_mngr_auth_grp_histPayload, S>

  type sy_mngr_auth_grp_histCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_mngr_auth_grp_histFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_mngr_auth_grp_histCountAggregateInputType | true
    }

  export interface sy_mngr_auth_grp_histDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_mngr_auth_grp_hist'], meta: { name: 'sy_mngr_auth_grp_hist' } }
    /**
     * Find zero or one Sy_mngr_auth_grp_hist that matches the filter.
     * @param {sy_mngr_auth_grp_histFindUniqueArgs} args - Arguments to find a Sy_mngr_auth_grp_hist
     * @example
     * // Get one Sy_mngr_auth_grp_hist
     * const sy_mngr_auth_grp_hist = await prisma.sy_mngr_auth_grp_hist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_mngr_auth_grp_histFindUniqueArgs>(args: SelectSubset<T, sy_mngr_auth_grp_histFindUniqueArgs<ExtArgs>>): Prisma__sy_mngr_auth_grp_histClient<$Result.GetResult<Prisma.$sy_mngr_auth_grp_histPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_mngr_auth_grp_hist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_mngr_auth_grp_histFindUniqueOrThrowArgs} args - Arguments to find a Sy_mngr_auth_grp_hist
     * @example
     * // Get one Sy_mngr_auth_grp_hist
     * const sy_mngr_auth_grp_hist = await prisma.sy_mngr_auth_grp_hist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_mngr_auth_grp_histFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_mngr_auth_grp_histFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_mngr_auth_grp_histClient<$Result.GetResult<Prisma.$sy_mngr_auth_grp_histPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_mngr_auth_grp_hist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_auth_grp_histFindFirstArgs} args - Arguments to find a Sy_mngr_auth_grp_hist
     * @example
     * // Get one Sy_mngr_auth_grp_hist
     * const sy_mngr_auth_grp_hist = await prisma.sy_mngr_auth_grp_hist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_mngr_auth_grp_histFindFirstArgs>(args?: SelectSubset<T, sy_mngr_auth_grp_histFindFirstArgs<ExtArgs>>): Prisma__sy_mngr_auth_grp_histClient<$Result.GetResult<Prisma.$sy_mngr_auth_grp_histPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_mngr_auth_grp_hist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_auth_grp_histFindFirstOrThrowArgs} args - Arguments to find a Sy_mngr_auth_grp_hist
     * @example
     * // Get one Sy_mngr_auth_grp_hist
     * const sy_mngr_auth_grp_hist = await prisma.sy_mngr_auth_grp_hist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_mngr_auth_grp_histFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_mngr_auth_grp_histFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_mngr_auth_grp_histClient<$Result.GetResult<Prisma.$sy_mngr_auth_grp_histPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_mngr_auth_grp_hists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_auth_grp_histFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_mngr_auth_grp_hists
     * const sy_mngr_auth_grp_hists = await prisma.sy_mngr_auth_grp_hist.findMany()
     * 
     * // Get first 10 Sy_mngr_auth_grp_hists
     * const sy_mngr_auth_grp_hists = await prisma.sy_mngr_auth_grp_hist.findMany({ take: 10 })
     * 
     * // Only select the `hist_no`
     * const sy_mngr_auth_grp_histWithHist_noOnly = await prisma.sy_mngr_auth_grp_hist.findMany({ select: { hist_no: true } })
     * 
     */
    findMany<T extends sy_mngr_auth_grp_histFindManyArgs>(args?: SelectSubset<T, sy_mngr_auth_grp_histFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_mngr_auth_grp_histPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_mngr_auth_grp_hist.
     * @param {sy_mngr_auth_grp_histCreateArgs} args - Arguments to create a Sy_mngr_auth_grp_hist.
     * @example
     * // Create one Sy_mngr_auth_grp_hist
     * const Sy_mngr_auth_grp_hist = await prisma.sy_mngr_auth_grp_hist.create({
     *   data: {
     *     // ... data to create a Sy_mngr_auth_grp_hist
     *   }
     * })
     * 
     */
    create<T extends sy_mngr_auth_grp_histCreateArgs>(args: SelectSubset<T, sy_mngr_auth_grp_histCreateArgs<ExtArgs>>): Prisma__sy_mngr_auth_grp_histClient<$Result.GetResult<Prisma.$sy_mngr_auth_grp_histPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_mngr_auth_grp_hists.
     * @param {sy_mngr_auth_grp_histCreateManyArgs} args - Arguments to create many Sy_mngr_auth_grp_hists.
     * @example
     * // Create many Sy_mngr_auth_grp_hists
     * const sy_mngr_auth_grp_hist = await prisma.sy_mngr_auth_grp_hist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_mngr_auth_grp_histCreateManyArgs>(args?: SelectSubset<T, sy_mngr_auth_grp_histCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_mngr_auth_grp_hist.
     * @param {sy_mngr_auth_grp_histDeleteArgs} args - Arguments to delete one Sy_mngr_auth_grp_hist.
     * @example
     * // Delete one Sy_mngr_auth_grp_hist
     * const Sy_mngr_auth_grp_hist = await prisma.sy_mngr_auth_grp_hist.delete({
     *   where: {
     *     // ... filter to delete one Sy_mngr_auth_grp_hist
     *   }
     * })
     * 
     */
    delete<T extends sy_mngr_auth_grp_histDeleteArgs>(args: SelectSubset<T, sy_mngr_auth_grp_histDeleteArgs<ExtArgs>>): Prisma__sy_mngr_auth_grp_histClient<$Result.GetResult<Prisma.$sy_mngr_auth_grp_histPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_mngr_auth_grp_hist.
     * @param {sy_mngr_auth_grp_histUpdateArgs} args - Arguments to update one Sy_mngr_auth_grp_hist.
     * @example
     * // Update one Sy_mngr_auth_grp_hist
     * const sy_mngr_auth_grp_hist = await prisma.sy_mngr_auth_grp_hist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_mngr_auth_grp_histUpdateArgs>(args: SelectSubset<T, sy_mngr_auth_grp_histUpdateArgs<ExtArgs>>): Prisma__sy_mngr_auth_grp_histClient<$Result.GetResult<Prisma.$sy_mngr_auth_grp_histPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_mngr_auth_grp_hists.
     * @param {sy_mngr_auth_grp_histDeleteManyArgs} args - Arguments to filter Sy_mngr_auth_grp_hists to delete.
     * @example
     * // Delete a few Sy_mngr_auth_grp_hists
     * const { count } = await prisma.sy_mngr_auth_grp_hist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_mngr_auth_grp_histDeleteManyArgs>(args?: SelectSubset<T, sy_mngr_auth_grp_histDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_mngr_auth_grp_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_auth_grp_histUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_mngr_auth_grp_hists
     * const sy_mngr_auth_grp_hist = await prisma.sy_mngr_auth_grp_hist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_mngr_auth_grp_histUpdateManyArgs>(args: SelectSubset<T, sy_mngr_auth_grp_histUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_mngr_auth_grp_hist.
     * @param {sy_mngr_auth_grp_histUpsertArgs} args - Arguments to update or create a Sy_mngr_auth_grp_hist.
     * @example
     * // Update or create a Sy_mngr_auth_grp_hist
     * const sy_mngr_auth_grp_hist = await prisma.sy_mngr_auth_grp_hist.upsert({
     *   create: {
     *     // ... data to create a Sy_mngr_auth_grp_hist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_mngr_auth_grp_hist we want to update
     *   }
     * })
     */
    upsert<T extends sy_mngr_auth_grp_histUpsertArgs>(args: SelectSubset<T, sy_mngr_auth_grp_histUpsertArgs<ExtArgs>>): Prisma__sy_mngr_auth_grp_histClient<$Result.GetResult<Prisma.$sy_mngr_auth_grp_histPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_mngr_auth_grp_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_auth_grp_histCountArgs} args - Arguments to filter Sy_mngr_auth_grp_hists to count.
     * @example
     * // Count the number of Sy_mngr_auth_grp_hists
     * const count = await prisma.sy_mngr_auth_grp_hist.count({
     *   where: {
     *     // ... the filter for the Sy_mngr_auth_grp_hists we want to count
     *   }
     * })
    **/
    count<T extends sy_mngr_auth_grp_histCountArgs>(
      args?: Subset<T, sy_mngr_auth_grp_histCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_mngr_auth_grp_histCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_mngr_auth_grp_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_mngr_auth_grp_histAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_mngr_auth_grp_histAggregateArgs>(args: Subset<T, Sy_mngr_auth_grp_histAggregateArgs>): Prisma.PrismaPromise<GetSy_mngr_auth_grp_histAggregateType<T>>

    /**
     * Group by Sy_mngr_auth_grp_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_auth_grp_histGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_mngr_auth_grp_histGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_mngr_auth_grp_histGroupByArgs['orderBy'] }
        : { orderBy?: sy_mngr_auth_grp_histGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_mngr_auth_grp_histGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_mngr_auth_grp_histGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_mngr_auth_grp_hist model
   */
  readonly fields: sy_mngr_auth_grp_histFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_mngr_auth_grp_hist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_mngr_auth_grp_histClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_mngr_auth_grp_hist model
   */
  interface sy_mngr_auth_grp_histFieldRefs {
    readonly hist_no: FieldRef<"sy_mngr_auth_grp_hist", 'BigInt'>
    readonly mngr_no: FieldRef<"sy_mngr_auth_grp_hist", 'Int'>
    readonly auth_grp_no: FieldRef<"sy_mngr_auth_grp_hist", 'Int'>
    readonly type: FieldRef<"sy_mngr_auth_grp_hist", 'String'>
    readonly reg_dt: FieldRef<"sy_mngr_auth_grp_hist", 'DateTime'>
    readonly modr_no: FieldRef<"sy_mngr_auth_grp_hist", 'Int'>
    readonly mod_dt: FieldRef<"sy_mngr_auth_grp_hist", 'DateTime'>
    readonly regr_no: FieldRef<"sy_mngr_auth_grp_hist", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * sy_mngr_auth_grp_hist findUnique
   */
  export type sy_mngr_auth_grp_histFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp_hist
     */
    select?: sy_mngr_auth_grp_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp_hist
     */
    omit?: sy_mngr_auth_grp_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_auth_grp_hist to fetch.
     */
    where: sy_mngr_auth_grp_histWhereUniqueInput
  }

  /**
   * sy_mngr_auth_grp_hist findUniqueOrThrow
   */
  export type sy_mngr_auth_grp_histFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp_hist
     */
    select?: sy_mngr_auth_grp_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp_hist
     */
    omit?: sy_mngr_auth_grp_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_auth_grp_hist to fetch.
     */
    where: sy_mngr_auth_grp_histWhereUniqueInput
  }

  /**
   * sy_mngr_auth_grp_hist findFirst
   */
  export type sy_mngr_auth_grp_histFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp_hist
     */
    select?: sy_mngr_auth_grp_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp_hist
     */
    omit?: sy_mngr_auth_grp_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_auth_grp_hist to fetch.
     */
    where?: sy_mngr_auth_grp_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_auth_grp_hists to fetch.
     */
    orderBy?: sy_mngr_auth_grp_histOrderByWithRelationInput | sy_mngr_auth_grp_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_mngr_auth_grp_hists.
     */
    cursor?: sy_mngr_auth_grp_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_auth_grp_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_auth_grp_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_mngr_auth_grp_hists.
     */
    distinct?: Sy_mngr_auth_grp_histScalarFieldEnum | Sy_mngr_auth_grp_histScalarFieldEnum[]
  }

  /**
   * sy_mngr_auth_grp_hist findFirstOrThrow
   */
  export type sy_mngr_auth_grp_histFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp_hist
     */
    select?: sy_mngr_auth_grp_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp_hist
     */
    omit?: sy_mngr_auth_grp_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_auth_grp_hist to fetch.
     */
    where?: sy_mngr_auth_grp_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_auth_grp_hists to fetch.
     */
    orderBy?: sy_mngr_auth_grp_histOrderByWithRelationInput | sy_mngr_auth_grp_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_mngr_auth_grp_hists.
     */
    cursor?: sy_mngr_auth_grp_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_auth_grp_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_auth_grp_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_mngr_auth_grp_hists.
     */
    distinct?: Sy_mngr_auth_grp_histScalarFieldEnum | Sy_mngr_auth_grp_histScalarFieldEnum[]
  }

  /**
   * sy_mngr_auth_grp_hist findMany
   */
  export type sy_mngr_auth_grp_histFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp_hist
     */
    select?: sy_mngr_auth_grp_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp_hist
     */
    omit?: sy_mngr_auth_grp_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_auth_grp_hists to fetch.
     */
    where?: sy_mngr_auth_grp_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_auth_grp_hists to fetch.
     */
    orderBy?: sy_mngr_auth_grp_histOrderByWithRelationInput | sy_mngr_auth_grp_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_mngr_auth_grp_hists.
     */
    cursor?: sy_mngr_auth_grp_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_auth_grp_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_auth_grp_hists.
     */
    skip?: number
    distinct?: Sy_mngr_auth_grp_histScalarFieldEnum | Sy_mngr_auth_grp_histScalarFieldEnum[]
  }

  /**
   * sy_mngr_auth_grp_hist create
   */
  export type sy_mngr_auth_grp_histCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp_hist
     */
    select?: sy_mngr_auth_grp_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp_hist
     */
    omit?: sy_mngr_auth_grp_histOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_mngr_auth_grp_hist.
     */
    data: XOR<sy_mngr_auth_grp_histCreateInput, sy_mngr_auth_grp_histUncheckedCreateInput>
  }

  /**
   * sy_mngr_auth_grp_hist createMany
   */
  export type sy_mngr_auth_grp_histCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_mngr_auth_grp_hists.
     */
    data: sy_mngr_auth_grp_histCreateManyInput | sy_mngr_auth_grp_histCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_mngr_auth_grp_hist update
   */
  export type sy_mngr_auth_grp_histUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp_hist
     */
    select?: sy_mngr_auth_grp_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp_hist
     */
    omit?: sy_mngr_auth_grp_histOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_mngr_auth_grp_hist.
     */
    data: XOR<sy_mngr_auth_grp_histUpdateInput, sy_mngr_auth_grp_histUncheckedUpdateInput>
    /**
     * Choose, which sy_mngr_auth_grp_hist to update.
     */
    where: sy_mngr_auth_grp_histWhereUniqueInput
  }

  /**
   * sy_mngr_auth_grp_hist updateMany
   */
  export type sy_mngr_auth_grp_histUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_mngr_auth_grp_hists.
     */
    data: XOR<sy_mngr_auth_grp_histUpdateManyMutationInput, sy_mngr_auth_grp_histUncheckedUpdateManyInput>
    /**
     * Filter which sy_mngr_auth_grp_hists to update
     */
    where?: sy_mngr_auth_grp_histWhereInput
    /**
     * Limit how many sy_mngr_auth_grp_hists to update.
     */
    limit?: number
  }

  /**
   * sy_mngr_auth_grp_hist upsert
   */
  export type sy_mngr_auth_grp_histUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp_hist
     */
    select?: sy_mngr_auth_grp_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp_hist
     */
    omit?: sy_mngr_auth_grp_histOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_mngr_auth_grp_hist to update in case it exists.
     */
    where: sy_mngr_auth_grp_histWhereUniqueInput
    /**
     * In case the sy_mngr_auth_grp_hist found by the `where` argument doesn't exist, create a new sy_mngr_auth_grp_hist with this data.
     */
    create: XOR<sy_mngr_auth_grp_histCreateInput, sy_mngr_auth_grp_histUncheckedCreateInput>
    /**
     * In case the sy_mngr_auth_grp_hist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_mngr_auth_grp_histUpdateInput, sy_mngr_auth_grp_histUncheckedUpdateInput>
  }

  /**
   * sy_mngr_auth_grp_hist delete
   */
  export type sy_mngr_auth_grp_histDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp_hist
     */
    select?: sy_mngr_auth_grp_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp_hist
     */
    omit?: sy_mngr_auth_grp_histOmit<ExtArgs> | null
    /**
     * Filter which sy_mngr_auth_grp_hist to delete.
     */
    where: sy_mngr_auth_grp_histWhereUniqueInput
  }

  /**
   * sy_mngr_auth_grp_hist deleteMany
   */
  export type sy_mngr_auth_grp_histDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_mngr_auth_grp_hists to delete
     */
    where?: sy_mngr_auth_grp_histWhereInput
    /**
     * Limit how many sy_mngr_auth_grp_hists to delete.
     */
    limit?: number
  }

  /**
   * sy_mngr_auth_grp_hist without action
   */
  export type sy_mngr_auth_grp_histDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_auth_grp_hist
     */
    select?: sy_mngr_auth_grp_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_auth_grp_hist
     */
    omit?: sy_mngr_auth_grp_histOmit<ExtArgs> | null
  }


  /**
   * Model sy_mngr_lgn_hist
   */

  export type AggregateSy_mngr_lgn_hist = {
    _count: Sy_mngr_lgn_histCountAggregateOutputType | null
    _avg: Sy_mngr_lgn_histAvgAggregateOutputType | null
    _sum: Sy_mngr_lgn_histSumAggregateOutputType | null
    _min: Sy_mngr_lgn_histMinAggregateOutputType | null
    _max: Sy_mngr_lgn_histMaxAggregateOutputType | null
  }

  export type Sy_mngr_lgn_histAvgAggregateOutputType = {
    hist_no: number | null
    mngr_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_mngr_lgn_histSumAggregateOutputType = {
    hist_no: bigint | null
    mngr_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_mngr_lgn_histMinAggregateOutputType = {
    hist_no: bigint | null
    mngr_no: number | null
    lgn_dt: Date | null
    lgn_ip_addr: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_mngr_lgn_histMaxAggregateOutputType = {
    hist_no: bigint | null
    mngr_no: number | null
    lgn_dt: Date | null
    lgn_ip_addr: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_mngr_lgn_histCountAggregateOutputType = {
    hist_no: number
    mngr_no: number
    lgn_dt: number
    lgn_ip_addr: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sy_mngr_lgn_histAvgAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_mngr_lgn_histSumAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_mngr_lgn_histMinAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    lgn_dt?: true
    lgn_ip_addr?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_mngr_lgn_histMaxAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    lgn_dt?: true
    lgn_ip_addr?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_mngr_lgn_histCountAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    lgn_dt?: true
    lgn_ip_addr?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sy_mngr_lgn_histAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_mngr_lgn_hist to aggregate.
     */
    where?: sy_mngr_lgn_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_lgn_hists to fetch.
     */
    orderBy?: sy_mngr_lgn_histOrderByWithRelationInput | sy_mngr_lgn_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_mngr_lgn_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_lgn_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_lgn_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_mngr_lgn_hists
    **/
    _count?: true | Sy_mngr_lgn_histCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_mngr_lgn_histAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_mngr_lgn_histSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_mngr_lgn_histMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_mngr_lgn_histMaxAggregateInputType
  }

  export type GetSy_mngr_lgn_histAggregateType<T extends Sy_mngr_lgn_histAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_mngr_lgn_hist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_mngr_lgn_hist[P]>
      : GetScalarType<T[P], AggregateSy_mngr_lgn_hist[P]>
  }




  export type sy_mngr_lgn_histGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_mngr_lgn_histWhereInput
    orderBy?: sy_mngr_lgn_histOrderByWithAggregationInput | sy_mngr_lgn_histOrderByWithAggregationInput[]
    by: Sy_mngr_lgn_histScalarFieldEnum[] | Sy_mngr_lgn_histScalarFieldEnum
    having?: sy_mngr_lgn_histScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_mngr_lgn_histCountAggregateInputType | true
    _avg?: Sy_mngr_lgn_histAvgAggregateInputType
    _sum?: Sy_mngr_lgn_histSumAggregateInputType
    _min?: Sy_mngr_lgn_histMinAggregateInputType
    _max?: Sy_mngr_lgn_histMaxAggregateInputType
  }

  export type Sy_mngr_lgn_histGroupByOutputType = {
    hist_no: bigint
    mngr_no: number
    lgn_dt: Date
    lgn_ip_addr: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sy_mngr_lgn_histCountAggregateOutputType | null
    _avg: Sy_mngr_lgn_histAvgAggregateOutputType | null
    _sum: Sy_mngr_lgn_histSumAggregateOutputType | null
    _min: Sy_mngr_lgn_histMinAggregateOutputType | null
    _max: Sy_mngr_lgn_histMaxAggregateOutputType | null
  }

  type GetSy_mngr_lgn_histGroupByPayload<T extends sy_mngr_lgn_histGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_mngr_lgn_histGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_mngr_lgn_histGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_mngr_lgn_histGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_mngr_lgn_histGroupByOutputType[P]>
        }
      >
    >


  export type sy_mngr_lgn_histSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    hist_no?: boolean
    mngr_no?: boolean
    lgn_dt?: boolean
    lgn_ip_addr?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sy_mngr_lgn_hist"]>



  export type sy_mngr_lgn_histSelectScalar = {
    hist_no?: boolean
    mngr_no?: boolean
    lgn_dt?: boolean
    lgn_ip_addr?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sy_mngr_lgn_histOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"hist_no" | "mngr_no" | "lgn_dt" | "lgn_ip_addr" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sy_mngr_lgn_hist"]>

  export type $sy_mngr_lgn_histPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_mngr_lgn_hist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      hist_no: bigint
      mngr_no: number
      lgn_dt: Date
      lgn_ip_addr: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sy_mngr_lgn_hist"]>
    composites: {}
  }

  type sy_mngr_lgn_histGetPayload<S extends boolean | null | undefined | sy_mngr_lgn_histDefaultArgs> = $Result.GetResult<Prisma.$sy_mngr_lgn_histPayload, S>

  type sy_mngr_lgn_histCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_mngr_lgn_histFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_mngr_lgn_histCountAggregateInputType | true
    }

  export interface sy_mngr_lgn_histDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_mngr_lgn_hist'], meta: { name: 'sy_mngr_lgn_hist' } }
    /**
     * Find zero or one Sy_mngr_lgn_hist that matches the filter.
     * @param {sy_mngr_lgn_histFindUniqueArgs} args - Arguments to find a Sy_mngr_lgn_hist
     * @example
     * // Get one Sy_mngr_lgn_hist
     * const sy_mngr_lgn_hist = await prisma.sy_mngr_lgn_hist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_mngr_lgn_histFindUniqueArgs>(args: SelectSubset<T, sy_mngr_lgn_histFindUniqueArgs<ExtArgs>>): Prisma__sy_mngr_lgn_histClient<$Result.GetResult<Prisma.$sy_mngr_lgn_histPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_mngr_lgn_hist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_mngr_lgn_histFindUniqueOrThrowArgs} args - Arguments to find a Sy_mngr_lgn_hist
     * @example
     * // Get one Sy_mngr_lgn_hist
     * const sy_mngr_lgn_hist = await prisma.sy_mngr_lgn_hist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_mngr_lgn_histFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_mngr_lgn_histFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_mngr_lgn_histClient<$Result.GetResult<Prisma.$sy_mngr_lgn_histPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_mngr_lgn_hist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_lgn_histFindFirstArgs} args - Arguments to find a Sy_mngr_lgn_hist
     * @example
     * // Get one Sy_mngr_lgn_hist
     * const sy_mngr_lgn_hist = await prisma.sy_mngr_lgn_hist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_mngr_lgn_histFindFirstArgs>(args?: SelectSubset<T, sy_mngr_lgn_histFindFirstArgs<ExtArgs>>): Prisma__sy_mngr_lgn_histClient<$Result.GetResult<Prisma.$sy_mngr_lgn_histPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_mngr_lgn_hist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_lgn_histFindFirstOrThrowArgs} args - Arguments to find a Sy_mngr_lgn_hist
     * @example
     * // Get one Sy_mngr_lgn_hist
     * const sy_mngr_lgn_hist = await prisma.sy_mngr_lgn_hist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_mngr_lgn_histFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_mngr_lgn_histFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_mngr_lgn_histClient<$Result.GetResult<Prisma.$sy_mngr_lgn_histPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_mngr_lgn_hists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_lgn_histFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_mngr_lgn_hists
     * const sy_mngr_lgn_hists = await prisma.sy_mngr_lgn_hist.findMany()
     * 
     * // Get first 10 Sy_mngr_lgn_hists
     * const sy_mngr_lgn_hists = await prisma.sy_mngr_lgn_hist.findMany({ take: 10 })
     * 
     * // Only select the `hist_no`
     * const sy_mngr_lgn_histWithHist_noOnly = await prisma.sy_mngr_lgn_hist.findMany({ select: { hist_no: true } })
     * 
     */
    findMany<T extends sy_mngr_lgn_histFindManyArgs>(args?: SelectSubset<T, sy_mngr_lgn_histFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_mngr_lgn_histPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_mngr_lgn_hist.
     * @param {sy_mngr_lgn_histCreateArgs} args - Arguments to create a Sy_mngr_lgn_hist.
     * @example
     * // Create one Sy_mngr_lgn_hist
     * const Sy_mngr_lgn_hist = await prisma.sy_mngr_lgn_hist.create({
     *   data: {
     *     // ... data to create a Sy_mngr_lgn_hist
     *   }
     * })
     * 
     */
    create<T extends sy_mngr_lgn_histCreateArgs>(args: SelectSubset<T, sy_mngr_lgn_histCreateArgs<ExtArgs>>): Prisma__sy_mngr_lgn_histClient<$Result.GetResult<Prisma.$sy_mngr_lgn_histPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_mngr_lgn_hists.
     * @param {sy_mngr_lgn_histCreateManyArgs} args - Arguments to create many Sy_mngr_lgn_hists.
     * @example
     * // Create many Sy_mngr_lgn_hists
     * const sy_mngr_lgn_hist = await prisma.sy_mngr_lgn_hist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_mngr_lgn_histCreateManyArgs>(args?: SelectSubset<T, sy_mngr_lgn_histCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_mngr_lgn_hist.
     * @param {sy_mngr_lgn_histDeleteArgs} args - Arguments to delete one Sy_mngr_lgn_hist.
     * @example
     * // Delete one Sy_mngr_lgn_hist
     * const Sy_mngr_lgn_hist = await prisma.sy_mngr_lgn_hist.delete({
     *   where: {
     *     // ... filter to delete one Sy_mngr_lgn_hist
     *   }
     * })
     * 
     */
    delete<T extends sy_mngr_lgn_histDeleteArgs>(args: SelectSubset<T, sy_mngr_lgn_histDeleteArgs<ExtArgs>>): Prisma__sy_mngr_lgn_histClient<$Result.GetResult<Prisma.$sy_mngr_lgn_histPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_mngr_lgn_hist.
     * @param {sy_mngr_lgn_histUpdateArgs} args - Arguments to update one Sy_mngr_lgn_hist.
     * @example
     * // Update one Sy_mngr_lgn_hist
     * const sy_mngr_lgn_hist = await prisma.sy_mngr_lgn_hist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_mngr_lgn_histUpdateArgs>(args: SelectSubset<T, sy_mngr_lgn_histUpdateArgs<ExtArgs>>): Prisma__sy_mngr_lgn_histClient<$Result.GetResult<Prisma.$sy_mngr_lgn_histPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_mngr_lgn_hists.
     * @param {sy_mngr_lgn_histDeleteManyArgs} args - Arguments to filter Sy_mngr_lgn_hists to delete.
     * @example
     * // Delete a few Sy_mngr_lgn_hists
     * const { count } = await prisma.sy_mngr_lgn_hist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_mngr_lgn_histDeleteManyArgs>(args?: SelectSubset<T, sy_mngr_lgn_histDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_mngr_lgn_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_lgn_histUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_mngr_lgn_hists
     * const sy_mngr_lgn_hist = await prisma.sy_mngr_lgn_hist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_mngr_lgn_histUpdateManyArgs>(args: SelectSubset<T, sy_mngr_lgn_histUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_mngr_lgn_hist.
     * @param {sy_mngr_lgn_histUpsertArgs} args - Arguments to update or create a Sy_mngr_lgn_hist.
     * @example
     * // Update or create a Sy_mngr_lgn_hist
     * const sy_mngr_lgn_hist = await prisma.sy_mngr_lgn_hist.upsert({
     *   create: {
     *     // ... data to create a Sy_mngr_lgn_hist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_mngr_lgn_hist we want to update
     *   }
     * })
     */
    upsert<T extends sy_mngr_lgn_histUpsertArgs>(args: SelectSubset<T, sy_mngr_lgn_histUpsertArgs<ExtArgs>>): Prisma__sy_mngr_lgn_histClient<$Result.GetResult<Prisma.$sy_mngr_lgn_histPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_mngr_lgn_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_lgn_histCountArgs} args - Arguments to filter Sy_mngr_lgn_hists to count.
     * @example
     * // Count the number of Sy_mngr_lgn_hists
     * const count = await prisma.sy_mngr_lgn_hist.count({
     *   where: {
     *     // ... the filter for the Sy_mngr_lgn_hists we want to count
     *   }
     * })
    **/
    count<T extends sy_mngr_lgn_histCountArgs>(
      args?: Subset<T, sy_mngr_lgn_histCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_mngr_lgn_histCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_mngr_lgn_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_mngr_lgn_histAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_mngr_lgn_histAggregateArgs>(args: Subset<T, Sy_mngr_lgn_histAggregateArgs>): Prisma.PrismaPromise<GetSy_mngr_lgn_histAggregateType<T>>

    /**
     * Group by Sy_mngr_lgn_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_lgn_histGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_mngr_lgn_histGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_mngr_lgn_histGroupByArgs['orderBy'] }
        : { orderBy?: sy_mngr_lgn_histGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_mngr_lgn_histGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_mngr_lgn_histGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_mngr_lgn_hist model
   */
  readonly fields: sy_mngr_lgn_histFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_mngr_lgn_hist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_mngr_lgn_histClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_mngr_lgn_hist model
   */
  interface sy_mngr_lgn_histFieldRefs {
    readonly hist_no: FieldRef<"sy_mngr_lgn_hist", 'BigInt'>
    readonly mngr_no: FieldRef<"sy_mngr_lgn_hist", 'Int'>
    readonly lgn_dt: FieldRef<"sy_mngr_lgn_hist", 'DateTime'>
    readonly lgn_ip_addr: FieldRef<"sy_mngr_lgn_hist", 'String'>
    readonly regr_no: FieldRef<"sy_mngr_lgn_hist", 'Int'>
    readonly reg_dt: FieldRef<"sy_mngr_lgn_hist", 'DateTime'>
    readonly modr_no: FieldRef<"sy_mngr_lgn_hist", 'Int'>
    readonly mod_dt: FieldRef<"sy_mngr_lgn_hist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sy_mngr_lgn_hist findUnique
   */
  export type sy_mngr_lgn_histFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_lgn_hist
     */
    select?: sy_mngr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_lgn_hist
     */
    omit?: sy_mngr_lgn_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_lgn_hist to fetch.
     */
    where: sy_mngr_lgn_histWhereUniqueInput
  }

  /**
   * sy_mngr_lgn_hist findUniqueOrThrow
   */
  export type sy_mngr_lgn_histFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_lgn_hist
     */
    select?: sy_mngr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_lgn_hist
     */
    omit?: sy_mngr_lgn_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_lgn_hist to fetch.
     */
    where: sy_mngr_lgn_histWhereUniqueInput
  }

  /**
   * sy_mngr_lgn_hist findFirst
   */
  export type sy_mngr_lgn_histFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_lgn_hist
     */
    select?: sy_mngr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_lgn_hist
     */
    omit?: sy_mngr_lgn_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_lgn_hist to fetch.
     */
    where?: sy_mngr_lgn_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_lgn_hists to fetch.
     */
    orderBy?: sy_mngr_lgn_histOrderByWithRelationInput | sy_mngr_lgn_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_mngr_lgn_hists.
     */
    cursor?: sy_mngr_lgn_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_lgn_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_lgn_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_mngr_lgn_hists.
     */
    distinct?: Sy_mngr_lgn_histScalarFieldEnum | Sy_mngr_lgn_histScalarFieldEnum[]
  }

  /**
   * sy_mngr_lgn_hist findFirstOrThrow
   */
  export type sy_mngr_lgn_histFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_lgn_hist
     */
    select?: sy_mngr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_lgn_hist
     */
    omit?: sy_mngr_lgn_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_lgn_hist to fetch.
     */
    where?: sy_mngr_lgn_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_lgn_hists to fetch.
     */
    orderBy?: sy_mngr_lgn_histOrderByWithRelationInput | sy_mngr_lgn_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_mngr_lgn_hists.
     */
    cursor?: sy_mngr_lgn_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_lgn_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_lgn_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_mngr_lgn_hists.
     */
    distinct?: Sy_mngr_lgn_histScalarFieldEnum | Sy_mngr_lgn_histScalarFieldEnum[]
  }

  /**
   * sy_mngr_lgn_hist findMany
   */
  export type sy_mngr_lgn_histFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_lgn_hist
     */
    select?: sy_mngr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_lgn_hist
     */
    omit?: sy_mngr_lgn_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_lgn_hists to fetch.
     */
    where?: sy_mngr_lgn_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_lgn_hists to fetch.
     */
    orderBy?: sy_mngr_lgn_histOrderByWithRelationInput | sy_mngr_lgn_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_mngr_lgn_hists.
     */
    cursor?: sy_mngr_lgn_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_lgn_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_lgn_hists.
     */
    skip?: number
    distinct?: Sy_mngr_lgn_histScalarFieldEnum | Sy_mngr_lgn_histScalarFieldEnum[]
  }

  /**
   * sy_mngr_lgn_hist create
   */
  export type sy_mngr_lgn_histCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_lgn_hist
     */
    select?: sy_mngr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_lgn_hist
     */
    omit?: sy_mngr_lgn_histOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_mngr_lgn_hist.
     */
    data: XOR<sy_mngr_lgn_histCreateInput, sy_mngr_lgn_histUncheckedCreateInput>
  }

  /**
   * sy_mngr_lgn_hist createMany
   */
  export type sy_mngr_lgn_histCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_mngr_lgn_hists.
     */
    data: sy_mngr_lgn_histCreateManyInput | sy_mngr_lgn_histCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_mngr_lgn_hist update
   */
  export type sy_mngr_lgn_histUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_lgn_hist
     */
    select?: sy_mngr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_lgn_hist
     */
    omit?: sy_mngr_lgn_histOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_mngr_lgn_hist.
     */
    data: XOR<sy_mngr_lgn_histUpdateInput, sy_mngr_lgn_histUncheckedUpdateInput>
    /**
     * Choose, which sy_mngr_lgn_hist to update.
     */
    where: sy_mngr_lgn_histWhereUniqueInput
  }

  /**
   * sy_mngr_lgn_hist updateMany
   */
  export type sy_mngr_lgn_histUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_mngr_lgn_hists.
     */
    data: XOR<sy_mngr_lgn_histUpdateManyMutationInput, sy_mngr_lgn_histUncheckedUpdateManyInput>
    /**
     * Filter which sy_mngr_lgn_hists to update
     */
    where?: sy_mngr_lgn_histWhereInput
    /**
     * Limit how many sy_mngr_lgn_hists to update.
     */
    limit?: number
  }

  /**
   * sy_mngr_lgn_hist upsert
   */
  export type sy_mngr_lgn_histUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_lgn_hist
     */
    select?: sy_mngr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_lgn_hist
     */
    omit?: sy_mngr_lgn_histOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_mngr_lgn_hist to update in case it exists.
     */
    where: sy_mngr_lgn_histWhereUniqueInput
    /**
     * In case the sy_mngr_lgn_hist found by the `where` argument doesn't exist, create a new sy_mngr_lgn_hist with this data.
     */
    create: XOR<sy_mngr_lgn_histCreateInput, sy_mngr_lgn_histUncheckedCreateInput>
    /**
     * In case the sy_mngr_lgn_hist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_mngr_lgn_histUpdateInput, sy_mngr_lgn_histUncheckedUpdateInput>
  }

  /**
   * sy_mngr_lgn_hist delete
   */
  export type sy_mngr_lgn_histDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_lgn_hist
     */
    select?: sy_mngr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_lgn_hist
     */
    omit?: sy_mngr_lgn_histOmit<ExtArgs> | null
    /**
     * Filter which sy_mngr_lgn_hist to delete.
     */
    where: sy_mngr_lgn_histWhereUniqueInput
  }

  /**
   * sy_mngr_lgn_hist deleteMany
   */
  export type sy_mngr_lgn_histDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_mngr_lgn_hists to delete
     */
    where?: sy_mngr_lgn_histWhereInput
    /**
     * Limit how many sy_mngr_lgn_hists to delete.
     */
    limit?: number
  }

  /**
   * sy_mngr_lgn_hist without action
   */
  export type sy_mngr_lgn_histDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_lgn_hist
     */
    select?: sy_mngr_lgn_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_lgn_hist
     */
    omit?: sy_mngr_lgn_histOmit<ExtArgs> | null
  }


  /**
   * Model sy_mngr_pwd_hist
   */

  export type AggregateSy_mngr_pwd_hist = {
    _count: Sy_mngr_pwd_histCountAggregateOutputType | null
    _avg: Sy_mngr_pwd_histAvgAggregateOutputType | null
    _sum: Sy_mngr_pwd_histSumAggregateOutputType | null
    _min: Sy_mngr_pwd_histMinAggregateOutputType | null
    _max: Sy_mngr_pwd_histMaxAggregateOutputType | null
  }

  export type Sy_mngr_pwd_histAvgAggregateOutputType = {
    hist_no: number | null
    mngr_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_mngr_pwd_histSumAggregateOutputType = {
    hist_no: bigint | null
    mngr_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_mngr_pwd_histMinAggregateOutputType = {
    hist_no: bigint | null
    mngr_no: number | null
    modr_tp_cd: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_mngr_pwd_histMaxAggregateOutputType = {
    hist_no: bigint | null
    mngr_no: number | null
    modr_tp_cd: string | null
    regr_no: number | null
    reg_dt: Date | null
    modr_no: number | null
    mod_dt: Date | null
  }

  export type Sy_mngr_pwd_histCountAggregateOutputType = {
    hist_no: number
    mngr_no: number
    modr_tp_cd: number
    regr_no: number
    reg_dt: number
    modr_no: number
    mod_dt: number
    _all: number
  }


  export type Sy_mngr_pwd_histAvgAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_mngr_pwd_histSumAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_mngr_pwd_histMinAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    modr_tp_cd?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_mngr_pwd_histMaxAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    modr_tp_cd?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
  }

  export type Sy_mngr_pwd_histCountAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    modr_tp_cd?: true
    regr_no?: true
    reg_dt?: true
    modr_no?: true
    mod_dt?: true
    _all?: true
  }

  export type Sy_mngr_pwd_histAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_mngr_pwd_hist to aggregate.
     */
    where?: sy_mngr_pwd_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_pwd_hists to fetch.
     */
    orderBy?: sy_mngr_pwd_histOrderByWithRelationInput | sy_mngr_pwd_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_mngr_pwd_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_pwd_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_pwd_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_mngr_pwd_hists
    **/
    _count?: true | Sy_mngr_pwd_histCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_mngr_pwd_histAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_mngr_pwd_histSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_mngr_pwd_histMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_mngr_pwd_histMaxAggregateInputType
  }

  export type GetSy_mngr_pwd_histAggregateType<T extends Sy_mngr_pwd_histAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_mngr_pwd_hist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_mngr_pwd_hist[P]>
      : GetScalarType<T[P], AggregateSy_mngr_pwd_hist[P]>
  }




  export type sy_mngr_pwd_histGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_mngr_pwd_histWhereInput
    orderBy?: sy_mngr_pwd_histOrderByWithAggregationInput | sy_mngr_pwd_histOrderByWithAggregationInput[]
    by: Sy_mngr_pwd_histScalarFieldEnum[] | Sy_mngr_pwd_histScalarFieldEnum
    having?: sy_mngr_pwd_histScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_mngr_pwd_histCountAggregateInputType | true
    _avg?: Sy_mngr_pwd_histAvgAggregateInputType
    _sum?: Sy_mngr_pwd_histSumAggregateInputType
    _min?: Sy_mngr_pwd_histMinAggregateInputType
    _max?: Sy_mngr_pwd_histMaxAggregateInputType
  }

  export type Sy_mngr_pwd_histGroupByOutputType = {
    hist_no: bigint
    mngr_no: number
    modr_tp_cd: string
    regr_no: number
    reg_dt: Date
    modr_no: number
    mod_dt: Date
    _count: Sy_mngr_pwd_histCountAggregateOutputType | null
    _avg: Sy_mngr_pwd_histAvgAggregateOutputType | null
    _sum: Sy_mngr_pwd_histSumAggregateOutputType | null
    _min: Sy_mngr_pwd_histMinAggregateOutputType | null
    _max: Sy_mngr_pwd_histMaxAggregateOutputType | null
  }

  type GetSy_mngr_pwd_histGroupByPayload<T extends sy_mngr_pwd_histGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_mngr_pwd_histGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_mngr_pwd_histGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_mngr_pwd_histGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_mngr_pwd_histGroupByOutputType[P]>
        }
      >
    >


  export type sy_mngr_pwd_histSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    hist_no?: boolean
    mngr_no?: boolean
    modr_tp_cd?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }, ExtArgs["result"]["sy_mngr_pwd_hist"]>



  export type sy_mngr_pwd_histSelectScalar = {
    hist_no?: boolean
    mngr_no?: boolean
    modr_tp_cd?: boolean
    regr_no?: boolean
    reg_dt?: boolean
    modr_no?: boolean
    mod_dt?: boolean
  }

  export type sy_mngr_pwd_histOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"hist_no" | "mngr_no" | "modr_tp_cd" | "regr_no" | "reg_dt" | "modr_no" | "mod_dt", ExtArgs["result"]["sy_mngr_pwd_hist"]>

  export type $sy_mngr_pwd_histPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_mngr_pwd_hist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      hist_no: bigint
      mngr_no: number
      modr_tp_cd: string
      regr_no: number
      reg_dt: Date
      modr_no: number
      mod_dt: Date
    }, ExtArgs["result"]["sy_mngr_pwd_hist"]>
    composites: {}
  }

  type sy_mngr_pwd_histGetPayload<S extends boolean | null | undefined | sy_mngr_pwd_histDefaultArgs> = $Result.GetResult<Prisma.$sy_mngr_pwd_histPayload, S>

  type sy_mngr_pwd_histCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_mngr_pwd_histFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_mngr_pwd_histCountAggregateInputType | true
    }

  export interface sy_mngr_pwd_histDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_mngr_pwd_hist'], meta: { name: 'sy_mngr_pwd_hist' } }
    /**
     * Find zero or one Sy_mngr_pwd_hist that matches the filter.
     * @param {sy_mngr_pwd_histFindUniqueArgs} args - Arguments to find a Sy_mngr_pwd_hist
     * @example
     * // Get one Sy_mngr_pwd_hist
     * const sy_mngr_pwd_hist = await prisma.sy_mngr_pwd_hist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_mngr_pwd_histFindUniqueArgs>(args: SelectSubset<T, sy_mngr_pwd_histFindUniqueArgs<ExtArgs>>): Prisma__sy_mngr_pwd_histClient<$Result.GetResult<Prisma.$sy_mngr_pwd_histPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_mngr_pwd_hist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_mngr_pwd_histFindUniqueOrThrowArgs} args - Arguments to find a Sy_mngr_pwd_hist
     * @example
     * // Get one Sy_mngr_pwd_hist
     * const sy_mngr_pwd_hist = await prisma.sy_mngr_pwd_hist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_mngr_pwd_histFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_mngr_pwd_histFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_mngr_pwd_histClient<$Result.GetResult<Prisma.$sy_mngr_pwd_histPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_mngr_pwd_hist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_pwd_histFindFirstArgs} args - Arguments to find a Sy_mngr_pwd_hist
     * @example
     * // Get one Sy_mngr_pwd_hist
     * const sy_mngr_pwd_hist = await prisma.sy_mngr_pwd_hist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_mngr_pwd_histFindFirstArgs>(args?: SelectSubset<T, sy_mngr_pwd_histFindFirstArgs<ExtArgs>>): Prisma__sy_mngr_pwd_histClient<$Result.GetResult<Prisma.$sy_mngr_pwd_histPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_mngr_pwd_hist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_pwd_histFindFirstOrThrowArgs} args - Arguments to find a Sy_mngr_pwd_hist
     * @example
     * // Get one Sy_mngr_pwd_hist
     * const sy_mngr_pwd_hist = await prisma.sy_mngr_pwd_hist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_mngr_pwd_histFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_mngr_pwd_histFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_mngr_pwd_histClient<$Result.GetResult<Prisma.$sy_mngr_pwd_histPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_mngr_pwd_hists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_pwd_histFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_mngr_pwd_hists
     * const sy_mngr_pwd_hists = await prisma.sy_mngr_pwd_hist.findMany()
     * 
     * // Get first 10 Sy_mngr_pwd_hists
     * const sy_mngr_pwd_hists = await prisma.sy_mngr_pwd_hist.findMany({ take: 10 })
     * 
     * // Only select the `hist_no`
     * const sy_mngr_pwd_histWithHist_noOnly = await prisma.sy_mngr_pwd_hist.findMany({ select: { hist_no: true } })
     * 
     */
    findMany<T extends sy_mngr_pwd_histFindManyArgs>(args?: SelectSubset<T, sy_mngr_pwd_histFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_mngr_pwd_histPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_mngr_pwd_hist.
     * @param {sy_mngr_pwd_histCreateArgs} args - Arguments to create a Sy_mngr_pwd_hist.
     * @example
     * // Create one Sy_mngr_pwd_hist
     * const Sy_mngr_pwd_hist = await prisma.sy_mngr_pwd_hist.create({
     *   data: {
     *     // ... data to create a Sy_mngr_pwd_hist
     *   }
     * })
     * 
     */
    create<T extends sy_mngr_pwd_histCreateArgs>(args: SelectSubset<T, sy_mngr_pwd_histCreateArgs<ExtArgs>>): Prisma__sy_mngr_pwd_histClient<$Result.GetResult<Prisma.$sy_mngr_pwd_histPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_mngr_pwd_hists.
     * @param {sy_mngr_pwd_histCreateManyArgs} args - Arguments to create many Sy_mngr_pwd_hists.
     * @example
     * // Create many Sy_mngr_pwd_hists
     * const sy_mngr_pwd_hist = await prisma.sy_mngr_pwd_hist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_mngr_pwd_histCreateManyArgs>(args?: SelectSubset<T, sy_mngr_pwd_histCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_mngr_pwd_hist.
     * @param {sy_mngr_pwd_histDeleteArgs} args - Arguments to delete one Sy_mngr_pwd_hist.
     * @example
     * // Delete one Sy_mngr_pwd_hist
     * const Sy_mngr_pwd_hist = await prisma.sy_mngr_pwd_hist.delete({
     *   where: {
     *     // ... filter to delete one Sy_mngr_pwd_hist
     *   }
     * })
     * 
     */
    delete<T extends sy_mngr_pwd_histDeleteArgs>(args: SelectSubset<T, sy_mngr_pwd_histDeleteArgs<ExtArgs>>): Prisma__sy_mngr_pwd_histClient<$Result.GetResult<Prisma.$sy_mngr_pwd_histPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_mngr_pwd_hist.
     * @param {sy_mngr_pwd_histUpdateArgs} args - Arguments to update one Sy_mngr_pwd_hist.
     * @example
     * // Update one Sy_mngr_pwd_hist
     * const sy_mngr_pwd_hist = await prisma.sy_mngr_pwd_hist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_mngr_pwd_histUpdateArgs>(args: SelectSubset<T, sy_mngr_pwd_histUpdateArgs<ExtArgs>>): Prisma__sy_mngr_pwd_histClient<$Result.GetResult<Prisma.$sy_mngr_pwd_histPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_mngr_pwd_hists.
     * @param {sy_mngr_pwd_histDeleteManyArgs} args - Arguments to filter Sy_mngr_pwd_hists to delete.
     * @example
     * // Delete a few Sy_mngr_pwd_hists
     * const { count } = await prisma.sy_mngr_pwd_hist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_mngr_pwd_histDeleteManyArgs>(args?: SelectSubset<T, sy_mngr_pwd_histDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_mngr_pwd_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_pwd_histUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_mngr_pwd_hists
     * const sy_mngr_pwd_hist = await prisma.sy_mngr_pwd_hist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_mngr_pwd_histUpdateManyArgs>(args: SelectSubset<T, sy_mngr_pwd_histUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_mngr_pwd_hist.
     * @param {sy_mngr_pwd_histUpsertArgs} args - Arguments to update or create a Sy_mngr_pwd_hist.
     * @example
     * // Update or create a Sy_mngr_pwd_hist
     * const sy_mngr_pwd_hist = await prisma.sy_mngr_pwd_hist.upsert({
     *   create: {
     *     // ... data to create a Sy_mngr_pwd_hist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_mngr_pwd_hist we want to update
     *   }
     * })
     */
    upsert<T extends sy_mngr_pwd_histUpsertArgs>(args: SelectSubset<T, sy_mngr_pwd_histUpsertArgs<ExtArgs>>): Prisma__sy_mngr_pwd_histClient<$Result.GetResult<Prisma.$sy_mngr_pwd_histPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_mngr_pwd_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_pwd_histCountArgs} args - Arguments to filter Sy_mngr_pwd_hists to count.
     * @example
     * // Count the number of Sy_mngr_pwd_hists
     * const count = await prisma.sy_mngr_pwd_hist.count({
     *   where: {
     *     // ... the filter for the Sy_mngr_pwd_hists we want to count
     *   }
     * })
    **/
    count<T extends sy_mngr_pwd_histCountArgs>(
      args?: Subset<T, sy_mngr_pwd_histCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_mngr_pwd_histCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_mngr_pwd_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_mngr_pwd_histAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_mngr_pwd_histAggregateArgs>(args: Subset<T, Sy_mngr_pwd_histAggregateArgs>): Prisma.PrismaPromise<GetSy_mngr_pwd_histAggregateType<T>>

    /**
     * Group by Sy_mngr_pwd_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_pwd_histGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_mngr_pwd_histGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_mngr_pwd_histGroupByArgs['orderBy'] }
        : { orderBy?: sy_mngr_pwd_histGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_mngr_pwd_histGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_mngr_pwd_histGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_mngr_pwd_hist model
   */
  readonly fields: sy_mngr_pwd_histFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_mngr_pwd_hist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_mngr_pwd_histClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_mngr_pwd_hist model
   */
  interface sy_mngr_pwd_histFieldRefs {
    readonly hist_no: FieldRef<"sy_mngr_pwd_hist", 'BigInt'>
    readonly mngr_no: FieldRef<"sy_mngr_pwd_hist", 'Int'>
    readonly modr_tp_cd: FieldRef<"sy_mngr_pwd_hist", 'String'>
    readonly regr_no: FieldRef<"sy_mngr_pwd_hist", 'Int'>
    readonly reg_dt: FieldRef<"sy_mngr_pwd_hist", 'DateTime'>
    readonly modr_no: FieldRef<"sy_mngr_pwd_hist", 'Int'>
    readonly mod_dt: FieldRef<"sy_mngr_pwd_hist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sy_mngr_pwd_hist findUnique
   */
  export type sy_mngr_pwd_histFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_pwd_hist
     */
    select?: sy_mngr_pwd_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_pwd_hist
     */
    omit?: sy_mngr_pwd_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_pwd_hist to fetch.
     */
    where: sy_mngr_pwd_histWhereUniqueInput
  }

  /**
   * sy_mngr_pwd_hist findUniqueOrThrow
   */
  export type sy_mngr_pwd_histFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_pwd_hist
     */
    select?: sy_mngr_pwd_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_pwd_hist
     */
    omit?: sy_mngr_pwd_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_pwd_hist to fetch.
     */
    where: sy_mngr_pwd_histWhereUniqueInput
  }

  /**
   * sy_mngr_pwd_hist findFirst
   */
  export type sy_mngr_pwd_histFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_pwd_hist
     */
    select?: sy_mngr_pwd_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_pwd_hist
     */
    omit?: sy_mngr_pwd_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_pwd_hist to fetch.
     */
    where?: sy_mngr_pwd_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_pwd_hists to fetch.
     */
    orderBy?: sy_mngr_pwd_histOrderByWithRelationInput | sy_mngr_pwd_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_mngr_pwd_hists.
     */
    cursor?: sy_mngr_pwd_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_pwd_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_pwd_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_mngr_pwd_hists.
     */
    distinct?: Sy_mngr_pwd_histScalarFieldEnum | Sy_mngr_pwd_histScalarFieldEnum[]
  }

  /**
   * sy_mngr_pwd_hist findFirstOrThrow
   */
  export type sy_mngr_pwd_histFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_pwd_hist
     */
    select?: sy_mngr_pwd_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_pwd_hist
     */
    omit?: sy_mngr_pwd_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_pwd_hist to fetch.
     */
    where?: sy_mngr_pwd_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_pwd_hists to fetch.
     */
    orderBy?: sy_mngr_pwd_histOrderByWithRelationInput | sy_mngr_pwd_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_mngr_pwd_hists.
     */
    cursor?: sy_mngr_pwd_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_pwd_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_pwd_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_mngr_pwd_hists.
     */
    distinct?: Sy_mngr_pwd_histScalarFieldEnum | Sy_mngr_pwd_histScalarFieldEnum[]
  }

  /**
   * sy_mngr_pwd_hist findMany
   */
  export type sy_mngr_pwd_histFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_pwd_hist
     */
    select?: sy_mngr_pwd_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_pwd_hist
     */
    omit?: sy_mngr_pwd_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_pwd_hists to fetch.
     */
    where?: sy_mngr_pwd_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_pwd_hists to fetch.
     */
    orderBy?: sy_mngr_pwd_histOrderByWithRelationInput | sy_mngr_pwd_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_mngr_pwd_hists.
     */
    cursor?: sy_mngr_pwd_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_pwd_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_pwd_hists.
     */
    skip?: number
    distinct?: Sy_mngr_pwd_histScalarFieldEnum | Sy_mngr_pwd_histScalarFieldEnum[]
  }

  /**
   * sy_mngr_pwd_hist create
   */
  export type sy_mngr_pwd_histCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_pwd_hist
     */
    select?: sy_mngr_pwd_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_pwd_hist
     */
    omit?: sy_mngr_pwd_histOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_mngr_pwd_hist.
     */
    data: XOR<sy_mngr_pwd_histCreateInput, sy_mngr_pwd_histUncheckedCreateInput>
  }

  /**
   * sy_mngr_pwd_hist createMany
   */
  export type sy_mngr_pwd_histCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_mngr_pwd_hists.
     */
    data: sy_mngr_pwd_histCreateManyInput | sy_mngr_pwd_histCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_mngr_pwd_hist update
   */
  export type sy_mngr_pwd_histUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_pwd_hist
     */
    select?: sy_mngr_pwd_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_pwd_hist
     */
    omit?: sy_mngr_pwd_histOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_mngr_pwd_hist.
     */
    data: XOR<sy_mngr_pwd_histUpdateInput, sy_mngr_pwd_histUncheckedUpdateInput>
    /**
     * Choose, which sy_mngr_pwd_hist to update.
     */
    where: sy_mngr_pwd_histWhereUniqueInput
  }

  /**
   * sy_mngr_pwd_hist updateMany
   */
  export type sy_mngr_pwd_histUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_mngr_pwd_hists.
     */
    data: XOR<sy_mngr_pwd_histUpdateManyMutationInput, sy_mngr_pwd_histUncheckedUpdateManyInput>
    /**
     * Filter which sy_mngr_pwd_hists to update
     */
    where?: sy_mngr_pwd_histWhereInput
    /**
     * Limit how many sy_mngr_pwd_hists to update.
     */
    limit?: number
  }

  /**
   * sy_mngr_pwd_hist upsert
   */
  export type sy_mngr_pwd_histUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_pwd_hist
     */
    select?: sy_mngr_pwd_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_pwd_hist
     */
    omit?: sy_mngr_pwd_histOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_mngr_pwd_hist to update in case it exists.
     */
    where: sy_mngr_pwd_histWhereUniqueInput
    /**
     * In case the sy_mngr_pwd_hist found by the `where` argument doesn't exist, create a new sy_mngr_pwd_hist with this data.
     */
    create: XOR<sy_mngr_pwd_histCreateInput, sy_mngr_pwd_histUncheckedCreateInput>
    /**
     * In case the sy_mngr_pwd_hist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_mngr_pwd_histUpdateInput, sy_mngr_pwd_histUncheckedUpdateInput>
  }

  /**
   * sy_mngr_pwd_hist delete
   */
  export type sy_mngr_pwd_histDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_pwd_hist
     */
    select?: sy_mngr_pwd_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_pwd_hist
     */
    omit?: sy_mngr_pwd_histOmit<ExtArgs> | null
    /**
     * Filter which sy_mngr_pwd_hist to delete.
     */
    where: sy_mngr_pwd_histWhereUniqueInput
  }

  /**
   * sy_mngr_pwd_hist deleteMany
   */
  export type sy_mngr_pwd_histDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_mngr_pwd_hists to delete
     */
    where?: sy_mngr_pwd_histWhereInput
    /**
     * Limit how many sy_mngr_pwd_hists to delete.
     */
    limit?: number
  }

  /**
   * sy_mngr_pwd_hist without action
   */
  export type sy_mngr_pwd_histDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_pwd_hist
     */
    select?: sy_mngr_pwd_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_pwd_hist
     */
    omit?: sy_mngr_pwd_histOmit<ExtArgs> | null
  }


  /**
   * Model sy_mngr_req_hist
   */

  export type AggregateSy_mngr_req_hist = {
    _count: Sy_mngr_req_histCountAggregateOutputType | null
    _avg: Sy_mngr_req_histAvgAggregateOutputType | null
    _sum: Sy_mngr_req_histSumAggregateOutputType | null
    _min: Sy_mngr_req_histMinAggregateOutputType | null
    _max: Sy_mngr_req_histMaxAggregateOutputType | null
  }

  export type Sy_mngr_req_histAvgAggregateOutputType = {
    hist_no: number | null
    mngr_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_mngr_req_histSumAggregateOutputType = {
    hist_no: bigint | null
    mngr_no: number | null
    regr_no: number | null
    modr_no: number | null
  }

  export type Sy_mngr_req_histMinAggregateOutputType = {
    hist_no: bigint | null
    mngr_no: number | null
    mngr_nm: string | null
    auth_grp_nm: string | null
    ip_addr: string | null
    req_uri: string | null
    req_method: string | null
    req_body: string | null
    reg_dt: Date | null
    regr_no: number | null
    mod_dt: Date | null
    modr_no: number | null
  }

  export type Sy_mngr_req_histMaxAggregateOutputType = {
    hist_no: bigint | null
    mngr_no: number | null
    mngr_nm: string | null
    auth_grp_nm: string | null
    ip_addr: string | null
    req_uri: string | null
    req_method: string | null
    req_body: string | null
    reg_dt: Date | null
    regr_no: number | null
    mod_dt: Date | null
    modr_no: number | null
  }

  export type Sy_mngr_req_histCountAggregateOutputType = {
    hist_no: number
    mngr_no: number
    mngr_nm: number
    auth_grp_nm: number
    ip_addr: number
    req_uri: number
    req_method: number
    req_body: number
    reg_dt: number
    regr_no: number
    mod_dt: number
    modr_no: number
    _all: number
  }


  export type Sy_mngr_req_histAvgAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_mngr_req_histSumAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    regr_no?: true
    modr_no?: true
  }

  export type Sy_mngr_req_histMinAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    mngr_nm?: true
    auth_grp_nm?: true
    ip_addr?: true
    req_uri?: true
    req_method?: true
    req_body?: true
    reg_dt?: true
    regr_no?: true
    mod_dt?: true
    modr_no?: true
  }

  export type Sy_mngr_req_histMaxAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    mngr_nm?: true
    auth_grp_nm?: true
    ip_addr?: true
    req_uri?: true
    req_method?: true
    req_body?: true
    reg_dt?: true
    regr_no?: true
    mod_dt?: true
    modr_no?: true
  }

  export type Sy_mngr_req_histCountAggregateInputType = {
    hist_no?: true
    mngr_no?: true
    mngr_nm?: true
    auth_grp_nm?: true
    ip_addr?: true
    req_uri?: true
    req_method?: true
    req_body?: true
    reg_dt?: true
    regr_no?: true
    mod_dt?: true
    modr_no?: true
    _all?: true
  }

  export type Sy_mngr_req_histAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_mngr_req_hist to aggregate.
     */
    where?: sy_mngr_req_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_req_hists to fetch.
     */
    orderBy?: sy_mngr_req_histOrderByWithRelationInput | sy_mngr_req_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sy_mngr_req_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_req_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_req_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sy_mngr_req_hists
    **/
    _count?: true | Sy_mngr_req_histCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sy_mngr_req_histAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sy_mngr_req_histSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sy_mngr_req_histMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sy_mngr_req_histMaxAggregateInputType
  }

  export type GetSy_mngr_req_histAggregateType<T extends Sy_mngr_req_histAggregateArgs> = {
        [P in keyof T & keyof AggregateSy_mngr_req_hist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSy_mngr_req_hist[P]>
      : GetScalarType<T[P], AggregateSy_mngr_req_hist[P]>
  }




  export type sy_mngr_req_histGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sy_mngr_req_histWhereInput
    orderBy?: sy_mngr_req_histOrderByWithAggregationInput | sy_mngr_req_histOrderByWithAggregationInput[]
    by: Sy_mngr_req_histScalarFieldEnum[] | Sy_mngr_req_histScalarFieldEnum
    having?: sy_mngr_req_histScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sy_mngr_req_histCountAggregateInputType | true
    _avg?: Sy_mngr_req_histAvgAggregateInputType
    _sum?: Sy_mngr_req_histSumAggregateInputType
    _min?: Sy_mngr_req_histMinAggregateInputType
    _max?: Sy_mngr_req_histMaxAggregateInputType
  }

  export type Sy_mngr_req_histGroupByOutputType = {
    hist_no: bigint
    mngr_no: number
    mngr_nm: string
    auth_grp_nm: string
    ip_addr: string
    req_uri: string
    req_method: string | null
    req_body: string | null
    reg_dt: Date | null
    regr_no: number | null
    mod_dt: Date | null
    modr_no: number | null
    _count: Sy_mngr_req_histCountAggregateOutputType | null
    _avg: Sy_mngr_req_histAvgAggregateOutputType | null
    _sum: Sy_mngr_req_histSumAggregateOutputType | null
    _min: Sy_mngr_req_histMinAggregateOutputType | null
    _max: Sy_mngr_req_histMaxAggregateOutputType | null
  }

  type GetSy_mngr_req_histGroupByPayload<T extends sy_mngr_req_histGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sy_mngr_req_histGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sy_mngr_req_histGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sy_mngr_req_histGroupByOutputType[P]>
            : GetScalarType<T[P], Sy_mngr_req_histGroupByOutputType[P]>
        }
      >
    >


  export type sy_mngr_req_histSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    hist_no?: boolean
    mngr_no?: boolean
    mngr_nm?: boolean
    auth_grp_nm?: boolean
    ip_addr?: boolean
    req_uri?: boolean
    req_method?: boolean
    req_body?: boolean
    reg_dt?: boolean
    regr_no?: boolean
    mod_dt?: boolean
    modr_no?: boolean
  }, ExtArgs["result"]["sy_mngr_req_hist"]>



  export type sy_mngr_req_histSelectScalar = {
    hist_no?: boolean
    mngr_no?: boolean
    mngr_nm?: boolean
    auth_grp_nm?: boolean
    ip_addr?: boolean
    req_uri?: boolean
    req_method?: boolean
    req_body?: boolean
    reg_dt?: boolean
    regr_no?: boolean
    mod_dt?: boolean
    modr_no?: boolean
  }

  export type sy_mngr_req_histOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"hist_no" | "mngr_no" | "mngr_nm" | "auth_grp_nm" | "ip_addr" | "req_uri" | "req_method" | "req_body" | "reg_dt" | "regr_no" | "mod_dt" | "modr_no", ExtArgs["result"]["sy_mngr_req_hist"]>

  export type $sy_mngr_req_histPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sy_mngr_req_hist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      hist_no: bigint
      mngr_no: number
      mngr_nm: string
      auth_grp_nm: string
      ip_addr: string
      req_uri: string
      req_method: string | null
      req_body: string | null
      reg_dt: Date | null
      regr_no: number | null
      mod_dt: Date | null
      modr_no: number | null
    }, ExtArgs["result"]["sy_mngr_req_hist"]>
    composites: {}
  }

  type sy_mngr_req_histGetPayload<S extends boolean | null | undefined | sy_mngr_req_histDefaultArgs> = $Result.GetResult<Prisma.$sy_mngr_req_histPayload, S>

  type sy_mngr_req_histCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sy_mngr_req_histFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sy_mngr_req_histCountAggregateInputType | true
    }

  export interface sy_mngr_req_histDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sy_mngr_req_hist'], meta: { name: 'sy_mngr_req_hist' } }
    /**
     * Find zero or one Sy_mngr_req_hist that matches the filter.
     * @param {sy_mngr_req_histFindUniqueArgs} args - Arguments to find a Sy_mngr_req_hist
     * @example
     * // Get one Sy_mngr_req_hist
     * const sy_mngr_req_hist = await prisma.sy_mngr_req_hist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sy_mngr_req_histFindUniqueArgs>(args: SelectSubset<T, sy_mngr_req_histFindUniqueArgs<ExtArgs>>): Prisma__sy_mngr_req_histClient<$Result.GetResult<Prisma.$sy_mngr_req_histPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sy_mngr_req_hist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sy_mngr_req_histFindUniqueOrThrowArgs} args - Arguments to find a Sy_mngr_req_hist
     * @example
     * // Get one Sy_mngr_req_hist
     * const sy_mngr_req_hist = await prisma.sy_mngr_req_hist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sy_mngr_req_histFindUniqueOrThrowArgs>(args: SelectSubset<T, sy_mngr_req_histFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sy_mngr_req_histClient<$Result.GetResult<Prisma.$sy_mngr_req_histPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_mngr_req_hist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_req_histFindFirstArgs} args - Arguments to find a Sy_mngr_req_hist
     * @example
     * // Get one Sy_mngr_req_hist
     * const sy_mngr_req_hist = await prisma.sy_mngr_req_hist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sy_mngr_req_histFindFirstArgs>(args?: SelectSubset<T, sy_mngr_req_histFindFirstArgs<ExtArgs>>): Prisma__sy_mngr_req_histClient<$Result.GetResult<Prisma.$sy_mngr_req_histPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sy_mngr_req_hist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_req_histFindFirstOrThrowArgs} args - Arguments to find a Sy_mngr_req_hist
     * @example
     * // Get one Sy_mngr_req_hist
     * const sy_mngr_req_hist = await prisma.sy_mngr_req_hist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sy_mngr_req_histFindFirstOrThrowArgs>(args?: SelectSubset<T, sy_mngr_req_histFindFirstOrThrowArgs<ExtArgs>>): Prisma__sy_mngr_req_histClient<$Result.GetResult<Prisma.$sy_mngr_req_histPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sy_mngr_req_hists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_req_histFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sy_mngr_req_hists
     * const sy_mngr_req_hists = await prisma.sy_mngr_req_hist.findMany()
     * 
     * // Get first 10 Sy_mngr_req_hists
     * const sy_mngr_req_hists = await prisma.sy_mngr_req_hist.findMany({ take: 10 })
     * 
     * // Only select the `hist_no`
     * const sy_mngr_req_histWithHist_noOnly = await prisma.sy_mngr_req_hist.findMany({ select: { hist_no: true } })
     * 
     */
    findMany<T extends sy_mngr_req_histFindManyArgs>(args?: SelectSubset<T, sy_mngr_req_histFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sy_mngr_req_histPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sy_mngr_req_hist.
     * @param {sy_mngr_req_histCreateArgs} args - Arguments to create a Sy_mngr_req_hist.
     * @example
     * // Create one Sy_mngr_req_hist
     * const Sy_mngr_req_hist = await prisma.sy_mngr_req_hist.create({
     *   data: {
     *     // ... data to create a Sy_mngr_req_hist
     *   }
     * })
     * 
     */
    create<T extends sy_mngr_req_histCreateArgs>(args: SelectSubset<T, sy_mngr_req_histCreateArgs<ExtArgs>>): Prisma__sy_mngr_req_histClient<$Result.GetResult<Prisma.$sy_mngr_req_histPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sy_mngr_req_hists.
     * @param {sy_mngr_req_histCreateManyArgs} args - Arguments to create many Sy_mngr_req_hists.
     * @example
     * // Create many Sy_mngr_req_hists
     * const sy_mngr_req_hist = await prisma.sy_mngr_req_hist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sy_mngr_req_histCreateManyArgs>(args?: SelectSubset<T, sy_mngr_req_histCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sy_mngr_req_hist.
     * @param {sy_mngr_req_histDeleteArgs} args - Arguments to delete one Sy_mngr_req_hist.
     * @example
     * // Delete one Sy_mngr_req_hist
     * const Sy_mngr_req_hist = await prisma.sy_mngr_req_hist.delete({
     *   where: {
     *     // ... filter to delete one Sy_mngr_req_hist
     *   }
     * })
     * 
     */
    delete<T extends sy_mngr_req_histDeleteArgs>(args: SelectSubset<T, sy_mngr_req_histDeleteArgs<ExtArgs>>): Prisma__sy_mngr_req_histClient<$Result.GetResult<Prisma.$sy_mngr_req_histPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sy_mngr_req_hist.
     * @param {sy_mngr_req_histUpdateArgs} args - Arguments to update one Sy_mngr_req_hist.
     * @example
     * // Update one Sy_mngr_req_hist
     * const sy_mngr_req_hist = await prisma.sy_mngr_req_hist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sy_mngr_req_histUpdateArgs>(args: SelectSubset<T, sy_mngr_req_histUpdateArgs<ExtArgs>>): Prisma__sy_mngr_req_histClient<$Result.GetResult<Prisma.$sy_mngr_req_histPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sy_mngr_req_hists.
     * @param {sy_mngr_req_histDeleteManyArgs} args - Arguments to filter Sy_mngr_req_hists to delete.
     * @example
     * // Delete a few Sy_mngr_req_hists
     * const { count } = await prisma.sy_mngr_req_hist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sy_mngr_req_histDeleteManyArgs>(args?: SelectSubset<T, sy_mngr_req_histDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sy_mngr_req_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_req_histUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sy_mngr_req_hists
     * const sy_mngr_req_hist = await prisma.sy_mngr_req_hist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sy_mngr_req_histUpdateManyArgs>(args: SelectSubset<T, sy_mngr_req_histUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sy_mngr_req_hist.
     * @param {sy_mngr_req_histUpsertArgs} args - Arguments to update or create a Sy_mngr_req_hist.
     * @example
     * // Update or create a Sy_mngr_req_hist
     * const sy_mngr_req_hist = await prisma.sy_mngr_req_hist.upsert({
     *   create: {
     *     // ... data to create a Sy_mngr_req_hist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sy_mngr_req_hist we want to update
     *   }
     * })
     */
    upsert<T extends sy_mngr_req_histUpsertArgs>(args: SelectSubset<T, sy_mngr_req_histUpsertArgs<ExtArgs>>): Prisma__sy_mngr_req_histClient<$Result.GetResult<Prisma.$sy_mngr_req_histPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sy_mngr_req_hists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_req_histCountArgs} args - Arguments to filter Sy_mngr_req_hists to count.
     * @example
     * // Count the number of Sy_mngr_req_hists
     * const count = await prisma.sy_mngr_req_hist.count({
     *   where: {
     *     // ... the filter for the Sy_mngr_req_hists we want to count
     *   }
     * })
    **/
    count<T extends sy_mngr_req_histCountArgs>(
      args?: Subset<T, sy_mngr_req_histCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sy_mngr_req_histCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sy_mngr_req_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sy_mngr_req_histAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sy_mngr_req_histAggregateArgs>(args: Subset<T, Sy_mngr_req_histAggregateArgs>): Prisma.PrismaPromise<GetSy_mngr_req_histAggregateType<T>>

    /**
     * Group by Sy_mngr_req_hist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sy_mngr_req_histGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sy_mngr_req_histGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sy_mngr_req_histGroupByArgs['orderBy'] }
        : { orderBy?: sy_mngr_req_histGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sy_mngr_req_histGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSy_mngr_req_histGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sy_mngr_req_hist model
   */
  readonly fields: sy_mngr_req_histFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sy_mngr_req_hist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sy_mngr_req_histClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sy_mngr_req_hist model
   */
  interface sy_mngr_req_histFieldRefs {
    readonly hist_no: FieldRef<"sy_mngr_req_hist", 'BigInt'>
    readonly mngr_no: FieldRef<"sy_mngr_req_hist", 'Int'>
    readonly mngr_nm: FieldRef<"sy_mngr_req_hist", 'String'>
    readonly auth_grp_nm: FieldRef<"sy_mngr_req_hist", 'String'>
    readonly ip_addr: FieldRef<"sy_mngr_req_hist", 'String'>
    readonly req_uri: FieldRef<"sy_mngr_req_hist", 'String'>
    readonly req_method: FieldRef<"sy_mngr_req_hist", 'String'>
    readonly req_body: FieldRef<"sy_mngr_req_hist", 'String'>
    readonly reg_dt: FieldRef<"sy_mngr_req_hist", 'DateTime'>
    readonly regr_no: FieldRef<"sy_mngr_req_hist", 'Int'>
    readonly mod_dt: FieldRef<"sy_mngr_req_hist", 'DateTime'>
    readonly modr_no: FieldRef<"sy_mngr_req_hist", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * sy_mngr_req_hist findUnique
   */
  export type sy_mngr_req_histFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_req_hist
     */
    select?: sy_mngr_req_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_req_hist
     */
    omit?: sy_mngr_req_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_req_hist to fetch.
     */
    where: sy_mngr_req_histWhereUniqueInput
  }

  /**
   * sy_mngr_req_hist findUniqueOrThrow
   */
  export type sy_mngr_req_histFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_req_hist
     */
    select?: sy_mngr_req_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_req_hist
     */
    omit?: sy_mngr_req_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_req_hist to fetch.
     */
    where: sy_mngr_req_histWhereUniqueInput
  }

  /**
   * sy_mngr_req_hist findFirst
   */
  export type sy_mngr_req_histFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_req_hist
     */
    select?: sy_mngr_req_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_req_hist
     */
    omit?: sy_mngr_req_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_req_hist to fetch.
     */
    where?: sy_mngr_req_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_req_hists to fetch.
     */
    orderBy?: sy_mngr_req_histOrderByWithRelationInput | sy_mngr_req_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_mngr_req_hists.
     */
    cursor?: sy_mngr_req_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_req_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_req_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_mngr_req_hists.
     */
    distinct?: Sy_mngr_req_histScalarFieldEnum | Sy_mngr_req_histScalarFieldEnum[]
  }

  /**
   * sy_mngr_req_hist findFirstOrThrow
   */
  export type sy_mngr_req_histFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_req_hist
     */
    select?: sy_mngr_req_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_req_hist
     */
    omit?: sy_mngr_req_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_req_hist to fetch.
     */
    where?: sy_mngr_req_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_req_hists to fetch.
     */
    orderBy?: sy_mngr_req_histOrderByWithRelationInput | sy_mngr_req_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sy_mngr_req_hists.
     */
    cursor?: sy_mngr_req_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_req_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_req_hists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sy_mngr_req_hists.
     */
    distinct?: Sy_mngr_req_histScalarFieldEnum | Sy_mngr_req_histScalarFieldEnum[]
  }

  /**
   * sy_mngr_req_hist findMany
   */
  export type sy_mngr_req_histFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_req_hist
     */
    select?: sy_mngr_req_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_req_hist
     */
    omit?: sy_mngr_req_histOmit<ExtArgs> | null
    /**
     * Filter, which sy_mngr_req_hists to fetch.
     */
    where?: sy_mngr_req_histWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sy_mngr_req_hists to fetch.
     */
    orderBy?: sy_mngr_req_histOrderByWithRelationInput | sy_mngr_req_histOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sy_mngr_req_hists.
     */
    cursor?: sy_mngr_req_histWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sy_mngr_req_hists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sy_mngr_req_hists.
     */
    skip?: number
    distinct?: Sy_mngr_req_histScalarFieldEnum | Sy_mngr_req_histScalarFieldEnum[]
  }

  /**
   * sy_mngr_req_hist create
   */
  export type sy_mngr_req_histCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_req_hist
     */
    select?: sy_mngr_req_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_req_hist
     */
    omit?: sy_mngr_req_histOmit<ExtArgs> | null
    /**
     * The data needed to create a sy_mngr_req_hist.
     */
    data: XOR<sy_mngr_req_histCreateInput, sy_mngr_req_histUncheckedCreateInput>
  }

  /**
   * sy_mngr_req_hist createMany
   */
  export type sy_mngr_req_histCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sy_mngr_req_hists.
     */
    data: sy_mngr_req_histCreateManyInput | sy_mngr_req_histCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sy_mngr_req_hist update
   */
  export type sy_mngr_req_histUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_req_hist
     */
    select?: sy_mngr_req_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_req_hist
     */
    omit?: sy_mngr_req_histOmit<ExtArgs> | null
    /**
     * The data needed to update a sy_mngr_req_hist.
     */
    data: XOR<sy_mngr_req_histUpdateInput, sy_mngr_req_histUncheckedUpdateInput>
    /**
     * Choose, which sy_mngr_req_hist to update.
     */
    where: sy_mngr_req_histWhereUniqueInput
  }

  /**
   * sy_mngr_req_hist updateMany
   */
  export type sy_mngr_req_histUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sy_mngr_req_hists.
     */
    data: XOR<sy_mngr_req_histUpdateManyMutationInput, sy_mngr_req_histUncheckedUpdateManyInput>
    /**
     * Filter which sy_mngr_req_hists to update
     */
    where?: sy_mngr_req_histWhereInput
    /**
     * Limit how many sy_mngr_req_hists to update.
     */
    limit?: number
  }

  /**
   * sy_mngr_req_hist upsert
   */
  export type sy_mngr_req_histUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_req_hist
     */
    select?: sy_mngr_req_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_req_hist
     */
    omit?: sy_mngr_req_histOmit<ExtArgs> | null
    /**
     * The filter to search for the sy_mngr_req_hist to update in case it exists.
     */
    where: sy_mngr_req_histWhereUniqueInput
    /**
     * In case the sy_mngr_req_hist found by the `where` argument doesn't exist, create a new sy_mngr_req_hist with this data.
     */
    create: XOR<sy_mngr_req_histCreateInput, sy_mngr_req_histUncheckedCreateInput>
    /**
     * In case the sy_mngr_req_hist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sy_mngr_req_histUpdateInput, sy_mngr_req_histUncheckedUpdateInput>
  }

  /**
   * sy_mngr_req_hist delete
   */
  export type sy_mngr_req_histDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_req_hist
     */
    select?: sy_mngr_req_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_req_hist
     */
    omit?: sy_mngr_req_histOmit<ExtArgs> | null
    /**
     * Filter which sy_mngr_req_hist to delete.
     */
    where: sy_mngr_req_histWhereUniqueInput
  }

  /**
   * sy_mngr_req_hist deleteMany
   */
  export type sy_mngr_req_histDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sy_mngr_req_hists to delete
     */
    where?: sy_mngr_req_histWhereInput
    /**
     * Limit how many sy_mngr_req_hists to delete.
     */
    limit?: number
  }

  /**
   * sy_mngr_req_hist without action
   */
  export type sy_mngr_req_histDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sy_mngr_req_hist
     */
    select?: sy_mngr_req_histSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sy_mngr_req_hist
     */
    omit?: sy_mngr_req_histOmit<ExtArgs> | null
  }


  /**
   * Model test_user
   */

  export type AggregateTest_user = {
    _count: Test_userCountAggregateOutputType | null
    _avg: Test_userAvgAggregateOutputType | null
    _sum: Test_userSumAggregateOutputType | null
    _min: Test_userMinAggregateOutputType | null
    _max: Test_userMaxAggregateOutputType | null
  }

  export type Test_userAvgAggregateOutputType = {
    user_no: number | null
  }

  export type Test_userSumAggregateOutputType = {
    user_no: number | null
  }

  export type Test_userMinAggregateOutputType = {
    user_no: number | null
    id: string | null
    pw: string | null
    salt_val: string | null
    auth_token: string | null
    kakao_user_token: string | null
    comp_code: string | null
    name: string | null
    gender: $Enums.test_user_gender | null
    birth_date: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Test_userMaxAggregateOutputType = {
    user_no: number | null
    id: string | null
    pw: string | null
    salt_val: string | null
    auth_token: string | null
    kakao_user_token: string | null
    comp_code: string | null
    name: string | null
    gender: $Enums.test_user_gender | null
    birth_date: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Test_userCountAggregateOutputType = {
    user_no: number
    id: number
    pw: number
    salt_val: number
    auth_token: number
    kakao_user_token: number
    comp_code: number
    name: number
    gender: number
    birth_date: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Test_userAvgAggregateInputType = {
    user_no?: true
  }

  export type Test_userSumAggregateInputType = {
    user_no?: true
  }

  export type Test_userMinAggregateInputType = {
    user_no?: true
    id?: true
    pw?: true
    salt_val?: true
    auth_token?: true
    kakao_user_token?: true
    comp_code?: true
    name?: true
    gender?: true
    birth_date?: true
    created_at?: true
    updated_at?: true
  }

  export type Test_userMaxAggregateInputType = {
    user_no?: true
    id?: true
    pw?: true
    salt_val?: true
    auth_token?: true
    kakao_user_token?: true
    comp_code?: true
    name?: true
    gender?: true
    birth_date?: true
    created_at?: true
    updated_at?: true
  }

  export type Test_userCountAggregateInputType = {
    user_no?: true
    id?: true
    pw?: true
    salt_val?: true
    auth_token?: true
    kakao_user_token?: true
    comp_code?: true
    name?: true
    gender?: true
    birth_date?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Test_userAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which test_user to aggregate.
     */
    where?: test_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of test_users to fetch.
     */
    orderBy?: test_userOrderByWithRelationInput | test_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: test_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` test_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` test_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned test_users
    **/
    _count?: true | Test_userCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Test_userAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Test_userSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Test_userMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Test_userMaxAggregateInputType
  }

  export type GetTest_userAggregateType<T extends Test_userAggregateArgs> = {
        [P in keyof T & keyof AggregateTest_user]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTest_user[P]>
      : GetScalarType<T[P], AggregateTest_user[P]>
  }




  export type test_userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: test_userWhereInput
    orderBy?: test_userOrderByWithAggregationInput | test_userOrderByWithAggregationInput[]
    by: Test_userScalarFieldEnum[] | Test_userScalarFieldEnum
    having?: test_userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Test_userCountAggregateInputType | true
    _avg?: Test_userAvgAggregateInputType
    _sum?: Test_userSumAggregateInputType
    _min?: Test_userMinAggregateInputType
    _max?: Test_userMaxAggregateInputType
  }

  export type Test_userGroupByOutputType = {
    user_no: number
    id: string
    pw: string
    salt_val: string | null
    auth_token: string | null
    kakao_user_token: string | null
    comp_code: string | null
    name: string | null
    gender: $Enums.test_user_gender | null
    birth_date: Date | null
    created_at: Date | null
    updated_at: Date | null
    _count: Test_userCountAggregateOutputType | null
    _avg: Test_userAvgAggregateOutputType | null
    _sum: Test_userSumAggregateOutputType | null
    _min: Test_userMinAggregateOutputType | null
    _max: Test_userMaxAggregateOutputType | null
  }

  type GetTest_userGroupByPayload<T extends test_userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Test_userGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Test_userGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Test_userGroupByOutputType[P]>
            : GetScalarType<T[P], Test_userGroupByOutputType[P]>
        }
      >
    >


  export type test_userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_no?: boolean
    id?: boolean
    pw?: boolean
    salt_val?: boolean
    auth_token?: boolean
    kakao_user_token?: boolean
    comp_code?: boolean
    name?: boolean
    gender?: boolean
    birth_date?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["test_user"]>



  export type test_userSelectScalar = {
    user_no?: boolean
    id?: boolean
    pw?: boolean
    salt_val?: boolean
    auth_token?: boolean
    kakao_user_token?: boolean
    comp_code?: boolean
    name?: boolean
    gender?: boolean
    birth_date?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type test_userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_no" | "id" | "pw" | "salt_val" | "auth_token" | "kakao_user_token" | "comp_code" | "name" | "gender" | "birth_date" | "created_at" | "updated_at", ExtArgs["result"]["test_user"]>

  export type $test_userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "test_user"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      user_no: number
      id: string
      pw: string
      salt_val: string | null
      auth_token: string | null
      kakao_user_token: string | null
      comp_code: string | null
      name: string | null
      gender: $Enums.test_user_gender | null
      birth_date: Date | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["test_user"]>
    composites: {}
  }

  type test_userGetPayload<S extends boolean | null | undefined | test_userDefaultArgs> = $Result.GetResult<Prisma.$test_userPayload, S>

  type test_userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<test_userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Test_userCountAggregateInputType | true
    }

  export interface test_userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['test_user'], meta: { name: 'test_user' } }
    /**
     * Find zero or one Test_user that matches the filter.
     * @param {test_userFindUniqueArgs} args - Arguments to find a Test_user
     * @example
     * // Get one Test_user
     * const test_user = await prisma.test_user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends test_userFindUniqueArgs>(args: SelectSubset<T, test_userFindUniqueArgs<ExtArgs>>): Prisma__test_userClient<$Result.GetResult<Prisma.$test_userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Test_user that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {test_userFindUniqueOrThrowArgs} args - Arguments to find a Test_user
     * @example
     * // Get one Test_user
     * const test_user = await prisma.test_user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends test_userFindUniqueOrThrowArgs>(args: SelectSubset<T, test_userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__test_userClient<$Result.GetResult<Prisma.$test_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Test_user that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_userFindFirstArgs} args - Arguments to find a Test_user
     * @example
     * // Get one Test_user
     * const test_user = await prisma.test_user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends test_userFindFirstArgs>(args?: SelectSubset<T, test_userFindFirstArgs<ExtArgs>>): Prisma__test_userClient<$Result.GetResult<Prisma.$test_userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Test_user that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_userFindFirstOrThrowArgs} args - Arguments to find a Test_user
     * @example
     * // Get one Test_user
     * const test_user = await prisma.test_user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends test_userFindFirstOrThrowArgs>(args?: SelectSubset<T, test_userFindFirstOrThrowArgs<ExtArgs>>): Prisma__test_userClient<$Result.GetResult<Prisma.$test_userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Test_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Test_users
     * const test_users = await prisma.test_user.findMany()
     * 
     * // Get first 10 Test_users
     * const test_users = await prisma.test_user.findMany({ take: 10 })
     * 
     * // Only select the `user_no`
     * const test_userWithUser_noOnly = await prisma.test_user.findMany({ select: { user_no: true } })
     * 
     */
    findMany<T extends test_userFindManyArgs>(args?: SelectSubset<T, test_userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$test_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Test_user.
     * @param {test_userCreateArgs} args - Arguments to create a Test_user.
     * @example
     * // Create one Test_user
     * const Test_user = await prisma.test_user.create({
     *   data: {
     *     // ... data to create a Test_user
     *   }
     * })
     * 
     */
    create<T extends test_userCreateArgs>(args: SelectSubset<T, test_userCreateArgs<ExtArgs>>): Prisma__test_userClient<$Result.GetResult<Prisma.$test_userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Test_users.
     * @param {test_userCreateManyArgs} args - Arguments to create many Test_users.
     * @example
     * // Create many Test_users
     * const test_user = await prisma.test_user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends test_userCreateManyArgs>(args?: SelectSubset<T, test_userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Test_user.
     * @param {test_userDeleteArgs} args - Arguments to delete one Test_user.
     * @example
     * // Delete one Test_user
     * const Test_user = await prisma.test_user.delete({
     *   where: {
     *     // ... filter to delete one Test_user
     *   }
     * })
     * 
     */
    delete<T extends test_userDeleteArgs>(args: SelectSubset<T, test_userDeleteArgs<ExtArgs>>): Prisma__test_userClient<$Result.GetResult<Prisma.$test_userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Test_user.
     * @param {test_userUpdateArgs} args - Arguments to update one Test_user.
     * @example
     * // Update one Test_user
     * const test_user = await prisma.test_user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends test_userUpdateArgs>(args: SelectSubset<T, test_userUpdateArgs<ExtArgs>>): Prisma__test_userClient<$Result.GetResult<Prisma.$test_userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Test_users.
     * @param {test_userDeleteManyArgs} args - Arguments to filter Test_users to delete.
     * @example
     * // Delete a few Test_users
     * const { count } = await prisma.test_user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends test_userDeleteManyArgs>(args?: SelectSubset<T, test_userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Test_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Test_users
     * const test_user = await prisma.test_user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends test_userUpdateManyArgs>(args: SelectSubset<T, test_userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Test_user.
     * @param {test_userUpsertArgs} args - Arguments to update or create a Test_user.
     * @example
     * // Update or create a Test_user
     * const test_user = await prisma.test_user.upsert({
     *   create: {
     *     // ... data to create a Test_user
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Test_user we want to update
     *   }
     * })
     */
    upsert<T extends test_userUpsertArgs>(args: SelectSubset<T, test_userUpsertArgs<ExtArgs>>): Prisma__test_userClient<$Result.GetResult<Prisma.$test_userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Test_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_userCountArgs} args - Arguments to filter Test_users to count.
     * @example
     * // Count the number of Test_users
     * const count = await prisma.test_user.count({
     *   where: {
     *     // ... the filter for the Test_users we want to count
     *   }
     * })
    **/
    count<T extends test_userCountArgs>(
      args?: Subset<T, test_userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Test_userCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Test_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Test_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Test_userAggregateArgs>(args: Subset<T, Test_userAggregateArgs>): Prisma.PrismaPromise<GetTest_userAggregateType<T>>

    /**
     * Group by Test_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends test_userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: test_userGroupByArgs['orderBy'] }
        : { orderBy?: test_userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, test_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTest_userGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the test_user model
   */
  readonly fields: test_userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for test_user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__test_userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the test_user model
   */
  interface test_userFieldRefs {
    readonly user_no: FieldRef<"test_user", 'Int'>
    readonly id: FieldRef<"test_user", 'String'>
    readonly pw: FieldRef<"test_user", 'String'>
    readonly salt_val: FieldRef<"test_user", 'String'>
    readonly auth_token: FieldRef<"test_user", 'String'>
    readonly kakao_user_token: FieldRef<"test_user", 'String'>
    readonly comp_code: FieldRef<"test_user", 'String'>
    readonly name: FieldRef<"test_user", 'String'>
    readonly gender: FieldRef<"test_user", 'test_user_gender'>
    readonly birth_date: FieldRef<"test_user", 'DateTime'>
    readonly created_at: FieldRef<"test_user", 'DateTime'>
    readonly updated_at: FieldRef<"test_user", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * test_user findUnique
   */
  export type test_userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_user
     */
    select?: test_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_user
     */
    omit?: test_userOmit<ExtArgs> | null
    /**
     * Filter, which test_user to fetch.
     */
    where: test_userWhereUniqueInput
  }

  /**
   * test_user findUniqueOrThrow
   */
  export type test_userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_user
     */
    select?: test_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_user
     */
    omit?: test_userOmit<ExtArgs> | null
    /**
     * Filter, which test_user to fetch.
     */
    where: test_userWhereUniqueInput
  }

  /**
   * test_user findFirst
   */
  export type test_userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_user
     */
    select?: test_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_user
     */
    omit?: test_userOmit<ExtArgs> | null
    /**
     * Filter, which test_user to fetch.
     */
    where?: test_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of test_users to fetch.
     */
    orderBy?: test_userOrderByWithRelationInput | test_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for test_users.
     */
    cursor?: test_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` test_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` test_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of test_users.
     */
    distinct?: Test_userScalarFieldEnum | Test_userScalarFieldEnum[]
  }

  /**
   * test_user findFirstOrThrow
   */
  export type test_userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_user
     */
    select?: test_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_user
     */
    omit?: test_userOmit<ExtArgs> | null
    /**
     * Filter, which test_user to fetch.
     */
    where?: test_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of test_users to fetch.
     */
    orderBy?: test_userOrderByWithRelationInput | test_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for test_users.
     */
    cursor?: test_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` test_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` test_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of test_users.
     */
    distinct?: Test_userScalarFieldEnum | Test_userScalarFieldEnum[]
  }

  /**
   * test_user findMany
   */
  export type test_userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_user
     */
    select?: test_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_user
     */
    omit?: test_userOmit<ExtArgs> | null
    /**
     * Filter, which test_users to fetch.
     */
    where?: test_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of test_users to fetch.
     */
    orderBy?: test_userOrderByWithRelationInput | test_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing test_users.
     */
    cursor?: test_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` test_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` test_users.
     */
    skip?: number
    distinct?: Test_userScalarFieldEnum | Test_userScalarFieldEnum[]
  }

  /**
   * test_user create
   */
  export type test_userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_user
     */
    select?: test_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_user
     */
    omit?: test_userOmit<ExtArgs> | null
    /**
     * The data needed to create a test_user.
     */
    data: XOR<test_userCreateInput, test_userUncheckedCreateInput>
  }

  /**
   * test_user createMany
   */
  export type test_userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many test_users.
     */
    data: test_userCreateManyInput | test_userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * test_user update
   */
  export type test_userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_user
     */
    select?: test_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_user
     */
    omit?: test_userOmit<ExtArgs> | null
    /**
     * The data needed to update a test_user.
     */
    data: XOR<test_userUpdateInput, test_userUncheckedUpdateInput>
    /**
     * Choose, which test_user to update.
     */
    where: test_userWhereUniqueInput
  }

  /**
   * test_user updateMany
   */
  export type test_userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update test_users.
     */
    data: XOR<test_userUpdateManyMutationInput, test_userUncheckedUpdateManyInput>
    /**
     * Filter which test_users to update
     */
    where?: test_userWhereInput
    /**
     * Limit how many test_users to update.
     */
    limit?: number
  }

  /**
   * test_user upsert
   */
  export type test_userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_user
     */
    select?: test_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_user
     */
    omit?: test_userOmit<ExtArgs> | null
    /**
     * The filter to search for the test_user to update in case it exists.
     */
    where: test_userWhereUniqueInput
    /**
     * In case the test_user found by the `where` argument doesn't exist, create a new test_user with this data.
     */
    create: XOR<test_userCreateInput, test_userUncheckedCreateInput>
    /**
     * In case the test_user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<test_userUpdateInput, test_userUncheckedUpdateInput>
  }

  /**
   * test_user delete
   */
  export type test_userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_user
     */
    select?: test_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_user
     */
    omit?: test_userOmit<ExtArgs> | null
    /**
     * Filter which test_user to delete.
     */
    where: test_userWhereUniqueInput
  }

  /**
   * test_user deleteMany
   */
  export type test_userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which test_users to delete
     */
    where?: test_userWhereInput
    /**
     * Limit how many test_users to delete.
     */
    limit?: number
  }

  /**
   * test_user without action
   */
  export type test_userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_user
     */
    select?: test_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_user
     */
    omit?: test_userOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Aim_example_testScalarFieldEnum: {
    no: 'no',
    col1: 'col1',
    col2: 'col2',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Aim_example_testScalarFieldEnum = (typeof Aim_example_testScalarFieldEnum)[keyof typeof Aim_example_testScalarFieldEnum]


  export const Sc_mbrScalarFieldEnum: {
    mbr_no: 'mbr_no',
    clco_no: 'clco_no',
    clco_dept_cd: 'clco_dept_cd',
    emp_no: 'emp_no',
    mbr_id: 'mbr_id',
    mbr_pswd: 'mbr_pswd',
    mbr_nm: 'mbr_nm',
    brdt: 'brdt',
    gen_cd: 'gen_cd',
    mbph_no: 'mbph_no',
    email_addr: 'email_addr',
    fail_pswd_cnt: 'fail_pswd_cnt',
    join_dt: 'join_dt',
    rcnt_cntn_dt: 'rcnt_cntn_dt',
    drmc_cnvs_dt: 'drmc_cnvs_dt',
    chge_pswd_dt: 'chge_pswd_dt',
    mbr_stts_cd: 'mbr_stts_cd',
    tmnl_tkn_val: 'tmnl_tkn_val',
    tmnl_os_nm: 'tmnl_os_nm',
    tmnl_app_ver_nm: 'tmnl_app_ver_nm',
    last_tmnl_sync_dt: 'last_tmnl_sync_dt',
    aos_permission: 'aos_permission',
    push_status: 'push_status',
    mbr_photo_file_mng_no: 'mbr_photo_file_mng_no',
    app_prgrs_stag_val: 'app_prgrs_stag_val',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt',
    out_tp_cd: 'out_tp_cd',
    out_tp_ttl: 'out_tp_ttl',
    out_join_dt: 'out_join_dt',
    mbr_sctn_cd: 'mbr_sctn_cd'
  };

  export type Sc_mbrScalarFieldEnum = (typeof Sc_mbrScalarFieldEnum)[keyof typeof Sc_mbrScalarFieldEnum]


  export const Sc_mbr_lgn_histScalarFieldEnum: {
    hist_no: 'hist_no',
    mbr_no: 'mbr_no',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sc_mbr_lgn_histScalarFieldEnum = (typeof Sc_mbr_lgn_histScalarFieldEnum)[keyof typeof Sc_mbr_lgn_histScalarFieldEnum]


  export const Sc_mbr_logScalarFieldEnum: {
    log_no: 'log_no',
    log_cd: 'log_cd',
    mbr_no: 'mbr_no',
    uri: 'uri',
    origin: 'origin',
    desc: 'desc',
    reg_dt: 'reg_dt'
  };

  export type Sc_mbr_logScalarFieldEnum = (typeof Sc_mbr_logScalarFieldEnum)[keyof typeof Sc_mbr_logScalarFieldEnum]


  export const Sc_mbr_prjtScalarFieldEnum: {
    mbr_no: 'mbr_no',
    prjt_no: 'prjt_no',
    prtpnt_sctn_cd: 'prtpnt_sctn_cd',
    prgrs_stop_tf: 'prgrs_stop_tf',
    prgrs_stop_dt: 'prgrs_stop_dt',
    prgrs_stop_caus_desc: 'prgrs_stop_caus_desc',
    ptcp_bgng_ymd: 'ptcp_bgng_ymd',
    ptcp_end_ymd: 'ptcp_end_ymd',
    frst_bmi_val: 'frst_bmi_val',
    end_bmi_val: 'end_bmi_val',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sc_mbr_prjtScalarFieldEnum = (typeof Sc_mbr_prjtScalarFieldEnum)[keyof typeof Sc_mbr_prjtScalarFieldEnum]


  export const Sc_mbr_trms_agr_histScalarFieldEnum: {
    mbr_no: 'mbr_no',
    trms_no: 'trms_no',
    agr_dt: 'agr_dt',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sc_mbr_trms_agr_histScalarFieldEnum = (typeof Sc_mbr_trms_agr_histScalarFieldEnum)[keyof typeof Sc_mbr_trms_agr_histScalarFieldEnum]


  export const Sc_mbr_trms_agr_scr_histScalarFieldEnum: {
    agr_no: 'agr_no',
    clco_no: 'clco_no',
    emp_no: 'emp_no',
    trms_no: 'trms_no',
    agr_dt: 'agr_dt',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sc_mbr_trms_agr_scr_histScalarFieldEnum = (typeof Sc_mbr_trms_agr_scr_histScalarFieldEnum)[keyof typeof Sc_mbr_trms_agr_scr_histScalarFieldEnum]


  export const Sc_prjtScalarFieldEnum: {
    prjt_no: 'prjt_no',
    clco_no: 'clco_no',
    prjt_nm: 'prjt_nm',
    prjt_stts_cd: 'prjt_stts_cd',
    prtc_aply_stng_tf: 'prtc_aply_stng_tf',
    prtc_aply_bgng_dt: 'prtc_aply_bgng_dt',
    prtc_aply_end_dt: 'prtc_aply_end_dt',
    rsvt_stng_tf: 'rsvt_stng_tf',
    prjt_bgng_dt: 'prjt_bgng_dt',
    prjt_end_dt: 'prjt_end_dt',
    main_logo_file_mng_no: 'main_logo_file_mng_no',
    bgng_mebi_no: 'bgng_mebi_no',
    cmps_prgm_cnt: 'cmps_prgm_cnt',
    gnrl_prtpnt_cnt: 'gnrl_prtpnt_cnt',
    mng_prtpnt_cnt: 'mng_prtpnt_cnt',
    gnrl_fnsr_cnt: 'gnrl_fnsr_cnt',
    mng_fnsr_cnt: 'mng_fnsr_cnt',
    main_clr_val: 'main_clr_val',
    sub_clr_val: 'sub_clr_val',
    add_clr_val: 'add_clr_val',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sc_prjtScalarFieldEnum = (typeof Sc_prjtScalarFieldEnum)[keyof typeof Sc_prjtScalarFieldEnum]


  export const Sc_token_histScalarFieldEnum: {
    token_num: 'token_num',
    access_token: 'access_token',
    expiration_time: 'expiration_time',
    reg_dt: 'reg_dt',
    mod_dt: 'mod_dt'
  };

  export type Sc_token_histScalarFieldEnum = (typeof Sc_token_histScalarFieldEnum)[keyof typeof Sc_token_histScalarFieldEnum]


  export const Sv_faqScalarFieldEnum: {
    faq_no: 'faq_no',
    clco_no: 'clco_no',
    progm_no: 'progm_no',
    faq_cate_cd: 'faq_cate_cd',
    expsr_div: 'expsr_div',
    expsr_tf: 'expsr_tf',
    uprw_fix_tf: 'uprw_fix_tf',
    faq_ttl: 'faq_ttl',
    faq_cont: 'faq_cont',
    srch_weight: 'srch_weight',
    mngr_memo: 'mngr_memo',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_faqScalarFieldEnum = (typeof Sv_faqScalarFieldEnum)[keyof typeof Sv_faqScalarFieldEnum]


  export const Sv_faq_atch_fileScalarFieldEnum: {
    faq_file_no: 'faq_file_no',
    faq_no: 'faq_no',
    atch_file_mng_no: 'atch_file_mng_no',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_faq_atch_fileScalarFieldEnum = (typeof Sv_faq_atch_fileScalarFieldEnum)[keyof typeof Sv_faq_atch_fileScalarFieldEnum]


  export const Sv_faq_cate_cdScalarFieldEnum: {
    progm_no: 'progm_no',
    cd: 'cd',
    cd_nm: 'cd_nm',
    cd_desc: 'cd_desc',
    grp_cd: 'grp_cd',
    clco_no: 'clco_no',
    sort_seq: 'sort_seq',
    use_tf: 'use_tf',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_faq_cate_cdScalarFieldEnum = (typeof Sv_faq_cate_cdScalarFieldEnum)[keyof typeof Sv_faq_cate_cdScalarFieldEnum]


  export const Sv_faq_keywordScalarFieldEnum: {
    faq_no: 'faq_no',
    keyword: 'keyword',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_faq_keywordScalarFieldEnum = (typeof Sv_faq_keywordScalarFieldEnum)[keyof typeof Sv_faq_keywordScalarFieldEnum]


  export const Sv_faq_rel_faqScalarFieldEnum: {
    faq_no: 'faq_no',
    rel_faq_no: 'rel_faq_no',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_faq_rel_faqScalarFieldEnum = (typeof Sv_faq_rel_faqScalarFieldEnum)[keyof typeof Sv_faq_rel_faqScalarFieldEnum]


  export const Sv_inqScalarFieldEnum: {
    inq_no: 'inq_no',
    inq_mbr_no: 'inq_mbr_no',
    clco_no: 'clco_no',
    clco_dept_cd: 'clco_dept_cd',
    inq_clsf_no: 'inq_clsf_no',
    inq_ttl: 'inq_ttl',
    inq_cont: 'inq_cont',
    rls_tf: 'rls_tf',
    ans_stts_cd: 'ans_stts_cd',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_inqScalarFieldEnum = (typeof Sv_inqScalarFieldEnum)[keyof typeof Sv_inqScalarFieldEnum]


  export const Sv_inq_ansScalarFieldEnum: {
    ans_no: 'ans_no',
    inq_no: 'inq_no',
    ans_mngr_no: 'ans_mngr_no',
    ans_cont: 'ans_cont',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_inq_ansScalarFieldEnum = (typeof Sv_inq_ansScalarFieldEnum)[keyof typeof Sv_inq_ansScalarFieldEnum]


  export const Sv_inq_atch_fileScalarFieldEnum: {
    atch_file_no: 'atch_file_no',
    inq_no: 'inq_no',
    atch_file_mng_no: 'atch_file_mng_no',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_inq_atch_fileScalarFieldEnum = (typeof Sv_inq_atch_fileScalarFieldEnum)[keyof typeof Sv_inq_atch_fileScalarFieldEnum]


  export const Sv_inq_clsfScalarFieldEnum: {
    inq_clsf_no: 'inq_clsf_no',
    clco_no: 'clco_no',
    inq_clsf_nm: 'inq_clsf_nm',
    expsr_seq: 'expsr_seq',
    use_tf: 'use_tf',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_inq_clsfScalarFieldEnum = (typeof Sv_inq_clsfScalarFieldEnum)[keyof typeof Sv_inq_clsfScalarFieldEnum]


  export const Sv_ntcScalarFieldEnum: {
    ntc_no: 'ntc_no',
    clco_no: 'clco_no',
    prjt_no: 'prjt_no',
    expsr_tf: 'expsr_tf',
    uprw_fix_tf: 'uprw_fix_tf',
    ntc_ttl: 'ntc_ttl',
    expsr_end_dt_stng_tf: 'expsr_end_dt_stng_tf',
    expsr_bgng_dt: 'expsr_bgng_dt',
    expsr_end_dt: 'expsr_end_dt',
    ntc_cont: 'ntc_cont',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_ntcScalarFieldEnum = (typeof Sv_ntcScalarFieldEnum)[keyof typeof Sv_ntcScalarFieldEnum]


  export const Sv_ntc_atch_fileScalarFieldEnum: {
    atch_file_no: 'atch_file_no',
    ntc_no: 'ntc_no',
    atch_file_mng_no: 'atch_file_mng_no',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_ntc_atch_fileScalarFieldEnum = (typeof Sv_ntc_atch_fileScalarFieldEnum)[keyof typeof Sv_ntc_atch_fileScalarFieldEnum]


  export const Sv_popupScalarFieldEnum: {
    popup_no: 'popup_no',
    clco_no: 'clco_no',
    prjt_no: 'prjt_no',
    ttl: 'ttl',
    expsr_tf: 'expsr_tf',
    expsr_bgng_ymd: 'expsr_bgng_ymd',
    expsr_end_ymd: 'expsr_end_ymd',
    img_file_mng_no: 'img_file_mng_no',
    cls_btn_use_tf: 'cls_btn_use_tf',
    re_expsr_phbt_cd: 're_expsr_phbt_cd',
    btn_stng_cd: 'btn_stng_cd',
    popup_tp_cd: 'popup_tp_cd',
    dtl_url: 'dtl_url',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_popupScalarFieldEnum = (typeof Sv_popupScalarFieldEnum)[keyof typeof Sv_popupScalarFieldEnum]


  export const Sv_progmScalarFieldEnum: {
    progm_no: 'progm_no',
    clco_no: 'clco_no',
    progm_nm: 'progm_nm',
    mngr_memo: 'mngr_memo',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_progmScalarFieldEnum = (typeof Sv_progmScalarFieldEnum)[keyof typeof Sv_progmScalarFieldEnum]


  export const Sv_sms_sndngScalarFieldEnum: {
    sms_sndng_no: 'sms_sndng_no',
    sndng_trgt_cd: 'sndng_trgt_cd',
    sms_ttl: 'sms_ttl',
    sms_cont: 'sms_cont',
    atch_img_file_mng_no: 'atch_img_file_mng_no',
    sndng_tp_cd: 'sndng_tp_cd',
    rsvt_sndng_dt: 'rsvt_sndng_dt',
    sndng_stts_cd: 'sndng_stts_cd',
    ttlt_sndng_cnt: 'ttlt_sndng_cnt',
    sndng_fail_cnt: 'sndng_fail_cnt',
    rcptn_idnty_cnt: 'rcptn_idnty_cnt',
    clco_no: 'clco_no',
    prjt_no: 'prjt_no',
    prgm_no: 'prgm_no',
    week: 'week',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_sms_sndngScalarFieldEnum = (typeof Sv_sms_sndngScalarFieldEnum)[keyof typeof Sv_sms_sndngScalarFieldEnum]


  export const Sv_sms_tmplScalarFieldEnum: {
    sms_tmpl_no: 'sms_tmpl_no',
    sms_tmpl_sctn_cd: 'sms_tmpl_sctn_cd',
    sms_ttl: 'sms_ttl',
    sms_cont: 'sms_cont',
    atch_img_file_mng_no: 'atch_img_file_mng_no',
    aim_trgt_tf: 'aim_trgt_tf',
    clco_trgt_tf: 'clco_trgt_tf',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sv_sms_tmplScalarFieldEnum = (typeof Sv_sms_tmplScalarFieldEnum)[keyof typeof Sv_sms_tmplScalarFieldEnum]


  export const Sv_trmsScalarFieldEnum: {
    trms_no: 'trms_no',
    clco_no: 'clco_no',
    trms_knd_cd: 'trms_knd_cd',
    esntl_agr_tf: 'esntl_agr_tf',
    sort_seq: 'sort_seq',
    trms_cont: 'trms_cont',
    use_tf: 'use_tf',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt',
    trms_ttl: 'trms_ttl'
  };

  export type Sv_trmsScalarFieldEnum = (typeof Sv_trmsScalarFieldEnum)[keyof typeof Sv_trmsScalarFieldEnum]


  export const Sv_trms_histScalarFieldEnum: {
    hist_no: 'hist_no',
    trms_no: 'trms_no',
    clco_no: 'clco_no',
    trms_knd_cd: 'trms_knd_cd',
    esntl_agr_tf: 'esntl_agr_tf',
    sort_seq: 'sort_seq',
    trms_cont: 'trms_cont',
    use_tf: 'use_tf',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt',
    trms_ttl: 'trms_ttl'
  };

  export type Sv_trms_histScalarFieldEnum = (typeof Sv_trms_histScalarFieldEnum)[keyof typeof Sv_trms_histScalarFieldEnum]


  export const Sy_atch_file_mngScalarFieldEnum: {
    file_mng_no: 'file_mng_no',
    file_path_nm: 'file_path_nm',
    uld_file_nm: 'uld_file_nm',
    strg_file_nm: 'strg_file_nm',
    file_sz: 'file_sz',
    extn_nm: 'extn_nm',
    mbr_no: 'mbr_no',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sy_atch_file_mngScalarFieldEnum = (typeof Sy_atch_file_mngScalarFieldEnum)[keyof typeof Sy_atch_file_mngScalarFieldEnum]


  export const Sy_authScalarFieldEnum: {
    auth_no: 'auth_no',
    auth_trgt_sctn_cd: 'auth_trgt_sctn_cd',
    auth_grnt_sctn_cd: 'auth_grnt_sctn_cd',
    scrn_no: 'scrn_no',
    menu_no: 'menu_no',
    auth_yn: 'auth_yn',
    auth_grp_no: 'auth_grp_no',
    mngr_no: 'mngr_no',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sy_authScalarFieldEnum = (typeof Sy_authScalarFieldEnum)[keyof typeof Sy_authScalarFieldEnum]


  export const Sy_auth_grpScalarFieldEnum: {
    auth_grp_no: 'auth_grp_no',
    auth_grp_nm: 'auth_grp_nm',
    auth_grp_sctn_cd: 'auth_grp_sctn_cd',
    auth_grp_desc: 'auth_grp_desc',
    use_tf: 'use_tf',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sy_auth_grpScalarFieldEnum = (typeof Sy_auth_grpScalarFieldEnum)[keyof typeof Sy_auth_grpScalarFieldEnum]


  export const Sy_clcoScalarFieldEnum: {
    clco_no: 'clco_no',
    clco_nm: 'clco_nm',
    clco_sctn_cd: 'clco_sctn_cd',
    use_url: 'use_url',
    hlth_rsrv_url: 'hlth_rsrv_url',
    use_bgng_ymd: 'use_bgng_ymd',
    use_end_ymd: 'use_end_ymd',
    use_stts_cd: 'use_stts_cd',
    pic_nm: 'pic_nm',
    pic_dept_nm: 'pic_dept_nm',
    pic_telno: 'pic_telno',
    b2b_type: 'b2b_type',
    comp_code: 'comp_code',
    bot_code: 'bot_code',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sy_clcoScalarFieldEnum = (typeof Sy_clcoScalarFieldEnum)[keyof typeof Sy_clcoScalarFieldEnum]


  export const Sy_clco_deptScalarFieldEnum: {
    clco_no: 'clco_no',
    clco_dept_cd: 'clco_dept_cd',
    clco_dept_nm: 'clco_dept_nm',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sy_clco_deptScalarFieldEnum = (typeof Sy_clco_deptScalarFieldEnum)[keyof typeof Sy_clco_deptScalarFieldEnum]


  export const Sy_dtl_cdScalarFieldEnum: {
    grp_cd: 'grp_cd',
    cd: 'cd',
    cd_nm: 'cd_nm',
    cd_desc: 'cd_desc',
    sort_seq: 'sort_seq',
    use_tf: 'use_tf',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sy_dtl_cdScalarFieldEnum = (typeof Sy_dtl_cdScalarFieldEnum)[keyof typeof Sy_dtl_cdScalarFieldEnum]


  export const Sy_excel_histScalarFieldEnum: {
    hist_no: 'hist_no',
    file_nm: 'file_nm',
    row_cnt: 'row_cnt',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt'
  };

  export type Sy_excel_histScalarFieldEnum = (typeof Sy_excel_histScalarFieldEnum)[keyof typeof Sy_excel_histScalarFieldEnum]


  export const Sy_grp_cdScalarFieldEnum: {
    grp_cd: 'grp_cd',
    grp_cd_nm: 'grp_cd_nm',
    grp_cd_desc: 'grp_cd_desc',
    use_tf: 'use_tf',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sy_grp_cdScalarFieldEnum = (typeof Sy_grp_cdScalarFieldEnum)[keyof typeof Sy_grp_cdScalarFieldEnum]


  export const Sy_menuScalarFieldEnum: {
    menu_no: 'menu_no',
    menu_nm: 'menu_nm',
    use_tf: 'use_tf',
    expsr_tf: 'expsr_tf',
    indct_seq: 'indct_seq',
    menu_desc: 'menu_desc',
    up_menu_no: 'up_menu_no',
    note_cont: 'note_cont',
    link_scrn_no: 'link_scrn_no',
    icon_nm: 'icon_nm',
    menu_url: 'menu_url',
    vrsn: 'vrsn',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sy_menuScalarFieldEnum = (typeof Sy_menuScalarFieldEnum)[keyof typeof Sy_menuScalarFieldEnum]


  export const Sy_mngrScalarFieldEnum: {
    mngr_no: 'mngr_no',
    mngr_id: 'mngr_id',
    mngr_pswd: 'mngr_pswd',
    mngr_nm: 'mngr_nm',
    mngr_sctn_cd: 'mngr_sctn_cd',
    mngr_stts_cd: 'mngr_stts_cd',
    email: 'email',
    mbph_no: 'mbph_no',
    use_tf: 'use_tf',
    clco_no: 'clco_no',
    clco_dept_cd: 'clco_dept_cd',
    use_bgng_ymd: 'use_bgng_ymd',
    use_end_ymd: 'use_end_ymd',
    salt_val: 'salt_val',
    cnsr_sctn_cd: 'cnsr_sctn_cd',
    fail_cnt: 'fail_cnt',
    auth_suces_tf: 'auth_suces_tf',
    auth_key: 'auth_key',
    auth_token: 'auth_token',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt',
    regr_no: 'regr_no'
  };

  export type Sy_mngrScalarFieldEnum = (typeof Sy_mngrScalarFieldEnum)[keyof typeof Sy_mngrScalarFieldEnum]


  export const Sy_mngr_auth_grpScalarFieldEnum: {
    mngr_no: 'mngr_no',
    auth_grp_no: 'auth_grp_no',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sy_mngr_auth_grpScalarFieldEnum = (typeof Sy_mngr_auth_grpScalarFieldEnum)[keyof typeof Sy_mngr_auth_grpScalarFieldEnum]


  export const Sy_mngr_auth_grp_histScalarFieldEnum: {
    hist_no: 'hist_no',
    mngr_no: 'mngr_no',
    auth_grp_no: 'auth_grp_no',
    type: 'type',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt',
    regr_no: 'regr_no'
  };

  export type Sy_mngr_auth_grp_histScalarFieldEnum = (typeof Sy_mngr_auth_grp_histScalarFieldEnum)[keyof typeof Sy_mngr_auth_grp_histScalarFieldEnum]


  export const Sy_mngr_lgn_histScalarFieldEnum: {
    hist_no: 'hist_no',
    mngr_no: 'mngr_no',
    lgn_dt: 'lgn_dt',
    lgn_ip_addr: 'lgn_ip_addr',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sy_mngr_lgn_histScalarFieldEnum = (typeof Sy_mngr_lgn_histScalarFieldEnum)[keyof typeof Sy_mngr_lgn_histScalarFieldEnum]


  export const Sy_mngr_pwd_histScalarFieldEnum: {
    hist_no: 'hist_no',
    mngr_no: 'mngr_no',
    modr_tp_cd: 'modr_tp_cd',
    regr_no: 'regr_no',
    reg_dt: 'reg_dt',
    modr_no: 'modr_no',
    mod_dt: 'mod_dt'
  };

  export type Sy_mngr_pwd_histScalarFieldEnum = (typeof Sy_mngr_pwd_histScalarFieldEnum)[keyof typeof Sy_mngr_pwd_histScalarFieldEnum]


  export const Sy_mngr_req_histScalarFieldEnum: {
    hist_no: 'hist_no',
    mngr_no: 'mngr_no',
    mngr_nm: 'mngr_nm',
    auth_grp_nm: 'auth_grp_nm',
    ip_addr: 'ip_addr',
    req_uri: 'req_uri',
    req_method: 'req_method',
    req_body: 'req_body',
    reg_dt: 'reg_dt',
    regr_no: 'regr_no',
    mod_dt: 'mod_dt',
    modr_no: 'modr_no'
  };

  export type Sy_mngr_req_histScalarFieldEnum = (typeof Sy_mngr_req_histScalarFieldEnum)[keyof typeof Sy_mngr_req_histScalarFieldEnum]


  export const Test_userScalarFieldEnum: {
    user_no: 'user_no',
    id: 'id',
    pw: 'pw',
    salt_val: 'salt_val',
    auth_token: 'auth_token',
    kakao_user_token: 'kakao_user_token',
    comp_code: 'comp_code',
    name: 'name',
    gender: 'gender',
    birth_date: 'birth_date',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Test_userScalarFieldEnum = (typeof Test_userScalarFieldEnum)[keyof typeof Test_userScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const aim_example_testOrderByRelevanceFieldEnum: {
    col1: 'col1',
    col2: 'col2'
  };

  export type aim_example_testOrderByRelevanceFieldEnum = (typeof aim_example_testOrderByRelevanceFieldEnum)[keyof typeof aim_example_testOrderByRelevanceFieldEnum]


  export const sc_mbrOrderByRelevanceFieldEnum: {
    clco_dept_cd: 'clco_dept_cd',
    emp_no: 'emp_no',
    mbr_id: 'mbr_id',
    mbr_pswd: 'mbr_pswd',
    mbr_nm: 'mbr_nm',
    gen_cd: 'gen_cd',
    mbph_no: 'mbph_no',
    email_addr: 'email_addr',
    mbr_stts_cd: 'mbr_stts_cd',
    tmnl_tkn_val: 'tmnl_tkn_val',
    tmnl_os_nm: 'tmnl_os_nm',
    tmnl_app_ver_nm: 'tmnl_app_ver_nm',
    app_prgrs_stag_val: 'app_prgrs_stag_val',
    out_tp_cd: 'out_tp_cd',
    out_tp_ttl: 'out_tp_ttl',
    mbr_sctn_cd: 'mbr_sctn_cd'
  };

  export type sc_mbrOrderByRelevanceFieldEnum = (typeof sc_mbrOrderByRelevanceFieldEnum)[keyof typeof sc_mbrOrderByRelevanceFieldEnum]


  export const sc_mbr_logOrderByRelevanceFieldEnum: {
    log_cd: 'log_cd',
    uri: 'uri',
    origin: 'origin',
    desc: 'desc'
  };

  export type sc_mbr_logOrderByRelevanceFieldEnum = (typeof sc_mbr_logOrderByRelevanceFieldEnum)[keyof typeof sc_mbr_logOrderByRelevanceFieldEnum]


  export const sc_mbr_prjtOrderByRelevanceFieldEnum: {
    prtpnt_sctn_cd: 'prtpnt_sctn_cd',
    prgrs_stop_tf: 'prgrs_stop_tf',
    prgrs_stop_caus_desc: 'prgrs_stop_caus_desc'
  };

  export type sc_mbr_prjtOrderByRelevanceFieldEnum = (typeof sc_mbr_prjtOrderByRelevanceFieldEnum)[keyof typeof sc_mbr_prjtOrderByRelevanceFieldEnum]


  export const sc_mbr_trms_agr_scr_histOrderByRelevanceFieldEnum: {
    emp_no: 'emp_no'
  };

  export type sc_mbr_trms_agr_scr_histOrderByRelevanceFieldEnum = (typeof sc_mbr_trms_agr_scr_histOrderByRelevanceFieldEnum)[keyof typeof sc_mbr_trms_agr_scr_histOrderByRelevanceFieldEnum]


  export const sc_prjtOrderByRelevanceFieldEnum: {
    prjt_nm: 'prjt_nm',
    prjt_stts_cd: 'prjt_stts_cd',
    prtc_aply_stng_tf: 'prtc_aply_stng_tf',
    rsvt_stng_tf: 'rsvt_stng_tf',
    main_clr_val: 'main_clr_val',
    sub_clr_val: 'sub_clr_val',
    add_clr_val: 'add_clr_val'
  };

  export type sc_prjtOrderByRelevanceFieldEnum = (typeof sc_prjtOrderByRelevanceFieldEnum)[keyof typeof sc_prjtOrderByRelevanceFieldEnum]


  export const sc_token_histOrderByRelevanceFieldEnum: {
    access_token: 'access_token'
  };

  export type sc_token_histOrderByRelevanceFieldEnum = (typeof sc_token_histOrderByRelevanceFieldEnum)[keyof typeof sc_token_histOrderByRelevanceFieldEnum]


  export const sv_faqOrderByRelevanceFieldEnum: {
    faq_cate_cd: 'faq_cate_cd',
    expsr_div: 'expsr_div',
    expsr_tf: 'expsr_tf',
    uprw_fix_tf: 'uprw_fix_tf',
    faq_ttl: 'faq_ttl',
    faq_cont: 'faq_cont',
    mngr_memo: 'mngr_memo'
  };

  export type sv_faqOrderByRelevanceFieldEnum = (typeof sv_faqOrderByRelevanceFieldEnum)[keyof typeof sv_faqOrderByRelevanceFieldEnum]


  export const sv_faq_cate_cdOrderByRelevanceFieldEnum: {
    cd: 'cd',
    cd_nm: 'cd_nm',
    cd_desc: 'cd_desc',
    grp_cd: 'grp_cd',
    use_tf: 'use_tf'
  };

  export type sv_faq_cate_cdOrderByRelevanceFieldEnum = (typeof sv_faq_cate_cdOrderByRelevanceFieldEnum)[keyof typeof sv_faq_cate_cdOrderByRelevanceFieldEnum]


  export const sv_faq_keywordOrderByRelevanceFieldEnum: {
    keyword: 'keyword'
  };

  export type sv_faq_keywordOrderByRelevanceFieldEnum = (typeof sv_faq_keywordOrderByRelevanceFieldEnum)[keyof typeof sv_faq_keywordOrderByRelevanceFieldEnum]


  export const sv_inqOrderByRelevanceFieldEnum: {
    clco_dept_cd: 'clco_dept_cd',
    inq_ttl: 'inq_ttl',
    inq_cont: 'inq_cont',
    rls_tf: 'rls_tf',
    ans_stts_cd: 'ans_stts_cd'
  };

  export type sv_inqOrderByRelevanceFieldEnum = (typeof sv_inqOrderByRelevanceFieldEnum)[keyof typeof sv_inqOrderByRelevanceFieldEnum]


  export const sv_inq_ansOrderByRelevanceFieldEnum: {
    ans_cont: 'ans_cont'
  };

  export type sv_inq_ansOrderByRelevanceFieldEnum = (typeof sv_inq_ansOrderByRelevanceFieldEnum)[keyof typeof sv_inq_ansOrderByRelevanceFieldEnum]


  export const sv_inq_clsfOrderByRelevanceFieldEnum: {
    inq_clsf_nm: 'inq_clsf_nm',
    use_tf: 'use_tf'
  };

  export type sv_inq_clsfOrderByRelevanceFieldEnum = (typeof sv_inq_clsfOrderByRelevanceFieldEnum)[keyof typeof sv_inq_clsfOrderByRelevanceFieldEnum]


  export const sv_ntcOrderByRelevanceFieldEnum: {
    expsr_tf: 'expsr_tf',
    uprw_fix_tf: 'uprw_fix_tf',
    ntc_ttl: 'ntc_ttl',
    expsr_end_dt_stng_tf: 'expsr_end_dt_stng_tf',
    ntc_cont: 'ntc_cont'
  };

  export type sv_ntcOrderByRelevanceFieldEnum = (typeof sv_ntcOrderByRelevanceFieldEnum)[keyof typeof sv_ntcOrderByRelevanceFieldEnum]


  export const sv_popupOrderByRelevanceFieldEnum: {
    ttl: 'ttl',
    expsr_tf: 'expsr_tf',
    cls_btn_use_tf: 'cls_btn_use_tf',
    re_expsr_phbt_cd: 're_expsr_phbt_cd',
    btn_stng_cd: 'btn_stng_cd',
    popup_tp_cd: 'popup_tp_cd',
    dtl_url: 'dtl_url'
  };

  export type sv_popupOrderByRelevanceFieldEnum = (typeof sv_popupOrderByRelevanceFieldEnum)[keyof typeof sv_popupOrderByRelevanceFieldEnum]


  export const sv_progmOrderByRelevanceFieldEnum: {
    progm_nm: 'progm_nm',
    mngr_memo: 'mngr_memo'
  };

  export type sv_progmOrderByRelevanceFieldEnum = (typeof sv_progmOrderByRelevanceFieldEnum)[keyof typeof sv_progmOrderByRelevanceFieldEnum]


  export const sv_sms_sndngOrderByRelevanceFieldEnum: {
    sndng_trgt_cd: 'sndng_trgt_cd',
    sms_ttl: 'sms_ttl',
    sms_cont: 'sms_cont',
    sndng_tp_cd: 'sndng_tp_cd',
    sndng_stts_cd: 'sndng_stts_cd'
  };

  export type sv_sms_sndngOrderByRelevanceFieldEnum = (typeof sv_sms_sndngOrderByRelevanceFieldEnum)[keyof typeof sv_sms_sndngOrderByRelevanceFieldEnum]


  export const sv_sms_tmplOrderByRelevanceFieldEnum: {
    sms_tmpl_sctn_cd: 'sms_tmpl_sctn_cd',
    sms_ttl: 'sms_ttl',
    sms_cont: 'sms_cont',
    aim_trgt_tf: 'aim_trgt_tf',
    clco_trgt_tf: 'clco_trgt_tf'
  };

  export type sv_sms_tmplOrderByRelevanceFieldEnum = (typeof sv_sms_tmplOrderByRelevanceFieldEnum)[keyof typeof sv_sms_tmplOrderByRelevanceFieldEnum]


  export const sv_trmsOrderByRelevanceFieldEnum: {
    trms_knd_cd: 'trms_knd_cd',
    esntl_agr_tf: 'esntl_agr_tf',
    trms_cont: 'trms_cont',
    use_tf: 'use_tf',
    trms_ttl: 'trms_ttl'
  };

  export type sv_trmsOrderByRelevanceFieldEnum = (typeof sv_trmsOrderByRelevanceFieldEnum)[keyof typeof sv_trmsOrderByRelevanceFieldEnum]


  export const sv_trms_histOrderByRelevanceFieldEnum: {
    trms_knd_cd: 'trms_knd_cd',
    esntl_agr_tf: 'esntl_agr_tf',
    trms_cont: 'trms_cont',
    use_tf: 'use_tf',
    trms_ttl: 'trms_ttl'
  };

  export type sv_trms_histOrderByRelevanceFieldEnum = (typeof sv_trms_histOrderByRelevanceFieldEnum)[keyof typeof sv_trms_histOrderByRelevanceFieldEnum]


  export const sy_atch_file_mngOrderByRelevanceFieldEnum: {
    file_path_nm: 'file_path_nm',
    uld_file_nm: 'uld_file_nm',
    strg_file_nm: 'strg_file_nm',
    extn_nm: 'extn_nm'
  };

  export type sy_atch_file_mngOrderByRelevanceFieldEnum = (typeof sy_atch_file_mngOrderByRelevanceFieldEnum)[keyof typeof sy_atch_file_mngOrderByRelevanceFieldEnum]


  export const sy_authOrderByRelevanceFieldEnum: {
    auth_trgt_sctn_cd: 'auth_trgt_sctn_cd',
    auth_grnt_sctn_cd: 'auth_grnt_sctn_cd',
    auth_yn: 'auth_yn'
  };

  export type sy_authOrderByRelevanceFieldEnum = (typeof sy_authOrderByRelevanceFieldEnum)[keyof typeof sy_authOrderByRelevanceFieldEnum]


  export const sy_auth_grpOrderByRelevanceFieldEnum: {
    auth_grp_nm: 'auth_grp_nm',
    auth_grp_sctn_cd: 'auth_grp_sctn_cd',
    auth_grp_desc: 'auth_grp_desc',
    use_tf: 'use_tf'
  };

  export type sy_auth_grpOrderByRelevanceFieldEnum = (typeof sy_auth_grpOrderByRelevanceFieldEnum)[keyof typeof sy_auth_grpOrderByRelevanceFieldEnum]


  export const sy_clcoOrderByRelevanceFieldEnum: {
    clco_nm: 'clco_nm',
    clco_sctn_cd: 'clco_sctn_cd',
    use_url: 'use_url',
    hlth_rsrv_url: 'hlth_rsrv_url',
    use_stts_cd: 'use_stts_cd',
    pic_nm: 'pic_nm',
    pic_dept_nm: 'pic_dept_nm',
    pic_telno: 'pic_telno',
    b2b_type: 'b2b_type',
    comp_code: 'comp_code',
    bot_code: 'bot_code'
  };

  export type sy_clcoOrderByRelevanceFieldEnum = (typeof sy_clcoOrderByRelevanceFieldEnum)[keyof typeof sy_clcoOrderByRelevanceFieldEnum]


  export const sy_clco_deptOrderByRelevanceFieldEnum: {
    clco_dept_cd: 'clco_dept_cd',
    clco_dept_nm: 'clco_dept_nm'
  };

  export type sy_clco_deptOrderByRelevanceFieldEnum = (typeof sy_clco_deptOrderByRelevanceFieldEnum)[keyof typeof sy_clco_deptOrderByRelevanceFieldEnum]


  export const sy_dtl_cdOrderByRelevanceFieldEnum: {
    grp_cd: 'grp_cd',
    cd: 'cd',
    cd_nm: 'cd_nm',
    cd_desc: 'cd_desc',
    use_tf: 'use_tf'
  };

  export type sy_dtl_cdOrderByRelevanceFieldEnum = (typeof sy_dtl_cdOrderByRelevanceFieldEnum)[keyof typeof sy_dtl_cdOrderByRelevanceFieldEnum]


  export const sy_excel_histOrderByRelevanceFieldEnum: {
    file_nm: 'file_nm'
  };

  export type sy_excel_histOrderByRelevanceFieldEnum = (typeof sy_excel_histOrderByRelevanceFieldEnum)[keyof typeof sy_excel_histOrderByRelevanceFieldEnum]


  export const sy_grp_cdOrderByRelevanceFieldEnum: {
    grp_cd: 'grp_cd',
    grp_cd_nm: 'grp_cd_nm',
    grp_cd_desc: 'grp_cd_desc',
    use_tf: 'use_tf'
  };

  export type sy_grp_cdOrderByRelevanceFieldEnum = (typeof sy_grp_cdOrderByRelevanceFieldEnum)[keyof typeof sy_grp_cdOrderByRelevanceFieldEnum]


  export const sy_menuOrderByRelevanceFieldEnum: {
    menu_nm: 'menu_nm',
    use_tf: 'use_tf',
    expsr_tf: 'expsr_tf',
    menu_desc: 'menu_desc',
    note_cont: 'note_cont',
    icon_nm: 'icon_nm',
    menu_url: 'menu_url',
    vrsn: 'vrsn'
  };

  export type sy_menuOrderByRelevanceFieldEnum = (typeof sy_menuOrderByRelevanceFieldEnum)[keyof typeof sy_menuOrderByRelevanceFieldEnum]


  export const sy_mngrOrderByRelevanceFieldEnum: {
    mngr_id: 'mngr_id',
    mngr_pswd: 'mngr_pswd',
    mngr_nm: 'mngr_nm',
    mngr_sctn_cd: 'mngr_sctn_cd',
    mngr_stts_cd: 'mngr_stts_cd',
    email: 'email',
    mbph_no: 'mbph_no',
    use_tf: 'use_tf',
    clco_dept_cd: 'clco_dept_cd',
    salt_val: 'salt_val',
    cnsr_sctn_cd: 'cnsr_sctn_cd',
    auth_suces_tf: 'auth_suces_tf',
    auth_key: 'auth_key',
    auth_token: 'auth_token'
  };

  export type sy_mngrOrderByRelevanceFieldEnum = (typeof sy_mngrOrderByRelevanceFieldEnum)[keyof typeof sy_mngrOrderByRelevanceFieldEnum]


  export const sy_mngr_auth_grp_histOrderByRelevanceFieldEnum: {
    type: 'type'
  };

  export type sy_mngr_auth_grp_histOrderByRelevanceFieldEnum = (typeof sy_mngr_auth_grp_histOrderByRelevanceFieldEnum)[keyof typeof sy_mngr_auth_grp_histOrderByRelevanceFieldEnum]


  export const sy_mngr_lgn_histOrderByRelevanceFieldEnum: {
    lgn_ip_addr: 'lgn_ip_addr'
  };

  export type sy_mngr_lgn_histOrderByRelevanceFieldEnum = (typeof sy_mngr_lgn_histOrderByRelevanceFieldEnum)[keyof typeof sy_mngr_lgn_histOrderByRelevanceFieldEnum]


  export const sy_mngr_pwd_histOrderByRelevanceFieldEnum: {
    modr_tp_cd: 'modr_tp_cd'
  };

  export type sy_mngr_pwd_histOrderByRelevanceFieldEnum = (typeof sy_mngr_pwd_histOrderByRelevanceFieldEnum)[keyof typeof sy_mngr_pwd_histOrderByRelevanceFieldEnum]


  export const sy_mngr_req_histOrderByRelevanceFieldEnum: {
    mngr_nm: 'mngr_nm',
    auth_grp_nm: 'auth_grp_nm',
    ip_addr: 'ip_addr',
    req_uri: 'req_uri',
    req_method: 'req_method',
    req_body: 'req_body'
  };

  export type sy_mngr_req_histOrderByRelevanceFieldEnum = (typeof sy_mngr_req_histOrderByRelevanceFieldEnum)[keyof typeof sy_mngr_req_histOrderByRelevanceFieldEnum]


  export const test_userOrderByRelevanceFieldEnum: {
    id: 'id',
    pw: 'pw',
    salt_val: 'salt_val',
    auth_token: 'auth_token',
    kakao_user_token: 'kakao_user_token',
    comp_code: 'comp_code',
    name: 'name'
  };

  export type test_userOrderByRelevanceFieldEnum = (typeof test_userOrderByRelevanceFieldEnum)[keyof typeof test_userOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'test_user_gender'
   */
  export type Enumtest_user_genderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'test_user_gender'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type aim_example_testWhereInput = {
    AND?: aim_example_testWhereInput | aim_example_testWhereInput[]
    OR?: aim_example_testWhereInput[]
    NOT?: aim_example_testWhereInput | aim_example_testWhereInput[]
    no?: IntFilter<"aim_example_test"> | number
    col1?: StringNullableFilter<"aim_example_test"> | string | null
    col2?: StringNullableFilter<"aim_example_test"> | string | null
    regr_no?: BigIntFilter<"aim_example_test"> | bigint | number
    reg_dt?: DateTimeFilter<"aim_example_test"> | Date | string
    modr_no?: BigIntFilter<"aim_example_test"> | bigint | number
    mod_dt?: DateTimeFilter<"aim_example_test"> | Date | string
  }

  export type aim_example_testOrderByWithRelationInput = {
    no?: SortOrder
    col1?: SortOrderInput | SortOrder
    col2?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: aim_example_testOrderByRelevanceInput
  }

  export type aim_example_testWhereUniqueInput = Prisma.AtLeast<{
    no?: number
    AND?: aim_example_testWhereInput | aim_example_testWhereInput[]
    OR?: aim_example_testWhereInput[]
    NOT?: aim_example_testWhereInput | aim_example_testWhereInput[]
    col1?: StringNullableFilter<"aim_example_test"> | string | null
    col2?: StringNullableFilter<"aim_example_test"> | string | null
    regr_no?: BigIntFilter<"aim_example_test"> | bigint | number
    reg_dt?: DateTimeFilter<"aim_example_test"> | Date | string
    modr_no?: BigIntFilter<"aim_example_test"> | bigint | number
    mod_dt?: DateTimeFilter<"aim_example_test"> | Date | string
  }, "no">

  export type aim_example_testOrderByWithAggregationInput = {
    no?: SortOrder
    col1?: SortOrderInput | SortOrder
    col2?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: aim_example_testCountOrderByAggregateInput
    _avg?: aim_example_testAvgOrderByAggregateInput
    _max?: aim_example_testMaxOrderByAggregateInput
    _min?: aim_example_testMinOrderByAggregateInput
    _sum?: aim_example_testSumOrderByAggregateInput
  }

  export type aim_example_testScalarWhereWithAggregatesInput = {
    AND?: aim_example_testScalarWhereWithAggregatesInput | aim_example_testScalarWhereWithAggregatesInput[]
    OR?: aim_example_testScalarWhereWithAggregatesInput[]
    NOT?: aim_example_testScalarWhereWithAggregatesInput | aim_example_testScalarWhereWithAggregatesInput[]
    no?: IntWithAggregatesFilter<"aim_example_test"> | number
    col1?: StringNullableWithAggregatesFilter<"aim_example_test"> | string | null
    col2?: StringNullableWithAggregatesFilter<"aim_example_test"> | string | null
    regr_no?: BigIntWithAggregatesFilter<"aim_example_test"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"aim_example_test"> | Date | string
    modr_no?: BigIntWithAggregatesFilter<"aim_example_test"> | bigint | number
    mod_dt?: DateTimeWithAggregatesFilter<"aim_example_test"> | Date | string
  }

  export type sc_mbrWhereInput = {
    AND?: sc_mbrWhereInput | sc_mbrWhereInput[]
    OR?: sc_mbrWhereInput[]
    NOT?: sc_mbrWhereInput | sc_mbrWhereInput[]
    mbr_no?: BigIntFilter<"sc_mbr"> | bigint | number
    clco_no?: BigIntFilter<"sc_mbr"> | bigint | number
    clco_dept_cd?: StringNullableFilter<"sc_mbr"> | string | null
    emp_no?: StringFilter<"sc_mbr"> | string
    mbr_id?: StringFilter<"sc_mbr"> | string
    mbr_pswd?: StringFilter<"sc_mbr"> | string
    mbr_nm?: StringFilter<"sc_mbr"> | string
    brdt?: DateTimeFilter<"sc_mbr"> | Date | string
    gen_cd?: StringFilter<"sc_mbr"> | string
    mbph_no?: StringFilter<"sc_mbr"> | string
    email_addr?: StringFilter<"sc_mbr"> | string
    fail_pswd_cnt?: IntNullableFilter<"sc_mbr"> | number | null
    join_dt?: DateTimeFilter<"sc_mbr"> | Date | string
    rcnt_cntn_dt?: DateTimeNullableFilter<"sc_mbr"> | Date | string | null
    drmc_cnvs_dt?: DateTimeNullableFilter<"sc_mbr"> | Date | string | null
    chge_pswd_dt?: DateTimeNullableFilter<"sc_mbr"> | Date | string | null
    mbr_stts_cd?: StringFilter<"sc_mbr"> | string
    tmnl_tkn_val?: StringNullableFilter<"sc_mbr"> | string | null
    tmnl_os_nm?: StringNullableFilter<"sc_mbr"> | string | null
    tmnl_app_ver_nm?: StringNullableFilter<"sc_mbr"> | string | null
    last_tmnl_sync_dt?: DateTimeNullableFilter<"sc_mbr"> | Date | string | null
    aos_permission?: IntNullableFilter<"sc_mbr"> | number | null
    push_status?: IntNullableFilter<"sc_mbr"> | number | null
    mbr_photo_file_mng_no?: BigIntNullableFilter<"sc_mbr"> | bigint | number | null
    app_prgrs_stag_val?: StringNullableFilter<"sc_mbr"> | string | null
    regr_no?: BigIntFilter<"sc_mbr"> | bigint | number
    reg_dt?: DateTimeFilter<"sc_mbr"> | Date | string
    modr_no?: BigIntFilter<"sc_mbr"> | bigint | number
    mod_dt?: DateTimeFilter<"sc_mbr"> | Date | string
    out_tp_cd?: StringNullableFilter<"sc_mbr"> | string | null
    out_tp_ttl?: StringNullableFilter<"sc_mbr"> | string | null
    out_join_dt?: DateTimeNullableFilter<"sc_mbr"> | Date | string | null
    mbr_sctn_cd?: StringNullableFilter<"sc_mbr"> | string | null
  }

  export type sc_mbrOrderByWithRelationInput = {
    mbr_no?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrderInput | SortOrder
    emp_no?: SortOrder
    mbr_id?: SortOrder
    mbr_pswd?: SortOrder
    mbr_nm?: SortOrder
    brdt?: SortOrder
    gen_cd?: SortOrder
    mbph_no?: SortOrder
    email_addr?: SortOrder
    fail_pswd_cnt?: SortOrderInput | SortOrder
    join_dt?: SortOrder
    rcnt_cntn_dt?: SortOrderInput | SortOrder
    drmc_cnvs_dt?: SortOrderInput | SortOrder
    chge_pswd_dt?: SortOrderInput | SortOrder
    mbr_stts_cd?: SortOrder
    tmnl_tkn_val?: SortOrderInput | SortOrder
    tmnl_os_nm?: SortOrderInput | SortOrder
    tmnl_app_ver_nm?: SortOrderInput | SortOrder
    last_tmnl_sync_dt?: SortOrderInput | SortOrder
    aos_permission?: SortOrderInput | SortOrder
    push_status?: SortOrderInput | SortOrder
    mbr_photo_file_mng_no?: SortOrderInput | SortOrder
    app_prgrs_stag_val?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    out_tp_cd?: SortOrderInput | SortOrder
    out_tp_ttl?: SortOrderInput | SortOrder
    out_join_dt?: SortOrderInput | SortOrder
    mbr_sctn_cd?: SortOrderInput | SortOrder
    _relevance?: sc_mbrOrderByRelevanceInput
  }

  export type sc_mbrWhereUniqueInput = Prisma.AtLeast<{
    mbr_no?: bigint | number
    AND?: sc_mbrWhereInput | sc_mbrWhereInput[]
    OR?: sc_mbrWhereInput[]
    NOT?: sc_mbrWhereInput | sc_mbrWhereInput[]
    clco_no?: BigIntFilter<"sc_mbr"> | bigint | number
    clco_dept_cd?: StringNullableFilter<"sc_mbr"> | string | null
    emp_no?: StringFilter<"sc_mbr"> | string
    mbr_id?: StringFilter<"sc_mbr"> | string
    mbr_pswd?: StringFilter<"sc_mbr"> | string
    mbr_nm?: StringFilter<"sc_mbr"> | string
    brdt?: DateTimeFilter<"sc_mbr"> | Date | string
    gen_cd?: StringFilter<"sc_mbr"> | string
    mbph_no?: StringFilter<"sc_mbr"> | string
    email_addr?: StringFilter<"sc_mbr"> | string
    fail_pswd_cnt?: IntNullableFilter<"sc_mbr"> | number | null
    join_dt?: DateTimeFilter<"sc_mbr"> | Date | string
    rcnt_cntn_dt?: DateTimeNullableFilter<"sc_mbr"> | Date | string | null
    drmc_cnvs_dt?: DateTimeNullableFilter<"sc_mbr"> | Date | string | null
    chge_pswd_dt?: DateTimeNullableFilter<"sc_mbr"> | Date | string | null
    mbr_stts_cd?: StringFilter<"sc_mbr"> | string
    tmnl_tkn_val?: StringNullableFilter<"sc_mbr"> | string | null
    tmnl_os_nm?: StringNullableFilter<"sc_mbr"> | string | null
    tmnl_app_ver_nm?: StringNullableFilter<"sc_mbr"> | string | null
    last_tmnl_sync_dt?: DateTimeNullableFilter<"sc_mbr"> | Date | string | null
    aos_permission?: IntNullableFilter<"sc_mbr"> | number | null
    push_status?: IntNullableFilter<"sc_mbr"> | number | null
    mbr_photo_file_mng_no?: BigIntNullableFilter<"sc_mbr"> | bigint | number | null
    app_prgrs_stag_val?: StringNullableFilter<"sc_mbr"> | string | null
    regr_no?: BigIntFilter<"sc_mbr"> | bigint | number
    reg_dt?: DateTimeFilter<"sc_mbr"> | Date | string
    modr_no?: BigIntFilter<"sc_mbr"> | bigint | number
    mod_dt?: DateTimeFilter<"sc_mbr"> | Date | string
    out_tp_cd?: StringNullableFilter<"sc_mbr"> | string | null
    out_tp_ttl?: StringNullableFilter<"sc_mbr"> | string | null
    out_join_dt?: DateTimeNullableFilter<"sc_mbr"> | Date | string | null
    mbr_sctn_cd?: StringNullableFilter<"sc_mbr"> | string | null
  }, "mbr_no">

  export type sc_mbrOrderByWithAggregationInput = {
    mbr_no?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrderInput | SortOrder
    emp_no?: SortOrder
    mbr_id?: SortOrder
    mbr_pswd?: SortOrder
    mbr_nm?: SortOrder
    brdt?: SortOrder
    gen_cd?: SortOrder
    mbph_no?: SortOrder
    email_addr?: SortOrder
    fail_pswd_cnt?: SortOrderInput | SortOrder
    join_dt?: SortOrder
    rcnt_cntn_dt?: SortOrderInput | SortOrder
    drmc_cnvs_dt?: SortOrderInput | SortOrder
    chge_pswd_dt?: SortOrderInput | SortOrder
    mbr_stts_cd?: SortOrder
    tmnl_tkn_val?: SortOrderInput | SortOrder
    tmnl_os_nm?: SortOrderInput | SortOrder
    tmnl_app_ver_nm?: SortOrderInput | SortOrder
    last_tmnl_sync_dt?: SortOrderInput | SortOrder
    aos_permission?: SortOrderInput | SortOrder
    push_status?: SortOrderInput | SortOrder
    mbr_photo_file_mng_no?: SortOrderInput | SortOrder
    app_prgrs_stag_val?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    out_tp_cd?: SortOrderInput | SortOrder
    out_tp_ttl?: SortOrderInput | SortOrder
    out_join_dt?: SortOrderInput | SortOrder
    mbr_sctn_cd?: SortOrderInput | SortOrder
    _count?: sc_mbrCountOrderByAggregateInput
    _avg?: sc_mbrAvgOrderByAggregateInput
    _max?: sc_mbrMaxOrderByAggregateInput
    _min?: sc_mbrMinOrderByAggregateInput
    _sum?: sc_mbrSumOrderByAggregateInput
  }

  export type sc_mbrScalarWhereWithAggregatesInput = {
    AND?: sc_mbrScalarWhereWithAggregatesInput | sc_mbrScalarWhereWithAggregatesInput[]
    OR?: sc_mbrScalarWhereWithAggregatesInput[]
    NOT?: sc_mbrScalarWhereWithAggregatesInput | sc_mbrScalarWhereWithAggregatesInput[]
    mbr_no?: BigIntWithAggregatesFilter<"sc_mbr"> | bigint | number
    clco_no?: BigIntWithAggregatesFilter<"sc_mbr"> | bigint | number
    clco_dept_cd?: StringNullableWithAggregatesFilter<"sc_mbr"> | string | null
    emp_no?: StringWithAggregatesFilter<"sc_mbr"> | string
    mbr_id?: StringWithAggregatesFilter<"sc_mbr"> | string
    mbr_pswd?: StringWithAggregatesFilter<"sc_mbr"> | string
    mbr_nm?: StringWithAggregatesFilter<"sc_mbr"> | string
    brdt?: DateTimeWithAggregatesFilter<"sc_mbr"> | Date | string
    gen_cd?: StringWithAggregatesFilter<"sc_mbr"> | string
    mbph_no?: StringWithAggregatesFilter<"sc_mbr"> | string
    email_addr?: StringWithAggregatesFilter<"sc_mbr"> | string
    fail_pswd_cnt?: IntNullableWithAggregatesFilter<"sc_mbr"> | number | null
    join_dt?: DateTimeWithAggregatesFilter<"sc_mbr"> | Date | string
    rcnt_cntn_dt?: DateTimeNullableWithAggregatesFilter<"sc_mbr"> | Date | string | null
    drmc_cnvs_dt?: DateTimeNullableWithAggregatesFilter<"sc_mbr"> | Date | string | null
    chge_pswd_dt?: DateTimeNullableWithAggregatesFilter<"sc_mbr"> | Date | string | null
    mbr_stts_cd?: StringWithAggregatesFilter<"sc_mbr"> | string
    tmnl_tkn_val?: StringNullableWithAggregatesFilter<"sc_mbr"> | string | null
    tmnl_os_nm?: StringNullableWithAggregatesFilter<"sc_mbr"> | string | null
    tmnl_app_ver_nm?: StringNullableWithAggregatesFilter<"sc_mbr"> | string | null
    last_tmnl_sync_dt?: DateTimeNullableWithAggregatesFilter<"sc_mbr"> | Date | string | null
    aos_permission?: IntNullableWithAggregatesFilter<"sc_mbr"> | number | null
    push_status?: IntNullableWithAggregatesFilter<"sc_mbr"> | number | null
    mbr_photo_file_mng_no?: BigIntNullableWithAggregatesFilter<"sc_mbr"> | bigint | number | null
    app_prgrs_stag_val?: StringNullableWithAggregatesFilter<"sc_mbr"> | string | null
    regr_no?: BigIntWithAggregatesFilter<"sc_mbr"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"sc_mbr"> | Date | string
    modr_no?: BigIntWithAggregatesFilter<"sc_mbr"> | bigint | number
    mod_dt?: DateTimeWithAggregatesFilter<"sc_mbr"> | Date | string
    out_tp_cd?: StringNullableWithAggregatesFilter<"sc_mbr"> | string | null
    out_tp_ttl?: StringNullableWithAggregatesFilter<"sc_mbr"> | string | null
    out_join_dt?: DateTimeNullableWithAggregatesFilter<"sc_mbr"> | Date | string | null
    mbr_sctn_cd?: StringNullableWithAggregatesFilter<"sc_mbr"> | string | null
  }

  export type sc_mbr_lgn_histWhereInput = {
    AND?: sc_mbr_lgn_histWhereInput | sc_mbr_lgn_histWhereInput[]
    OR?: sc_mbr_lgn_histWhereInput[]
    NOT?: sc_mbr_lgn_histWhereInput | sc_mbr_lgn_histWhereInput[]
    hist_no?: BigIntFilter<"sc_mbr_lgn_hist"> | bigint | number
    mbr_no?: BigIntFilter<"sc_mbr_lgn_hist"> | bigint | number
    regr_no?: BigIntFilter<"sc_mbr_lgn_hist"> | bigint | number
    reg_dt?: DateTimeFilter<"sc_mbr_lgn_hist"> | Date | string
    modr_no?: BigIntFilter<"sc_mbr_lgn_hist"> | bigint | number
    mod_dt?: DateTimeFilter<"sc_mbr_lgn_hist"> | Date | string
  }

  export type sc_mbr_lgn_histOrderByWithRelationInput = {
    hist_no?: SortOrder
    mbr_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_lgn_histWhereUniqueInput = Prisma.AtLeast<{
    hist_no?: bigint | number
    AND?: sc_mbr_lgn_histWhereInput | sc_mbr_lgn_histWhereInput[]
    OR?: sc_mbr_lgn_histWhereInput[]
    NOT?: sc_mbr_lgn_histWhereInput | sc_mbr_lgn_histWhereInput[]
    mbr_no?: BigIntFilter<"sc_mbr_lgn_hist"> | bigint | number
    regr_no?: BigIntFilter<"sc_mbr_lgn_hist"> | bigint | number
    reg_dt?: DateTimeFilter<"sc_mbr_lgn_hist"> | Date | string
    modr_no?: BigIntFilter<"sc_mbr_lgn_hist"> | bigint | number
    mod_dt?: DateTimeFilter<"sc_mbr_lgn_hist"> | Date | string
  }, "hist_no">

  export type sc_mbr_lgn_histOrderByWithAggregationInput = {
    hist_no?: SortOrder
    mbr_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sc_mbr_lgn_histCountOrderByAggregateInput
    _avg?: sc_mbr_lgn_histAvgOrderByAggregateInput
    _max?: sc_mbr_lgn_histMaxOrderByAggregateInput
    _min?: sc_mbr_lgn_histMinOrderByAggregateInput
    _sum?: sc_mbr_lgn_histSumOrderByAggregateInput
  }

  export type sc_mbr_lgn_histScalarWhereWithAggregatesInput = {
    AND?: sc_mbr_lgn_histScalarWhereWithAggregatesInput | sc_mbr_lgn_histScalarWhereWithAggregatesInput[]
    OR?: sc_mbr_lgn_histScalarWhereWithAggregatesInput[]
    NOT?: sc_mbr_lgn_histScalarWhereWithAggregatesInput | sc_mbr_lgn_histScalarWhereWithAggregatesInput[]
    hist_no?: BigIntWithAggregatesFilter<"sc_mbr_lgn_hist"> | bigint | number
    mbr_no?: BigIntWithAggregatesFilter<"sc_mbr_lgn_hist"> | bigint | number
    regr_no?: BigIntWithAggregatesFilter<"sc_mbr_lgn_hist"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"sc_mbr_lgn_hist"> | Date | string
    modr_no?: BigIntWithAggregatesFilter<"sc_mbr_lgn_hist"> | bigint | number
    mod_dt?: DateTimeWithAggregatesFilter<"sc_mbr_lgn_hist"> | Date | string
  }

  export type sc_mbr_logWhereInput = {
    AND?: sc_mbr_logWhereInput | sc_mbr_logWhereInput[]
    OR?: sc_mbr_logWhereInput[]
    NOT?: sc_mbr_logWhereInput | sc_mbr_logWhereInput[]
    log_no?: BigIntFilter<"sc_mbr_log"> | bigint | number
    log_cd?: StringNullableFilter<"sc_mbr_log"> | string | null
    mbr_no?: BigIntFilter<"sc_mbr_log"> | bigint | number
    uri?: StringFilter<"sc_mbr_log"> | string
    origin?: StringFilter<"sc_mbr_log"> | string
    desc?: StringNullableFilter<"sc_mbr_log"> | string | null
    reg_dt?: DateTimeNullableFilter<"sc_mbr_log"> | Date | string | null
  }

  export type sc_mbr_logOrderByWithRelationInput = {
    log_no?: SortOrder
    log_cd?: SortOrderInput | SortOrder
    mbr_no?: SortOrder
    uri?: SortOrder
    origin?: SortOrder
    desc?: SortOrderInput | SortOrder
    reg_dt?: SortOrderInput | SortOrder
    _relevance?: sc_mbr_logOrderByRelevanceInput
  }

  export type sc_mbr_logWhereUniqueInput = Prisma.AtLeast<{
    log_no?: bigint | number
    AND?: sc_mbr_logWhereInput | sc_mbr_logWhereInput[]
    OR?: sc_mbr_logWhereInput[]
    NOT?: sc_mbr_logWhereInput | sc_mbr_logWhereInput[]
    log_cd?: StringNullableFilter<"sc_mbr_log"> | string | null
    mbr_no?: BigIntFilter<"sc_mbr_log"> | bigint | number
    uri?: StringFilter<"sc_mbr_log"> | string
    origin?: StringFilter<"sc_mbr_log"> | string
    desc?: StringNullableFilter<"sc_mbr_log"> | string | null
    reg_dt?: DateTimeNullableFilter<"sc_mbr_log"> | Date | string | null
  }, "log_no">

  export type sc_mbr_logOrderByWithAggregationInput = {
    log_no?: SortOrder
    log_cd?: SortOrderInput | SortOrder
    mbr_no?: SortOrder
    uri?: SortOrder
    origin?: SortOrder
    desc?: SortOrderInput | SortOrder
    reg_dt?: SortOrderInput | SortOrder
    _count?: sc_mbr_logCountOrderByAggregateInput
    _avg?: sc_mbr_logAvgOrderByAggregateInput
    _max?: sc_mbr_logMaxOrderByAggregateInput
    _min?: sc_mbr_logMinOrderByAggregateInput
    _sum?: sc_mbr_logSumOrderByAggregateInput
  }

  export type sc_mbr_logScalarWhereWithAggregatesInput = {
    AND?: sc_mbr_logScalarWhereWithAggregatesInput | sc_mbr_logScalarWhereWithAggregatesInput[]
    OR?: sc_mbr_logScalarWhereWithAggregatesInput[]
    NOT?: sc_mbr_logScalarWhereWithAggregatesInput | sc_mbr_logScalarWhereWithAggregatesInput[]
    log_no?: BigIntWithAggregatesFilter<"sc_mbr_log"> | bigint | number
    log_cd?: StringNullableWithAggregatesFilter<"sc_mbr_log"> | string | null
    mbr_no?: BigIntWithAggregatesFilter<"sc_mbr_log"> | bigint | number
    uri?: StringWithAggregatesFilter<"sc_mbr_log"> | string
    origin?: StringWithAggregatesFilter<"sc_mbr_log"> | string
    desc?: StringNullableWithAggregatesFilter<"sc_mbr_log"> | string | null
    reg_dt?: DateTimeNullableWithAggregatesFilter<"sc_mbr_log"> | Date | string | null
  }

  export type sc_mbr_prjtWhereInput = {
    AND?: sc_mbr_prjtWhereInput | sc_mbr_prjtWhereInput[]
    OR?: sc_mbr_prjtWhereInput[]
    NOT?: sc_mbr_prjtWhereInput | sc_mbr_prjtWhereInput[]
    mbr_no?: BigIntFilter<"sc_mbr_prjt"> | bigint | number
    prjt_no?: BigIntFilter<"sc_mbr_prjt"> | bigint | number
    prtpnt_sctn_cd?: StringFilter<"sc_mbr_prjt"> | string
    prgrs_stop_tf?: StringFilter<"sc_mbr_prjt"> | string
    prgrs_stop_dt?: DateTimeNullableFilter<"sc_mbr_prjt"> | Date | string | null
    prgrs_stop_caus_desc?: StringNullableFilter<"sc_mbr_prjt"> | string | null
    ptcp_bgng_ymd?: DateTimeNullableFilter<"sc_mbr_prjt"> | Date | string | null
    ptcp_end_ymd?: DateTimeNullableFilter<"sc_mbr_prjt"> | Date | string | null
    frst_bmi_val?: DecimalNullableFilter<"sc_mbr_prjt"> | Decimal | DecimalJsLike | number | string | null
    end_bmi_val?: DecimalNullableFilter<"sc_mbr_prjt"> | Decimal | DecimalJsLike | number | string | null
    regr_no?: BigIntFilter<"sc_mbr_prjt"> | bigint | number
    reg_dt?: DateTimeFilter<"sc_mbr_prjt"> | Date | string
    modr_no?: BigIntFilter<"sc_mbr_prjt"> | bigint | number
    mod_dt?: DateTimeFilter<"sc_mbr_prjt"> | Date | string
  }

  export type sc_mbr_prjtOrderByWithRelationInput = {
    mbr_no?: SortOrder
    prjt_no?: SortOrder
    prtpnt_sctn_cd?: SortOrder
    prgrs_stop_tf?: SortOrder
    prgrs_stop_dt?: SortOrderInput | SortOrder
    prgrs_stop_caus_desc?: SortOrderInput | SortOrder
    ptcp_bgng_ymd?: SortOrderInput | SortOrder
    ptcp_end_ymd?: SortOrderInput | SortOrder
    frst_bmi_val?: SortOrderInput | SortOrder
    end_bmi_val?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sc_mbr_prjtOrderByRelevanceInput
  }

  export type sc_mbr_prjtWhereUniqueInput = Prisma.AtLeast<{
    mbr_no_prjt_no?: sc_mbr_prjtMbr_noPrjt_noCompoundUniqueInput
    AND?: sc_mbr_prjtWhereInput | sc_mbr_prjtWhereInput[]
    OR?: sc_mbr_prjtWhereInput[]
    NOT?: sc_mbr_prjtWhereInput | sc_mbr_prjtWhereInput[]
    mbr_no?: BigIntFilter<"sc_mbr_prjt"> | bigint | number
    prjt_no?: BigIntFilter<"sc_mbr_prjt"> | bigint | number
    prtpnt_sctn_cd?: StringFilter<"sc_mbr_prjt"> | string
    prgrs_stop_tf?: StringFilter<"sc_mbr_prjt"> | string
    prgrs_stop_dt?: DateTimeNullableFilter<"sc_mbr_prjt"> | Date | string | null
    prgrs_stop_caus_desc?: StringNullableFilter<"sc_mbr_prjt"> | string | null
    ptcp_bgng_ymd?: DateTimeNullableFilter<"sc_mbr_prjt"> | Date | string | null
    ptcp_end_ymd?: DateTimeNullableFilter<"sc_mbr_prjt"> | Date | string | null
    frst_bmi_val?: DecimalNullableFilter<"sc_mbr_prjt"> | Decimal | DecimalJsLike | number | string | null
    end_bmi_val?: DecimalNullableFilter<"sc_mbr_prjt"> | Decimal | DecimalJsLike | number | string | null
    regr_no?: BigIntFilter<"sc_mbr_prjt"> | bigint | number
    reg_dt?: DateTimeFilter<"sc_mbr_prjt"> | Date | string
    modr_no?: BigIntFilter<"sc_mbr_prjt"> | bigint | number
    mod_dt?: DateTimeFilter<"sc_mbr_prjt"> | Date | string
  }, "mbr_no_prjt_no">

  export type sc_mbr_prjtOrderByWithAggregationInput = {
    mbr_no?: SortOrder
    prjt_no?: SortOrder
    prtpnt_sctn_cd?: SortOrder
    prgrs_stop_tf?: SortOrder
    prgrs_stop_dt?: SortOrderInput | SortOrder
    prgrs_stop_caus_desc?: SortOrderInput | SortOrder
    ptcp_bgng_ymd?: SortOrderInput | SortOrder
    ptcp_end_ymd?: SortOrderInput | SortOrder
    frst_bmi_val?: SortOrderInput | SortOrder
    end_bmi_val?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sc_mbr_prjtCountOrderByAggregateInput
    _avg?: sc_mbr_prjtAvgOrderByAggregateInput
    _max?: sc_mbr_prjtMaxOrderByAggregateInput
    _min?: sc_mbr_prjtMinOrderByAggregateInput
    _sum?: sc_mbr_prjtSumOrderByAggregateInput
  }

  export type sc_mbr_prjtScalarWhereWithAggregatesInput = {
    AND?: sc_mbr_prjtScalarWhereWithAggregatesInput | sc_mbr_prjtScalarWhereWithAggregatesInput[]
    OR?: sc_mbr_prjtScalarWhereWithAggregatesInput[]
    NOT?: sc_mbr_prjtScalarWhereWithAggregatesInput | sc_mbr_prjtScalarWhereWithAggregatesInput[]
    mbr_no?: BigIntWithAggregatesFilter<"sc_mbr_prjt"> | bigint | number
    prjt_no?: BigIntWithAggregatesFilter<"sc_mbr_prjt"> | bigint | number
    prtpnt_sctn_cd?: StringWithAggregatesFilter<"sc_mbr_prjt"> | string
    prgrs_stop_tf?: StringWithAggregatesFilter<"sc_mbr_prjt"> | string
    prgrs_stop_dt?: DateTimeNullableWithAggregatesFilter<"sc_mbr_prjt"> | Date | string | null
    prgrs_stop_caus_desc?: StringNullableWithAggregatesFilter<"sc_mbr_prjt"> | string | null
    ptcp_bgng_ymd?: DateTimeNullableWithAggregatesFilter<"sc_mbr_prjt"> | Date | string | null
    ptcp_end_ymd?: DateTimeNullableWithAggregatesFilter<"sc_mbr_prjt"> | Date | string | null
    frst_bmi_val?: DecimalNullableWithAggregatesFilter<"sc_mbr_prjt"> | Decimal | DecimalJsLike | number | string | null
    end_bmi_val?: DecimalNullableWithAggregatesFilter<"sc_mbr_prjt"> | Decimal | DecimalJsLike | number | string | null
    regr_no?: BigIntWithAggregatesFilter<"sc_mbr_prjt"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"sc_mbr_prjt"> | Date | string
    modr_no?: BigIntWithAggregatesFilter<"sc_mbr_prjt"> | bigint | number
    mod_dt?: DateTimeWithAggregatesFilter<"sc_mbr_prjt"> | Date | string
  }

  export type sc_mbr_trms_agr_histWhereInput = {
    AND?: sc_mbr_trms_agr_histWhereInput | sc_mbr_trms_agr_histWhereInput[]
    OR?: sc_mbr_trms_agr_histWhereInput[]
    NOT?: sc_mbr_trms_agr_histWhereInput | sc_mbr_trms_agr_histWhereInput[]
    mbr_no?: BigIntFilter<"sc_mbr_trms_agr_hist"> | bigint | number
    trms_no?: BigIntFilter<"sc_mbr_trms_agr_hist"> | bigint | number
    agr_dt?: DateTimeFilter<"sc_mbr_trms_agr_hist"> | Date | string
    regr_no?: BigIntFilter<"sc_mbr_trms_agr_hist"> | bigint | number
    reg_dt?: DateTimeFilter<"sc_mbr_trms_agr_hist"> | Date | string
    modr_no?: BigIntFilter<"sc_mbr_trms_agr_hist"> | bigint | number
    mod_dt?: DateTimeFilter<"sc_mbr_trms_agr_hist"> | Date | string
  }

  export type sc_mbr_trms_agr_histOrderByWithRelationInput = {
    mbr_no?: SortOrder
    trms_no?: SortOrder
    agr_dt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_trms_agr_histWhereUniqueInput = Prisma.AtLeast<{
    mbr_no_trms_no?: sc_mbr_trms_agr_histMbr_noTrms_noCompoundUniqueInput
    AND?: sc_mbr_trms_agr_histWhereInput | sc_mbr_trms_agr_histWhereInput[]
    OR?: sc_mbr_trms_agr_histWhereInput[]
    NOT?: sc_mbr_trms_agr_histWhereInput | sc_mbr_trms_agr_histWhereInput[]
    mbr_no?: BigIntFilter<"sc_mbr_trms_agr_hist"> | bigint | number
    trms_no?: BigIntFilter<"sc_mbr_trms_agr_hist"> | bigint | number
    agr_dt?: DateTimeFilter<"sc_mbr_trms_agr_hist"> | Date | string
    regr_no?: BigIntFilter<"sc_mbr_trms_agr_hist"> | bigint | number
    reg_dt?: DateTimeFilter<"sc_mbr_trms_agr_hist"> | Date | string
    modr_no?: BigIntFilter<"sc_mbr_trms_agr_hist"> | bigint | number
    mod_dt?: DateTimeFilter<"sc_mbr_trms_agr_hist"> | Date | string
  }, "mbr_no_trms_no">

  export type sc_mbr_trms_agr_histOrderByWithAggregationInput = {
    mbr_no?: SortOrder
    trms_no?: SortOrder
    agr_dt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sc_mbr_trms_agr_histCountOrderByAggregateInput
    _avg?: sc_mbr_trms_agr_histAvgOrderByAggregateInput
    _max?: sc_mbr_trms_agr_histMaxOrderByAggregateInput
    _min?: sc_mbr_trms_agr_histMinOrderByAggregateInput
    _sum?: sc_mbr_trms_agr_histSumOrderByAggregateInput
  }

  export type sc_mbr_trms_agr_histScalarWhereWithAggregatesInput = {
    AND?: sc_mbr_trms_agr_histScalarWhereWithAggregatesInput | sc_mbr_trms_agr_histScalarWhereWithAggregatesInput[]
    OR?: sc_mbr_trms_agr_histScalarWhereWithAggregatesInput[]
    NOT?: sc_mbr_trms_agr_histScalarWhereWithAggregatesInput | sc_mbr_trms_agr_histScalarWhereWithAggregatesInput[]
    mbr_no?: BigIntWithAggregatesFilter<"sc_mbr_trms_agr_hist"> | bigint | number
    trms_no?: BigIntWithAggregatesFilter<"sc_mbr_trms_agr_hist"> | bigint | number
    agr_dt?: DateTimeWithAggregatesFilter<"sc_mbr_trms_agr_hist"> | Date | string
    regr_no?: BigIntWithAggregatesFilter<"sc_mbr_trms_agr_hist"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"sc_mbr_trms_agr_hist"> | Date | string
    modr_no?: BigIntWithAggregatesFilter<"sc_mbr_trms_agr_hist"> | bigint | number
    mod_dt?: DateTimeWithAggregatesFilter<"sc_mbr_trms_agr_hist"> | Date | string
  }

  export type sc_mbr_trms_agr_scr_histWhereInput = {
    AND?: sc_mbr_trms_agr_scr_histWhereInput | sc_mbr_trms_agr_scr_histWhereInput[]
    OR?: sc_mbr_trms_agr_scr_histWhereInput[]
    NOT?: sc_mbr_trms_agr_scr_histWhereInput | sc_mbr_trms_agr_scr_histWhereInput[]
    agr_no?: BigIntFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    clco_no?: BigIntFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    emp_no?: StringFilter<"sc_mbr_trms_agr_scr_hist"> | string
    trms_no?: BigIntFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    agr_dt?: DateTimeFilter<"sc_mbr_trms_agr_scr_hist"> | Date | string
    regr_no?: BigIntFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    reg_dt?: DateTimeFilter<"sc_mbr_trms_agr_scr_hist"> | Date | string
    modr_no?: BigIntFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    mod_dt?: DateTimeFilter<"sc_mbr_trms_agr_scr_hist"> | Date | string
  }

  export type sc_mbr_trms_agr_scr_histOrderByWithRelationInput = {
    agr_no?: SortOrder
    clco_no?: SortOrder
    emp_no?: SortOrder
    trms_no?: SortOrder
    agr_dt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sc_mbr_trms_agr_scr_histOrderByRelevanceInput
  }

  export type sc_mbr_trms_agr_scr_histWhereUniqueInput = Prisma.AtLeast<{
    agr_no?: bigint | number
    AND?: sc_mbr_trms_agr_scr_histWhereInput | sc_mbr_trms_agr_scr_histWhereInput[]
    OR?: sc_mbr_trms_agr_scr_histWhereInput[]
    NOT?: sc_mbr_trms_agr_scr_histWhereInput | sc_mbr_trms_agr_scr_histWhereInput[]
    clco_no?: BigIntFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    emp_no?: StringFilter<"sc_mbr_trms_agr_scr_hist"> | string
    trms_no?: BigIntFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    agr_dt?: DateTimeFilter<"sc_mbr_trms_agr_scr_hist"> | Date | string
    regr_no?: BigIntFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    reg_dt?: DateTimeFilter<"sc_mbr_trms_agr_scr_hist"> | Date | string
    modr_no?: BigIntFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    mod_dt?: DateTimeFilter<"sc_mbr_trms_agr_scr_hist"> | Date | string
  }, "agr_no">

  export type sc_mbr_trms_agr_scr_histOrderByWithAggregationInput = {
    agr_no?: SortOrder
    clco_no?: SortOrder
    emp_no?: SortOrder
    trms_no?: SortOrder
    agr_dt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sc_mbr_trms_agr_scr_histCountOrderByAggregateInput
    _avg?: sc_mbr_trms_agr_scr_histAvgOrderByAggregateInput
    _max?: sc_mbr_trms_agr_scr_histMaxOrderByAggregateInput
    _min?: sc_mbr_trms_agr_scr_histMinOrderByAggregateInput
    _sum?: sc_mbr_trms_agr_scr_histSumOrderByAggregateInput
  }

  export type sc_mbr_trms_agr_scr_histScalarWhereWithAggregatesInput = {
    AND?: sc_mbr_trms_agr_scr_histScalarWhereWithAggregatesInput | sc_mbr_trms_agr_scr_histScalarWhereWithAggregatesInput[]
    OR?: sc_mbr_trms_agr_scr_histScalarWhereWithAggregatesInput[]
    NOT?: sc_mbr_trms_agr_scr_histScalarWhereWithAggregatesInput | sc_mbr_trms_agr_scr_histScalarWhereWithAggregatesInput[]
    agr_no?: BigIntWithAggregatesFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    clco_no?: BigIntWithAggregatesFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    emp_no?: StringWithAggregatesFilter<"sc_mbr_trms_agr_scr_hist"> | string
    trms_no?: BigIntWithAggregatesFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    agr_dt?: DateTimeWithAggregatesFilter<"sc_mbr_trms_agr_scr_hist"> | Date | string
    regr_no?: BigIntWithAggregatesFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"sc_mbr_trms_agr_scr_hist"> | Date | string
    modr_no?: BigIntWithAggregatesFilter<"sc_mbr_trms_agr_scr_hist"> | bigint | number
    mod_dt?: DateTimeWithAggregatesFilter<"sc_mbr_trms_agr_scr_hist"> | Date | string
  }

  export type sc_prjtWhereInput = {
    AND?: sc_prjtWhereInput | sc_prjtWhereInput[]
    OR?: sc_prjtWhereInput[]
    NOT?: sc_prjtWhereInput | sc_prjtWhereInput[]
    prjt_no?: IntFilter<"sc_prjt"> | number
    clco_no?: IntFilter<"sc_prjt"> | number
    prjt_nm?: StringFilter<"sc_prjt"> | string
    prjt_stts_cd?: StringFilter<"sc_prjt"> | string
    prtc_aply_stng_tf?: StringFilter<"sc_prjt"> | string
    prtc_aply_bgng_dt?: DateTimeNullableFilter<"sc_prjt"> | Date | string | null
    prtc_aply_end_dt?: DateTimeNullableFilter<"sc_prjt"> | Date | string | null
    rsvt_stng_tf?: StringFilter<"sc_prjt"> | string
    prjt_bgng_dt?: DateTimeNullableFilter<"sc_prjt"> | Date | string | null
    prjt_end_dt?: DateTimeNullableFilter<"sc_prjt"> | Date | string | null
    main_logo_file_mng_no?: BigIntNullableFilter<"sc_prjt"> | bigint | number | null
    bgng_mebi_no?: IntFilter<"sc_prjt"> | number
    cmps_prgm_cnt?: IntFilter<"sc_prjt"> | number
    gnrl_prtpnt_cnt?: IntNullableFilter<"sc_prjt"> | number | null
    mng_prtpnt_cnt?: IntNullableFilter<"sc_prjt"> | number | null
    gnrl_fnsr_cnt?: IntNullableFilter<"sc_prjt"> | number | null
    mng_fnsr_cnt?: IntNullableFilter<"sc_prjt"> | number | null
    main_clr_val?: StringNullableFilter<"sc_prjt"> | string | null
    sub_clr_val?: StringNullableFilter<"sc_prjt"> | string | null
    add_clr_val?: StringNullableFilter<"sc_prjt"> | string | null
    regr_no?: IntFilter<"sc_prjt"> | number
    reg_dt?: DateTimeFilter<"sc_prjt"> | Date | string
    modr_no?: IntFilter<"sc_prjt"> | number
    mod_dt?: DateTimeFilter<"sc_prjt"> | Date | string
  }

  export type sc_prjtOrderByWithRelationInput = {
    prjt_no?: SortOrder
    clco_no?: SortOrder
    prjt_nm?: SortOrder
    prjt_stts_cd?: SortOrder
    prtc_aply_stng_tf?: SortOrder
    prtc_aply_bgng_dt?: SortOrderInput | SortOrder
    prtc_aply_end_dt?: SortOrderInput | SortOrder
    rsvt_stng_tf?: SortOrder
    prjt_bgng_dt?: SortOrderInput | SortOrder
    prjt_end_dt?: SortOrderInput | SortOrder
    main_logo_file_mng_no?: SortOrderInput | SortOrder
    bgng_mebi_no?: SortOrder
    cmps_prgm_cnt?: SortOrder
    gnrl_prtpnt_cnt?: SortOrderInput | SortOrder
    mng_prtpnt_cnt?: SortOrderInput | SortOrder
    gnrl_fnsr_cnt?: SortOrderInput | SortOrder
    mng_fnsr_cnt?: SortOrderInput | SortOrder
    main_clr_val?: SortOrderInput | SortOrder
    sub_clr_val?: SortOrderInput | SortOrder
    add_clr_val?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sc_prjtOrderByRelevanceInput
  }

  export type sc_prjtWhereUniqueInput = Prisma.AtLeast<{
    prjt_no?: number
    AND?: sc_prjtWhereInput | sc_prjtWhereInput[]
    OR?: sc_prjtWhereInput[]
    NOT?: sc_prjtWhereInput | sc_prjtWhereInput[]
    clco_no?: IntFilter<"sc_prjt"> | number
    prjt_nm?: StringFilter<"sc_prjt"> | string
    prjt_stts_cd?: StringFilter<"sc_prjt"> | string
    prtc_aply_stng_tf?: StringFilter<"sc_prjt"> | string
    prtc_aply_bgng_dt?: DateTimeNullableFilter<"sc_prjt"> | Date | string | null
    prtc_aply_end_dt?: DateTimeNullableFilter<"sc_prjt"> | Date | string | null
    rsvt_stng_tf?: StringFilter<"sc_prjt"> | string
    prjt_bgng_dt?: DateTimeNullableFilter<"sc_prjt"> | Date | string | null
    prjt_end_dt?: DateTimeNullableFilter<"sc_prjt"> | Date | string | null
    main_logo_file_mng_no?: BigIntNullableFilter<"sc_prjt"> | bigint | number | null
    bgng_mebi_no?: IntFilter<"sc_prjt"> | number
    cmps_prgm_cnt?: IntFilter<"sc_prjt"> | number
    gnrl_prtpnt_cnt?: IntNullableFilter<"sc_prjt"> | number | null
    mng_prtpnt_cnt?: IntNullableFilter<"sc_prjt"> | number | null
    gnrl_fnsr_cnt?: IntNullableFilter<"sc_prjt"> | number | null
    mng_fnsr_cnt?: IntNullableFilter<"sc_prjt"> | number | null
    main_clr_val?: StringNullableFilter<"sc_prjt"> | string | null
    sub_clr_val?: StringNullableFilter<"sc_prjt"> | string | null
    add_clr_val?: StringNullableFilter<"sc_prjt"> | string | null
    regr_no?: IntFilter<"sc_prjt"> | number
    reg_dt?: DateTimeFilter<"sc_prjt"> | Date | string
    modr_no?: IntFilter<"sc_prjt"> | number
    mod_dt?: DateTimeFilter<"sc_prjt"> | Date | string
  }, "prjt_no">

  export type sc_prjtOrderByWithAggregationInput = {
    prjt_no?: SortOrder
    clco_no?: SortOrder
    prjt_nm?: SortOrder
    prjt_stts_cd?: SortOrder
    prtc_aply_stng_tf?: SortOrder
    prtc_aply_bgng_dt?: SortOrderInput | SortOrder
    prtc_aply_end_dt?: SortOrderInput | SortOrder
    rsvt_stng_tf?: SortOrder
    prjt_bgng_dt?: SortOrderInput | SortOrder
    prjt_end_dt?: SortOrderInput | SortOrder
    main_logo_file_mng_no?: SortOrderInput | SortOrder
    bgng_mebi_no?: SortOrder
    cmps_prgm_cnt?: SortOrder
    gnrl_prtpnt_cnt?: SortOrderInput | SortOrder
    mng_prtpnt_cnt?: SortOrderInput | SortOrder
    gnrl_fnsr_cnt?: SortOrderInput | SortOrder
    mng_fnsr_cnt?: SortOrderInput | SortOrder
    main_clr_val?: SortOrderInput | SortOrder
    sub_clr_val?: SortOrderInput | SortOrder
    add_clr_val?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sc_prjtCountOrderByAggregateInput
    _avg?: sc_prjtAvgOrderByAggregateInput
    _max?: sc_prjtMaxOrderByAggregateInput
    _min?: sc_prjtMinOrderByAggregateInput
    _sum?: sc_prjtSumOrderByAggregateInput
  }

  export type sc_prjtScalarWhereWithAggregatesInput = {
    AND?: sc_prjtScalarWhereWithAggregatesInput | sc_prjtScalarWhereWithAggregatesInput[]
    OR?: sc_prjtScalarWhereWithAggregatesInput[]
    NOT?: sc_prjtScalarWhereWithAggregatesInput | sc_prjtScalarWhereWithAggregatesInput[]
    prjt_no?: IntWithAggregatesFilter<"sc_prjt"> | number
    clco_no?: IntWithAggregatesFilter<"sc_prjt"> | number
    prjt_nm?: StringWithAggregatesFilter<"sc_prjt"> | string
    prjt_stts_cd?: StringWithAggregatesFilter<"sc_prjt"> | string
    prtc_aply_stng_tf?: StringWithAggregatesFilter<"sc_prjt"> | string
    prtc_aply_bgng_dt?: DateTimeNullableWithAggregatesFilter<"sc_prjt"> | Date | string | null
    prtc_aply_end_dt?: DateTimeNullableWithAggregatesFilter<"sc_prjt"> | Date | string | null
    rsvt_stng_tf?: StringWithAggregatesFilter<"sc_prjt"> | string
    prjt_bgng_dt?: DateTimeNullableWithAggregatesFilter<"sc_prjt"> | Date | string | null
    prjt_end_dt?: DateTimeNullableWithAggregatesFilter<"sc_prjt"> | Date | string | null
    main_logo_file_mng_no?: BigIntNullableWithAggregatesFilter<"sc_prjt"> | bigint | number | null
    bgng_mebi_no?: IntWithAggregatesFilter<"sc_prjt"> | number
    cmps_prgm_cnt?: IntWithAggregatesFilter<"sc_prjt"> | number
    gnrl_prtpnt_cnt?: IntNullableWithAggregatesFilter<"sc_prjt"> | number | null
    mng_prtpnt_cnt?: IntNullableWithAggregatesFilter<"sc_prjt"> | number | null
    gnrl_fnsr_cnt?: IntNullableWithAggregatesFilter<"sc_prjt"> | number | null
    mng_fnsr_cnt?: IntNullableWithAggregatesFilter<"sc_prjt"> | number | null
    main_clr_val?: StringNullableWithAggregatesFilter<"sc_prjt"> | string | null
    sub_clr_val?: StringNullableWithAggregatesFilter<"sc_prjt"> | string | null
    add_clr_val?: StringNullableWithAggregatesFilter<"sc_prjt"> | string | null
    regr_no?: IntWithAggregatesFilter<"sc_prjt"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sc_prjt"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sc_prjt"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sc_prjt"> | Date | string
  }

  export type sc_token_histWhereInput = {
    AND?: sc_token_histWhereInput | sc_token_histWhereInput[]
    OR?: sc_token_histWhereInput[]
    NOT?: sc_token_histWhereInput | sc_token_histWhereInput[]
    token_num?: BigIntFilter<"sc_token_hist"> | bigint | number
    access_token?: StringFilter<"sc_token_hist"> | string
    expiration_time?: DateTimeFilter<"sc_token_hist"> | Date | string
    reg_dt?: DateTimeFilter<"sc_token_hist"> | Date | string
    mod_dt?: DateTimeFilter<"sc_token_hist"> | Date | string
  }

  export type sc_token_histOrderByWithRelationInput = {
    token_num?: SortOrder
    access_token?: SortOrder
    expiration_time?: SortOrder
    reg_dt?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sc_token_histOrderByRelevanceInput
  }

  export type sc_token_histWhereUniqueInput = Prisma.AtLeast<{
    token_num?: bigint | number
    AND?: sc_token_histWhereInput | sc_token_histWhereInput[]
    OR?: sc_token_histWhereInput[]
    NOT?: sc_token_histWhereInput | sc_token_histWhereInput[]
    access_token?: StringFilter<"sc_token_hist"> | string
    expiration_time?: DateTimeFilter<"sc_token_hist"> | Date | string
    reg_dt?: DateTimeFilter<"sc_token_hist"> | Date | string
    mod_dt?: DateTimeFilter<"sc_token_hist"> | Date | string
  }, "token_num">

  export type sc_token_histOrderByWithAggregationInput = {
    token_num?: SortOrder
    access_token?: SortOrder
    expiration_time?: SortOrder
    reg_dt?: SortOrder
    mod_dt?: SortOrder
    _count?: sc_token_histCountOrderByAggregateInput
    _avg?: sc_token_histAvgOrderByAggregateInput
    _max?: sc_token_histMaxOrderByAggregateInput
    _min?: sc_token_histMinOrderByAggregateInput
    _sum?: sc_token_histSumOrderByAggregateInput
  }

  export type sc_token_histScalarWhereWithAggregatesInput = {
    AND?: sc_token_histScalarWhereWithAggregatesInput | sc_token_histScalarWhereWithAggregatesInput[]
    OR?: sc_token_histScalarWhereWithAggregatesInput[]
    NOT?: sc_token_histScalarWhereWithAggregatesInput | sc_token_histScalarWhereWithAggregatesInput[]
    token_num?: BigIntWithAggregatesFilter<"sc_token_hist"> | bigint | number
    access_token?: StringWithAggregatesFilter<"sc_token_hist"> | string
    expiration_time?: DateTimeWithAggregatesFilter<"sc_token_hist"> | Date | string
    reg_dt?: DateTimeWithAggregatesFilter<"sc_token_hist"> | Date | string
    mod_dt?: DateTimeWithAggregatesFilter<"sc_token_hist"> | Date | string
  }

  export type sv_faqWhereInput = {
    AND?: sv_faqWhereInput | sv_faqWhereInput[]
    OR?: sv_faqWhereInput[]
    NOT?: sv_faqWhereInput | sv_faqWhereInput[]
    faq_no?: IntFilter<"sv_faq"> | number
    clco_no?: IntFilter<"sv_faq"> | number
    progm_no?: IntFilter<"sv_faq"> | number
    faq_cate_cd?: StringFilter<"sv_faq"> | string
    expsr_div?: StringFilter<"sv_faq"> | string
    expsr_tf?: StringFilter<"sv_faq"> | string
    uprw_fix_tf?: StringFilter<"sv_faq"> | string
    faq_ttl?: StringFilter<"sv_faq"> | string
    faq_cont?: StringFilter<"sv_faq"> | string
    srch_weight?: IntFilter<"sv_faq"> | number
    mngr_memo?: StringNullableFilter<"sv_faq"> | string | null
    regr_no?: IntFilter<"sv_faq"> | number
    reg_dt?: DateTimeFilter<"sv_faq"> | Date | string
    modr_no?: IntFilter<"sv_faq"> | number
    mod_dt?: DateTimeFilter<"sv_faq"> | Date | string
  }

  export type sv_faqOrderByWithRelationInput = {
    faq_no?: SortOrder
    clco_no?: SortOrder
    progm_no?: SortOrder
    faq_cate_cd?: SortOrder
    expsr_div?: SortOrder
    expsr_tf?: SortOrder
    uprw_fix_tf?: SortOrder
    faq_ttl?: SortOrder
    faq_cont?: SortOrder
    srch_weight?: SortOrder
    mngr_memo?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sv_faqOrderByRelevanceInput
  }

  export type sv_faqWhereUniqueInput = Prisma.AtLeast<{
    faq_no?: number
    AND?: sv_faqWhereInput | sv_faqWhereInput[]
    OR?: sv_faqWhereInput[]
    NOT?: sv_faqWhereInput | sv_faqWhereInput[]
    clco_no?: IntFilter<"sv_faq"> | number
    progm_no?: IntFilter<"sv_faq"> | number
    faq_cate_cd?: StringFilter<"sv_faq"> | string
    expsr_div?: StringFilter<"sv_faq"> | string
    expsr_tf?: StringFilter<"sv_faq"> | string
    uprw_fix_tf?: StringFilter<"sv_faq"> | string
    faq_ttl?: StringFilter<"sv_faq"> | string
    faq_cont?: StringFilter<"sv_faq"> | string
    srch_weight?: IntFilter<"sv_faq"> | number
    mngr_memo?: StringNullableFilter<"sv_faq"> | string | null
    regr_no?: IntFilter<"sv_faq"> | number
    reg_dt?: DateTimeFilter<"sv_faq"> | Date | string
    modr_no?: IntFilter<"sv_faq"> | number
    mod_dt?: DateTimeFilter<"sv_faq"> | Date | string
  }, "faq_no">

  export type sv_faqOrderByWithAggregationInput = {
    faq_no?: SortOrder
    clco_no?: SortOrder
    progm_no?: SortOrder
    faq_cate_cd?: SortOrder
    expsr_div?: SortOrder
    expsr_tf?: SortOrder
    uprw_fix_tf?: SortOrder
    faq_ttl?: SortOrder
    faq_cont?: SortOrder
    srch_weight?: SortOrder
    mngr_memo?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_faqCountOrderByAggregateInput
    _avg?: sv_faqAvgOrderByAggregateInput
    _max?: sv_faqMaxOrderByAggregateInput
    _min?: sv_faqMinOrderByAggregateInput
    _sum?: sv_faqSumOrderByAggregateInput
  }

  export type sv_faqScalarWhereWithAggregatesInput = {
    AND?: sv_faqScalarWhereWithAggregatesInput | sv_faqScalarWhereWithAggregatesInput[]
    OR?: sv_faqScalarWhereWithAggregatesInput[]
    NOT?: sv_faqScalarWhereWithAggregatesInput | sv_faqScalarWhereWithAggregatesInput[]
    faq_no?: IntWithAggregatesFilter<"sv_faq"> | number
    clco_no?: IntWithAggregatesFilter<"sv_faq"> | number
    progm_no?: IntWithAggregatesFilter<"sv_faq"> | number
    faq_cate_cd?: StringWithAggregatesFilter<"sv_faq"> | string
    expsr_div?: StringWithAggregatesFilter<"sv_faq"> | string
    expsr_tf?: StringWithAggregatesFilter<"sv_faq"> | string
    uprw_fix_tf?: StringWithAggregatesFilter<"sv_faq"> | string
    faq_ttl?: StringWithAggregatesFilter<"sv_faq"> | string
    faq_cont?: StringWithAggregatesFilter<"sv_faq"> | string
    srch_weight?: IntWithAggregatesFilter<"sv_faq"> | number
    mngr_memo?: StringNullableWithAggregatesFilter<"sv_faq"> | string | null
    regr_no?: IntWithAggregatesFilter<"sv_faq"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_faq"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sv_faq"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_faq"> | Date | string
  }

  export type sv_faq_atch_fileWhereInput = {
    AND?: sv_faq_atch_fileWhereInput | sv_faq_atch_fileWhereInput[]
    OR?: sv_faq_atch_fileWhereInput[]
    NOT?: sv_faq_atch_fileWhereInput | sv_faq_atch_fileWhereInput[]
    faq_file_no?: IntFilter<"sv_faq_atch_file"> | number
    faq_no?: IntFilter<"sv_faq_atch_file"> | number
    atch_file_mng_no?: BigIntFilter<"sv_faq_atch_file"> | bigint | number
    regr_no?: IntFilter<"sv_faq_atch_file"> | number
    reg_dt?: DateTimeFilter<"sv_faq_atch_file"> | Date | string
    modr_no?: IntFilter<"sv_faq_atch_file"> | number
    mod_dt?: DateTimeFilter<"sv_faq_atch_file"> | Date | string
  }

  export type sv_faq_atch_fileOrderByWithRelationInput = {
    faq_file_no?: SortOrder
    faq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_atch_fileWhereUniqueInput = Prisma.AtLeast<{
    faq_file_no?: number
    AND?: sv_faq_atch_fileWhereInput | sv_faq_atch_fileWhereInput[]
    OR?: sv_faq_atch_fileWhereInput[]
    NOT?: sv_faq_atch_fileWhereInput | sv_faq_atch_fileWhereInput[]
    faq_no?: IntFilter<"sv_faq_atch_file"> | number
    atch_file_mng_no?: BigIntFilter<"sv_faq_atch_file"> | bigint | number
    regr_no?: IntFilter<"sv_faq_atch_file"> | number
    reg_dt?: DateTimeFilter<"sv_faq_atch_file"> | Date | string
    modr_no?: IntFilter<"sv_faq_atch_file"> | number
    mod_dt?: DateTimeFilter<"sv_faq_atch_file"> | Date | string
  }, "faq_file_no">

  export type sv_faq_atch_fileOrderByWithAggregationInput = {
    faq_file_no?: SortOrder
    faq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_faq_atch_fileCountOrderByAggregateInput
    _avg?: sv_faq_atch_fileAvgOrderByAggregateInput
    _max?: sv_faq_atch_fileMaxOrderByAggregateInput
    _min?: sv_faq_atch_fileMinOrderByAggregateInput
    _sum?: sv_faq_atch_fileSumOrderByAggregateInput
  }

  export type sv_faq_atch_fileScalarWhereWithAggregatesInput = {
    AND?: sv_faq_atch_fileScalarWhereWithAggregatesInput | sv_faq_atch_fileScalarWhereWithAggregatesInput[]
    OR?: sv_faq_atch_fileScalarWhereWithAggregatesInput[]
    NOT?: sv_faq_atch_fileScalarWhereWithAggregatesInput | sv_faq_atch_fileScalarWhereWithAggregatesInput[]
    faq_file_no?: IntWithAggregatesFilter<"sv_faq_atch_file"> | number
    faq_no?: IntWithAggregatesFilter<"sv_faq_atch_file"> | number
    atch_file_mng_no?: BigIntWithAggregatesFilter<"sv_faq_atch_file"> | bigint | number
    regr_no?: IntWithAggregatesFilter<"sv_faq_atch_file"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_faq_atch_file"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sv_faq_atch_file"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_faq_atch_file"> | Date | string
  }

  export type sv_faq_cate_cdWhereInput = {
    AND?: sv_faq_cate_cdWhereInput | sv_faq_cate_cdWhereInput[]
    OR?: sv_faq_cate_cdWhereInput[]
    NOT?: sv_faq_cate_cdWhereInput | sv_faq_cate_cdWhereInput[]
    progm_no?: IntFilter<"sv_faq_cate_cd"> | number
    cd?: StringFilter<"sv_faq_cate_cd"> | string
    cd_nm?: StringFilter<"sv_faq_cate_cd"> | string
    cd_desc?: StringNullableFilter<"sv_faq_cate_cd"> | string | null
    grp_cd?: StringFilter<"sv_faq_cate_cd"> | string
    clco_no?: IntFilter<"sv_faq_cate_cd"> | number
    sort_seq?: IntFilter<"sv_faq_cate_cd"> | number
    use_tf?: StringFilter<"sv_faq_cate_cd"> | string
    regr_no?: IntFilter<"sv_faq_cate_cd"> | number
    reg_dt?: DateTimeFilter<"sv_faq_cate_cd"> | Date | string
    modr_no?: IntFilter<"sv_faq_cate_cd"> | number
    mod_dt?: DateTimeFilter<"sv_faq_cate_cd"> | Date | string
  }

  export type sv_faq_cate_cdOrderByWithRelationInput = {
    progm_no?: SortOrder
    cd?: SortOrder
    cd_nm?: SortOrder
    cd_desc?: SortOrderInput | SortOrder
    grp_cd?: SortOrder
    clco_no?: SortOrder
    sort_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sv_faq_cate_cdOrderByRelevanceInput
  }

  export type sv_faq_cate_cdWhereUniqueInput = Prisma.AtLeast<{
    progm_no_cd?: sv_faq_cate_cdProgm_noCdCompoundUniqueInput
    AND?: sv_faq_cate_cdWhereInput | sv_faq_cate_cdWhereInput[]
    OR?: sv_faq_cate_cdWhereInput[]
    NOT?: sv_faq_cate_cdWhereInput | sv_faq_cate_cdWhereInput[]
    progm_no?: IntFilter<"sv_faq_cate_cd"> | number
    cd?: StringFilter<"sv_faq_cate_cd"> | string
    cd_nm?: StringFilter<"sv_faq_cate_cd"> | string
    cd_desc?: StringNullableFilter<"sv_faq_cate_cd"> | string | null
    grp_cd?: StringFilter<"sv_faq_cate_cd"> | string
    clco_no?: IntFilter<"sv_faq_cate_cd"> | number
    sort_seq?: IntFilter<"sv_faq_cate_cd"> | number
    use_tf?: StringFilter<"sv_faq_cate_cd"> | string
    regr_no?: IntFilter<"sv_faq_cate_cd"> | number
    reg_dt?: DateTimeFilter<"sv_faq_cate_cd"> | Date | string
    modr_no?: IntFilter<"sv_faq_cate_cd"> | number
    mod_dt?: DateTimeFilter<"sv_faq_cate_cd"> | Date | string
  }, "progm_no_cd">

  export type sv_faq_cate_cdOrderByWithAggregationInput = {
    progm_no?: SortOrder
    cd?: SortOrder
    cd_nm?: SortOrder
    cd_desc?: SortOrderInput | SortOrder
    grp_cd?: SortOrder
    clco_no?: SortOrder
    sort_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_faq_cate_cdCountOrderByAggregateInput
    _avg?: sv_faq_cate_cdAvgOrderByAggregateInput
    _max?: sv_faq_cate_cdMaxOrderByAggregateInput
    _min?: sv_faq_cate_cdMinOrderByAggregateInput
    _sum?: sv_faq_cate_cdSumOrderByAggregateInput
  }

  export type sv_faq_cate_cdScalarWhereWithAggregatesInput = {
    AND?: sv_faq_cate_cdScalarWhereWithAggregatesInput | sv_faq_cate_cdScalarWhereWithAggregatesInput[]
    OR?: sv_faq_cate_cdScalarWhereWithAggregatesInput[]
    NOT?: sv_faq_cate_cdScalarWhereWithAggregatesInput | sv_faq_cate_cdScalarWhereWithAggregatesInput[]
    progm_no?: IntWithAggregatesFilter<"sv_faq_cate_cd"> | number
    cd?: StringWithAggregatesFilter<"sv_faq_cate_cd"> | string
    cd_nm?: StringWithAggregatesFilter<"sv_faq_cate_cd"> | string
    cd_desc?: StringNullableWithAggregatesFilter<"sv_faq_cate_cd"> | string | null
    grp_cd?: StringWithAggregatesFilter<"sv_faq_cate_cd"> | string
    clco_no?: IntWithAggregatesFilter<"sv_faq_cate_cd"> | number
    sort_seq?: IntWithAggregatesFilter<"sv_faq_cate_cd"> | number
    use_tf?: StringWithAggregatesFilter<"sv_faq_cate_cd"> | string
    regr_no?: IntWithAggregatesFilter<"sv_faq_cate_cd"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_faq_cate_cd"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sv_faq_cate_cd"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_faq_cate_cd"> | Date | string
  }

  export type sv_faq_keywordWhereInput = {
    AND?: sv_faq_keywordWhereInput | sv_faq_keywordWhereInput[]
    OR?: sv_faq_keywordWhereInput[]
    NOT?: sv_faq_keywordWhereInput | sv_faq_keywordWhereInput[]
    faq_no?: IntFilter<"sv_faq_keyword"> | number
    keyword?: StringFilter<"sv_faq_keyword"> | string
    regr_no?: IntFilter<"sv_faq_keyword"> | number
    reg_dt?: DateTimeFilter<"sv_faq_keyword"> | Date | string
    modr_no?: IntFilter<"sv_faq_keyword"> | number
    mod_dt?: DateTimeFilter<"sv_faq_keyword"> | Date | string
  }

  export type sv_faq_keywordOrderByWithRelationInput = {
    faq_no?: SortOrder
    keyword?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sv_faq_keywordOrderByRelevanceInput
  }

  export type sv_faq_keywordWhereUniqueInput = Prisma.AtLeast<{
    faq_no_keyword?: sv_faq_keywordFaq_noKeywordCompoundUniqueInput
    AND?: sv_faq_keywordWhereInput | sv_faq_keywordWhereInput[]
    OR?: sv_faq_keywordWhereInput[]
    NOT?: sv_faq_keywordWhereInput | sv_faq_keywordWhereInput[]
    faq_no?: IntFilter<"sv_faq_keyword"> | number
    keyword?: StringFilter<"sv_faq_keyword"> | string
    regr_no?: IntFilter<"sv_faq_keyword"> | number
    reg_dt?: DateTimeFilter<"sv_faq_keyword"> | Date | string
    modr_no?: IntFilter<"sv_faq_keyword"> | number
    mod_dt?: DateTimeFilter<"sv_faq_keyword"> | Date | string
  }, "faq_no_keyword">

  export type sv_faq_keywordOrderByWithAggregationInput = {
    faq_no?: SortOrder
    keyword?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_faq_keywordCountOrderByAggregateInput
    _avg?: sv_faq_keywordAvgOrderByAggregateInput
    _max?: sv_faq_keywordMaxOrderByAggregateInput
    _min?: sv_faq_keywordMinOrderByAggregateInput
    _sum?: sv_faq_keywordSumOrderByAggregateInput
  }

  export type sv_faq_keywordScalarWhereWithAggregatesInput = {
    AND?: sv_faq_keywordScalarWhereWithAggregatesInput | sv_faq_keywordScalarWhereWithAggregatesInput[]
    OR?: sv_faq_keywordScalarWhereWithAggregatesInput[]
    NOT?: sv_faq_keywordScalarWhereWithAggregatesInput | sv_faq_keywordScalarWhereWithAggregatesInput[]
    faq_no?: IntWithAggregatesFilter<"sv_faq_keyword"> | number
    keyword?: StringWithAggregatesFilter<"sv_faq_keyword"> | string
    regr_no?: IntWithAggregatesFilter<"sv_faq_keyword"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_faq_keyword"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sv_faq_keyword"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_faq_keyword"> | Date | string
  }

  export type sv_faq_rel_faqWhereInput = {
    AND?: sv_faq_rel_faqWhereInput | sv_faq_rel_faqWhereInput[]
    OR?: sv_faq_rel_faqWhereInput[]
    NOT?: sv_faq_rel_faqWhereInput | sv_faq_rel_faqWhereInput[]
    faq_no?: IntFilter<"sv_faq_rel_faq"> | number
    rel_faq_no?: IntFilter<"sv_faq_rel_faq"> | number
    regr_no?: IntFilter<"sv_faq_rel_faq"> | number
    reg_dt?: DateTimeFilter<"sv_faq_rel_faq"> | Date | string
    modr_no?: IntFilter<"sv_faq_rel_faq"> | number
    mod_dt?: DateTimeFilter<"sv_faq_rel_faq"> | Date | string
  }

  export type sv_faq_rel_faqOrderByWithRelationInput = {
    faq_no?: SortOrder
    rel_faq_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_rel_faqWhereUniqueInput = Prisma.AtLeast<{
    faq_no_rel_faq_no?: sv_faq_rel_faqFaq_noRel_faq_noCompoundUniqueInput
    AND?: sv_faq_rel_faqWhereInput | sv_faq_rel_faqWhereInput[]
    OR?: sv_faq_rel_faqWhereInput[]
    NOT?: sv_faq_rel_faqWhereInput | sv_faq_rel_faqWhereInput[]
    faq_no?: IntFilter<"sv_faq_rel_faq"> | number
    rel_faq_no?: IntFilter<"sv_faq_rel_faq"> | number
    regr_no?: IntFilter<"sv_faq_rel_faq"> | number
    reg_dt?: DateTimeFilter<"sv_faq_rel_faq"> | Date | string
    modr_no?: IntFilter<"sv_faq_rel_faq"> | number
    mod_dt?: DateTimeFilter<"sv_faq_rel_faq"> | Date | string
  }, "faq_no_rel_faq_no">

  export type sv_faq_rel_faqOrderByWithAggregationInput = {
    faq_no?: SortOrder
    rel_faq_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_faq_rel_faqCountOrderByAggregateInput
    _avg?: sv_faq_rel_faqAvgOrderByAggregateInput
    _max?: sv_faq_rel_faqMaxOrderByAggregateInput
    _min?: sv_faq_rel_faqMinOrderByAggregateInput
    _sum?: sv_faq_rel_faqSumOrderByAggregateInput
  }

  export type sv_faq_rel_faqScalarWhereWithAggregatesInput = {
    AND?: sv_faq_rel_faqScalarWhereWithAggregatesInput | sv_faq_rel_faqScalarWhereWithAggregatesInput[]
    OR?: sv_faq_rel_faqScalarWhereWithAggregatesInput[]
    NOT?: sv_faq_rel_faqScalarWhereWithAggregatesInput | sv_faq_rel_faqScalarWhereWithAggregatesInput[]
    faq_no?: IntWithAggregatesFilter<"sv_faq_rel_faq"> | number
    rel_faq_no?: IntWithAggregatesFilter<"sv_faq_rel_faq"> | number
    regr_no?: IntWithAggregatesFilter<"sv_faq_rel_faq"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_faq_rel_faq"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sv_faq_rel_faq"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_faq_rel_faq"> | Date | string
  }

  export type sv_inqWhereInput = {
    AND?: sv_inqWhereInput | sv_inqWhereInput[]
    OR?: sv_inqWhereInput[]
    NOT?: sv_inqWhereInput | sv_inqWhereInput[]
    inq_no?: BigIntFilter<"sv_inq"> | bigint | number
    inq_mbr_no?: BigIntFilter<"sv_inq"> | bigint | number
    clco_no?: IntFilter<"sv_inq"> | number
    clco_dept_cd?: StringNullableFilter<"sv_inq"> | string | null
    inq_clsf_no?: IntFilter<"sv_inq"> | number
    inq_ttl?: StringFilter<"sv_inq"> | string
    inq_cont?: StringFilter<"sv_inq"> | string
    rls_tf?: StringFilter<"sv_inq"> | string
    ans_stts_cd?: StringFilter<"sv_inq"> | string
    regr_no?: BigIntFilter<"sv_inq"> | bigint | number
    reg_dt?: DateTimeFilter<"sv_inq"> | Date | string
    modr_no?: BigIntFilter<"sv_inq"> | bigint | number
    mod_dt?: DateTimeFilter<"sv_inq"> | Date | string
  }

  export type sv_inqOrderByWithRelationInput = {
    inq_no?: SortOrder
    inq_mbr_no?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrderInput | SortOrder
    inq_clsf_no?: SortOrder
    inq_ttl?: SortOrder
    inq_cont?: SortOrder
    rls_tf?: SortOrder
    ans_stts_cd?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sv_inqOrderByRelevanceInput
  }

  export type sv_inqWhereUniqueInput = Prisma.AtLeast<{
    inq_no?: bigint | number
    AND?: sv_inqWhereInput | sv_inqWhereInput[]
    OR?: sv_inqWhereInput[]
    NOT?: sv_inqWhereInput | sv_inqWhereInput[]
    inq_mbr_no?: BigIntFilter<"sv_inq"> | bigint | number
    clco_no?: IntFilter<"sv_inq"> | number
    clco_dept_cd?: StringNullableFilter<"sv_inq"> | string | null
    inq_clsf_no?: IntFilter<"sv_inq"> | number
    inq_ttl?: StringFilter<"sv_inq"> | string
    inq_cont?: StringFilter<"sv_inq"> | string
    rls_tf?: StringFilter<"sv_inq"> | string
    ans_stts_cd?: StringFilter<"sv_inq"> | string
    regr_no?: BigIntFilter<"sv_inq"> | bigint | number
    reg_dt?: DateTimeFilter<"sv_inq"> | Date | string
    modr_no?: BigIntFilter<"sv_inq"> | bigint | number
    mod_dt?: DateTimeFilter<"sv_inq"> | Date | string
  }, "inq_no">

  export type sv_inqOrderByWithAggregationInput = {
    inq_no?: SortOrder
    inq_mbr_no?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrderInput | SortOrder
    inq_clsf_no?: SortOrder
    inq_ttl?: SortOrder
    inq_cont?: SortOrder
    rls_tf?: SortOrder
    ans_stts_cd?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_inqCountOrderByAggregateInput
    _avg?: sv_inqAvgOrderByAggregateInput
    _max?: sv_inqMaxOrderByAggregateInput
    _min?: sv_inqMinOrderByAggregateInput
    _sum?: sv_inqSumOrderByAggregateInput
  }

  export type sv_inqScalarWhereWithAggregatesInput = {
    AND?: sv_inqScalarWhereWithAggregatesInput | sv_inqScalarWhereWithAggregatesInput[]
    OR?: sv_inqScalarWhereWithAggregatesInput[]
    NOT?: sv_inqScalarWhereWithAggregatesInput | sv_inqScalarWhereWithAggregatesInput[]
    inq_no?: BigIntWithAggregatesFilter<"sv_inq"> | bigint | number
    inq_mbr_no?: BigIntWithAggregatesFilter<"sv_inq"> | bigint | number
    clco_no?: IntWithAggregatesFilter<"sv_inq"> | number
    clco_dept_cd?: StringNullableWithAggregatesFilter<"sv_inq"> | string | null
    inq_clsf_no?: IntWithAggregatesFilter<"sv_inq"> | number
    inq_ttl?: StringWithAggregatesFilter<"sv_inq"> | string
    inq_cont?: StringWithAggregatesFilter<"sv_inq"> | string
    rls_tf?: StringWithAggregatesFilter<"sv_inq"> | string
    ans_stts_cd?: StringWithAggregatesFilter<"sv_inq"> | string
    regr_no?: BigIntWithAggregatesFilter<"sv_inq"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_inq"> | Date | string
    modr_no?: BigIntWithAggregatesFilter<"sv_inq"> | bigint | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_inq"> | Date | string
  }

  export type sv_inq_ansWhereInput = {
    AND?: sv_inq_ansWhereInput | sv_inq_ansWhereInput[]
    OR?: sv_inq_ansWhereInput[]
    NOT?: sv_inq_ansWhereInput | sv_inq_ansWhereInput[]
    ans_no?: BigIntFilter<"sv_inq_ans"> | bigint | number
    inq_no?: BigIntFilter<"sv_inq_ans"> | bigint | number
    ans_mngr_no?: IntFilter<"sv_inq_ans"> | number
    ans_cont?: StringFilter<"sv_inq_ans"> | string
    regr_no?: IntFilter<"sv_inq_ans"> | number
    reg_dt?: DateTimeFilter<"sv_inq_ans"> | Date | string
    modr_no?: IntFilter<"sv_inq_ans"> | number
    mod_dt?: DateTimeFilter<"sv_inq_ans"> | Date | string
  }

  export type sv_inq_ansOrderByWithRelationInput = {
    ans_no?: SortOrder
    inq_no?: SortOrder
    ans_mngr_no?: SortOrder
    ans_cont?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sv_inq_ansOrderByRelevanceInput
  }

  export type sv_inq_ansWhereUniqueInput = Prisma.AtLeast<{
    ans_no?: bigint | number
    AND?: sv_inq_ansWhereInput | sv_inq_ansWhereInput[]
    OR?: sv_inq_ansWhereInput[]
    NOT?: sv_inq_ansWhereInput | sv_inq_ansWhereInput[]
    inq_no?: BigIntFilter<"sv_inq_ans"> | bigint | number
    ans_mngr_no?: IntFilter<"sv_inq_ans"> | number
    ans_cont?: StringFilter<"sv_inq_ans"> | string
    regr_no?: IntFilter<"sv_inq_ans"> | number
    reg_dt?: DateTimeFilter<"sv_inq_ans"> | Date | string
    modr_no?: IntFilter<"sv_inq_ans"> | number
    mod_dt?: DateTimeFilter<"sv_inq_ans"> | Date | string
  }, "ans_no">

  export type sv_inq_ansOrderByWithAggregationInput = {
    ans_no?: SortOrder
    inq_no?: SortOrder
    ans_mngr_no?: SortOrder
    ans_cont?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_inq_ansCountOrderByAggregateInput
    _avg?: sv_inq_ansAvgOrderByAggregateInput
    _max?: sv_inq_ansMaxOrderByAggregateInput
    _min?: sv_inq_ansMinOrderByAggregateInput
    _sum?: sv_inq_ansSumOrderByAggregateInput
  }

  export type sv_inq_ansScalarWhereWithAggregatesInput = {
    AND?: sv_inq_ansScalarWhereWithAggregatesInput | sv_inq_ansScalarWhereWithAggregatesInput[]
    OR?: sv_inq_ansScalarWhereWithAggregatesInput[]
    NOT?: sv_inq_ansScalarWhereWithAggregatesInput | sv_inq_ansScalarWhereWithAggregatesInput[]
    ans_no?: BigIntWithAggregatesFilter<"sv_inq_ans"> | bigint | number
    inq_no?: BigIntWithAggregatesFilter<"sv_inq_ans"> | bigint | number
    ans_mngr_no?: IntWithAggregatesFilter<"sv_inq_ans"> | number
    ans_cont?: StringWithAggregatesFilter<"sv_inq_ans"> | string
    regr_no?: IntWithAggregatesFilter<"sv_inq_ans"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_inq_ans"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sv_inq_ans"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_inq_ans"> | Date | string
  }

  export type sv_inq_atch_fileWhereInput = {
    AND?: sv_inq_atch_fileWhereInput | sv_inq_atch_fileWhereInput[]
    OR?: sv_inq_atch_fileWhereInput[]
    NOT?: sv_inq_atch_fileWhereInput | sv_inq_atch_fileWhereInput[]
    atch_file_no?: BigIntFilter<"sv_inq_atch_file"> | bigint | number
    inq_no?: BigIntFilter<"sv_inq_atch_file"> | bigint | number
    atch_file_mng_no?: BigIntFilter<"sv_inq_atch_file"> | bigint | number
    regr_no?: BigIntFilter<"sv_inq_atch_file"> | bigint | number
    reg_dt?: DateTimeFilter<"sv_inq_atch_file"> | Date | string
    modr_no?: BigIntFilter<"sv_inq_atch_file"> | bigint | number
    mod_dt?: DateTimeFilter<"sv_inq_atch_file"> | Date | string
  }

  export type sv_inq_atch_fileOrderByWithRelationInput = {
    atch_file_no?: SortOrder
    inq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inq_atch_fileWhereUniqueInput = Prisma.AtLeast<{
    atch_file_no?: bigint | number
    AND?: sv_inq_atch_fileWhereInput | sv_inq_atch_fileWhereInput[]
    OR?: sv_inq_atch_fileWhereInput[]
    NOT?: sv_inq_atch_fileWhereInput | sv_inq_atch_fileWhereInput[]
    inq_no?: BigIntFilter<"sv_inq_atch_file"> | bigint | number
    atch_file_mng_no?: BigIntFilter<"sv_inq_atch_file"> | bigint | number
    regr_no?: BigIntFilter<"sv_inq_atch_file"> | bigint | number
    reg_dt?: DateTimeFilter<"sv_inq_atch_file"> | Date | string
    modr_no?: BigIntFilter<"sv_inq_atch_file"> | bigint | number
    mod_dt?: DateTimeFilter<"sv_inq_atch_file"> | Date | string
  }, "atch_file_no">

  export type sv_inq_atch_fileOrderByWithAggregationInput = {
    atch_file_no?: SortOrder
    inq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_inq_atch_fileCountOrderByAggregateInput
    _avg?: sv_inq_atch_fileAvgOrderByAggregateInput
    _max?: sv_inq_atch_fileMaxOrderByAggregateInput
    _min?: sv_inq_atch_fileMinOrderByAggregateInput
    _sum?: sv_inq_atch_fileSumOrderByAggregateInput
  }

  export type sv_inq_atch_fileScalarWhereWithAggregatesInput = {
    AND?: sv_inq_atch_fileScalarWhereWithAggregatesInput | sv_inq_atch_fileScalarWhereWithAggregatesInput[]
    OR?: sv_inq_atch_fileScalarWhereWithAggregatesInput[]
    NOT?: sv_inq_atch_fileScalarWhereWithAggregatesInput | sv_inq_atch_fileScalarWhereWithAggregatesInput[]
    atch_file_no?: BigIntWithAggregatesFilter<"sv_inq_atch_file"> | bigint | number
    inq_no?: BigIntWithAggregatesFilter<"sv_inq_atch_file"> | bigint | number
    atch_file_mng_no?: BigIntWithAggregatesFilter<"sv_inq_atch_file"> | bigint | number
    regr_no?: BigIntWithAggregatesFilter<"sv_inq_atch_file"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_inq_atch_file"> | Date | string
    modr_no?: BigIntWithAggregatesFilter<"sv_inq_atch_file"> | bigint | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_inq_atch_file"> | Date | string
  }

  export type sv_inq_clsfWhereInput = {
    AND?: sv_inq_clsfWhereInput | sv_inq_clsfWhereInput[]
    OR?: sv_inq_clsfWhereInput[]
    NOT?: sv_inq_clsfWhereInput | sv_inq_clsfWhereInput[]
    inq_clsf_no?: IntFilter<"sv_inq_clsf"> | number
    clco_no?: IntFilter<"sv_inq_clsf"> | number
    inq_clsf_nm?: StringFilter<"sv_inq_clsf"> | string
    expsr_seq?: IntFilter<"sv_inq_clsf"> | number
    use_tf?: StringFilter<"sv_inq_clsf"> | string
    regr_no?: IntFilter<"sv_inq_clsf"> | number
    reg_dt?: DateTimeFilter<"sv_inq_clsf"> | Date | string
    modr_no?: IntFilter<"sv_inq_clsf"> | number
    mod_dt?: DateTimeFilter<"sv_inq_clsf"> | Date | string
  }

  export type sv_inq_clsfOrderByWithRelationInput = {
    inq_clsf_no?: SortOrder
    clco_no?: SortOrder
    inq_clsf_nm?: SortOrder
    expsr_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sv_inq_clsfOrderByRelevanceInput
  }

  export type sv_inq_clsfWhereUniqueInput = Prisma.AtLeast<{
    inq_clsf_no?: number
    AND?: sv_inq_clsfWhereInput | sv_inq_clsfWhereInput[]
    OR?: sv_inq_clsfWhereInput[]
    NOT?: sv_inq_clsfWhereInput | sv_inq_clsfWhereInput[]
    clco_no?: IntFilter<"sv_inq_clsf"> | number
    inq_clsf_nm?: StringFilter<"sv_inq_clsf"> | string
    expsr_seq?: IntFilter<"sv_inq_clsf"> | number
    use_tf?: StringFilter<"sv_inq_clsf"> | string
    regr_no?: IntFilter<"sv_inq_clsf"> | number
    reg_dt?: DateTimeFilter<"sv_inq_clsf"> | Date | string
    modr_no?: IntFilter<"sv_inq_clsf"> | number
    mod_dt?: DateTimeFilter<"sv_inq_clsf"> | Date | string
  }, "inq_clsf_no">

  export type sv_inq_clsfOrderByWithAggregationInput = {
    inq_clsf_no?: SortOrder
    clco_no?: SortOrder
    inq_clsf_nm?: SortOrder
    expsr_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_inq_clsfCountOrderByAggregateInput
    _avg?: sv_inq_clsfAvgOrderByAggregateInput
    _max?: sv_inq_clsfMaxOrderByAggregateInput
    _min?: sv_inq_clsfMinOrderByAggregateInput
    _sum?: sv_inq_clsfSumOrderByAggregateInput
  }

  export type sv_inq_clsfScalarWhereWithAggregatesInput = {
    AND?: sv_inq_clsfScalarWhereWithAggregatesInput | sv_inq_clsfScalarWhereWithAggregatesInput[]
    OR?: sv_inq_clsfScalarWhereWithAggregatesInput[]
    NOT?: sv_inq_clsfScalarWhereWithAggregatesInput | sv_inq_clsfScalarWhereWithAggregatesInput[]
    inq_clsf_no?: IntWithAggregatesFilter<"sv_inq_clsf"> | number
    clco_no?: IntWithAggregatesFilter<"sv_inq_clsf"> | number
    inq_clsf_nm?: StringWithAggregatesFilter<"sv_inq_clsf"> | string
    expsr_seq?: IntWithAggregatesFilter<"sv_inq_clsf"> | number
    use_tf?: StringWithAggregatesFilter<"sv_inq_clsf"> | string
    regr_no?: IntWithAggregatesFilter<"sv_inq_clsf"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_inq_clsf"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sv_inq_clsf"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_inq_clsf"> | Date | string
  }

  export type sv_ntcWhereInput = {
    AND?: sv_ntcWhereInput | sv_ntcWhereInput[]
    OR?: sv_ntcWhereInput[]
    NOT?: sv_ntcWhereInput | sv_ntcWhereInput[]
    ntc_no?: IntFilter<"sv_ntc"> | number
    clco_no?: IntFilter<"sv_ntc"> | number
    prjt_no?: IntNullableFilter<"sv_ntc"> | number | null
    expsr_tf?: StringFilter<"sv_ntc"> | string
    uprw_fix_tf?: StringFilter<"sv_ntc"> | string
    ntc_ttl?: StringFilter<"sv_ntc"> | string
    expsr_end_dt_stng_tf?: StringFilter<"sv_ntc"> | string
    expsr_bgng_dt?: DateTimeFilter<"sv_ntc"> | Date | string
    expsr_end_dt?: DateTimeFilter<"sv_ntc"> | Date | string
    ntc_cont?: StringFilter<"sv_ntc"> | string
    regr_no?: IntFilter<"sv_ntc"> | number
    reg_dt?: DateTimeFilter<"sv_ntc"> | Date | string
    modr_no?: IntFilter<"sv_ntc"> | number
    mod_dt?: DateTimeFilter<"sv_ntc"> | Date | string
  }

  export type sv_ntcOrderByWithRelationInput = {
    ntc_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrderInput | SortOrder
    expsr_tf?: SortOrder
    uprw_fix_tf?: SortOrder
    ntc_ttl?: SortOrder
    expsr_end_dt_stng_tf?: SortOrder
    expsr_bgng_dt?: SortOrder
    expsr_end_dt?: SortOrder
    ntc_cont?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sv_ntcOrderByRelevanceInput
  }

  export type sv_ntcWhereUniqueInput = Prisma.AtLeast<{
    ntc_no?: number
    AND?: sv_ntcWhereInput | sv_ntcWhereInput[]
    OR?: sv_ntcWhereInput[]
    NOT?: sv_ntcWhereInput | sv_ntcWhereInput[]
    clco_no?: IntFilter<"sv_ntc"> | number
    prjt_no?: IntNullableFilter<"sv_ntc"> | number | null
    expsr_tf?: StringFilter<"sv_ntc"> | string
    uprw_fix_tf?: StringFilter<"sv_ntc"> | string
    ntc_ttl?: StringFilter<"sv_ntc"> | string
    expsr_end_dt_stng_tf?: StringFilter<"sv_ntc"> | string
    expsr_bgng_dt?: DateTimeFilter<"sv_ntc"> | Date | string
    expsr_end_dt?: DateTimeFilter<"sv_ntc"> | Date | string
    ntc_cont?: StringFilter<"sv_ntc"> | string
    regr_no?: IntFilter<"sv_ntc"> | number
    reg_dt?: DateTimeFilter<"sv_ntc"> | Date | string
    modr_no?: IntFilter<"sv_ntc"> | number
    mod_dt?: DateTimeFilter<"sv_ntc"> | Date | string
  }, "ntc_no">

  export type sv_ntcOrderByWithAggregationInput = {
    ntc_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrderInput | SortOrder
    expsr_tf?: SortOrder
    uprw_fix_tf?: SortOrder
    ntc_ttl?: SortOrder
    expsr_end_dt_stng_tf?: SortOrder
    expsr_bgng_dt?: SortOrder
    expsr_end_dt?: SortOrder
    ntc_cont?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_ntcCountOrderByAggregateInput
    _avg?: sv_ntcAvgOrderByAggregateInput
    _max?: sv_ntcMaxOrderByAggregateInput
    _min?: sv_ntcMinOrderByAggregateInput
    _sum?: sv_ntcSumOrderByAggregateInput
  }

  export type sv_ntcScalarWhereWithAggregatesInput = {
    AND?: sv_ntcScalarWhereWithAggregatesInput | sv_ntcScalarWhereWithAggregatesInput[]
    OR?: sv_ntcScalarWhereWithAggregatesInput[]
    NOT?: sv_ntcScalarWhereWithAggregatesInput | sv_ntcScalarWhereWithAggregatesInput[]
    ntc_no?: IntWithAggregatesFilter<"sv_ntc"> | number
    clco_no?: IntWithAggregatesFilter<"sv_ntc"> | number
    prjt_no?: IntNullableWithAggregatesFilter<"sv_ntc"> | number | null
    expsr_tf?: StringWithAggregatesFilter<"sv_ntc"> | string
    uprw_fix_tf?: StringWithAggregatesFilter<"sv_ntc"> | string
    ntc_ttl?: StringWithAggregatesFilter<"sv_ntc"> | string
    expsr_end_dt_stng_tf?: StringWithAggregatesFilter<"sv_ntc"> | string
    expsr_bgng_dt?: DateTimeWithAggregatesFilter<"sv_ntc"> | Date | string
    expsr_end_dt?: DateTimeWithAggregatesFilter<"sv_ntc"> | Date | string
    ntc_cont?: StringWithAggregatesFilter<"sv_ntc"> | string
    regr_no?: IntWithAggregatesFilter<"sv_ntc"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_ntc"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sv_ntc"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_ntc"> | Date | string
  }

  export type sv_ntc_atch_fileWhereInput = {
    AND?: sv_ntc_atch_fileWhereInput | sv_ntc_atch_fileWhereInput[]
    OR?: sv_ntc_atch_fileWhereInput[]
    NOT?: sv_ntc_atch_fileWhereInput | sv_ntc_atch_fileWhereInput[]
    atch_file_no?: IntFilter<"sv_ntc_atch_file"> | number
    ntc_no?: IntFilter<"sv_ntc_atch_file"> | number
    atch_file_mng_no?: BigIntFilter<"sv_ntc_atch_file"> | bigint | number
    regr_no?: IntFilter<"sv_ntc_atch_file"> | number
    reg_dt?: DateTimeFilter<"sv_ntc_atch_file"> | Date | string
    modr_no?: IntFilter<"sv_ntc_atch_file"> | number
    mod_dt?: DateTimeFilter<"sv_ntc_atch_file"> | Date | string
  }

  export type sv_ntc_atch_fileOrderByWithRelationInput = {
    atch_file_no?: SortOrder
    ntc_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_ntc_atch_fileWhereUniqueInput = Prisma.AtLeast<{
    atch_file_no?: number
    AND?: sv_ntc_atch_fileWhereInput | sv_ntc_atch_fileWhereInput[]
    OR?: sv_ntc_atch_fileWhereInput[]
    NOT?: sv_ntc_atch_fileWhereInput | sv_ntc_atch_fileWhereInput[]
    ntc_no?: IntFilter<"sv_ntc_atch_file"> | number
    atch_file_mng_no?: BigIntFilter<"sv_ntc_atch_file"> | bigint | number
    regr_no?: IntFilter<"sv_ntc_atch_file"> | number
    reg_dt?: DateTimeFilter<"sv_ntc_atch_file"> | Date | string
    modr_no?: IntFilter<"sv_ntc_atch_file"> | number
    mod_dt?: DateTimeFilter<"sv_ntc_atch_file"> | Date | string
  }, "atch_file_no">

  export type sv_ntc_atch_fileOrderByWithAggregationInput = {
    atch_file_no?: SortOrder
    ntc_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_ntc_atch_fileCountOrderByAggregateInput
    _avg?: sv_ntc_atch_fileAvgOrderByAggregateInput
    _max?: sv_ntc_atch_fileMaxOrderByAggregateInput
    _min?: sv_ntc_atch_fileMinOrderByAggregateInput
    _sum?: sv_ntc_atch_fileSumOrderByAggregateInput
  }

  export type sv_ntc_atch_fileScalarWhereWithAggregatesInput = {
    AND?: sv_ntc_atch_fileScalarWhereWithAggregatesInput | sv_ntc_atch_fileScalarWhereWithAggregatesInput[]
    OR?: sv_ntc_atch_fileScalarWhereWithAggregatesInput[]
    NOT?: sv_ntc_atch_fileScalarWhereWithAggregatesInput | sv_ntc_atch_fileScalarWhereWithAggregatesInput[]
    atch_file_no?: IntWithAggregatesFilter<"sv_ntc_atch_file"> | number
    ntc_no?: IntWithAggregatesFilter<"sv_ntc_atch_file"> | number
    atch_file_mng_no?: BigIntWithAggregatesFilter<"sv_ntc_atch_file"> | bigint | number
    regr_no?: IntWithAggregatesFilter<"sv_ntc_atch_file"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_ntc_atch_file"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sv_ntc_atch_file"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_ntc_atch_file"> | Date | string
  }

  export type sv_popupWhereInput = {
    AND?: sv_popupWhereInput | sv_popupWhereInput[]
    OR?: sv_popupWhereInput[]
    NOT?: sv_popupWhereInput | sv_popupWhereInput[]
    popup_no?: BigIntFilter<"sv_popup"> | bigint | number
    clco_no?: BigIntFilter<"sv_popup"> | bigint | number
    prjt_no?: BigIntFilter<"sv_popup"> | bigint | number
    ttl?: StringFilter<"sv_popup"> | string
    expsr_tf?: StringFilter<"sv_popup"> | string
    expsr_bgng_ymd?: DateTimeFilter<"sv_popup"> | Date | string
    expsr_end_ymd?: DateTimeFilter<"sv_popup"> | Date | string
    img_file_mng_no?: BigIntFilter<"sv_popup"> | bigint | number
    cls_btn_use_tf?: StringFilter<"sv_popup"> | string
    re_expsr_phbt_cd?: StringFilter<"sv_popup"> | string
    btn_stng_cd?: StringFilter<"sv_popup"> | string
    popup_tp_cd?: StringFilter<"sv_popup"> | string
    dtl_url?: StringNullableFilter<"sv_popup"> | string | null
    regr_no?: BigIntFilter<"sv_popup"> | bigint | number
    reg_dt?: DateTimeFilter<"sv_popup"> | Date | string
    modr_no?: BigIntFilter<"sv_popup"> | bigint | number
    mod_dt?: DateTimeFilter<"sv_popup"> | Date | string
  }

  export type sv_popupOrderByWithRelationInput = {
    popup_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    ttl?: SortOrder
    expsr_tf?: SortOrder
    expsr_bgng_ymd?: SortOrder
    expsr_end_ymd?: SortOrder
    img_file_mng_no?: SortOrder
    cls_btn_use_tf?: SortOrder
    re_expsr_phbt_cd?: SortOrder
    btn_stng_cd?: SortOrder
    popup_tp_cd?: SortOrder
    dtl_url?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sv_popupOrderByRelevanceInput
  }

  export type sv_popupWhereUniqueInput = Prisma.AtLeast<{
    popup_no?: bigint | number
    AND?: sv_popupWhereInput | sv_popupWhereInput[]
    OR?: sv_popupWhereInput[]
    NOT?: sv_popupWhereInput | sv_popupWhereInput[]
    clco_no?: BigIntFilter<"sv_popup"> | bigint | number
    prjt_no?: BigIntFilter<"sv_popup"> | bigint | number
    ttl?: StringFilter<"sv_popup"> | string
    expsr_tf?: StringFilter<"sv_popup"> | string
    expsr_bgng_ymd?: DateTimeFilter<"sv_popup"> | Date | string
    expsr_end_ymd?: DateTimeFilter<"sv_popup"> | Date | string
    img_file_mng_no?: BigIntFilter<"sv_popup"> | bigint | number
    cls_btn_use_tf?: StringFilter<"sv_popup"> | string
    re_expsr_phbt_cd?: StringFilter<"sv_popup"> | string
    btn_stng_cd?: StringFilter<"sv_popup"> | string
    popup_tp_cd?: StringFilter<"sv_popup"> | string
    dtl_url?: StringNullableFilter<"sv_popup"> | string | null
    regr_no?: BigIntFilter<"sv_popup"> | bigint | number
    reg_dt?: DateTimeFilter<"sv_popup"> | Date | string
    modr_no?: BigIntFilter<"sv_popup"> | bigint | number
    mod_dt?: DateTimeFilter<"sv_popup"> | Date | string
  }, "popup_no">

  export type sv_popupOrderByWithAggregationInput = {
    popup_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    ttl?: SortOrder
    expsr_tf?: SortOrder
    expsr_bgng_ymd?: SortOrder
    expsr_end_ymd?: SortOrder
    img_file_mng_no?: SortOrder
    cls_btn_use_tf?: SortOrder
    re_expsr_phbt_cd?: SortOrder
    btn_stng_cd?: SortOrder
    popup_tp_cd?: SortOrder
    dtl_url?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_popupCountOrderByAggregateInput
    _avg?: sv_popupAvgOrderByAggregateInput
    _max?: sv_popupMaxOrderByAggregateInput
    _min?: sv_popupMinOrderByAggregateInput
    _sum?: sv_popupSumOrderByAggregateInput
  }

  export type sv_popupScalarWhereWithAggregatesInput = {
    AND?: sv_popupScalarWhereWithAggregatesInput | sv_popupScalarWhereWithAggregatesInput[]
    OR?: sv_popupScalarWhereWithAggregatesInput[]
    NOT?: sv_popupScalarWhereWithAggregatesInput | sv_popupScalarWhereWithAggregatesInput[]
    popup_no?: BigIntWithAggregatesFilter<"sv_popup"> | bigint | number
    clco_no?: BigIntWithAggregatesFilter<"sv_popup"> | bigint | number
    prjt_no?: BigIntWithAggregatesFilter<"sv_popup"> | bigint | number
    ttl?: StringWithAggregatesFilter<"sv_popup"> | string
    expsr_tf?: StringWithAggregatesFilter<"sv_popup"> | string
    expsr_bgng_ymd?: DateTimeWithAggregatesFilter<"sv_popup"> | Date | string
    expsr_end_ymd?: DateTimeWithAggregatesFilter<"sv_popup"> | Date | string
    img_file_mng_no?: BigIntWithAggregatesFilter<"sv_popup"> | bigint | number
    cls_btn_use_tf?: StringWithAggregatesFilter<"sv_popup"> | string
    re_expsr_phbt_cd?: StringWithAggregatesFilter<"sv_popup"> | string
    btn_stng_cd?: StringWithAggregatesFilter<"sv_popup"> | string
    popup_tp_cd?: StringWithAggregatesFilter<"sv_popup"> | string
    dtl_url?: StringNullableWithAggregatesFilter<"sv_popup"> | string | null
    regr_no?: BigIntWithAggregatesFilter<"sv_popup"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_popup"> | Date | string
    modr_no?: BigIntWithAggregatesFilter<"sv_popup"> | bigint | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_popup"> | Date | string
  }

  export type sv_progmWhereInput = {
    AND?: sv_progmWhereInput | sv_progmWhereInput[]
    OR?: sv_progmWhereInput[]
    NOT?: sv_progmWhereInput | sv_progmWhereInput[]
    progm_no?: IntFilter<"sv_progm"> | number
    clco_no?: IntFilter<"sv_progm"> | number
    progm_nm?: StringFilter<"sv_progm"> | string
    mngr_memo?: StringNullableFilter<"sv_progm"> | string | null
    regr_no?: IntFilter<"sv_progm"> | number
    reg_dt?: DateTimeFilter<"sv_progm"> | Date | string
    modr_no?: IntFilter<"sv_progm"> | number
    mod_dt?: DateTimeFilter<"sv_progm"> | Date | string
  }

  export type sv_progmOrderByWithRelationInput = {
    progm_no?: SortOrder
    clco_no?: SortOrder
    progm_nm?: SortOrder
    mngr_memo?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sv_progmOrderByRelevanceInput
  }

  export type sv_progmWhereUniqueInput = Prisma.AtLeast<{
    progm_no?: number
    AND?: sv_progmWhereInput | sv_progmWhereInput[]
    OR?: sv_progmWhereInput[]
    NOT?: sv_progmWhereInput | sv_progmWhereInput[]
    clco_no?: IntFilter<"sv_progm"> | number
    progm_nm?: StringFilter<"sv_progm"> | string
    mngr_memo?: StringNullableFilter<"sv_progm"> | string | null
    regr_no?: IntFilter<"sv_progm"> | number
    reg_dt?: DateTimeFilter<"sv_progm"> | Date | string
    modr_no?: IntFilter<"sv_progm"> | number
    mod_dt?: DateTimeFilter<"sv_progm"> | Date | string
  }, "progm_no">

  export type sv_progmOrderByWithAggregationInput = {
    progm_no?: SortOrder
    clco_no?: SortOrder
    progm_nm?: SortOrder
    mngr_memo?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_progmCountOrderByAggregateInput
    _avg?: sv_progmAvgOrderByAggregateInput
    _max?: sv_progmMaxOrderByAggregateInput
    _min?: sv_progmMinOrderByAggregateInput
    _sum?: sv_progmSumOrderByAggregateInput
  }

  export type sv_progmScalarWhereWithAggregatesInput = {
    AND?: sv_progmScalarWhereWithAggregatesInput | sv_progmScalarWhereWithAggregatesInput[]
    OR?: sv_progmScalarWhereWithAggregatesInput[]
    NOT?: sv_progmScalarWhereWithAggregatesInput | sv_progmScalarWhereWithAggregatesInput[]
    progm_no?: IntWithAggregatesFilter<"sv_progm"> | number
    clco_no?: IntWithAggregatesFilter<"sv_progm"> | number
    progm_nm?: StringWithAggregatesFilter<"sv_progm"> | string
    mngr_memo?: StringNullableWithAggregatesFilter<"sv_progm"> | string | null
    regr_no?: IntWithAggregatesFilter<"sv_progm"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_progm"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sv_progm"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_progm"> | Date | string
  }

  export type sv_sms_sndngWhereInput = {
    AND?: sv_sms_sndngWhereInput | sv_sms_sndngWhereInput[]
    OR?: sv_sms_sndngWhereInput[]
    NOT?: sv_sms_sndngWhereInput | sv_sms_sndngWhereInput[]
    sms_sndng_no?: BigIntFilter<"sv_sms_sndng"> | bigint | number
    sndng_trgt_cd?: StringFilter<"sv_sms_sndng"> | string
    sms_ttl?: StringNullableFilter<"sv_sms_sndng"> | string | null
    sms_cont?: StringFilter<"sv_sms_sndng"> | string
    atch_img_file_mng_no?: BigIntNullableFilter<"sv_sms_sndng"> | bigint | number | null
    sndng_tp_cd?: StringFilter<"sv_sms_sndng"> | string
    rsvt_sndng_dt?: DateTimeNullableFilter<"sv_sms_sndng"> | Date | string | null
    sndng_stts_cd?: StringNullableFilter<"sv_sms_sndng"> | string | null
    ttlt_sndng_cnt?: IntNullableFilter<"sv_sms_sndng"> | number | null
    sndng_fail_cnt?: IntNullableFilter<"sv_sms_sndng"> | number | null
    rcptn_idnty_cnt?: IntNullableFilter<"sv_sms_sndng"> | number | null
    clco_no?: IntNullableFilter<"sv_sms_sndng"> | number | null
    prjt_no?: IntNullableFilter<"sv_sms_sndng"> | number | null
    prgm_no?: IntNullableFilter<"sv_sms_sndng"> | number | null
    week?: IntNullableFilter<"sv_sms_sndng"> | number | null
    regr_no?: IntFilter<"sv_sms_sndng"> | number
    reg_dt?: DateTimeFilter<"sv_sms_sndng"> | Date | string
    modr_no?: IntFilter<"sv_sms_sndng"> | number
    mod_dt?: DateTimeFilter<"sv_sms_sndng"> | Date | string
  }

  export type sv_sms_sndngOrderByWithRelationInput = {
    sms_sndng_no?: SortOrder
    sndng_trgt_cd?: SortOrder
    sms_ttl?: SortOrderInput | SortOrder
    sms_cont?: SortOrder
    atch_img_file_mng_no?: SortOrderInput | SortOrder
    sndng_tp_cd?: SortOrder
    rsvt_sndng_dt?: SortOrderInput | SortOrder
    sndng_stts_cd?: SortOrderInput | SortOrder
    ttlt_sndng_cnt?: SortOrderInput | SortOrder
    sndng_fail_cnt?: SortOrderInput | SortOrder
    rcptn_idnty_cnt?: SortOrderInput | SortOrder
    clco_no?: SortOrderInput | SortOrder
    prjt_no?: SortOrderInput | SortOrder
    prgm_no?: SortOrderInput | SortOrder
    week?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sv_sms_sndngOrderByRelevanceInput
  }

  export type sv_sms_sndngWhereUniqueInput = Prisma.AtLeast<{
    sms_sndng_no?: bigint | number
    AND?: sv_sms_sndngWhereInput | sv_sms_sndngWhereInput[]
    OR?: sv_sms_sndngWhereInput[]
    NOT?: sv_sms_sndngWhereInput | sv_sms_sndngWhereInput[]
    sndng_trgt_cd?: StringFilter<"sv_sms_sndng"> | string
    sms_ttl?: StringNullableFilter<"sv_sms_sndng"> | string | null
    sms_cont?: StringFilter<"sv_sms_sndng"> | string
    atch_img_file_mng_no?: BigIntNullableFilter<"sv_sms_sndng"> | bigint | number | null
    sndng_tp_cd?: StringFilter<"sv_sms_sndng"> | string
    rsvt_sndng_dt?: DateTimeNullableFilter<"sv_sms_sndng"> | Date | string | null
    sndng_stts_cd?: StringNullableFilter<"sv_sms_sndng"> | string | null
    ttlt_sndng_cnt?: IntNullableFilter<"sv_sms_sndng"> | number | null
    sndng_fail_cnt?: IntNullableFilter<"sv_sms_sndng"> | number | null
    rcptn_idnty_cnt?: IntNullableFilter<"sv_sms_sndng"> | number | null
    clco_no?: IntNullableFilter<"sv_sms_sndng"> | number | null
    prjt_no?: IntNullableFilter<"sv_sms_sndng"> | number | null
    prgm_no?: IntNullableFilter<"sv_sms_sndng"> | number | null
    week?: IntNullableFilter<"sv_sms_sndng"> | number | null
    regr_no?: IntFilter<"sv_sms_sndng"> | number
    reg_dt?: DateTimeFilter<"sv_sms_sndng"> | Date | string
    modr_no?: IntFilter<"sv_sms_sndng"> | number
    mod_dt?: DateTimeFilter<"sv_sms_sndng"> | Date | string
  }, "sms_sndng_no">

  export type sv_sms_sndngOrderByWithAggregationInput = {
    sms_sndng_no?: SortOrder
    sndng_trgt_cd?: SortOrder
    sms_ttl?: SortOrderInput | SortOrder
    sms_cont?: SortOrder
    atch_img_file_mng_no?: SortOrderInput | SortOrder
    sndng_tp_cd?: SortOrder
    rsvt_sndng_dt?: SortOrderInput | SortOrder
    sndng_stts_cd?: SortOrderInput | SortOrder
    ttlt_sndng_cnt?: SortOrderInput | SortOrder
    sndng_fail_cnt?: SortOrderInput | SortOrder
    rcptn_idnty_cnt?: SortOrderInput | SortOrder
    clco_no?: SortOrderInput | SortOrder
    prjt_no?: SortOrderInput | SortOrder
    prgm_no?: SortOrderInput | SortOrder
    week?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_sms_sndngCountOrderByAggregateInput
    _avg?: sv_sms_sndngAvgOrderByAggregateInput
    _max?: sv_sms_sndngMaxOrderByAggregateInput
    _min?: sv_sms_sndngMinOrderByAggregateInput
    _sum?: sv_sms_sndngSumOrderByAggregateInput
  }

  export type sv_sms_sndngScalarWhereWithAggregatesInput = {
    AND?: sv_sms_sndngScalarWhereWithAggregatesInput | sv_sms_sndngScalarWhereWithAggregatesInput[]
    OR?: sv_sms_sndngScalarWhereWithAggregatesInput[]
    NOT?: sv_sms_sndngScalarWhereWithAggregatesInput | sv_sms_sndngScalarWhereWithAggregatesInput[]
    sms_sndng_no?: BigIntWithAggregatesFilter<"sv_sms_sndng"> | bigint | number
    sndng_trgt_cd?: StringWithAggregatesFilter<"sv_sms_sndng"> | string
    sms_ttl?: StringNullableWithAggregatesFilter<"sv_sms_sndng"> | string | null
    sms_cont?: StringWithAggregatesFilter<"sv_sms_sndng"> | string
    atch_img_file_mng_no?: BigIntNullableWithAggregatesFilter<"sv_sms_sndng"> | bigint | number | null
    sndng_tp_cd?: StringWithAggregatesFilter<"sv_sms_sndng"> | string
    rsvt_sndng_dt?: DateTimeNullableWithAggregatesFilter<"sv_sms_sndng"> | Date | string | null
    sndng_stts_cd?: StringNullableWithAggregatesFilter<"sv_sms_sndng"> | string | null
    ttlt_sndng_cnt?: IntNullableWithAggregatesFilter<"sv_sms_sndng"> | number | null
    sndng_fail_cnt?: IntNullableWithAggregatesFilter<"sv_sms_sndng"> | number | null
    rcptn_idnty_cnt?: IntNullableWithAggregatesFilter<"sv_sms_sndng"> | number | null
    clco_no?: IntNullableWithAggregatesFilter<"sv_sms_sndng"> | number | null
    prjt_no?: IntNullableWithAggregatesFilter<"sv_sms_sndng"> | number | null
    prgm_no?: IntNullableWithAggregatesFilter<"sv_sms_sndng"> | number | null
    week?: IntNullableWithAggregatesFilter<"sv_sms_sndng"> | number | null
    regr_no?: IntWithAggregatesFilter<"sv_sms_sndng"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_sms_sndng"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sv_sms_sndng"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_sms_sndng"> | Date | string
  }

  export type sv_sms_tmplWhereInput = {
    AND?: sv_sms_tmplWhereInput | sv_sms_tmplWhereInput[]
    OR?: sv_sms_tmplWhereInput[]
    NOT?: sv_sms_tmplWhereInput | sv_sms_tmplWhereInput[]
    sms_tmpl_no?: IntFilter<"sv_sms_tmpl"> | number
    sms_tmpl_sctn_cd?: StringFilter<"sv_sms_tmpl"> | string
    sms_ttl?: StringFilter<"sv_sms_tmpl"> | string
    sms_cont?: StringFilter<"sv_sms_tmpl"> | string
    atch_img_file_mng_no?: BigIntNullableFilter<"sv_sms_tmpl"> | bigint | number | null
    aim_trgt_tf?: StringFilter<"sv_sms_tmpl"> | string
    clco_trgt_tf?: StringFilter<"sv_sms_tmpl"> | string
    regr_no?: IntFilter<"sv_sms_tmpl"> | number
    reg_dt?: DateTimeFilter<"sv_sms_tmpl"> | Date | string
    modr_no?: IntFilter<"sv_sms_tmpl"> | number
    mod_dt?: DateTimeFilter<"sv_sms_tmpl"> | Date | string
  }

  export type sv_sms_tmplOrderByWithRelationInput = {
    sms_tmpl_no?: SortOrder
    sms_tmpl_sctn_cd?: SortOrder
    sms_ttl?: SortOrder
    sms_cont?: SortOrder
    atch_img_file_mng_no?: SortOrderInput | SortOrder
    aim_trgt_tf?: SortOrder
    clco_trgt_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sv_sms_tmplOrderByRelevanceInput
  }

  export type sv_sms_tmplWhereUniqueInput = Prisma.AtLeast<{
    sms_tmpl_no?: number
    AND?: sv_sms_tmplWhereInput | sv_sms_tmplWhereInput[]
    OR?: sv_sms_tmplWhereInput[]
    NOT?: sv_sms_tmplWhereInput | sv_sms_tmplWhereInput[]
    sms_tmpl_sctn_cd?: StringFilter<"sv_sms_tmpl"> | string
    sms_ttl?: StringFilter<"sv_sms_tmpl"> | string
    sms_cont?: StringFilter<"sv_sms_tmpl"> | string
    atch_img_file_mng_no?: BigIntNullableFilter<"sv_sms_tmpl"> | bigint | number | null
    aim_trgt_tf?: StringFilter<"sv_sms_tmpl"> | string
    clco_trgt_tf?: StringFilter<"sv_sms_tmpl"> | string
    regr_no?: IntFilter<"sv_sms_tmpl"> | number
    reg_dt?: DateTimeFilter<"sv_sms_tmpl"> | Date | string
    modr_no?: IntFilter<"sv_sms_tmpl"> | number
    mod_dt?: DateTimeFilter<"sv_sms_tmpl"> | Date | string
  }, "sms_tmpl_no">

  export type sv_sms_tmplOrderByWithAggregationInput = {
    sms_tmpl_no?: SortOrder
    sms_tmpl_sctn_cd?: SortOrder
    sms_ttl?: SortOrder
    sms_cont?: SortOrder
    atch_img_file_mng_no?: SortOrderInput | SortOrder
    aim_trgt_tf?: SortOrder
    clco_trgt_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sv_sms_tmplCountOrderByAggregateInput
    _avg?: sv_sms_tmplAvgOrderByAggregateInput
    _max?: sv_sms_tmplMaxOrderByAggregateInput
    _min?: sv_sms_tmplMinOrderByAggregateInput
    _sum?: sv_sms_tmplSumOrderByAggregateInput
  }

  export type sv_sms_tmplScalarWhereWithAggregatesInput = {
    AND?: sv_sms_tmplScalarWhereWithAggregatesInput | sv_sms_tmplScalarWhereWithAggregatesInput[]
    OR?: sv_sms_tmplScalarWhereWithAggregatesInput[]
    NOT?: sv_sms_tmplScalarWhereWithAggregatesInput | sv_sms_tmplScalarWhereWithAggregatesInput[]
    sms_tmpl_no?: IntWithAggregatesFilter<"sv_sms_tmpl"> | number
    sms_tmpl_sctn_cd?: StringWithAggregatesFilter<"sv_sms_tmpl"> | string
    sms_ttl?: StringWithAggregatesFilter<"sv_sms_tmpl"> | string
    sms_cont?: StringWithAggregatesFilter<"sv_sms_tmpl"> | string
    atch_img_file_mng_no?: BigIntNullableWithAggregatesFilter<"sv_sms_tmpl"> | bigint | number | null
    aim_trgt_tf?: StringWithAggregatesFilter<"sv_sms_tmpl"> | string
    clco_trgt_tf?: StringWithAggregatesFilter<"sv_sms_tmpl"> | string
    regr_no?: IntWithAggregatesFilter<"sv_sms_tmpl"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_sms_tmpl"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sv_sms_tmpl"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_sms_tmpl"> | Date | string
  }

  export type sv_trmsWhereInput = {
    AND?: sv_trmsWhereInput | sv_trmsWhereInput[]
    OR?: sv_trmsWhereInput[]
    NOT?: sv_trmsWhereInput | sv_trmsWhereInput[]
    trms_no?: BigIntFilter<"sv_trms"> | bigint | number
    clco_no?: BigIntFilter<"sv_trms"> | bigint | number
    trms_knd_cd?: StringFilter<"sv_trms"> | string
    esntl_agr_tf?: StringFilter<"sv_trms"> | string
    sort_seq?: IntFilter<"sv_trms"> | number
    trms_cont?: StringFilter<"sv_trms"> | string
    use_tf?: StringFilter<"sv_trms"> | string
    regr_no?: BigIntFilter<"sv_trms"> | bigint | number
    reg_dt?: DateTimeFilter<"sv_trms"> | Date | string
    modr_no?: BigIntFilter<"sv_trms"> | bigint | number
    mod_dt?: DateTimeFilter<"sv_trms"> | Date | string
    trms_ttl?: StringFilter<"sv_trms"> | string
  }

  export type sv_trmsOrderByWithRelationInput = {
    trms_no?: SortOrder
    clco_no?: SortOrder
    trms_knd_cd?: SortOrder
    esntl_agr_tf?: SortOrder
    sort_seq?: SortOrder
    trms_cont?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    trms_ttl?: SortOrder
    _relevance?: sv_trmsOrderByRelevanceInput
  }

  export type sv_trmsWhereUniqueInput = Prisma.AtLeast<{
    trms_no?: bigint | number
    AND?: sv_trmsWhereInput | sv_trmsWhereInput[]
    OR?: sv_trmsWhereInput[]
    NOT?: sv_trmsWhereInput | sv_trmsWhereInput[]
    clco_no?: BigIntFilter<"sv_trms"> | bigint | number
    trms_knd_cd?: StringFilter<"sv_trms"> | string
    esntl_agr_tf?: StringFilter<"sv_trms"> | string
    sort_seq?: IntFilter<"sv_trms"> | number
    trms_cont?: StringFilter<"sv_trms"> | string
    use_tf?: StringFilter<"sv_trms"> | string
    regr_no?: BigIntFilter<"sv_trms"> | bigint | number
    reg_dt?: DateTimeFilter<"sv_trms"> | Date | string
    modr_no?: BigIntFilter<"sv_trms"> | bigint | number
    mod_dt?: DateTimeFilter<"sv_trms"> | Date | string
    trms_ttl?: StringFilter<"sv_trms"> | string
  }, "trms_no">

  export type sv_trmsOrderByWithAggregationInput = {
    trms_no?: SortOrder
    clco_no?: SortOrder
    trms_knd_cd?: SortOrder
    esntl_agr_tf?: SortOrder
    sort_seq?: SortOrder
    trms_cont?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    trms_ttl?: SortOrder
    _count?: sv_trmsCountOrderByAggregateInput
    _avg?: sv_trmsAvgOrderByAggregateInput
    _max?: sv_trmsMaxOrderByAggregateInput
    _min?: sv_trmsMinOrderByAggregateInput
    _sum?: sv_trmsSumOrderByAggregateInput
  }

  export type sv_trmsScalarWhereWithAggregatesInput = {
    AND?: sv_trmsScalarWhereWithAggregatesInput | sv_trmsScalarWhereWithAggregatesInput[]
    OR?: sv_trmsScalarWhereWithAggregatesInput[]
    NOT?: sv_trmsScalarWhereWithAggregatesInput | sv_trmsScalarWhereWithAggregatesInput[]
    trms_no?: BigIntWithAggregatesFilter<"sv_trms"> | bigint | number
    clco_no?: BigIntWithAggregatesFilter<"sv_trms"> | bigint | number
    trms_knd_cd?: StringWithAggregatesFilter<"sv_trms"> | string
    esntl_agr_tf?: StringWithAggregatesFilter<"sv_trms"> | string
    sort_seq?: IntWithAggregatesFilter<"sv_trms"> | number
    trms_cont?: StringWithAggregatesFilter<"sv_trms"> | string
    use_tf?: StringWithAggregatesFilter<"sv_trms"> | string
    regr_no?: BigIntWithAggregatesFilter<"sv_trms"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_trms"> | Date | string
    modr_no?: BigIntWithAggregatesFilter<"sv_trms"> | bigint | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_trms"> | Date | string
    trms_ttl?: StringWithAggregatesFilter<"sv_trms"> | string
  }

  export type sv_trms_histWhereInput = {
    AND?: sv_trms_histWhereInput | sv_trms_histWhereInput[]
    OR?: sv_trms_histWhereInput[]
    NOT?: sv_trms_histWhereInput | sv_trms_histWhereInput[]
    hist_no?: BigIntFilter<"sv_trms_hist"> | bigint | number
    trms_no?: BigIntFilter<"sv_trms_hist"> | bigint | number
    clco_no?: BigIntFilter<"sv_trms_hist"> | bigint | number
    trms_knd_cd?: StringFilter<"sv_trms_hist"> | string
    esntl_agr_tf?: StringFilter<"sv_trms_hist"> | string
    sort_seq?: IntFilter<"sv_trms_hist"> | number
    trms_cont?: StringFilter<"sv_trms_hist"> | string
    use_tf?: StringFilter<"sv_trms_hist"> | string
    regr_no?: BigIntFilter<"sv_trms_hist"> | bigint | number
    reg_dt?: DateTimeFilter<"sv_trms_hist"> | Date | string
    modr_no?: BigIntFilter<"sv_trms_hist"> | bigint | number
    mod_dt?: DateTimeFilter<"sv_trms_hist"> | Date | string
    trms_ttl?: StringFilter<"sv_trms_hist"> | string
  }

  export type sv_trms_histOrderByWithRelationInput = {
    hist_no?: SortOrder
    trms_no?: SortOrder
    clco_no?: SortOrder
    trms_knd_cd?: SortOrder
    esntl_agr_tf?: SortOrder
    sort_seq?: SortOrder
    trms_cont?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    trms_ttl?: SortOrder
    _relevance?: sv_trms_histOrderByRelevanceInput
  }

  export type sv_trms_histWhereUniqueInput = Prisma.AtLeast<{
    hist_no?: bigint | number
    AND?: sv_trms_histWhereInput | sv_trms_histWhereInput[]
    OR?: sv_trms_histWhereInput[]
    NOT?: sv_trms_histWhereInput | sv_trms_histWhereInput[]
    trms_no?: BigIntFilter<"sv_trms_hist"> | bigint | number
    clco_no?: BigIntFilter<"sv_trms_hist"> | bigint | number
    trms_knd_cd?: StringFilter<"sv_trms_hist"> | string
    esntl_agr_tf?: StringFilter<"sv_trms_hist"> | string
    sort_seq?: IntFilter<"sv_trms_hist"> | number
    trms_cont?: StringFilter<"sv_trms_hist"> | string
    use_tf?: StringFilter<"sv_trms_hist"> | string
    regr_no?: BigIntFilter<"sv_trms_hist"> | bigint | number
    reg_dt?: DateTimeFilter<"sv_trms_hist"> | Date | string
    modr_no?: BigIntFilter<"sv_trms_hist"> | bigint | number
    mod_dt?: DateTimeFilter<"sv_trms_hist"> | Date | string
    trms_ttl?: StringFilter<"sv_trms_hist"> | string
  }, "hist_no">

  export type sv_trms_histOrderByWithAggregationInput = {
    hist_no?: SortOrder
    trms_no?: SortOrder
    clco_no?: SortOrder
    trms_knd_cd?: SortOrder
    esntl_agr_tf?: SortOrder
    sort_seq?: SortOrder
    trms_cont?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    trms_ttl?: SortOrder
    _count?: sv_trms_histCountOrderByAggregateInput
    _avg?: sv_trms_histAvgOrderByAggregateInput
    _max?: sv_trms_histMaxOrderByAggregateInput
    _min?: sv_trms_histMinOrderByAggregateInput
    _sum?: sv_trms_histSumOrderByAggregateInput
  }

  export type sv_trms_histScalarWhereWithAggregatesInput = {
    AND?: sv_trms_histScalarWhereWithAggregatesInput | sv_trms_histScalarWhereWithAggregatesInput[]
    OR?: sv_trms_histScalarWhereWithAggregatesInput[]
    NOT?: sv_trms_histScalarWhereWithAggregatesInput | sv_trms_histScalarWhereWithAggregatesInput[]
    hist_no?: BigIntWithAggregatesFilter<"sv_trms_hist"> | bigint | number
    trms_no?: BigIntWithAggregatesFilter<"sv_trms_hist"> | bigint | number
    clco_no?: BigIntWithAggregatesFilter<"sv_trms_hist"> | bigint | number
    trms_knd_cd?: StringWithAggregatesFilter<"sv_trms_hist"> | string
    esntl_agr_tf?: StringWithAggregatesFilter<"sv_trms_hist"> | string
    sort_seq?: IntWithAggregatesFilter<"sv_trms_hist"> | number
    trms_cont?: StringWithAggregatesFilter<"sv_trms_hist"> | string
    use_tf?: StringWithAggregatesFilter<"sv_trms_hist"> | string
    regr_no?: BigIntWithAggregatesFilter<"sv_trms_hist"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"sv_trms_hist"> | Date | string
    modr_no?: BigIntWithAggregatesFilter<"sv_trms_hist"> | bigint | number
    mod_dt?: DateTimeWithAggregatesFilter<"sv_trms_hist"> | Date | string
    trms_ttl?: StringWithAggregatesFilter<"sv_trms_hist"> | string
  }

  export type sy_atch_file_mngWhereInput = {
    AND?: sy_atch_file_mngWhereInput | sy_atch_file_mngWhereInput[]
    OR?: sy_atch_file_mngWhereInput[]
    NOT?: sy_atch_file_mngWhereInput | sy_atch_file_mngWhereInput[]
    file_mng_no?: BigIntFilter<"sy_atch_file_mng"> | bigint | number
    file_path_nm?: StringFilter<"sy_atch_file_mng"> | string
    uld_file_nm?: StringFilter<"sy_atch_file_mng"> | string
    strg_file_nm?: StringFilter<"sy_atch_file_mng"> | string
    file_sz?: BigIntFilter<"sy_atch_file_mng"> | bigint | number
    extn_nm?: StringNullableFilter<"sy_atch_file_mng"> | string | null
    mbr_no?: BigIntNullableFilter<"sy_atch_file_mng"> | bigint | number | null
    regr_no?: BigIntFilter<"sy_atch_file_mng"> | bigint | number
    reg_dt?: DateTimeFilter<"sy_atch_file_mng"> | Date | string
    modr_no?: BigIntFilter<"sy_atch_file_mng"> | bigint | number
    mod_dt?: DateTimeFilter<"sy_atch_file_mng"> | Date | string
  }

  export type sy_atch_file_mngOrderByWithRelationInput = {
    file_mng_no?: SortOrder
    file_path_nm?: SortOrder
    uld_file_nm?: SortOrder
    strg_file_nm?: SortOrder
    file_sz?: SortOrder
    extn_nm?: SortOrderInput | SortOrder
    mbr_no?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sy_atch_file_mngOrderByRelevanceInput
  }

  export type sy_atch_file_mngWhereUniqueInput = Prisma.AtLeast<{
    file_mng_no?: bigint | number
    AND?: sy_atch_file_mngWhereInput | sy_atch_file_mngWhereInput[]
    OR?: sy_atch_file_mngWhereInput[]
    NOT?: sy_atch_file_mngWhereInput | sy_atch_file_mngWhereInput[]
    file_path_nm?: StringFilter<"sy_atch_file_mng"> | string
    uld_file_nm?: StringFilter<"sy_atch_file_mng"> | string
    strg_file_nm?: StringFilter<"sy_atch_file_mng"> | string
    file_sz?: BigIntFilter<"sy_atch_file_mng"> | bigint | number
    extn_nm?: StringNullableFilter<"sy_atch_file_mng"> | string | null
    mbr_no?: BigIntNullableFilter<"sy_atch_file_mng"> | bigint | number | null
    regr_no?: BigIntFilter<"sy_atch_file_mng"> | bigint | number
    reg_dt?: DateTimeFilter<"sy_atch_file_mng"> | Date | string
    modr_no?: BigIntFilter<"sy_atch_file_mng"> | bigint | number
    mod_dt?: DateTimeFilter<"sy_atch_file_mng"> | Date | string
  }, "file_mng_no">

  export type sy_atch_file_mngOrderByWithAggregationInput = {
    file_mng_no?: SortOrder
    file_path_nm?: SortOrder
    uld_file_nm?: SortOrder
    strg_file_nm?: SortOrder
    file_sz?: SortOrder
    extn_nm?: SortOrderInput | SortOrder
    mbr_no?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sy_atch_file_mngCountOrderByAggregateInput
    _avg?: sy_atch_file_mngAvgOrderByAggregateInput
    _max?: sy_atch_file_mngMaxOrderByAggregateInput
    _min?: sy_atch_file_mngMinOrderByAggregateInput
    _sum?: sy_atch_file_mngSumOrderByAggregateInput
  }

  export type sy_atch_file_mngScalarWhereWithAggregatesInput = {
    AND?: sy_atch_file_mngScalarWhereWithAggregatesInput | sy_atch_file_mngScalarWhereWithAggregatesInput[]
    OR?: sy_atch_file_mngScalarWhereWithAggregatesInput[]
    NOT?: sy_atch_file_mngScalarWhereWithAggregatesInput | sy_atch_file_mngScalarWhereWithAggregatesInput[]
    file_mng_no?: BigIntWithAggregatesFilter<"sy_atch_file_mng"> | bigint | number
    file_path_nm?: StringWithAggregatesFilter<"sy_atch_file_mng"> | string
    uld_file_nm?: StringWithAggregatesFilter<"sy_atch_file_mng"> | string
    strg_file_nm?: StringWithAggregatesFilter<"sy_atch_file_mng"> | string
    file_sz?: BigIntWithAggregatesFilter<"sy_atch_file_mng"> | bigint | number
    extn_nm?: StringNullableWithAggregatesFilter<"sy_atch_file_mng"> | string | null
    mbr_no?: BigIntNullableWithAggregatesFilter<"sy_atch_file_mng"> | bigint | number | null
    regr_no?: BigIntWithAggregatesFilter<"sy_atch_file_mng"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"sy_atch_file_mng"> | Date | string
    modr_no?: BigIntWithAggregatesFilter<"sy_atch_file_mng"> | bigint | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_atch_file_mng"> | Date | string
  }

  export type sy_authWhereInput = {
    AND?: sy_authWhereInput | sy_authWhereInput[]
    OR?: sy_authWhereInput[]
    NOT?: sy_authWhereInput | sy_authWhereInput[]
    auth_no?: IntFilter<"sy_auth"> | number
    auth_trgt_sctn_cd?: StringFilter<"sy_auth"> | string
    auth_grnt_sctn_cd?: StringFilter<"sy_auth"> | string
    scrn_no?: IntNullableFilter<"sy_auth"> | number | null
    menu_no?: IntNullableFilter<"sy_auth"> | number | null
    auth_yn?: StringFilter<"sy_auth"> | string
    auth_grp_no?: IntNullableFilter<"sy_auth"> | number | null
    mngr_no?: IntNullableFilter<"sy_auth"> | number | null
    regr_no?: IntFilter<"sy_auth"> | number
    reg_dt?: DateTimeFilter<"sy_auth"> | Date | string
    modr_no?: IntFilter<"sy_auth"> | number
    mod_dt?: DateTimeFilter<"sy_auth"> | Date | string
  }

  export type sy_authOrderByWithRelationInput = {
    auth_no?: SortOrder
    auth_trgt_sctn_cd?: SortOrder
    auth_grnt_sctn_cd?: SortOrder
    scrn_no?: SortOrderInput | SortOrder
    menu_no?: SortOrderInput | SortOrder
    auth_yn?: SortOrder
    auth_grp_no?: SortOrderInput | SortOrder
    mngr_no?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sy_authOrderByRelevanceInput
  }

  export type sy_authWhereUniqueInput = Prisma.AtLeast<{
    auth_no?: number
    AND?: sy_authWhereInput | sy_authWhereInput[]
    OR?: sy_authWhereInput[]
    NOT?: sy_authWhereInput | sy_authWhereInput[]
    auth_trgt_sctn_cd?: StringFilter<"sy_auth"> | string
    auth_grnt_sctn_cd?: StringFilter<"sy_auth"> | string
    scrn_no?: IntNullableFilter<"sy_auth"> | number | null
    menu_no?: IntNullableFilter<"sy_auth"> | number | null
    auth_yn?: StringFilter<"sy_auth"> | string
    auth_grp_no?: IntNullableFilter<"sy_auth"> | number | null
    mngr_no?: IntNullableFilter<"sy_auth"> | number | null
    regr_no?: IntFilter<"sy_auth"> | number
    reg_dt?: DateTimeFilter<"sy_auth"> | Date | string
    modr_no?: IntFilter<"sy_auth"> | number
    mod_dt?: DateTimeFilter<"sy_auth"> | Date | string
  }, "auth_no">

  export type sy_authOrderByWithAggregationInput = {
    auth_no?: SortOrder
    auth_trgt_sctn_cd?: SortOrder
    auth_grnt_sctn_cd?: SortOrder
    scrn_no?: SortOrderInput | SortOrder
    menu_no?: SortOrderInput | SortOrder
    auth_yn?: SortOrder
    auth_grp_no?: SortOrderInput | SortOrder
    mngr_no?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sy_authCountOrderByAggregateInput
    _avg?: sy_authAvgOrderByAggregateInput
    _max?: sy_authMaxOrderByAggregateInput
    _min?: sy_authMinOrderByAggregateInput
    _sum?: sy_authSumOrderByAggregateInput
  }

  export type sy_authScalarWhereWithAggregatesInput = {
    AND?: sy_authScalarWhereWithAggregatesInput | sy_authScalarWhereWithAggregatesInput[]
    OR?: sy_authScalarWhereWithAggregatesInput[]
    NOT?: sy_authScalarWhereWithAggregatesInput | sy_authScalarWhereWithAggregatesInput[]
    auth_no?: IntWithAggregatesFilter<"sy_auth"> | number
    auth_trgt_sctn_cd?: StringWithAggregatesFilter<"sy_auth"> | string
    auth_grnt_sctn_cd?: StringWithAggregatesFilter<"sy_auth"> | string
    scrn_no?: IntNullableWithAggregatesFilter<"sy_auth"> | number | null
    menu_no?: IntNullableWithAggregatesFilter<"sy_auth"> | number | null
    auth_yn?: StringWithAggregatesFilter<"sy_auth"> | string
    auth_grp_no?: IntNullableWithAggregatesFilter<"sy_auth"> | number | null
    mngr_no?: IntNullableWithAggregatesFilter<"sy_auth"> | number | null
    regr_no?: IntWithAggregatesFilter<"sy_auth"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sy_auth"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sy_auth"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_auth"> | Date | string
  }

  export type sy_auth_grpWhereInput = {
    AND?: sy_auth_grpWhereInput | sy_auth_grpWhereInput[]
    OR?: sy_auth_grpWhereInput[]
    NOT?: sy_auth_grpWhereInput | sy_auth_grpWhereInput[]
    auth_grp_no?: IntFilter<"sy_auth_grp"> | number
    auth_grp_nm?: StringFilter<"sy_auth_grp"> | string
    auth_grp_sctn_cd?: StringFilter<"sy_auth_grp"> | string
    auth_grp_desc?: StringNullableFilter<"sy_auth_grp"> | string | null
    use_tf?: StringFilter<"sy_auth_grp"> | string
    regr_no?: IntFilter<"sy_auth_grp"> | number
    reg_dt?: DateTimeFilter<"sy_auth_grp"> | Date | string
    modr_no?: IntFilter<"sy_auth_grp"> | number
    mod_dt?: DateTimeFilter<"sy_auth_grp"> | Date | string
  }

  export type sy_auth_grpOrderByWithRelationInput = {
    auth_grp_no?: SortOrder
    auth_grp_nm?: SortOrder
    auth_grp_sctn_cd?: SortOrder
    auth_grp_desc?: SortOrderInput | SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sy_auth_grpOrderByRelevanceInput
  }

  export type sy_auth_grpWhereUniqueInput = Prisma.AtLeast<{
    auth_grp_no?: number
    AND?: sy_auth_grpWhereInput | sy_auth_grpWhereInput[]
    OR?: sy_auth_grpWhereInput[]
    NOT?: sy_auth_grpWhereInput | sy_auth_grpWhereInput[]
    auth_grp_nm?: StringFilter<"sy_auth_grp"> | string
    auth_grp_sctn_cd?: StringFilter<"sy_auth_grp"> | string
    auth_grp_desc?: StringNullableFilter<"sy_auth_grp"> | string | null
    use_tf?: StringFilter<"sy_auth_grp"> | string
    regr_no?: IntFilter<"sy_auth_grp"> | number
    reg_dt?: DateTimeFilter<"sy_auth_grp"> | Date | string
    modr_no?: IntFilter<"sy_auth_grp"> | number
    mod_dt?: DateTimeFilter<"sy_auth_grp"> | Date | string
  }, "auth_grp_no">

  export type sy_auth_grpOrderByWithAggregationInput = {
    auth_grp_no?: SortOrder
    auth_grp_nm?: SortOrder
    auth_grp_sctn_cd?: SortOrder
    auth_grp_desc?: SortOrderInput | SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sy_auth_grpCountOrderByAggregateInput
    _avg?: sy_auth_grpAvgOrderByAggregateInput
    _max?: sy_auth_grpMaxOrderByAggregateInput
    _min?: sy_auth_grpMinOrderByAggregateInput
    _sum?: sy_auth_grpSumOrderByAggregateInput
  }

  export type sy_auth_grpScalarWhereWithAggregatesInput = {
    AND?: sy_auth_grpScalarWhereWithAggregatesInput | sy_auth_grpScalarWhereWithAggregatesInput[]
    OR?: sy_auth_grpScalarWhereWithAggregatesInput[]
    NOT?: sy_auth_grpScalarWhereWithAggregatesInput | sy_auth_grpScalarWhereWithAggregatesInput[]
    auth_grp_no?: IntWithAggregatesFilter<"sy_auth_grp"> | number
    auth_grp_nm?: StringWithAggregatesFilter<"sy_auth_grp"> | string
    auth_grp_sctn_cd?: StringWithAggregatesFilter<"sy_auth_grp"> | string
    auth_grp_desc?: StringNullableWithAggregatesFilter<"sy_auth_grp"> | string | null
    use_tf?: StringWithAggregatesFilter<"sy_auth_grp"> | string
    regr_no?: IntWithAggregatesFilter<"sy_auth_grp"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sy_auth_grp"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sy_auth_grp"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_auth_grp"> | Date | string
  }

  export type sy_clcoWhereInput = {
    AND?: sy_clcoWhereInput | sy_clcoWhereInput[]
    OR?: sy_clcoWhereInput[]
    NOT?: sy_clcoWhereInput | sy_clcoWhereInput[]
    clco_no?: IntFilter<"sy_clco"> | number
    clco_nm?: StringFilter<"sy_clco"> | string
    clco_sctn_cd?: StringNullableFilter<"sy_clco"> | string | null
    use_url?: StringNullableFilter<"sy_clco"> | string | null
    hlth_rsrv_url?: StringNullableFilter<"sy_clco"> | string | null
    use_bgng_ymd?: DateTimeFilter<"sy_clco"> | Date | string
    use_end_ymd?: DateTimeFilter<"sy_clco"> | Date | string
    use_stts_cd?: StringFilter<"sy_clco"> | string
    pic_nm?: StringNullableFilter<"sy_clco"> | string | null
    pic_dept_nm?: StringNullableFilter<"sy_clco"> | string | null
    pic_telno?: StringNullableFilter<"sy_clco"> | string | null
    b2b_type?: StringNullableFilter<"sy_clco"> | string | null
    comp_code?: StringNullableFilter<"sy_clco"> | string | null
    bot_code?: StringNullableFilter<"sy_clco"> | string | null
    regr_no?: IntFilter<"sy_clco"> | number
    reg_dt?: DateTimeFilter<"sy_clco"> | Date | string
    modr_no?: IntFilter<"sy_clco"> | number
    mod_dt?: DateTimeFilter<"sy_clco"> | Date | string
  }

  export type sy_clcoOrderByWithRelationInput = {
    clco_no?: SortOrder
    clco_nm?: SortOrder
    clco_sctn_cd?: SortOrderInput | SortOrder
    use_url?: SortOrderInput | SortOrder
    hlth_rsrv_url?: SortOrderInput | SortOrder
    use_bgng_ymd?: SortOrder
    use_end_ymd?: SortOrder
    use_stts_cd?: SortOrder
    pic_nm?: SortOrderInput | SortOrder
    pic_dept_nm?: SortOrderInput | SortOrder
    pic_telno?: SortOrderInput | SortOrder
    b2b_type?: SortOrderInput | SortOrder
    comp_code?: SortOrderInput | SortOrder
    bot_code?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sy_clcoOrderByRelevanceInput
  }

  export type sy_clcoWhereUniqueInput = Prisma.AtLeast<{
    clco_no?: number
    AND?: sy_clcoWhereInput | sy_clcoWhereInput[]
    OR?: sy_clcoWhereInput[]
    NOT?: sy_clcoWhereInput | sy_clcoWhereInput[]
    clco_nm?: StringFilter<"sy_clco"> | string
    clco_sctn_cd?: StringNullableFilter<"sy_clco"> | string | null
    use_url?: StringNullableFilter<"sy_clco"> | string | null
    hlth_rsrv_url?: StringNullableFilter<"sy_clco"> | string | null
    use_bgng_ymd?: DateTimeFilter<"sy_clco"> | Date | string
    use_end_ymd?: DateTimeFilter<"sy_clco"> | Date | string
    use_stts_cd?: StringFilter<"sy_clco"> | string
    pic_nm?: StringNullableFilter<"sy_clco"> | string | null
    pic_dept_nm?: StringNullableFilter<"sy_clco"> | string | null
    pic_telno?: StringNullableFilter<"sy_clco"> | string | null
    b2b_type?: StringNullableFilter<"sy_clco"> | string | null
    comp_code?: StringNullableFilter<"sy_clco"> | string | null
    bot_code?: StringNullableFilter<"sy_clco"> | string | null
    regr_no?: IntFilter<"sy_clco"> | number
    reg_dt?: DateTimeFilter<"sy_clco"> | Date | string
    modr_no?: IntFilter<"sy_clco"> | number
    mod_dt?: DateTimeFilter<"sy_clco"> | Date | string
  }, "clco_no">

  export type sy_clcoOrderByWithAggregationInput = {
    clco_no?: SortOrder
    clco_nm?: SortOrder
    clco_sctn_cd?: SortOrderInput | SortOrder
    use_url?: SortOrderInput | SortOrder
    hlth_rsrv_url?: SortOrderInput | SortOrder
    use_bgng_ymd?: SortOrder
    use_end_ymd?: SortOrder
    use_stts_cd?: SortOrder
    pic_nm?: SortOrderInput | SortOrder
    pic_dept_nm?: SortOrderInput | SortOrder
    pic_telno?: SortOrderInput | SortOrder
    b2b_type?: SortOrderInput | SortOrder
    comp_code?: SortOrderInput | SortOrder
    bot_code?: SortOrderInput | SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sy_clcoCountOrderByAggregateInput
    _avg?: sy_clcoAvgOrderByAggregateInput
    _max?: sy_clcoMaxOrderByAggregateInput
    _min?: sy_clcoMinOrderByAggregateInput
    _sum?: sy_clcoSumOrderByAggregateInput
  }

  export type sy_clcoScalarWhereWithAggregatesInput = {
    AND?: sy_clcoScalarWhereWithAggregatesInput | sy_clcoScalarWhereWithAggregatesInput[]
    OR?: sy_clcoScalarWhereWithAggregatesInput[]
    NOT?: sy_clcoScalarWhereWithAggregatesInput | sy_clcoScalarWhereWithAggregatesInput[]
    clco_no?: IntWithAggregatesFilter<"sy_clco"> | number
    clco_nm?: StringWithAggregatesFilter<"sy_clco"> | string
    clco_sctn_cd?: StringNullableWithAggregatesFilter<"sy_clco"> | string | null
    use_url?: StringNullableWithAggregatesFilter<"sy_clco"> | string | null
    hlth_rsrv_url?: StringNullableWithAggregatesFilter<"sy_clco"> | string | null
    use_bgng_ymd?: DateTimeWithAggregatesFilter<"sy_clco"> | Date | string
    use_end_ymd?: DateTimeWithAggregatesFilter<"sy_clco"> | Date | string
    use_stts_cd?: StringWithAggregatesFilter<"sy_clco"> | string
    pic_nm?: StringNullableWithAggregatesFilter<"sy_clco"> | string | null
    pic_dept_nm?: StringNullableWithAggregatesFilter<"sy_clco"> | string | null
    pic_telno?: StringNullableWithAggregatesFilter<"sy_clco"> | string | null
    b2b_type?: StringNullableWithAggregatesFilter<"sy_clco"> | string | null
    comp_code?: StringNullableWithAggregatesFilter<"sy_clco"> | string | null
    bot_code?: StringNullableWithAggregatesFilter<"sy_clco"> | string | null
    regr_no?: IntWithAggregatesFilter<"sy_clco"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sy_clco"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sy_clco"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_clco"> | Date | string
  }

  export type sy_clco_deptWhereInput = {
    AND?: sy_clco_deptWhereInput | sy_clco_deptWhereInput[]
    OR?: sy_clco_deptWhereInput[]
    NOT?: sy_clco_deptWhereInput | sy_clco_deptWhereInput[]
    clco_no?: IntFilter<"sy_clco_dept"> | number
    clco_dept_cd?: StringFilter<"sy_clco_dept"> | string
    clco_dept_nm?: StringFilter<"sy_clco_dept"> | string
    regr_no?: IntFilter<"sy_clco_dept"> | number
    reg_dt?: DateTimeFilter<"sy_clco_dept"> | Date | string
    modr_no?: IntFilter<"sy_clco_dept"> | number
    mod_dt?: DateTimeFilter<"sy_clco_dept"> | Date | string
  }

  export type sy_clco_deptOrderByWithRelationInput = {
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    clco_dept_nm?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sy_clco_deptOrderByRelevanceInput
  }

  export type sy_clco_deptWhereUniqueInput = Prisma.AtLeast<{
    clco_no_clco_dept_cd?: sy_clco_deptClco_noClco_dept_cdCompoundUniqueInput
    AND?: sy_clco_deptWhereInput | sy_clco_deptWhereInput[]
    OR?: sy_clco_deptWhereInput[]
    NOT?: sy_clco_deptWhereInput | sy_clco_deptWhereInput[]
    clco_no?: IntFilter<"sy_clco_dept"> | number
    clco_dept_cd?: StringFilter<"sy_clco_dept"> | string
    clco_dept_nm?: StringFilter<"sy_clco_dept"> | string
    regr_no?: IntFilter<"sy_clco_dept"> | number
    reg_dt?: DateTimeFilter<"sy_clco_dept"> | Date | string
    modr_no?: IntFilter<"sy_clco_dept"> | number
    mod_dt?: DateTimeFilter<"sy_clco_dept"> | Date | string
  }, "clco_no_clco_dept_cd">

  export type sy_clco_deptOrderByWithAggregationInput = {
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    clco_dept_nm?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sy_clco_deptCountOrderByAggregateInput
    _avg?: sy_clco_deptAvgOrderByAggregateInput
    _max?: sy_clco_deptMaxOrderByAggregateInput
    _min?: sy_clco_deptMinOrderByAggregateInput
    _sum?: sy_clco_deptSumOrderByAggregateInput
  }

  export type sy_clco_deptScalarWhereWithAggregatesInput = {
    AND?: sy_clco_deptScalarWhereWithAggregatesInput | sy_clco_deptScalarWhereWithAggregatesInput[]
    OR?: sy_clco_deptScalarWhereWithAggregatesInput[]
    NOT?: sy_clco_deptScalarWhereWithAggregatesInput | sy_clco_deptScalarWhereWithAggregatesInput[]
    clco_no?: IntWithAggregatesFilter<"sy_clco_dept"> | number
    clco_dept_cd?: StringWithAggregatesFilter<"sy_clco_dept"> | string
    clco_dept_nm?: StringWithAggregatesFilter<"sy_clco_dept"> | string
    regr_no?: IntWithAggregatesFilter<"sy_clco_dept"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sy_clco_dept"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sy_clco_dept"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_clco_dept"> | Date | string
  }

  export type sy_dtl_cdWhereInput = {
    AND?: sy_dtl_cdWhereInput | sy_dtl_cdWhereInput[]
    OR?: sy_dtl_cdWhereInput[]
    NOT?: sy_dtl_cdWhereInput | sy_dtl_cdWhereInput[]
    grp_cd?: StringFilter<"sy_dtl_cd"> | string
    cd?: StringFilter<"sy_dtl_cd"> | string
    cd_nm?: StringFilter<"sy_dtl_cd"> | string
    cd_desc?: StringNullableFilter<"sy_dtl_cd"> | string | null
    sort_seq?: IntNullableFilter<"sy_dtl_cd"> | number | null
    use_tf?: StringFilter<"sy_dtl_cd"> | string
    regr_no?: IntFilter<"sy_dtl_cd"> | number
    reg_dt?: DateTimeFilter<"sy_dtl_cd"> | Date | string
    modr_no?: IntFilter<"sy_dtl_cd"> | number
    mod_dt?: DateTimeFilter<"sy_dtl_cd"> | Date | string
  }

  export type sy_dtl_cdOrderByWithRelationInput = {
    grp_cd?: SortOrder
    cd?: SortOrder
    cd_nm?: SortOrder
    cd_desc?: SortOrderInput | SortOrder
    sort_seq?: SortOrderInput | SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sy_dtl_cdOrderByRelevanceInput
  }

  export type sy_dtl_cdWhereUniqueInput = Prisma.AtLeast<{
    grp_cd_cd?: sy_dtl_cdGrp_cdCdCompoundUniqueInput
    AND?: sy_dtl_cdWhereInput | sy_dtl_cdWhereInput[]
    OR?: sy_dtl_cdWhereInput[]
    NOT?: sy_dtl_cdWhereInput | sy_dtl_cdWhereInput[]
    grp_cd?: StringFilter<"sy_dtl_cd"> | string
    cd?: StringFilter<"sy_dtl_cd"> | string
    cd_nm?: StringFilter<"sy_dtl_cd"> | string
    cd_desc?: StringNullableFilter<"sy_dtl_cd"> | string | null
    sort_seq?: IntNullableFilter<"sy_dtl_cd"> | number | null
    use_tf?: StringFilter<"sy_dtl_cd"> | string
    regr_no?: IntFilter<"sy_dtl_cd"> | number
    reg_dt?: DateTimeFilter<"sy_dtl_cd"> | Date | string
    modr_no?: IntFilter<"sy_dtl_cd"> | number
    mod_dt?: DateTimeFilter<"sy_dtl_cd"> | Date | string
  }, "grp_cd_cd">

  export type sy_dtl_cdOrderByWithAggregationInput = {
    grp_cd?: SortOrder
    cd?: SortOrder
    cd_nm?: SortOrder
    cd_desc?: SortOrderInput | SortOrder
    sort_seq?: SortOrderInput | SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sy_dtl_cdCountOrderByAggregateInput
    _avg?: sy_dtl_cdAvgOrderByAggregateInput
    _max?: sy_dtl_cdMaxOrderByAggregateInput
    _min?: sy_dtl_cdMinOrderByAggregateInput
    _sum?: sy_dtl_cdSumOrderByAggregateInput
  }

  export type sy_dtl_cdScalarWhereWithAggregatesInput = {
    AND?: sy_dtl_cdScalarWhereWithAggregatesInput | sy_dtl_cdScalarWhereWithAggregatesInput[]
    OR?: sy_dtl_cdScalarWhereWithAggregatesInput[]
    NOT?: sy_dtl_cdScalarWhereWithAggregatesInput | sy_dtl_cdScalarWhereWithAggregatesInput[]
    grp_cd?: StringWithAggregatesFilter<"sy_dtl_cd"> | string
    cd?: StringWithAggregatesFilter<"sy_dtl_cd"> | string
    cd_nm?: StringWithAggregatesFilter<"sy_dtl_cd"> | string
    cd_desc?: StringNullableWithAggregatesFilter<"sy_dtl_cd"> | string | null
    sort_seq?: IntNullableWithAggregatesFilter<"sy_dtl_cd"> | number | null
    use_tf?: StringWithAggregatesFilter<"sy_dtl_cd"> | string
    regr_no?: IntWithAggregatesFilter<"sy_dtl_cd"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sy_dtl_cd"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sy_dtl_cd"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_dtl_cd"> | Date | string
  }

  export type sy_excel_histWhereInput = {
    AND?: sy_excel_histWhereInput | sy_excel_histWhereInput[]
    OR?: sy_excel_histWhereInput[]
    NOT?: sy_excel_histWhereInput | sy_excel_histWhereInput[]
    hist_no?: BigIntFilter<"sy_excel_hist"> | bigint | number
    file_nm?: StringFilter<"sy_excel_hist"> | string
    row_cnt?: IntFilter<"sy_excel_hist"> | number
    regr_no?: BigIntFilter<"sy_excel_hist"> | bigint | number
    reg_dt?: DateTimeFilter<"sy_excel_hist"> | Date | string
  }

  export type sy_excel_histOrderByWithRelationInput = {
    hist_no?: SortOrder
    file_nm?: SortOrder
    row_cnt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    _relevance?: sy_excel_histOrderByRelevanceInput
  }

  export type sy_excel_histWhereUniqueInput = Prisma.AtLeast<{
    hist_no?: bigint | number
    AND?: sy_excel_histWhereInput | sy_excel_histWhereInput[]
    OR?: sy_excel_histWhereInput[]
    NOT?: sy_excel_histWhereInput | sy_excel_histWhereInput[]
    file_nm?: StringFilter<"sy_excel_hist"> | string
    row_cnt?: IntFilter<"sy_excel_hist"> | number
    regr_no?: BigIntFilter<"sy_excel_hist"> | bigint | number
    reg_dt?: DateTimeFilter<"sy_excel_hist"> | Date | string
  }, "hist_no">

  export type sy_excel_histOrderByWithAggregationInput = {
    hist_no?: SortOrder
    file_nm?: SortOrder
    row_cnt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    _count?: sy_excel_histCountOrderByAggregateInput
    _avg?: sy_excel_histAvgOrderByAggregateInput
    _max?: sy_excel_histMaxOrderByAggregateInput
    _min?: sy_excel_histMinOrderByAggregateInput
    _sum?: sy_excel_histSumOrderByAggregateInput
  }

  export type sy_excel_histScalarWhereWithAggregatesInput = {
    AND?: sy_excel_histScalarWhereWithAggregatesInput | sy_excel_histScalarWhereWithAggregatesInput[]
    OR?: sy_excel_histScalarWhereWithAggregatesInput[]
    NOT?: sy_excel_histScalarWhereWithAggregatesInput | sy_excel_histScalarWhereWithAggregatesInput[]
    hist_no?: BigIntWithAggregatesFilter<"sy_excel_hist"> | bigint | number
    file_nm?: StringWithAggregatesFilter<"sy_excel_hist"> | string
    row_cnt?: IntWithAggregatesFilter<"sy_excel_hist"> | number
    regr_no?: BigIntWithAggregatesFilter<"sy_excel_hist"> | bigint | number
    reg_dt?: DateTimeWithAggregatesFilter<"sy_excel_hist"> | Date | string
  }

  export type sy_grp_cdWhereInput = {
    AND?: sy_grp_cdWhereInput | sy_grp_cdWhereInput[]
    OR?: sy_grp_cdWhereInput[]
    NOT?: sy_grp_cdWhereInput | sy_grp_cdWhereInput[]
    grp_cd?: StringFilter<"sy_grp_cd"> | string
    grp_cd_nm?: StringFilter<"sy_grp_cd"> | string
    grp_cd_desc?: StringNullableFilter<"sy_grp_cd"> | string | null
    use_tf?: StringFilter<"sy_grp_cd"> | string
    regr_no?: IntFilter<"sy_grp_cd"> | number
    reg_dt?: DateTimeFilter<"sy_grp_cd"> | Date | string
    modr_no?: IntFilter<"sy_grp_cd"> | number
    mod_dt?: DateTimeFilter<"sy_grp_cd"> | Date | string
  }

  export type sy_grp_cdOrderByWithRelationInput = {
    grp_cd?: SortOrder
    grp_cd_nm?: SortOrder
    grp_cd_desc?: SortOrderInput | SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sy_grp_cdOrderByRelevanceInput
  }

  export type sy_grp_cdWhereUniqueInput = Prisma.AtLeast<{
    grp_cd?: string
    AND?: sy_grp_cdWhereInput | sy_grp_cdWhereInput[]
    OR?: sy_grp_cdWhereInput[]
    NOT?: sy_grp_cdWhereInput | sy_grp_cdWhereInput[]
    grp_cd_nm?: StringFilter<"sy_grp_cd"> | string
    grp_cd_desc?: StringNullableFilter<"sy_grp_cd"> | string | null
    use_tf?: StringFilter<"sy_grp_cd"> | string
    regr_no?: IntFilter<"sy_grp_cd"> | number
    reg_dt?: DateTimeFilter<"sy_grp_cd"> | Date | string
    modr_no?: IntFilter<"sy_grp_cd"> | number
    mod_dt?: DateTimeFilter<"sy_grp_cd"> | Date | string
  }, "grp_cd">

  export type sy_grp_cdOrderByWithAggregationInput = {
    grp_cd?: SortOrder
    grp_cd_nm?: SortOrder
    grp_cd_desc?: SortOrderInput | SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sy_grp_cdCountOrderByAggregateInput
    _avg?: sy_grp_cdAvgOrderByAggregateInput
    _max?: sy_grp_cdMaxOrderByAggregateInput
    _min?: sy_grp_cdMinOrderByAggregateInput
    _sum?: sy_grp_cdSumOrderByAggregateInput
  }

  export type sy_grp_cdScalarWhereWithAggregatesInput = {
    AND?: sy_grp_cdScalarWhereWithAggregatesInput | sy_grp_cdScalarWhereWithAggregatesInput[]
    OR?: sy_grp_cdScalarWhereWithAggregatesInput[]
    NOT?: sy_grp_cdScalarWhereWithAggregatesInput | sy_grp_cdScalarWhereWithAggregatesInput[]
    grp_cd?: StringWithAggregatesFilter<"sy_grp_cd"> | string
    grp_cd_nm?: StringWithAggregatesFilter<"sy_grp_cd"> | string
    grp_cd_desc?: StringNullableWithAggregatesFilter<"sy_grp_cd"> | string | null
    use_tf?: StringWithAggregatesFilter<"sy_grp_cd"> | string
    regr_no?: IntWithAggregatesFilter<"sy_grp_cd"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sy_grp_cd"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sy_grp_cd"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_grp_cd"> | Date | string
  }

  export type sy_menuWhereInput = {
    AND?: sy_menuWhereInput | sy_menuWhereInput[]
    OR?: sy_menuWhereInput[]
    NOT?: sy_menuWhereInput | sy_menuWhereInput[]
    menu_no?: IntFilter<"sy_menu"> | number
    menu_nm?: StringFilter<"sy_menu"> | string
    use_tf?: StringFilter<"sy_menu"> | string
    expsr_tf?: StringFilter<"sy_menu"> | string
    indct_seq?: IntFilter<"sy_menu"> | number
    menu_desc?: StringNullableFilter<"sy_menu"> | string | null
    up_menu_no?: IntNullableFilter<"sy_menu"> | number | null
    note_cont?: StringNullableFilter<"sy_menu"> | string | null
    link_scrn_no?: IntNullableFilter<"sy_menu"> | number | null
    icon_nm?: StringNullableFilter<"sy_menu"> | string | null
    menu_url?: StringNullableFilter<"sy_menu"> | string | null
    vrsn?: StringFilter<"sy_menu"> | string
    regr_no?: IntFilter<"sy_menu"> | number
    reg_dt?: DateTimeFilter<"sy_menu"> | Date | string
    modr_no?: IntFilter<"sy_menu"> | number
    mod_dt?: DateTimeFilter<"sy_menu"> | Date | string
  }

  export type sy_menuOrderByWithRelationInput = {
    menu_no?: SortOrder
    menu_nm?: SortOrder
    use_tf?: SortOrder
    expsr_tf?: SortOrder
    indct_seq?: SortOrder
    menu_desc?: SortOrderInput | SortOrder
    up_menu_no?: SortOrderInput | SortOrder
    note_cont?: SortOrderInput | SortOrder
    link_scrn_no?: SortOrderInput | SortOrder
    icon_nm?: SortOrderInput | SortOrder
    menu_url?: SortOrderInput | SortOrder
    vrsn?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sy_menuOrderByRelevanceInput
  }

  export type sy_menuWhereUniqueInput = Prisma.AtLeast<{
    menu_no?: number
    AND?: sy_menuWhereInput | sy_menuWhereInput[]
    OR?: sy_menuWhereInput[]
    NOT?: sy_menuWhereInput | sy_menuWhereInput[]
    menu_nm?: StringFilter<"sy_menu"> | string
    use_tf?: StringFilter<"sy_menu"> | string
    expsr_tf?: StringFilter<"sy_menu"> | string
    indct_seq?: IntFilter<"sy_menu"> | number
    menu_desc?: StringNullableFilter<"sy_menu"> | string | null
    up_menu_no?: IntNullableFilter<"sy_menu"> | number | null
    note_cont?: StringNullableFilter<"sy_menu"> | string | null
    link_scrn_no?: IntNullableFilter<"sy_menu"> | number | null
    icon_nm?: StringNullableFilter<"sy_menu"> | string | null
    menu_url?: StringNullableFilter<"sy_menu"> | string | null
    vrsn?: StringFilter<"sy_menu"> | string
    regr_no?: IntFilter<"sy_menu"> | number
    reg_dt?: DateTimeFilter<"sy_menu"> | Date | string
    modr_no?: IntFilter<"sy_menu"> | number
    mod_dt?: DateTimeFilter<"sy_menu"> | Date | string
  }, "menu_no">

  export type sy_menuOrderByWithAggregationInput = {
    menu_no?: SortOrder
    menu_nm?: SortOrder
    use_tf?: SortOrder
    expsr_tf?: SortOrder
    indct_seq?: SortOrder
    menu_desc?: SortOrderInput | SortOrder
    up_menu_no?: SortOrderInput | SortOrder
    note_cont?: SortOrderInput | SortOrder
    link_scrn_no?: SortOrderInput | SortOrder
    icon_nm?: SortOrderInput | SortOrder
    menu_url?: SortOrderInput | SortOrder
    vrsn?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sy_menuCountOrderByAggregateInput
    _avg?: sy_menuAvgOrderByAggregateInput
    _max?: sy_menuMaxOrderByAggregateInput
    _min?: sy_menuMinOrderByAggregateInput
    _sum?: sy_menuSumOrderByAggregateInput
  }

  export type sy_menuScalarWhereWithAggregatesInput = {
    AND?: sy_menuScalarWhereWithAggregatesInput | sy_menuScalarWhereWithAggregatesInput[]
    OR?: sy_menuScalarWhereWithAggregatesInput[]
    NOT?: sy_menuScalarWhereWithAggregatesInput | sy_menuScalarWhereWithAggregatesInput[]
    menu_no?: IntWithAggregatesFilter<"sy_menu"> | number
    menu_nm?: StringWithAggregatesFilter<"sy_menu"> | string
    use_tf?: StringWithAggregatesFilter<"sy_menu"> | string
    expsr_tf?: StringWithAggregatesFilter<"sy_menu"> | string
    indct_seq?: IntWithAggregatesFilter<"sy_menu"> | number
    menu_desc?: StringNullableWithAggregatesFilter<"sy_menu"> | string | null
    up_menu_no?: IntNullableWithAggregatesFilter<"sy_menu"> | number | null
    note_cont?: StringNullableWithAggregatesFilter<"sy_menu"> | string | null
    link_scrn_no?: IntNullableWithAggregatesFilter<"sy_menu"> | number | null
    icon_nm?: StringNullableWithAggregatesFilter<"sy_menu"> | string | null
    menu_url?: StringNullableWithAggregatesFilter<"sy_menu"> | string | null
    vrsn?: StringWithAggregatesFilter<"sy_menu"> | string
    regr_no?: IntWithAggregatesFilter<"sy_menu"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sy_menu"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sy_menu"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_menu"> | Date | string
  }

  export type sy_mngrWhereInput = {
    AND?: sy_mngrWhereInput | sy_mngrWhereInput[]
    OR?: sy_mngrWhereInput[]
    NOT?: sy_mngrWhereInput | sy_mngrWhereInput[]
    mngr_no?: IntFilter<"sy_mngr"> | number
    mngr_id?: StringFilter<"sy_mngr"> | string
    mngr_pswd?: StringFilter<"sy_mngr"> | string
    mngr_nm?: StringFilter<"sy_mngr"> | string
    mngr_sctn_cd?: StringFilter<"sy_mngr"> | string
    mngr_stts_cd?: StringNullableFilter<"sy_mngr"> | string | null
    email?: StringFilter<"sy_mngr"> | string
    mbph_no?: StringFilter<"sy_mngr"> | string
    use_tf?: StringFilter<"sy_mngr"> | string
    clco_no?: IntNullableFilter<"sy_mngr"> | number | null
    clco_dept_cd?: StringNullableFilter<"sy_mngr"> | string | null
    use_bgng_ymd?: DateTimeNullableFilter<"sy_mngr"> | Date | string | null
    use_end_ymd?: DateTimeNullableFilter<"sy_mngr"> | Date | string | null
    salt_val?: StringNullableFilter<"sy_mngr"> | string | null
    cnsr_sctn_cd?: StringNullableFilter<"sy_mngr"> | string | null
    fail_cnt?: IntNullableFilter<"sy_mngr"> | number | null
    auth_suces_tf?: StringNullableFilter<"sy_mngr"> | string | null
    auth_key?: StringNullableFilter<"sy_mngr"> | string | null
    auth_token?: StringNullableFilter<"sy_mngr"> | string | null
    reg_dt?: DateTimeFilter<"sy_mngr"> | Date | string
    modr_no?: IntFilter<"sy_mngr"> | number
    mod_dt?: DateTimeFilter<"sy_mngr"> | Date | string
    regr_no?: IntFilter<"sy_mngr"> | number
  }

  export type sy_mngrOrderByWithRelationInput = {
    mngr_no?: SortOrder
    mngr_id?: SortOrder
    mngr_pswd?: SortOrder
    mngr_nm?: SortOrder
    mngr_sctn_cd?: SortOrder
    mngr_stts_cd?: SortOrderInput | SortOrder
    email?: SortOrder
    mbph_no?: SortOrder
    use_tf?: SortOrder
    clco_no?: SortOrderInput | SortOrder
    clco_dept_cd?: SortOrderInput | SortOrder
    use_bgng_ymd?: SortOrderInput | SortOrder
    use_end_ymd?: SortOrderInput | SortOrder
    salt_val?: SortOrderInput | SortOrder
    cnsr_sctn_cd?: SortOrderInput | SortOrder
    fail_cnt?: SortOrderInput | SortOrder
    auth_suces_tf?: SortOrderInput | SortOrder
    auth_key?: SortOrderInput | SortOrder
    auth_token?: SortOrderInput | SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    regr_no?: SortOrder
    _relevance?: sy_mngrOrderByRelevanceInput
  }

  export type sy_mngrWhereUniqueInput = Prisma.AtLeast<{
    mngr_no?: number
    AND?: sy_mngrWhereInput | sy_mngrWhereInput[]
    OR?: sy_mngrWhereInput[]
    NOT?: sy_mngrWhereInput | sy_mngrWhereInput[]
    mngr_id?: StringFilter<"sy_mngr"> | string
    mngr_pswd?: StringFilter<"sy_mngr"> | string
    mngr_nm?: StringFilter<"sy_mngr"> | string
    mngr_sctn_cd?: StringFilter<"sy_mngr"> | string
    mngr_stts_cd?: StringNullableFilter<"sy_mngr"> | string | null
    email?: StringFilter<"sy_mngr"> | string
    mbph_no?: StringFilter<"sy_mngr"> | string
    use_tf?: StringFilter<"sy_mngr"> | string
    clco_no?: IntNullableFilter<"sy_mngr"> | number | null
    clco_dept_cd?: StringNullableFilter<"sy_mngr"> | string | null
    use_bgng_ymd?: DateTimeNullableFilter<"sy_mngr"> | Date | string | null
    use_end_ymd?: DateTimeNullableFilter<"sy_mngr"> | Date | string | null
    salt_val?: StringNullableFilter<"sy_mngr"> | string | null
    cnsr_sctn_cd?: StringNullableFilter<"sy_mngr"> | string | null
    fail_cnt?: IntNullableFilter<"sy_mngr"> | number | null
    auth_suces_tf?: StringNullableFilter<"sy_mngr"> | string | null
    auth_key?: StringNullableFilter<"sy_mngr"> | string | null
    auth_token?: StringNullableFilter<"sy_mngr"> | string | null
    reg_dt?: DateTimeFilter<"sy_mngr"> | Date | string
    modr_no?: IntFilter<"sy_mngr"> | number
    mod_dt?: DateTimeFilter<"sy_mngr"> | Date | string
    regr_no?: IntFilter<"sy_mngr"> | number
  }, "mngr_no">

  export type sy_mngrOrderByWithAggregationInput = {
    mngr_no?: SortOrder
    mngr_id?: SortOrder
    mngr_pswd?: SortOrder
    mngr_nm?: SortOrder
    mngr_sctn_cd?: SortOrder
    mngr_stts_cd?: SortOrderInput | SortOrder
    email?: SortOrder
    mbph_no?: SortOrder
    use_tf?: SortOrder
    clco_no?: SortOrderInput | SortOrder
    clco_dept_cd?: SortOrderInput | SortOrder
    use_bgng_ymd?: SortOrderInput | SortOrder
    use_end_ymd?: SortOrderInput | SortOrder
    salt_val?: SortOrderInput | SortOrder
    cnsr_sctn_cd?: SortOrderInput | SortOrder
    fail_cnt?: SortOrderInput | SortOrder
    auth_suces_tf?: SortOrderInput | SortOrder
    auth_key?: SortOrderInput | SortOrder
    auth_token?: SortOrderInput | SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    regr_no?: SortOrder
    _count?: sy_mngrCountOrderByAggregateInput
    _avg?: sy_mngrAvgOrderByAggregateInput
    _max?: sy_mngrMaxOrderByAggregateInput
    _min?: sy_mngrMinOrderByAggregateInput
    _sum?: sy_mngrSumOrderByAggregateInput
  }

  export type sy_mngrScalarWhereWithAggregatesInput = {
    AND?: sy_mngrScalarWhereWithAggregatesInput | sy_mngrScalarWhereWithAggregatesInput[]
    OR?: sy_mngrScalarWhereWithAggregatesInput[]
    NOT?: sy_mngrScalarWhereWithAggregatesInput | sy_mngrScalarWhereWithAggregatesInput[]
    mngr_no?: IntWithAggregatesFilter<"sy_mngr"> | number
    mngr_id?: StringWithAggregatesFilter<"sy_mngr"> | string
    mngr_pswd?: StringWithAggregatesFilter<"sy_mngr"> | string
    mngr_nm?: StringWithAggregatesFilter<"sy_mngr"> | string
    mngr_sctn_cd?: StringWithAggregatesFilter<"sy_mngr"> | string
    mngr_stts_cd?: StringNullableWithAggregatesFilter<"sy_mngr"> | string | null
    email?: StringWithAggregatesFilter<"sy_mngr"> | string
    mbph_no?: StringWithAggregatesFilter<"sy_mngr"> | string
    use_tf?: StringWithAggregatesFilter<"sy_mngr"> | string
    clco_no?: IntNullableWithAggregatesFilter<"sy_mngr"> | number | null
    clco_dept_cd?: StringNullableWithAggregatesFilter<"sy_mngr"> | string | null
    use_bgng_ymd?: DateTimeNullableWithAggregatesFilter<"sy_mngr"> | Date | string | null
    use_end_ymd?: DateTimeNullableWithAggregatesFilter<"sy_mngr"> | Date | string | null
    salt_val?: StringNullableWithAggregatesFilter<"sy_mngr"> | string | null
    cnsr_sctn_cd?: StringNullableWithAggregatesFilter<"sy_mngr"> | string | null
    fail_cnt?: IntNullableWithAggregatesFilter<"sy_mngr"> | number | null
    auth_suces_tf?: StringNullableWithAggregatesFilter<"sy_mngr"> | string | null
    auth_key?: StringNullableWithAggregatesFilter<"sy_mngr"> | string | null
    auth_token?: StringNullableWithAggregatesFilter<"sy_mngr"> | string | null
    reg_dt?: DateTimeWithAggregatesFilter<"sy_mngr"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sy_mngr"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_mngr"> | Date | string
    regr_no?: IntWithAggregatesFilter<"sy_mngr"> | number
  }

  export type sy_mngr_auth_grpWhereInput = {
    AND?: sy_mngr_auth_grpWhereInput | sy_mngr_auth_grpWhereInput[]
    OR?: sy_mngr_auth_grpWhereInput[]
    NOT?: sy_mngr_auth_grpWhereInput | sy_mngr_auth_grpWhereInput[]
    mngr_no?: IntFilter<"sy_mngr_auth_grp"> | number
    auth_grp_no?: IntFilter<"sy_mngr_auth_grp"> | number
    regr_no?: IntFilter<"sy_mngr_auth_grp"> | number
    reg_dt?: DateTimeFilter<"sy_mngr_auth_grp"> | Date | string
    modr_no?: IntFilter<"sy_mngr_auth_grp"> | number
    mod_dt?: DateTimeFilter<"sy_mngr_auth_grp"> | Date | string
  }

  export type sy_mngr_auth_grpOrderByWithRelationInput = {
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_mngr_auth_grpWhereUniqueInput = Prisma.AtLeast<{
    mngr_no_auth_grp_no?: sy_mngr_auth_grpMngr_noAuth_grp_noCompoundUniqueInput
    AND?: sy_mngr_auth_grpWhereInput | sy_mngr_auth_grpWhereInput[]
    OR?: sy_mngr_auth_grpWhereInput[]
    NOT?: sy_mngr_auth_grpWhereInput | sy_mngr_auth_grpWhereInput[]
    mngr_no?: IntFilter<"sy_mngr_auth_grp"> | number
    auth_grp_no?: IntFilter<"sy_mngr_auth_grp"> | number
    regr_no?: IntFilter<"sy_mngr_auth_grp"> | number
    reg_dt?: DateTimeFilter<"sy_mngr_auth_grp"> | Date | string
    modr_no?: IntFilter<"sy_mngr_auth_grp"> | number
    mod_dt?: DateTimeFilter<"sy_mngr_auth_grp"> | Date | string
  }, "mngr_no_auth_grp_no">

  export type sy_mngr_auth_grpOrderByWithAggregationInput = {
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sy_mngr_auth_grpCountOrderByAggregateInput
    _avg?: sy_mngr_auth_grpAvgOrderByAggregateInput
    _max?: sy_mngr_auth_grpMaxOrderByAggregateInput
    _min?: sy_mngr_auth_grpMinOrderByAggregateInput
    _sum?: sy_mngr_auth_grpSumOrderByAggregateInput
  }

  export type sy_mngr_auth_grpScalarWhereWithAggregatesInput = {
    AND?: sy_mngr_auth_grpScalarWhereWithAggregatesInput | sy_mngr_auth_grpScalarWhereWithAggregatesInput[]
    OR?: sy_mngr_auth_grpScalarWhereWithAggregatesInput[]
    NOT?: sy_mngr_auth_grpScalarWhereWithAggregatesInput | sy_mngr_auth_grpScalarWhereWithAggregatesInput[]
    mngr_no?: IntWithAggregatesFilter<"sy_mngr_auth_grp"> | number
    auth_grp_no?: IntWithAggregatesFilter<"sy_mngr_auth_grp"> | number
    regr_no?: IntWithAggregatesFilter<"sy_mngr_auth_grp"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sy_mngr_auth_grp"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sy_mngr_auth_grp"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_mngr_auth_grp"> | Date | string
  }

  export type sy_mngr_auth_grp_histWhereInput = {
    AND?: sy_mngr_auth_grp_histWhereInput | sy_mngr_auth_grp_histWhereInput[]
    OR?: sy_mngr_auth_grp_histWhereInput[]
    NOT?: sy_mngr_auth_grp_histWhereInput | sy_mngr_auth_grp_histWhereInput[]
    hist_no?: BigIntFilter<"sy_mngr_auth_grp_hist"> | bigint | number
    mngr_no?: IntFilter<"sy_mngr_auth_grp_hist"> | number
    auth_grp_no?: IntFilter<"sy_mngr_auth_grp_hist"> | number
    type?: StringFilter<"sy_mngr_auth_grp_hist"> | string
    reg_dt?: DateTimeFilter<"sy_mngr_auth_grp_hist"> | Date | string
    modr_no?: IntFilter<"sy_mngr_auth_grp_hist"> | number
    mod_dt?: DateTimeFilter<"sy_mngr_auth_grp_hist"> | Date | string
    regr_no?: IntFilter<"sy_mngr_auth_grp_hist"> | number
  }

  export type sy_mngr_auth_grp_histOrderByWithRelationInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    type?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    regr_no?: SortOrder
    _relevance?: sy_mngr_auth_grp_histOrderByRelevanceInput
  }

  export type sy_mngr_auth_grp_histWhereUniqueInput = Prisma.AtLeast<{
    hist_no?: bigint | number
    AND?: sy_mngr_auth_grp_histWhereInput | sy_mngr_auth_grp_histWhereInput[]
    OR?: sy_mngr_auth_grp_histWhereInput[]
    NOT?: sy_mngr_auth_grp_histWhereInput | sy_mngr_auth_grp_histWhereInput[]
    mngr_no?: IntFilter<"sy_mngr_auth_grp_hist"> | number
    auth_grp_no?: IntFilter<"sy_mngr_auth_grp_hist"> | number
    type?: StringFilter<"sy_mngr_auth_grp_hist"> | string
    reg_dt?: DateTimeFilter<"sy_mngr_auth_grp_hist"> | Date | string
    modr_no?: IntFilter<"sy_mngr_auth_grp_hist"> | number
    mod_dt?: DateTimeFilter<"sy_mngr_auth_grp_hist"> | Date | string
    regr_no?: IntFilter<"sy_mngr_auth_grp_hist"> | number
  }, "hist_no">

  export type sy_mngr_auth_grp_histOrderByWithAggregationInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    type?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    regr_no?: SortOrder
    _count?: sy_mngr_auth_grp_histCountOrderByAggregateInput
    _avg?: sy_mngr_auth_grp_histAvgOrderByAggregateInput
    _max?: sy_mngr_auth_grp_histMaxOrderByAggregateInput
    _min?: sy_mngr_auth_grp_histMinOrderByAggregateInput
    _sum?: sy_mngr_auth_grp_histSumOrderByAggregateInput
  }

  export type sy_mngr_auth_grp_histScalarWhereWithAggregatesInput = {
    AND?: sy_mngr_auth_grp_histScalarWhereWithAggregatesInput | sy_mngr_auth_grp_histScalarWhereWithAggregatesInput[]
    OR?: sy_mngr_auth_grp_histScalarWhereWithAggregatesInput[]
    NOT?: sy_mngr_auth_grp_histScalarWhereWithAggregatesInput | sy_mngr_auth_grp_histScalarWhereWithAggregatesInput[]
    hist_no?: BigIntWithAggregatesFilter<"sy_mngr_auth_grp_hist"> | bigint | number
    mngr_no?: IntWithAggregatesFilter<"sy_mngr_auth_grp_hist"> | number
    auth_grp_no?: IntWithAggregatesFilter<"sy_mngr_auth_grp_hist"> | number
    type?: StringWithAggregatesFilter<"sy_mngr_auth_grp_hist"> | string
    reg_dt?: DateTimeWithAggregatesFilter<"sy_mngr_auth_grp_hist"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sy_mngr_auth_grp_hist"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_mngr_auth_grp_hist"> | Date | string
    regr_no?: IntWithAggregatesFilter<"sy_mngr_auth_grp_hist"> | number
  }

  export type sy_mngr_lgn_histWhereInput = {
    AND?: sy_mngr_lgn_histWhereInput | sy_mngr_lgn_histWhereInput[]
    OR?: sy_mngr_lgn_histWhereInput[]
    NOT?: sy_mngr_lgn_histWhereInput | sy_mngr_lgn_histWhereInput[]
    hist_no?: BigIntFilter<"sy_mngr_lgn_hist"> | bigint | number
    mngr_no?: IntFilter<"sy_mngr_lgn_hist"> | number
    lgn_dt?: DateTimeFilter<"sy_mngr_lgn_hist"> | Date | string
    lgn_ip_addr?: StringFilter<"sy_mngr_lgn_hist"> | string
    regr_no?: IntFilter<"sy_mngr_lgn_hist"> | number
    reg_dt?: DateTimeFilter<"sy_mngr_lgn_hist"> | Date | string
    modr_no?: IntFilter<"sy_mngr_lgn_hist"> | number
    mod_dt?: DateTimeFilter<"sy_mngr_lgn_hist"> | Date | string
  }

  export type sy_mngr_lgn_histOrderByWithRelationInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    lgn_dt?: SortOrder
    lgn_ip_addr?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sy_mngr_lgn_histOrderByRelevanceInput
  }

  export type sy_mngr_lgn_histWhereUniqueInput = Prisma.AtLeast<{
    hist_no?: bigint | number
    AND?: sy_mngr_lgn_histWhereInput | sy_mngr_lgn_histWhereInput[]
    OR?: sy_mngr_lgn_histWhereInput[]
    NOT?: sy_mngr_lgn_histWhereInput | sy_mngr_lgn_histWhereInput[]
    mngr_no?: IntFilter<"sy_mngr_lgn_hist"> | number
    lgn_dt?: DateTimeFilter<"sy_mngr_lgn_hist"> | Date | string
    lgn_ip_addr?: StringFilter<"sy_mngr_lgn_hist"> | string
    regr_no?: IntFilter<"sy_mngr_lgn_hist"> | number
    reg_dt?: DateTimeFilter<"sy_mngr_lgn_hist"> | Date | string
    modr_no?: IntFilter<"sy_mngr_lgn_hist"> | number
    mod_dt?: DateTimeFilter<"sy_mngr_lgn_hist"> | Date | string
  }, "hist_no">

  export type sy_mngr_lgn_histOrderByWithAggregationInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    lgn_dt?: SortOrder
    lgn_ip_addr?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sy_mngr_lgn_histCountOrderByAggregateInput
    _avg?: sy_mngr_lgn_histAvgOrderByAggregateInput
    _max?: sy_mngr_lgn_histMaxOrderByAggregateInput
    _min?: sy_mngr_lgn_histMinOrderByAggregateInput
    _sum?: sy_mngr_lgn_histSumOrderByAggregateInput
  }

  export type sy_mngr_lgn_histScalarWhereWithAggregatesInput = {
    AND?: sy_mngr_lgn_histScalarWhereWithAggregatesInput | sy_mngr_lgn_histScalarWhereWithAggregatesInput[]
    OR?: sy_mngr_lgn_histScalarWhereWithAggregatesInput[]
    NOT?: sy_mngr_lgn_histScalarWhereWithAggregatesInput | sy_mngr_lgn_histScalarWhereWithAggregatesInput[]
    hist_no?: BigIntWithAggregatesFilter<"sy_mngr_lgn_hist"> | bigint | number
    mngr_no?: IntWithAggregatesFilter<"sy_mngr_lgn_hist"> | number
    lgn_dt?: DateTimeWithAggregatesFilter<"sy_mngr_lgn_hist"> | Date | string
    lgn_ip_addr?: StringWithAggregatesFilter<"sy_mngr_lgn_hist"> | string
    regr_no?: IntWithAggregatesFilter<"sy_mngr_lgn_hist"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sy_mngr_lgn_hist"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sy_mngr_lgn_hist"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_mngr_lgn_hist"> | Date | string
  }

  export type sy_mngr_pwd_histWhereInput = {
    AND?: sy_mngr_pwd_histWhereInput | sy_mngr_pwd_histWhereInput[]
    OR?: sy_mngr_pwd_histWhereInput[]
    NOT?: sy_mngr_pwd_histWhereInput | sy_mngr_pwd_histWhereInput[]
    hist_no?: BigIntFilter<"sy_mngr_pwd_hist"> | bigint | number
    mngr_no?: IntFilter<"sy_mngr_pwd_hist"> | number
    modr_tp_cd?: StringFilter<"sy_mngr_pwd_hist"> | string
    regr_no?: IntFilter<"sy_mngr_pwd_hist"> | number
    reg_dt?: DateTimeFilter<"sy_mngr_pwd_hist"> | Date | string
    modr_no?: IntFilter<"sy_mngr_pwd_hist"> | number
    mod_dt?: DateTimeFilter<"sy_mngr_pwd_hist"> | Date | string
  }

  export type sy_mngr_pwd_histOrderByWithRelationInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    modr_tp_cd?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _relevance?: sy_mngr_pwd_histOrderByRelevanceInput
  }

  export type sy_mngr_pwd_histWhereUniqueInput = Prisma.AtLeast<{
    hist_no?: bigint | number
    AND?: sy_mngr_pwd_histWhereInput | sy_mngr_pwd_histWhereInput[]
    OR?: sy_mngr_pwd_histWhereInput[]
    NOT?: sy_mngr_pwd_histWhereInput | sy_mngr_pwd_histWhereInput[]
    mngr_no?: IntFilter<"sy_mngr_pwd_hist"> | number
    modr_tp_cd?: StringFilter<"sy_mngr_pwd_hist"> | string
    regr_no?: IntFilter<"sy_mngr_pwd_hist"> | number
    reg_dt?: DateTimeFilter<"sy_mngr_pwd_hist"> | Date | string
    modr_no?: IntFilter<"sy_mngr_pwd_hist"> | number
    mod_dt?: DateTimeFilter<"sy_mngr_pwd_hist"> | Date | string
  }, "hist_no">

  export type sy_mngr_pwd_histOrderByWithAggregationInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    modr_tp_cd?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    _count?: sy_mngr_pwd_histCountOrderByAggregateInput
    _avg?: sy_mngr_pwd_histAvgOrderByAggregateInput
    _max?: sy_mngr_pwd_histMaxOrderByAggregateInput
    _min?: sy_mngr_pwd_histMinOrderByAggregateInput
    _sum?: sy_mngr_pwd_histSumOrderByAggregateInput
  }

  export type sy_mngr_pwd_histScalarWhereWithAggregatesInput = {
    AND?: sy_mngr_pwd_histScalarWhereWithAggregatesInput | sy_mngr_pwd_histScalarWhereWithAggregatesInput[]
    OR?: sy_mngr_pwd_histScalarWhereWithAggregatesInput[]
    NOT?: sy_mngr_pwd_histScalarWhereWithAggregatesInput | sy_mngr_pwd_histScalarWhereWithAggregatesInput[]
    hist_no?: BigIntWithAggregatesFilter<"sy_mngr_pwd_hist"> | bigint | number
    mngr_no?: IntWithAggregatesFilter<"sy_mngr_pwd_hist"> | number
    modr_tp_cd?: StringWithAggregatesFilter<"sy_mngr_pwd_hist"> | string
    regr_no?: IntWithAggregatesFilter<"sy_mngr_pwd_hist"> | number
    reg_dt?: DateTimeWithAggregatesFilter<"sy_mngr_pwd_hist"> | Date | string
    modr_no?: IntWithAggregatesFilter<"sy_mngr_pwd_hist"> | number
    mod_dt?: DateTimeWithAggregatesFilter<"sy_mngr_pwd_hist"> | Date | string
  }

  export type sy_mngr_req_histWhereInput = {
    AND?: sy_mngr_req_histWhereInput | sy_mngr_req_histWhereInput[]
    OR?: sy_mngr_req_histWhereInput[]
    NOT?: sy_mngr_req_histWhereInput | sy_mngr_req_histWhereInput[]
    hist_no?: BigIntFilter<"sy_mngr_req_hist"> | bigint | number
    mngr_no?: IntFilter<"sy_mngr_req_hist"> | number
    mngr_nm?: StringFilter<"sy_mngr_req_hist"> | string
    auth_grp_nm?: StringFilter<"sy_mngr_req_hist"> | string
    ip_addr?: StringFilter<"sy_mngr_req_hist"> | string
    req_uri?: StringFilter<"sy_mngr_req_hist"> | string
    req_method?: StringNullableFilter<"sy_mngr_req_hist"> | string | null
    req_body?: StringNullableFilter<"sy_mngr_req_hist"> | string | null
    reg_dt?: DateTimeNullableFilter<"sy_mngr_req_hist"> | Date | string | null
    regr_no?: IntNullableFilter<"sy_mngr_req_hist"> | number | null
    mod_dt?: DateTimeNullableFilter<"sy_mngr_req_hist"> | Date | string | null
    modr_no?: IntNullableFilter<"sy_mngr_req_hist"> | number | null
  }

  export type sy_mngr_req_histOrderByWithRelationInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    mngr_nm?: SortOrder
    auth_grp_nm?: SortOrder
    ip_addr?: SortOrder
    req_uri?: SortOrder
    req_method?: SortOrderInput | SortOrder
    req_body?: SortOrderInput | SortOrder
    reg_dt?: SortOrderInput | SortOrder
    regr_no?: SortOrderInput | SortOrder
    mod_dt?: SortOrderInput | SortOrder
    modr_no?: SortOrderInput | SortOrder
    _relevance?: sy_mngr_req_histOrderByRelevanceInput
  }

  export type sy_mngr_req_histWhereUniqueInput = Prisma.AtLeast<{
    hist_no?: bigint | number
    AND?: sy_mngr_req_histWhereInput | sy_mngr_req_histWhereInput[]
    OR?: sy_mngr_req_histWhereInput[]
    NOT?: sy_mngr_req_histWhereInput | sy_mngr_req_histWhereInput[]
    mngr_no?: IntFilter<"sy_mngr_req_hist"> | number
    mngr_nm?: StringFilter<"sy_mngr_req_hist"> | string
    auth_grp_nm?: StringFilter<"sy_mngr_req_hist"> | string
    ip_addr?: StringFilter<"sy_mngr_req_hist"> | string
    req_uri?: StringFilter<"sy_mngr_req_hist"> | string
    req_method?: StringNullableFilter<"sy_mngr_req_hist"> | string | null
    req_body?: StringNullableFilter<"sy_mngr_req_hist"> | string | null
    reg_dt?: DateTimeNullableFilter<"sy_mngr_req_hist"> | Date | string | null
    regr_no?: IntNullableFilter<"sy_mngr_req_hist"> | number | null
    mod_dt?: DateTimeNullableFilter<"sy_mngr_req_hist"> | Date | string | null
    modr_no?: IntNullableFilter<"sy_mngr_req_hist"> | number | null
  }, "hist_no">

  export type sy_mngr_req_histOrderByWithAggregationInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    mngr_nm?: SortOrder
    auth_grp_nm?: SortOrder
    ip_addr?: SortOrder
    req_uri?: SortOrder
    req_method?: SortOrderInput | SortOrder
    req_body?: SortOrderInput | SortOrder
    reg_dt?: SortOrderInput | SortOrder
    regr_no?: SortOrderInput | SortOrder
    mod_dt?: SortOrderInput | SortOrder
    modr_no?: SortOrderInput | SortOrder
    _count?: sy_mngr_req_histCountOrderByAggregateInput
    _avg?: sy_mngr_req_histAvgOrderByAggregateInput
    _max?: sy_mngr_req_histMaxOrderByAggregateInput
    _min?: sy_mngr_req_histMinOrderByAggregateInput
    _sum?: sy_mngr_req_histSumOrderByAggregateInput
  }

  export type sy_mngr_req_histScalarWhereWithAggregatesInput = {
    AND?: sy_mngr_req_histScalarWhereWithAggregatesInput | sy_mngr_req_histScalarWhereWithAggregatesInput[]
    OR?: sy_mngr_req_histScalarWhereWithAggregatesInput[]
    NOT?: sy_mngr_req_histScalarWhereWithAggregatesInput | sy_mngr_req_histScalarWhereWithAggregatesInput[]
    hist_no?: BigIntWithAggregatesFilter<"sy_mngr_req_hist"> | bigint | number
    mngr_no?: IntWithAggregatesFilter<"sy_mngr_req_hist"> | number
    mngr_nm?: StringWithAggregatesFilter<"sy_mngr_req_hist"> | string
    auth_grp_nm?: StringWithAggregatesFilter<"sy_mngr_req_hist"> | string
    ip_addr?: StringWithAggregatesFilter<"sy_mngr_req_hist"> | string
    req_uri?: StringWithAggregatesFilter<"sy_mngr_req_hist"> | string
    req_method?: StringNullableWithAggregatesFilter<"sy_mngr_req_hist"> | string | null
    req_body?: StringNullableWithAggregatesFilter<"sy_mngr_req_hist"> | string | null
    reg_dt?: DateTimeNullableWithAggregatesFilter<"sy_mngr_req_hist"> | Date | string | null
    regr_no?: IntNullableWithAggregatesFilter<"sy_mngr_req_hist"> | number | null
    mod_dt?: DateTimeNullableWithAggregatesFilter<"sy_mngr_req_hist"> | Date | string | null
    modr_no?: IntNullableWithAggregatesFilter<"sy_mngr_req_hist"> | number | null
  }

  export type test_userWhereInput = {
    AND?: test_userWhereInput | test_userWhereInput[]
    OR?: test_userWhereInput[]
    NOT?: test_userWhereInput | test_userWhereInput[]
    user_no?: IntFilter<"test_user"> | number
    id?: StringFilter<"test_user"> | string
    pw?: StringFilter<"test_user"> | string
    salt_val?: StringNullableFilter<"test_user"> | string | null
    auth_token?: StringNullableFilter<"test_user"> | string | null
    kakao_user_token?: StringNullableFilter<"test_user"> | string | null
    comp_code?: StringNullableFilter<"test_user"> | string | null
    name?: StringNullableFilter<"test_user"> | string | null
    gender?: Enumtest_user_genderNullableFilter<"test_user"> | $Enums.test_user_gender | null
    birth_date?: DateTimeNullableFilter<"test_user"> | Date | string | null
    created_at?: DateTimeNullableFilter<"test_user"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"test_user"> | Date | string | null
  }

  export type test_userOrderByWithRelationInput = {
    user_no?: SortOrder
    id?: SortOrder
    pw?: SortOrder
    salt_val?: SortOrderInput | SortOrder
    auth_token?: SortOrderInput | SortOrder
    kakao_user_token?: SortOrderInput | SortOrder
    comp_code?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    birth_date?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _relevance?: test_userOrderByRelevanceInput
  }

  export type test_userWhereUniqueInput = Prisma.AtLeast<{
    user_no?: number
    id?: string
    AND?: test_userWhereInput | test_userWhereInput[]
    OR?: test_userWhereInput[]
    NOT?: test_userWhereInput | test_userWhereInput[]
    pw?: StringFilter<"test_user"> | string
    salt_val?: StringNullableFilter<"test_user"> | string | null
    auth_token?: StringNullableFilter<"test_user"> | string | null
    kakao_user_token?: StringNullableFilter<"test_user"> | string | null
    comp_code?: StringNullableFilter<"test_user"> | string | null
    name?: StringNullableFilter<"test_user"> | string | null
    gender?: Enumtest_user_genderNullableFilter<"test_user"> | $Enums.test_user_gender | null
    birth_date?: DateTimeNullableFilter<"test_user"> | Date | string | null
    created_at?: DateTimeNullableFilter<"test_user"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"test_user"> | Date | string | null
  }, "user_no" | "id">

  export type test_userOrderByWithAggregationInput = {
    user_no?: SortOrder
    id?: SortOrder
    pw?: SortOrder
    salt_val?: SortOrderInput | SortOrder
    auth_token?: SortOrderInput | SortOrder
    kakao_user_token?: SortOrderInput | SortOrder
    comp_code?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    birth_date?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: test_userCountOrderByAggregateInput
    _avg?: test_userAvgOrderByAggregateInput
    _max?: test_userMaxOrderByAggregateInput
    _min?: test_userMinOrderByAggregateInput
    _sum?: test_userSumOrderByAggregateInput
  }

  export type test_userScalarWhereWithAggregatesInput = {
    AND?: test_userScalarWhereWithAggregatesInput | test_userScalarWhereWithAggregatesInput[]
    OR?: test_userScalarWhereWithAggregatesInput[]
    NOT?: test_userScalarWhereWithAggregatesInput | test_userScalarWhereWithAggregatesInput[]
    user_no?: IntWithAggregatesFilter<"test_user"> | number
    id?: StringWithAggregatesFilter<"test_user"> | string
    pw?: StringWithAggregatesFilter<"test_user"> | string
    salt_val?: StringNullableWithAggregatesFilter<"test_user"> | string | null
    auth_token?: StringNullableWithAggregatesFilter<"test_user"> | string | null
    kakao_user_token?: StringNullableWithAggregatesFilter<"test_user"> | string | null
    comp_code?: StringNullableWithAggregatesFilter<"test_user"> | string | null
    name?: StringNullableWithAggregatesFilter<"test_user"> | string | null
    gender?: Enumtest_user_genderNullableWithAggregatesFilter<"test_user"> | $Enums.test_user_gender | null
    birth_date?: DateTimeNullableWithAggregatesFilter<"test_user"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"test_user"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"test_user"> | Date | string | null
  }

  export type aim_example_testCreateInput = {
    col1?: string | null
    col2?: string | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type aim_example_testUncheckedCreateInput = {
    no?: number
    col1?: string | null
    col2?: string | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type aim_example_testUpdateInput = {
    col1?: NullableStringFieldUpdateOperationsInput | string | null
    col2?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type aim_example_testUncheckedUpdateInput = {
    no?: IntFieldUpdateOperationsInput | number
    col1?: NullableStringFieldUpdateOperationsInput | string | null
    col2?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type aim_example_testCreateManyInput = {
    no?: number
    col1?: string | null
    col2?: string | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type aim_example_testUpdateManyMutationInput = {
    col1?: NullableStringFieldUpdateOperationsInput | string | null
    col2?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type aim_example_testUncheckedUpdateManyInput = {
    no?: IntFieldUpdateOperationsInput | number
    col1?: NullableStringFieldUpdateOperationsInput | string | null
    col2?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbrCreateInput = {
    mbr_no?: bigint | number
    clco_no: bigint | number
    clco_dept_cd?: string | null
    emp_no: string
    mbr_id: string
    mbr_pswd: string
    mbr_nm: string
    brdt: Date | string
    gen_cd: string
    mbph_no: string
    email_addr: string
    fail_pswd_cnt?: number | null
    join_dt: Date | string
    rcnt_cntn_dt?: Date | string | null
    drmc_cnvs_dt?: Date | string | null
    chge_pswd_dt?: Date | string | null
    mbr_stts_cd: string
    tmnl_tkn_val?: string | null
    tmnl_os_nm?: string | null
    tmnl_app_ver_nm?: string | null
    last_tmnl_sync_dt?: Date | string | null
    aos_permission?: number | null
    push_status?: number | null
    mbr_photo_file_mng_no?: bigint | number | null
    app_prgrs_stag_val?: string | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
    out_tp_cd?: string | null
    out_tp_ttl?: string | null
    out_join_dt?: Date | string | null
    mbr_sctn_cd?: string | null
  }

  export type sc_mbrUncheckedCreateInput = {
    mbr_no?: bigint | number
    clco_no: bigint | number
    clco_dept_cd?: string | null
    emp_no: string
    mbr_id: string
    mbr_pswd: string
    mbr_nm: string
    brdt: Date | string
    gen_cd: string
    mbph_no: string
    email_addr: string
    fail_pswd_cnt?: number | null
    join_dt: Date | string
    rcnt_cntn_dt?: Date | string | null
    drmc_cnvs_dt?: Date | string | null
    chge_pswd_dt?: Date | string | null
    mbr_stts_cd: string
    tmnl_tkn_val?: string | null
    tmnl_os_nm?: string | null
    tmnl_app_ver_nm?: string | null
    last_tmnl_sync_dt?: Date | string | null
    aos_permission?: number | null
    push_status?: number | null
    mbr_photo_file_mng_no?: bigint | number | null
    app_prgrs_stag_val?: string | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
    out_tp_cd?: string | null
    out_tp_ttl?: string | null
    out_join_dt?: Date | string | null
    mbr_sctn_cd?: string | null
  }

  export type sc_mbrUpdateInput = {
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_dept_cd?: NullableStringFieldUpdateOperationsInput | string | null
    emp_no?: StringFieldUpdateOperationsInput | string
    mbr_id?: StringFieldUpdateOperationsInput | string
    mbr_pswd?: StringFieldUpdateOperationsInput | string
    mbr_nm?: StringFieldUpdateOperationsInput | string
    brdt?: DateTimeFieldUpdateOperationsInput | Date | string
    gen_cd?: StringFieldUpdateOperationsInput | string
    mbph_no?: StringFieldUpdateOperationsInput | string
    email_addr?: StringFieldUpdateOperationsInput | string
    fail_pswd_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    join_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    rcnt_cntn_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drmc_cnvs_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chge_pswd_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mbr_stts_cd?: StringFieldUpdateOperationsInput | string
    tmnl_tkn_val?: NullableStringFieldUpdateOperationsInput | string | null
    tmnl_os_nm?: NullableStringFieldUpdateOperationsInput | string | null
    tmnl_app_ver_nm?: NullableStringFieldUpdateOperationsInput | string | null
    last_tmnl_sync_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aos_permission?: NullableIntFieldUpdateOperationsInput | number | null
    push_status?: NullableIntFieldUpdateOperationsInput | number | null
    mbr_photo_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    app_prgrs_stag_val?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    out_tp_cd?: NullableStringFieldUpdateOperationsInput | string | null
    out_tp_ttl?: NullableStringFieldUpdateOperationsInput | string | null
    out_join_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mbr_sctn_cd?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sc_mbrUncheckedUpdateInput = {
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_dept_cd?: NullableStringFieldUpdateOperationsInput | string | null
    emp_no?: StringFieldUpdateOperationsInput | string
    mbr_id?: StringFieldUpdateOperationsInput | string
    mbr_pswd?: StringFieldUpdateOperationsInput | string
    mbr_nm?: StringFieldUpdateOperationsInput | string
    brdt?: DateTimeFieldUpdateOperationsInput | Date | string
    gen_cd?: StringFieldUpdateOperationsInput | string
    mbph_no?: StringFieldUpdateOperationsInput | string
    email_addr?: StringFieldUpdateOperationsInput | string
    fail_pswd_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    join_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    rcnt_cntn_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drmc_cnvs_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chge_pswd_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mbr_stts_cd?: StringFieldUpdateOperationsInput | string
    tmnl_tkn_val?: NullableStringFieldUpdateOperationsInput | string | null
    tmnl_os_nm?: NullableStringFieldUpdateOperationsInput | string | null
    tmnl_app_ver_nm?: NullableStringFieldUpdateOperationsInput | string | null
    last_tmnl_sync_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aos_permission?: NullableIntFieldUpdateOperationsInput | number | null
    push_status?: NullableIntFieldUpdateOperationsInput | number | null
    mbr_photo_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    app_prgrs_stag_val?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    out_tp_cd?: NullableStringFieldUpdateOperationsInput | string | null
    out_tp_ttl?: NullableStringFieldUpdateOperationsInput | string | null
    out_join_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mbr_sctn_cd?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sc_mbrCreateManyInput = {
    mbr_no?: bigint | number
    clco_no: bigint | number
    clco_dept_cd?: string | null
    emp_no: string
    mbr_id: string
    mbr_pswd: string
    mbr_nm: string
    brdt: Date | string
    gen_cd: string
    mbph_no: string
    email_addr: string
    fail_pswd_cnt?: number | null
    join_dt: Date | string
    rcnt_cntn_dt?: Date | string | null
    drmc_cnvs_dt?: Date | string | null
    chge_pswd_dt?: Date | string | null
    mbr_stts_cd: string
    tmnl_tkn_val?: string | null
    tmnl_os_nm?: string | null
    tmnl_app_ver_nm?: string | null
    last_tmnl_sync_dt?: Date | string | null
    aos_permission?: number | null
    push_status?: number | null
    mbr_photo_file_mng_no?: bigint | number | null
    app_prgrs_stag_val?: string | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
    out_tp_cd?: string | null
    out_tp_ttl?: string | null
    out_join_dt?: Date | string | null
    mbr_sctn_cd?: string | null
  }

  export type sc_mbrUpdateManyMutationInput = {
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_dept_cd?: NullableStringFieldUpdateOperationsInput | string | null
    emp_no?: StringFieldUpdateOperationsInput | string
    mbr_id?: StringFieldUpdateOperationsInput | string
    mbr_pswd?: StringFieldUpdateOperationsInput | string
    mbr_nm?: StringFieldUpdateOperationsInput | string
    brdt?: DateTimeFieldUpdateOperationsInput | Date | string
    gen_cd?: StringFieldUpdateOperationsInput | string
    mbph_no?: StringFieldUpdateOperationsInput | string
    email_addr?: StringFieldUpdateOperationsInput | string
    fail_pswd_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    join_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    rcnt_cntn_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drmc_cnvs_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chge_pswd_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mbr_stts_cd?: StringFieldUpdateOperationsInput | string
    tmnl_tkn_val?: NullableStringFieldUpdateOperationsInput | string | null
    tmnl_os_nm?: NullableStringFieldUpdateOperationsInput | string | null
    tmnl_app_ver_nm?: NullableStringFieldUpdateOperationsInput | string | null
    last_tmnl_sync_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aos_permission?: NullableIntFieldUpdateOperationsInput | number | null
    push_status?: NullableIntFieldUpdateOperationsInput | number | null
    mbr_photo_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    app_prgrs_stag_val?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    out_tp_cd?: NullableStringFieldUpdateOperationsInput | string | null
    out_tp_ttl?: NullableStringFieldUpdateOperationsInput | string | null
    out_join_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mbr_sctn_cd?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sc_mbrUncheckedUpdateManyInput = {
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_dept_cd?: NullableStringFieldUpdateOperationsInput | string | null
    emp_no?: StringFieldUpdateOperationsInput | string
    mbr_id?: StringFieldUpdateOperationsInput | string
    mbr_pswd?: StringFieldUpdateOperationsInput | string
    mbr_nm?: StringFieldUpdateOperationsInput | string
    brdt?: DateTimeFieldUpdateOperationsInput | Date | string
    gen_cd?: StringFieldUpdateOperationsInput | string
    mbph_no?: StringFieldUpdateOperationsInput | string
    email_addr?: StringFieldUpdateOperationsInput | string
    fail_pswd_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    join_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    rcnt_cntn_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drmc_cnvs_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chge_pswd_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mbr_stts_cd?: StringFieldUpdateOperationsInput | string
    tmnl_tkn_val?: NullableStringFieldUpdateOperationsInput | string | null
    tmnl_os_nm?: NullableStringFieldUpdateOperationsInput | string | null
    tmnl_app_ver_nm?: NullableStringFieldUpdateOperationsInput | string | null
    last_tmnl_sync_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aos_permission?: NullableIntFieldUpdateOperationsInput | number | null
    push_status?: NullableIntFieldUpdateOperationsInput | number | null
    mbr_photo_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    app_prgrs_stag_val?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    out_tp_cd?: NullableStringFieldUpdateOperationsInput | string | null
    out_tp_ttl?: NullableStringFieldUpdateOperationsInput | string | null
    out_join_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mbr_sctn_cd?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sc_mbr_lgn_histCreateInput = {
    hist_no?: bigint | number
    mbr_no: bigint | number
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sc_mbr_lgn_histUncheckedCreateInput = {
    hist_no?: bigint | number
    mbr_no: bigint | number
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sc_mbr_lgn_histUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_lgn_histUncheckedUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_lgn_histCreateManyInput = {
    hist_no?: bigint | number
    mbr_no: bigint | number
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sc_mbr_lgn_histUpdateManyMutationInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_lgn_histUncheckedUpdateManyInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_logCreateInput = {
    log_no?: bigint | number
    log_cd?: string | null
    mbr_no: bigint | number
    uri: string
    origin: string
    desc?: string | null
    reg_dt?: Date | string | null
  }

  export type sc_mbr_logUncheckedCreateInput = {
    log_no?: bigint | number
    log_cd?: string | null
    mbr_no: bigint | number
    uri: string
    origin: string
    desc?: string | null
    reg_dt?: Date | string | null
  }

  export type sc_mbr_logUpdateInput = {
    log_no?: BigIntFieldUpdateOperationsInput | bigint | number
    log_cd?: NullableStringFieldUpdateOperationsInput | string | null
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    uri?: StringFieldUpdateOperationsInput | string
    origin?: StringFieldUpdateOperationsInput | string
    desc?: NullableStringFieldUpdateOperationsInput | string | null
    reg_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sc_mbr_logUncheckedUpdateInput = {
    log_no?: BigIntFieldUpdateOperationsInput | bigint | number
    log_cd?: NullableStringFieldUpdateOperationsInput | string | null
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    uri?: StringFieldUpdateOperationsInput | string
    origin?: StringFieldUpdateOperationsInput | string
    desc?: NullableStringFieldUpdateOperationsInput | string | null
    reg_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sc_mbr_logCreateManyInput = {
    log_no?: bigint | number
    log_cd?: string | null
    mbr_no: bigint | number
    uri: string
    origin: string
    desc?: string | null
    reg_dt?: Date | string | null
  }

  export type sc_mbr_logUpdateManyMutationInput = {
    log_no?: BigIntFieldUpdateOperationsInput | bigint | number
    log_cd?: NullableStringFieldUpdateOperationsInput | string | null
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    uri?: StringFieldUpdateOperationsInput | string
    origin?: StringFieldUpdateOperationsInput | string
    desc?: NullableStringFieldUpdateOperationsInput | string | null
    reg_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sc_mbr_logUncheckedUpdateManyInput = {
    log_no?: BigIntFieldUpdateOperationsInput | bigint | number
    log_cd?: NullableStringFieldUpdateOperationsInput | string | null
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    uri?: StringFieldUpdateOperationsInput | string
    origin?: StringFieldUpdateOperationsInput | string
    desc?: NullableStringFieldUpdateOperationsInput | string | null
    reg_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sc_mbr_prjtCreateInput = {
    mbr_no: bigint | number
    prjt_no: bigint | number
    prtpnt_sctn_cd: string
    prgrs_stop_tf: string
    prgrs_stop_dt?: Date | string | null
    prgrs_stop_caus_desc?: string | null
    ptcp_bgng_ymd?: Date | string | null
    ptcp_end_ymd?: Date | string | null
    frst_bmi_val?: Decimal | DecimalJsLike | number | string | null
    end_bmi_val?: Decimal | DecimalJsLike | number | string | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sc_mbr_prjtUncheckedCreateInput = {
    mbr_no: bigint | number
    prjt_no: bigint | number
    prtpnt_sctn_cd: string
    prgrs_stop_tf: string
    prgrs_stop_dt?: Date | string | null
    prgrs_stop_caus_desc?: string | null
    ptcp_bgng_ymd?: Date | string | null
    ptcp_end_ymd?: Date | string | null
    frst_bmi_val?: Decimal | DecimalJsLike | number | string | null
    end_bmi_val?: Decimal | DecimalJsLike | number | string | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sc_mbr_prjtUpdateInput = {
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    prjt_no?: BigIntFieldUpdateOperationsInput | bigint | number
    prtpnt_sctn_cd?: StringFieldUpdateOperationsInput | string
    prgrs_stop_tf?: StringFieldUpdateOperationsInput | string
    prgrs_stop_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prgrs_stop_caus_desc?: NullableStringFieldUpdateOperationsInput | string | null
    ptcp_bgng_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ptcp_end_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    frst_bmi_val?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_bmi_val?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_prjtUncheckedUpdateInput = {
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    prjt_no?: BigIntFieldUpdateOperationsInput | bigint | number
    prtpnt_sctn_cd?: StringFieldUpdateOperationsInput | string
    prgrs_stop_tf?: StringFieldUpdateOperationsInput | string
    prgrs_stop_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prgrs_stop_caus_desc?: NullableStringFieldUpdateOperationsInput | string | null
    ptcp_bgng_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ptcp_end_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    frst_bmi_val?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_bmi_val?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_prjtCreateManyInput = {
    mbr_no: bigint | number
    prjt_no: bigint | number
    prtpnt_sctn_cd: string
    prgrs_stop_tf: string
    prgrs_stop_dt?: Date | string | null
    prgrs_stop_caus_desc?: string | null
    ptcp_bgng_ymd?: Date | string | null
    ptcp_end_ymd?: Date | string | null
    frst_bmi_val?: Decimal | DecimalJsLike | number | string | null
    end_bmi_val?: Decimal | DecimalJsLike | number | string | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sc_mbr_prjtUpdateManyMutationInput = {
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    prjt_no?: BigIntFieldUpdateOperationsInput | bigint | number
    prtpnt_sctn_cd?: StringFieldUpdateOperationsInput | string
    prgrs_stop_tf?: StringFieldUpdateOperationsInput | string
    prgrs_stop_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prgrs_stop_caus_desc?: NullableStringFieldUpdateOperationsInput | string | null
    ptcp_bgng_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ptcp_end_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    frst_bmi_val?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_bmi_val?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_prjtUncheckedUpdateManyInput = {
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    prjt_no?: BigIntFieldUpdateOperationsInput | bigint | number
    prtpnt_sctn_cd?: StringFieldUpdateOperationsInput | string
    prgrs_stop_tf?: StringFieldUpdateOperationsInput | string
    prgrs_stop_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prgrs_stop_caus_desc?: NullableStringFieldUpdateOperationsInput | string | null
    ptcp_bgng_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ptcp_end_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    frst_bmi_val?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    end_bmi_val?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_trms_agr_histCreateInput = {
    mbr_no: bigint | number
    trms_no: bigint | number
    agr_dt: Date | string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sc_mbr_trms_agr_histUncheckedCreateInput = {
    mbr_no: bigint | number
    trms_no: bigint | number
    agr_dt: Date | string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sc_mbr_trms_agr_histUpdateInput = {
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    agr_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_trms_agr_histUncheckedUpdateInput = {
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    agr_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_trms_agr_histCreateManyInput = {
    mbr_no: bigint | number
    trms_no: bigint | number
    agr_dt: Date | string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sc_mbr_trms_agr_histUpdateManyMutationInput = {
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    agr_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_trms_agr_histUncheckedUpdateManyInput = {
    mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    agr_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_trms_agr_scr_histCreateInput = {
    agr_no?: bigint | number
    clco_no: bigint | number
    emp_no: string
    trms_no: bigint | number
    agr_dt: Date | string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sc_mbr_trms_agr_scr_histUncheckedCreateInput = {
    agr_no?: bigint | number
    clco_no: bigint | number
    emp_no: string
    trms_no: bigint | number
    agr_dt: Date | string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sc_mbr_trms_agr_scr_histUpdateInput = {
    agr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    emp_no?: StringFieldUpdateOperationsInput | string
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    agr_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_trms_agr_scr_histUncheckedUpdateInput = {
    agr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    emp_no?: StringFieldUpdateOperationsInput | string
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    agr_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_trms_agr_scr_histCreateManyInput = {
    agr_no?: bigint | number
    clco_no: bigint | number
    emp_no: string
    trms_no: bigint | number
    agr_dt: Date | string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sc_mbr_trms_agr_scr_histUpdateManyMutationInput = {
    agr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    emp_no?: StringFieldUpdateOperationsInput | string
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    agr_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_mbr_trms_agr_scr_histUncheckedUpdateManyInput = {
    agr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    emp_no?: StringFieldUpdateOperationsInput | string
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    agr_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_prjtCreateInput = {
    clco_no: number
    prjt_nm: string
    prjt_stts_cd: string
    prtc_aply_stng_tf: string
    prtc_aply_bgng_dt?: Date | string | null
    prtc_aply_end_dt?: Date | string | null
    rsvt_stng_tf: string
    prjt_bgng_dt?: Date | string | null
    prjt_end_dt?: Date | string | null
    main_logo_file_mng_no?: bigint | number | null
    bgng_mebi_no: number
    cmps_prgm_cnt: number
    gnrl_prtpnt_cnt?: number | null
    mng_prtpnt_cnt?: number | null
    gnrl_fnsr_cnt?: number | null
    mng_fnsr_cnt?: number | null
    main_clr_val?: string | null
    sub_clr_val?: string | null
    add_clr_val?: string | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sc_prjtUncheckedCreateInput = {
    prjt_no?: number
    clco_no: number
    prjt_nm: string
    prjt_stts_cd: string
    prtc_aply_stng_tf: string
    prtc_aply_bgng_dt?: Date | string | null
    prtc_aply_end_dt?: Date | string | null
    rsvt_stng_tf: string
    prjt_bgng_dt?: Date | string | null
    prjt_end_dt?: Date | string | null
    main_logo_file_mng_no?: bigint | number | null
    bgng_mebi_no: number
    cmps_prgm_cnt: number
    gnrl_prtpnt_cnt?: number | null
    mng_prtpnt_cnt?: number | null
    gnrl_fnsr_cnt?: number | null
    mng_fnsr_cnt?: number | null
    main_clr_val?: string | null
    sub_clr_val?: string | null
    add_clr_val?: string | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sc_prjtUpdateInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    prjt_nm?: StringFieldUpdateOperationsInput | string
    prjt_stts_cd?: StringFieldUpdateOperationsInput | string
    prtc_aply_stng_tf?: StringFieldUpdateOperationsInput | string
    prtc_aply_bgng_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prtc_aply_end_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rsvt_stng_tf?: StringFieldUpdateOperationsInput | string
    prjt_bgng_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prjt_end_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_logo_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    bgng_mebi_no?: IntFieldUpdateOperationsInput | number
    cmps_prgm_cnt?: IntFieldUpdateOperationsInput | number
    gnrl_prtpnt_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    mng_prtpnt_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    gnrl_fnsr_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    mng_fnsr_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    main_clr_val?: NullableStringFieldUpdateOperationsInput | string | null
    sub_clr_val?: NullableStringFieldUpdateOperationsInput | string | null
    add_clr_val?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_prjtUncheckedUpdateInput = {
    prjt_no?: IntFieldUpdateOperationsInput | number
    clco_no?: IntFieldUpdateOperationsInput | number
    prjt_nm?: StringFieldUpdateOperationsInput | string
    prjt_stts_cd?: StringFieldUpdateOperationsInput | string
    prtc_aply_stng_tf?: StringFieldUpdateOperationsInput | string
    prtc_aply_bgng_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prtc_aply_end_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rsvt_stng_tf?: StringFieldUpdateOperationsInput | string
    prjt_bgng_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prjt_end_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_logo_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    bgng_mebi_no?: IntFieldUpdateOperationsInput | number
    cmps_prgm_cnt?: IntFieldUpdateOperationsInput | number
    gnrl_prtpnt_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    mng_prtpnt_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    gnrl_fnsr_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    mng_fnsr_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    main_clr_val?: NullableStringFieldUpdateOperationsInput | string | null
    sub_clr_val?: NullableStringFieldUpdateOperationsInput | string | null
    add_clr_val?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_prjtCreateManyInput = {
    prjt_no?: number
    clco_no: number
    prjt_nm: string
    prjt_stts_cd: string
    prtc_aply_stng_tf: string
    prtc_aply_bgng_dt?: Date | string | null
    prtc_aply_end_dt?: Date | string | null
    rsvt_stng_tf: string
    prjt_bgng_dt?: Date | string | null
    prjt_end_dt?: Date | string | null
    main_logo_file_mng_no?: bigint | number | null
    bgng_mebi_no: number
    cmps_prgm_cnt: number
    gnrl_prtpnt_cnt?: number | null
    mng_prtpnt_cnt?: number | null
    gnrl_fnsr_cnt?: number | null
    mng_fnsr_cnt?: number | null
    main_clr_val?: string | null
    sub_clr_val?: string | null
    add_clr_val?: string | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sc_prjtUpdateManyMutationInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    prjt_nm?: StringFieldUpdateOperationsInput | string
    prjt_stts_cd?: StringFieldUpdateOperationsInput | string
    prtc_aply_stng_tf?: StringFieldUpdateOperationsInput | string
    prtc_aply_bgng_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prtc_aply_end_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rsvt_stng_tf?: StringFieldUpdateOperationsInput | string
    prjt_bgng_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prjt_end_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_logo_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    bgng_mebi_no?: IntFieldUpdateOperationsInput | number
    cmps_prgm_cnt?: IntFieldUpdateOperationsInput | number
    gnrl_prtpnt_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    mng_prtpnt_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    gnrl_fnsr_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    mng_fnsr_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    main_clr_val?: NullableStringFieldUpdateOperationsInput | string | null
    sub_clr_val?: NullableStringFieldUpdateOperationsInput | string | null
    add_clr_val?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_prjtUncheckedUpdateManyInput = {
    prjt_no?: IntFieldUpdateOperationsInput | number
    clco_no?: IntFieldUpdateOperationsInput | number
    prjt_nm?: StringFieldUpdateOperationsInput | string
    prjt_stts_cd?: StringFieldUpdateOperationsInput | string
    prtc_aply_stng_tf?: StringFieldUpdateOperationsInput | string
    prtc_aply_bgng_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prtc_aply_end_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rsvt_stng_tf?: StringFieldUpdateOperationsInput | string
    prjt_bgng_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prjt_end_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    main_logo_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    bgng_mebi_no?: IntFieldUpdateOperationsInput | number
    cmps_prgm_cnt?: IntFieldUpdateOperationsInput | number
    gnrl_prtpnt_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    mng_prtpnt_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    gnrl_fnsr_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    mng_fnsr_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    main_clr_val?: NullableStringFieldUpdateOperationsInput | string | null
    sub_clr_val?: NullableStringFieldUpdateOperationsInput | string | null
    add_clr_val?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_token_histCreateInput = {
    token_num?: bigint | number
    access_token: string
    expiration_time: Date | string
    reg_dt: Date | string
    mod_dt: Date | string
  }

  export type sc_token_histUncheckedCreateInput = {
    token_num?: bigint | number
    access_token: string
    expiration_time: Date | string
    reg_dt: Date | string
    mod_dt: Date | string
  }

  export type sc_token_histUpdateInput = {
    token_num?: BigIntFieldUpdateOperationsInput | bigint | number
    access_token?: StringFieldUpdateOperationsInput | string
    expiration_time?: DateTimeFieldUpdateOperationsInput | Date | string
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_token_histUncheckedUpdateInput = {
    token_num?: BigIntFieldUpdateOperationsInput | bigint | number
    access_token?: StringFieldUpdateOperationsInput | string
    expiration_time?: DateTimeFieldUpdateOperationsInput | Date | string
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_token_histCreateManyInput = {
    token_num?: bigint | number
    access_token: string
    expiration_time: Date | string
    reg_dt: Date | string
    mod_dt: Date | string
  }

  export type sc_token_histUpdateManyMutationInput = {
    token_num?: BigIntFieldUpdateOperationsInput | bigint | number
    access_token?: StringFieldUpdateOperationsInput | string
    expiration_time?: DateTimeFieldUpdateOperationsInput | Date | string
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sc_token_histUncheckedUpdateManyInput = {
    token_num?: BigIntFieldUpdateOperationsInput | bigint | number
    access_token?: StringFieldUpdateOperationsInput | string
    expiration_time?: DateTimeFieldUpdateOperationsInput | Date | string
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faqCreateInput = {
    clco_no: number
    progm_no: number
    faq_cate_cd: string
    expsr_div: string
    expsr_tf?: string
    uprw_fix_tf?: string
    faq_ttl: string
    faq_cont: string
    srch_weight?: number
    mngr_memo?: string | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faqUncheckedCreateInput = {
    faq_no?: number
    clco_no: number
    progm_no: number
    faq_cate_cd: string
    expsr_div: string
    expsr_tf?: string
    uprw_fix_tf?: string
    faq_ttl: string
    faq_cont: string
    srch_weight?: number
    mngr_memo?: string | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faqUpdateInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    progm_no?: IntFieldUpdateOperationsInput | number
    faq_cate_cd?: StringFieldUpdateOperationsInput | string
    expsr_div?: StringFieldUpdateOperationsInput | string
    expsr_tf?: StringFieldUpdateOperationsInput | string
    uprw_fix_tf?: StringFieldUpdateOperationsInput | string
    faq_ttl?: StringFieldUpdateOperationsInput | string
    faq_cont?: StringFieldUpdateOperationsInput | string
    srch_weight?: IntFieldUpdateOperationsInput | number
    mngr_memo?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faqUncheckedUpdateInput = {
    faq_no?: IntFieldUpdateOperationsInput | number
    clco_no?: IntFieldUpdateOperationsInput | number
    progm_no?: IntFieldUpdateOperationsInput | number
    faq_cate_cd?: StringFieldUpdateOperationsInput | string
    expsr_div?: StringFieldUpdateOperationsInput | string
    expsr_tf?: StringFieldUpdateOperationsInput | string
    uprw_fix_tf?: StringFieldUpdateOperationsInput | string
    faq_ttl?: StringFieldUpdateOperationsInput | string
    faq_cont?: StringFieldUpdateOperationsInput | string
    srch_weight?: IntFieldUpdateOperationsInput | number
    mngr_memo?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faqCreateManyInput = {
    faq_no?: number
    clco_no: number
    progm_no: number
    faq_cate_cd: string
    expsr_div: string
    expsr_tf?: string
    uprw_fix_tf?: string
    faq_ttl: string
    faq_cont: string
    srch_weight?: number
    mngr_memo?: string | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faqUpdateManyMutationInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    progm_no?: IntFieldUpdateOperationsInput | number
    faq_cate_cd?: StringFieldUpdateOperationsInput | string
    expsr_div?: StringFieldUpdateOperationsInput | string
    expsr_tf?: StringFieldUpdateOperationsInput | string
    uprw_fix_tf?: StringFieldUpdateOperationsInput | string
    faq_ttl?: StringFieldUpdateOperationsInput | string
    faq_cont?: StringFieldUpdateOperationsInput | string
    srch_weight?: IntFieldUpdateOperationsInput | number
    mngr_memo?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faqUncheckedUpdateManyInput = {
    faq_no?: IntFieldUpdateOperationsInput | number
    clco_no?: IntFieldUpdateOperationsInput | number
    progm_no?: IntFieldUpdateOperationsInput | number
    faq_cate_cd?: StringFieldUpdateOperationsInput | string
    expsr_div?: StringFieldUpdateOperationsInput | string
    expsr_tf?: StringFieldUpdateOperationsInput | string
    uprw_fix_tf?: StringFieldUpdateOperationsInput | string
    faq_ttl?: StringFieldUpdateOperationsInput | string
    faq_cont?: StringFieldUpdateOperationsInput | string
    srch_weight?: IntFieldUpdateOperationsInput | number
    mngr_memo?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_atch_fileCreateInput = {
    faq_no: number
    atch_file_mng_no: bigint | number
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faq_atch_fileUncheckedCreateInput = {
    faq_file_no?: number
    faq_no: number
    atch_file_mng_no: bigint | number
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faq_atch_fileUpdateInput = {
    faq_no?: IntFieldUpdateOperationsInput | number
    atch_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_atch_fileUncheckedUpdateInput = {
    faq_file_no?: IntFieldUpdateOperationsInput | number
    faq_no?: IntFieldUpdateOperationsInput | number
    atch_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_atch_fileCreateManyInput = {
    faq_file_no?: number
    faq_no: number
    atch_file_mng_no: bigint | number
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faq_atch_fileUpdateManyMutationInput = {
    faq_no?: IntFieldUpdateOperationsInput | number
    atch_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_atch_fileUncheckedUpdateManyInput = {
    faq_file_no?: IntFieldUpdateOperationsInput | number
    faq_no?: IntFieldUpdateOperationsInput | number
    atch_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_cate_cdCreateInput = {
    progm_no: number
    cd: string
    cd_nm: string
    cd_desc?: string | null
    grp_cd?: string
    clco_no: number
    sort_seq?: number
    use_tf?: string
    regr_no: number
    reg_dt?: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faq_cate_cdUncheckedCreateInput = {
    progm_no: number
    cd: string
    cd_nm: string
    cd_desc?: string | null
    grp_cd?: string
    clco_no: number
    sort_seq?: number
    use_tf?: string
    regr_no: number
    reg_dt?: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faq_cate_cdUpdateInput = {
    progm_no?: IntFieldUpdateOperationsInput | number
    cd?: StringFieldUpdateOperationsInput | string
    cd_nm?: StringFieldUpdateOperationsInput | string
    cd_desc?: NullableStringFieldUpdateOperationsInput | string | null
    grp_cd?: StringFieldUpdateOperationsInput | string
    clco_no?: IntFieldUpdateOperationsInput | number
    sort_seq?: IntFieldUpdateOperationsInput | number
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_cate_cdUncheckedUpdateInput = {
    progm_no?: IntFieldUpdateOperationsInput | number
    cd?: StringFieldUpdateOperationsInput | string
    cd_nm?: StringFieldUpdateOperationsInput | string
    cd_desc?: NullableStringFieldUpdateOperationsInput | string | null
    grp_cd?: StringFieldUpdateOperationsInput | string
    clco_no?: IntFieldUpdateOperationsInput | number
    sort_seq?: IntFieldUpdateOperationsInput | number
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_cate_cdCreateManyInput = {
    progm_no: number
    cd: string
    cd_nm: string
    cd_desc?: string | null
    grp_cd?: string
    clco_no: number
    sort_seq?: number
    use_tf?: string
    regr_no: number
    reg_dt?: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faq_cate_cdUpdateManyMutationInput = {
    progm_no?: IntFieldUpdateOperationsInput | number
    cd?: StringFieldUpdateOperationsInput | string
    cd_nm?: StringFieldUpdateOperationsInput | string
    cd_desc?: NullableStringFieldUpdateOperationsInput | string | null
    grp_cd?: StringFieldUpdateOperationsInput | string
    clco_no?: IntFieldUpdateOperationsInput | number
    sort_seq?: IntFieldUpdateOperationsInput | number
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_cate_cdUncheckedUpdateManyInput = {
    progm_no?: IntFieldUpdateOperationsInput | number
    cd?: StringFieldUpdateOperationsInput | string
    cd_nm?: StringFieldUpdateOperationsInput | string
    cd_desc?: NullableStringFieldUpdateOperationsInput | string | null
    grp_cd?: StringFieldUpdateOperationsInput | string
    clco_no?: IntFieldUpdateOperationsInput | number
    sort_seq?: IntFieldUpdateOperationsInput | number
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_keywordCreateInput = {
    faq_no: number
    keyword: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faq_keywordUncheckedCreateInput = {
    faq_no: number
    keyword: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faq_keywordUpdateInput = {
    faq_no?: IntFieldUpdateOperationsInput | number
    keyword?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_keywordUncheckedUpdateInput = {
    faq_no?: IntFieldUpdateOperationsInput | number
    keyword?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_keywordCreateManyInput = {
    faq_no: number
    keyword: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faq_keywordUpdateManyMutationInput = {
    faq_no?: IntFieldUpdateOperationsInput | number
    keyword?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_keywordUncheckedUpdateManyInput = {
    faq_no?: IntFieldUpdateOperationsInput | number
    keyword?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_rel_faqCreateInput = {
    faq_no: number
    rel_faq_no: number
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faq_rel_faqUncheckedCreateInput = {
    faq_no: number
    rel_faq_no: number
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faq_rel_faqUpdateInput = {
    faq_no?: IntFieldUpdateOperationsInput | number
    rel_faq_no?: IntFieldUpdateOperationsInput | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_rel_faqUncheckedUpdateInput = {
    faq_no?: IntFieldUpdateOperationsInput | number
    rel_faq_no?: IntFieldUpdateOperationsInput | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_rel_faqCreateManyInput = {
    faq_no: number
    rel_faq_no: number
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_faq_rel_faqUpdateManyMutationInput = {
    faq_no?: IntFieldUpdateOperationsInput | number
    rel_faq_no?: IntFieldUpdateOperationsInput | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_faq_rel_faqUncheckedUpdateManyInput = {
    faq_no?: IntFieldUpdateOperationsInput | number
    rel_faq_no?: IntFieldUpdateOperationsInput | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inqCreateInput = {
    inq_no?: bigint | number
    inq_mbr_no: bigint | number
    clco_no: number
    clco_dept_cd?: string | null
    inq_clsf_no: number
    inq_ttl: string
    inq_cont: string
    rls_tf: string
    ans_stts_cd: string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sv_inqUncheckedCreateInput = {
    inq_no?: bigint | number
    inq_mbr_no: bigint | number
    clco_no: number
    clco_dept_cd?: string | null
    inq_clsf_no: number
    inq_ttl: string
    inq_cont: string
    rls_tf: string
    ans_stts_cd: string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sv_inqUpdateInput = {
    inq_no?: BigIntFieldUpdateOperationsInput | bigint | number
    inq_mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: IntFieldUpdateOperationsInput | number
    clco_dept_cd?: NullableStringFieldUpdateOperationsInput | string | null
    inq_clsf_no?: IntFieldUpdateOperationsInput | number
    inq_ttl?: StringFieldUpdateOperationsInput | string
    inq_cont?: StringFieldUpdateOperationsInput | string
    rls_tf?: StringFieldUpdateOperationsInput | string
    ans_stts_cd?: StringFieldUpdateOperationsInput | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inqUncheckedUpdateInput = {
    inq_no?: BigIntFieldUpdateOperationsInput | bigint | number
    inq_mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: IntFieldUpdateOperationsInput | number
    clco_dept_cd?: NullableStringFieldUpdateOperationsInput | string | null
    inq_clsf_no?: IntFieldUpdateOperationsInput | number
    inq_ttl?: StringFieldUpdateOperationsInput | string
    inq_cont?: StringFieldUpdateOperationsInput | string
    rls_tf?: StringFieldUpdateOperationsInput | string
    ans_stts_cd?: StringFieldUpdateOperationsInput | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inqCreateManyInput = {
    inq_no?: bigint | number
    inq_mbr_no: bigint | number
    clco_no: number
    clco_dept_cd?: string | null
    inq_clsf_no: number
    inq_ttl: string
    inq_cont: string
    rls_tf: string
    ans_stts_cd: string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sv_inqUpdateManyMutationInput = {
    inq_no?: BigIntFieldUpdateOperationsInput | bigint | number
    inq_mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: IntFieldUpdateOperationsInput | number
    clco_dept_cd?: NullableStringFieldUpdateOperationsInput | string | null
    inq_clsf_no?: IntFieldUpdateOperationsInput | number
    inq_ttl?: StringFieldUpdateOperationsInput | string
    inq_cont?: StringFieldUpdateOperationsInput | string
    rls_tf?: StringFieldUpdateOperationsInput | string
    ans_stts_cd?: StringFieldUpdateOperationsInput | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inqUncheckedUpdateManyInput = {
    inq_no?: BigIntFieldUpdateOperationsInput | bigint | number
    inq_mbr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: IntFieldUpdateOperationsInput | number
    clco_dept_cd?: NullableStringFieldUpdateOperationsInput | string | null
    inq_clsf_no?: IntFieldUpdateOperationsInput | number
    inq_ttl?: StringFieldUpdateOperationsInput | string
    inq_cont?: StringFieldUpdateOperationsInput | string
    rls_tf?: StringFieldUpdateOperationsInput | string
    ans_stts_cd?: StringFieldUpdateOperationsInput | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inq_ansCreateInput = {
    ans_no?: bigint | number
    inq_no: bigint | number
    ans_mngr_no: number
    ans_cont: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_inq_ansUncheckedCreateInput = {
    ans_no?: bigint | number
    inq_no: bigint | number
    ans_mngr_no: number
    ans_cont: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_inq_ansUpdateInput = {
    ans_no?: BigIntFieldUpdateOperationsInput | bigint | number
    inq_no?: BigIntFieldUpdateOperationsInput | bigint | number
    ans_mngr_no?: IntFieldUpdateOperationsInput | number
    ans_cont?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inq_ansUncheckedUpdateInput = {
    ans_no?: BigIntFieldUpdateOperationsInput | bigint | number
    inq_no?: BigIntFieldUpdateOperationsInput | bigint | number
    ans_mngr_no?: IntFieldUpdateOperationsInput | number
    ans_cont?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inq_ansCreateManyInput = {
    ans_no?: bigint | number
    inq_no: bigint | number
    ans_mngr_no: number
    ans_cont: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_inq_ansUpdateManyMutationInput = {
    ans_no?: BigIntFieldUpdateOperationsInput | bigint | number
    inq_no?: BigIntFieldUpdateOperationsInput | bigint | number
    ans_mngr_no?: IntFieldUpdateOperationsInput | number
    ans_cont?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inq_ansUncheckedUpdateManyInput = {
    ans_no?: BigIntFieldUpdateOperationsInput | bigint | number
    inq_no?: BigIntFieldUpdateOperationsInput | bigint | number
    ans_mngr_no?: IntFieldUpdateOperationsInput | number
    ans_cont?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inq_atch_fileCreateInput = {
    atch_file_no?: bigint | number
    inq_no: bigint | number
    atch_file_mng_no: bigint | number
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sv_inq_atch_fileUncheckedCreateInput = {
    atch_file_no?: bigint | number
    inq_no: bigint | number
    atch_file_mng_no: bigint | number
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sv_inq_atch_fileUpdateInput = {
    atch_file_no?: BigIntFieldUpdateOperationsInput | bigint | number
    inq_no?: BigIntFieldUpdateOperationsInput | bigint | number
    atch_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inq_atch_fileUncheckedUpdateInput = {
    atch_file_no?: BigIntFieldUpdateOperationsInput | bigint | number
    inq_no?: BigIntFieldUpdateOperationsInput | bigint | number
    atch_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inq_atch_fileCreateManyInput = {
    atch_file_no?: bigint | number
    inq_no: bigint | number
    atch_file_mng_no: bigint | number
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sv_inq_atch_fileUpdateManyMutationInput = {
    atch_file_no?: BigIntFieldUpdateOperationsInput | bigint | number
    inq_no?: BigIntFieldUpdateOperationsInput | bigint | number
    atch_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inq_atch_fileUncheckedUpdateManyInput = {
    atch_file_no?: BigIntFieldUpdateOperationsInput | bigint | number
    inq_no?: BigIntFieldUpdateOperationsInput | bigint | number
    atch_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inq_clsfCreateInput = {
    clco_no: number
    inq_clsf_nm: string
    expsr_seq?: number
    use_tf: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_inq_clsfUncheckedCreateInput = {
    inq_clsf_no?: number
    clco_no: number
    inq_clsf_nm: string
    expsr_seq?: number
    use_tf: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_inq_clsfUpdateInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    inq_clsf_nm?: StringFieldUpdateOperationsInput | string
    expsr_seq?: IntFieldUpdateOperationsInput | number
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inq_clsfUncheckedUpdateInput = {
    inq_clsf_no?: IntFieldUpdateOperationsInput | number
    clco_no?: IntFieldUpdateOperationsInput | number
    inq_clsf_nm?: StringFieldUpdateOperationsInput | string
    expsr_seq?: IntFieldUpdateOperationsInput | number
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inq_clsfCreateManyInput = {
    inq_clsf_no?: number
    clco_no: number
    inq_clsf_nm: string
    expsr_seq?: number
    use_tf: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_inq_clsfUpdateManyMutationInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    inq_clsf_nm?: StringFieldUpdateOperationsInput | string
    expsr_seq?: IntFieldUpdateOperationsInput | number
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_inq_clsfUncheckedUpdateManyInput = {
    inq_clsf_no?: IntFieldUpdateOperationsInput | number
    clco_no?: IntFieldUpdateOperationsInput | number
    inq_clsf_nm?: StringFieldUpdateOperationsInput | string
    expsr_seq?: IntFieldUpdateOperationsInput | number
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_ntcCreateInput = {
    clco_no: number
    prjt_no?: number | null
    expsr_tf: string
    uprw_fix_tf: string
    ntc_ttl: string
    expsr_end_dt_stng_tf: string
    expsr_bgng_dt: Date | string
    expsr_end_dt: Date | string
    ntc_cont: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_ntcUncheckedCreateInput = {
    ntc_no?: number
    clco_no: number
    prjt_no?: number | null
    expsr_tf: string
    uprw_fix_tf: string
    ntc_ttl: string
    expsr_end_dt_stng_tf: string
    expsr_bgng_dt: Date | string
    expsr_end_dt: Date | string
    ntc_cont: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_ntcUpdateInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    prjt_no?: NullableIntFieldUpdateOperationsInput | number | null
    expsr_tf?: StringFieldUpdateOperationsInput | string
    uprw_fix_tf?: StringFieldUpdateOperationsInput | string
    ntc_ttl?: StringFieldUpdateOperationsInput | string
    expsr_end_dt_stng_tf?: StringFieldUpdateOperationsInput | string
    expsr_bgng_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    expsr_end_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    ntc_cont?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_ntcUncheckedUpdateInput = {
    ntc_no?: IntFieldUpdateOperationsInput | number
    clco_no?: IntFieldUpdateOperationsInput | number
    prjt_no?: NullableIntFieldUpdateOperationsInput | number | null
    expsr_tf?: StringFieldUpdateOperationsInput | string
    uprw_fix_tf?: StringFieldUpdateOperationsInput | string
    ntc_ttl?: StringFieldUpdateOperationsInput | string
    expsr_end_dt_stng_tf?: StringFieldUpdateOperationsInput | string
    expsr_bgng_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    expsr_end_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    ntc_cont?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_ntcCreateManyInput = {
    ntc_no?: number
    clco_no: number
    prjt_no?: number | null
    expsr_tf: string
    uprw_fix_tf: string
    ntc_ttl: string
    expsr_end_dt_stng_tf: string
    expsr_bgng_dt: Date | string
    expsr_end_dt: Date | string
    ntc_cont: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_ntcUpdateManyMutationInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    prjt_no?: NullableIntFieldUpdateOperationsInput | number | null
    expsr_tf?: StringFieldUpdateOperationsInput | string
    uprw_fix_tf?: StringFieldUpdateOperationsInput | string
    ntc_ttl?: StringFieldUpdateOperationsInput | string
    expsr_end_dt_stng_tf?: StringFieldUpdateOperationsInput | string
    expsr_bgng_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    expsr_end_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    ntc_cont?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_ntcUncheckedUpdateManyInput = {
    ntc_no?: IntFieldUpdateOperationsInput | number
    clco_no?: IntFieldUpdateOperationsInput | number
    prjt_no?: NullableIntFieldUpdateOperationsInput | number | null
    expsr_tf?: StringFieldUpdateOperationsInput | string
    uprw_fix_tf?: StringFieldUpdateOperationsInput | string
    ntc_ttl?: StringFieldUpdateOperationsInput | string
    expsr_end_dt_stng_tf?: StringFieldUpdateOperationsInput | string
    expsr_bgng_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    expsr_end_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    ntc_cont?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_ntc_atch_fileCreateInput = {
    ntc_no: number
    atch_file_mng_no: bigint | number
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_ntc_atch_fileUncheckedCreateInput = {
    atch_file_no?: number
    ntc_no: number
    atch_file_mng_no: bigint | number
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_ntc_atch_fileUpdateInput = {
    ntc_no?: IntFieldUpdateOperationsInput | number
    atch_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_ntc_atch_fileUncheckedUpdateInput = {
    atch_file_no?: IntFieldUpdateOperationsInput | number
    ntc_no?: IntFieldUpdateOperationsInput | number
    atch_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_ntc_atch_fileCreateManyInput = {
    atch_file_no?: number
    ntc_no: number
    atch_file_mng_no: bigint | number
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_ntc_atch_fileUpdateManyMutationInput = {
    ntc_no?: IntFieldUpdateOperationsInput | number
    atch_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_ntc_atch_fileUncheckedUpdateManyInput = {
    atch_file_no?: IntFieldUpdateOperationsInput | number
    ntc_no?: IntFieldUpdateOperationsInput | number
    atch_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_popupCreateInput = {
    popup_no?: bigint | number
    clco_no: bigint | number
    prjt_no: bigint | number
    ttl: string
    expsr_tf: string
    expsr_bgng_ymd: Date | string
    expsr_end_ymd: Date | string
    img_file_mng_no: bigint | number
    cls_btn_use_tf: string
    re_expsr_phbt_cd: string
    btn_stng_cd: string
    popup_tp_cd: string
    dtl_url?: string | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sv_popupUncheckedCreateInput = {
    popup_no?: bigint | number
    clco_no: bigint | number
    prjt_no: bigint | number
    ttl: string
    expsr_tf: string
    expsr_bgng_ymd: Date | string
    expsr_end_ymd: Date | string
    img_file_mng_no: bigint | number
    cls_btn_use_tf: string
    re_expsr_phbt_cd: string
    btn_stng_cd: string
    popup_tp_cd: string
    dtl_url?: string | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sv_popupUpdateInput = {
    popup_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    prjt_no?: BigIntFieldUpdateOperationsInput | bigint | number
    ttl?: StringFieldUpdateOperationsInput | string
    expsr_tf?: StringFieldUpdateOperationsInput | string
    expsr_bgng_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    expsr_end_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    img_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    cls_btn_use_tf?: StringFieldUpdateOperationsInput | string
    re_expsr_phbt_cd?: StringFieldUpdateOperationsInput | string
    btn_stng_cd?: StringFieldUpdateOperationsInput | string
    popup_tp_cd?: StringFieldUpdateOperationsInput | string
    dtl_url?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_popupUncheckedUpdateInput = {
    popup_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    prjt_no?: BigIntFieldUpdateOperationsInput | bigint | number
    ttl?: StringFieldUpdateOperationsInput | string
    expsr_tf?: StringFieldUpdateOperationsInput | string
    expsr_bgng_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    expsr_end_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    img_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    cls_btn_use_tf?: StringFieldUpdateOperationsInput | string
    re_expsr_phbt_cd?: StringFieldUpdateOperationsInput | string
    btn_stng_cd?: StringFieldUpdateOperationsInput | string
    popup_tp_cd?: StringFieldUpdateOperationsInput | string
    dtl_url?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_popupCreateManyInput = {
    popup_no?: bigint | number
    clco_no: bigint | number
    prjt_no: bigint | number
    ttl: string
    expsr_tf: string
    expsr_bgng_ymd: Date | string
    expsr_end_ymd: Date | string
    img_file_mng_no: bigint | number
    cls_btn_use_tf: string
    re_expsr_phbt_cd: string
    btn_stng_cd: string
    popup_tp_cd: string
    dtl_url?: string | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sv_popupUpdateManyMutationInput = {
    popup_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    prjt_no?: BigIntFieldUpdateOperationsInput | bigint | number
    ttl?: StringFieldUpdateOperationsInput | string
    expsr_tf?: StringFieldUpdateOperationsInput | string
    expsr_bgng_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    expsr_end_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    img_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    cls_btn_use_tf?: StringFieldUpdateOperationsInput | string
    re_expsr_phbt_cd?: StringFieldUpdateOperationsInput | string
    btn_stng_cd?: StringFieldUpdateOperationsInput | string
    popup_tp_cd?: StringFieldUpdateOperationsInput | string
    dtl_url?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_popupUncheckedUpdateManyInput = {
    popup_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    prjt_no?: BigIntFieldUpdateOperationsInput | bigint | number
    ttl?: StringFieldUpdateOperationsInput | string
    expsr_tf?: StringFieldUpdateOperationsInput | string
    expsr_bgng_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    expsr_end_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    img_file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    cls_btn_use_tf?: StringFieldUpdateOperationsInput | string
    re_expsr_phbt_cd?: StringFieldUpdateOperationsInput | string
    btn_stng_cd?: StringFieldUpdateOperationsInput | string
    popup_tp_cd?: StringFieldUpdateOperationsInput | string
    dtl_url?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_progmCreateInput = {
    clco_no: number
    progm_nm: string
    mngr_memo?: string | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_progmUncheckedCreateInput = {
    progm_no?: number
    clco_no: number
    progm_nm: string
    mngr_memo?: string | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_progmUpdateInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    progm_nm?: StringFieldUpdateOperationsInput | string
    mngr_memo?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_progmUncheckedUpdateInput = {
    progm_no?: IntFieldUpdateOperationsInput | number
    clco_no?: IntFieldUpdateOperationsInput | number
    progm_nm?: StringFieldUpdateOperationsInput | string
    mngr_memo?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_progmCreateManyInput = {
    progm_no?: number
    clco_no: number
    progm_nm: string
    mngr_memo?: string | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_progmUpdateManyMutationInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    progm_nm?: StringFieldUpdateOperationsInput | string
    mngr_memo?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_progmUncheckedUpdateManyInput = {
    progm_no?: IntFieldUpdateOperationsInput | number
    clco_no?: IntFieldUpdateOperationsInput | number
    progm_nm?: StringFieldUpdateOperationsInput | string
    mngr_memo?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_sms_sndngCreateInput = {
    sms_sndng_no?: bigint | number
    sndng_trgt_cd: string
    sms_ttl?: string | null
    sms_cont: string
    atch_img_file_mng_no?: bigint | number | null
    sndng_tp_cd: string
    rsvt_sndng_dt?: Date | string | null
    sndng_stts_cd?: string | null
    ttlt_sndng_cnt?: number | null
    sndng_fail_cnt?: number | null
    rcptn_idnty_cnt?: number | null
    clco_no?: number | null
    prjt_no?: number | null
    prgm_no?: number | null
    week?: number | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_sms_sndngUncheckedCreateInput = {
    sms_sndng_no?: bigint | number
    sndng_trgt_cd: string
    sms_ttl?: string | null
    sms_cont: string
    atch_img_file_mng_no?: bigint | number | null
    sndng_tp_cd: string
    rsvt_sndng_dt?: Date | string | null
    sndng_stts_cd?: string | null
    ttlt_sndng_cnt?: number | null
    sndng_fail_cnt?: number | null
    rcptn_idnty_cnt?: number | null
    clco_no?: number | null
    prjt_no?: number | null
    prgm_no?: number | null
    week?: number | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_sms_sndngUpdateInput = {
    sms_sndng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    sndng_trgt_cd?: StringFieldUpdateOperationsInput | string
    sms_ttl?: NullableStringFieldUpdateOperationsInput | string | null
    sms_cont?: StringFieldUpdateOperationsInput | string
    atch_img_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sndng_tp_cd?: StringFieldUpdateOperationsInput | string
    rsvt_sndng_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sndng_stts_cd?: NullableStringFieldUpdateOperationsInput | string | null
    ttlt_sndng_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    sndng_fail_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    rcptn_idnty_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    clco_no?: NullableIntFieldUpdateOperationsInput | number | null
    prjt_no?: NullableIntFieldUpdateOperationsInput | number | null
    prgm_no?: NullableIntFieldUpdateOperationsInput | number | null
    week?: NullableIntFieldUpdateOperationsInput | number | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_sms_sndngUncheckedUpdateInput = {
    sms_sndng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    sndng_trgt_cd?: StringFieldUpdateOperationsInput | string
    sms_ttl?: NullableStringFieldUpdateOperationsInput | string | null
    sms_cont?: StringFieldUpdateOperationsInput | string
    atch_img_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sndng_tp_cd?: StringFieldUpdateOperationsInput | string
    rsvt_sndng_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sndng_stts_cd?: NullableStringFieldUpdateOperationsInput | string | null
    ttlt_sndng_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    sndng_fail_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    rcptn_idnty_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    clco_no?: NullableIntFieldUpdateOperationsInput | number | null
    prjt_no?: NullableIntFieldUpdateOperationsInput | number | null
    prgm_no?: NullableIntFieldUpdateOperationsInput | number | null
    week?: NullableIntFieldUpdateOperationsInput | number | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_sms_sndngCreateManyInput = {
    sms_sndng_no?: bigint | number
    sndng_trgt_cd: string
    sms_ttl?: string | null
    sms_cont: string
    atch_img_file_mng_no?: bigint | number | null
    sndng_tp_cd: string
    rsvt_sndng_dt?: Date | string | null
    sndng_stts_cd?: string | null
    ttlt_sndng_cnt?: number | null
    sndng_fail_cnt?: number | null
    rcptn_idnty_cnt?: number | null
    clco_no?: number | null
    prjt_no?: number | null
    prgm_no?: number | null
    week?: number | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_sms_sndngUpdateManyMutationInput = {
    sms_sndng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    sndng_trgt_cd?: StringFieldUpdateOperationsInput | string
    sms_ttl?: NullableStringFieldUpdateOperationsInput | string | null
    sms_cont?: StringFieldUpdateOperationsInput | string
    atch_img_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sndng_tp_cd?: StringFieldUpdateOperationsInput | string
    rsvt_sndng_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sndng_stts_cd?: NullableStringFieldUpdateOperationsInput | string | null
    ttlt_sndng_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    sndng_fail_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    rcptn_idnty_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    clco_no?: NullableIntFieldUpdateOperationsInput | number | null
    prjt_no?: NullableIntFieldUpdateOperationsInput | number | null
    prgm_no?: NullableIntFieldUpdateOperationsInput | number | null
    week?: NullableIntFieldUpdateOperationsInput | number | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_sms_sndngUncheckedUpdateManyInput = {
    sms_sndng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    sndng_trgt_cd?: StringFieldUpdateOperationsInput | string
    sms_ttl?: NullableStringFieldUpdateOperationsInput | string | null
    sms_cont?: StringFieldUpdateOperationsInput | string
    atch_img_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sndng_tp_cd?: StringFieldUpdateOperationsInput | string
    rsvt_sndng_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sndng_stts_cd?: NullableStringFieldUpdateOperationsInput | string | null
    ttlt_sndng_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    sndng_fail_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    rcptn_idnty_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    clco_no?: NullableIntFieldUpdateOperationsInput | number | null
    prjt_no?: NullableIntFieldUpdateOperationsInput | number | null
    prgm_no?: NullableIntFieldUpdateOperationsInput | number | null
    week?: NullableIntFieldUpdateOperationsInput | number | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_sms_tmplCreateInput = {
    sms_tmpl_sctn_cd: string
    sms_ttl: string
    sms_cont: string
    atch_img_file_mng_no?: bigint | number | null
    aim_trgt_tf?: string
    clco_trgt_tf?: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_sms_tmplUncheckedCreateInput = {
    sms_tmpl_no?: number
    sms_tmpl_sctn_cd: string
    sms_ttl: string
    sms_cont: string
    atch_img_file_mng_no?: bigint | number | null
    aim_trgt_tf?: string
    clco_trgt_tf?: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_sms_tmplUpdateInput = {
    sms_tmpl_sctn_cd?: StringFieldUpdateOperationsInput | string
    sms_ttl?: StringFieldUpdateOperationsInput | string
    sms_cont?: StringFieldUpdateOperationsInput | string
    atch_img_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    aim_trgt_tf?: StringFieldUpdateOperationsInput | string
    clco_trgt_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_sms_tmplUncheckedUpdateInput = {
    sms_tmpl_no?: IntFieldUpdateOperationsInput | number
    sms_tmpl_sctn_cd?: StringFieldUpdateOperationsInput | string
    sms_ttl?: StringFieldUpdateOperationsInput | string
    sms_cont?: StringFieldUpdateOperationsInput | string
    atch_img_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    aim_trgt_tf?: StringFieldUpdateOperationsInput | string
    clco_trgt_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_sms_tmplCreateManyInput = {
    sms_tmpl_no?: number
    sms_tmpl_sctn_cd: string
    sms_ttl: string
    sms_cont: string
    atch_img_file_mng_no?: bigint | number | null
    aim_trgt_tf?: string
    clco_trgt_tf?: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sv_sms_tmplUpdateManyMutationInput = {
    sms_tmpl_sctn_cd?: StringFieldUpdateOperationsInput | string
    sms_ttl?: StringFieldUpdateOperationsInput | string
    sms_cont?: StringFieldUpdateOperationsInput | string
    atch_img_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    aim_trgt_tf?: StringFieldUpdateOperationsInput | string
    clco_trgt_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_sms_tmplUncheckedUpdateManyInput = {
    sms_tmpl_no?: IntFieldUpdateOperationsInput | number
    sms_tmpl_sctn_cd?: StringFieldUpdateOperationsInput | string
    sms_ttl?: StringFieldUpdateOperationsInput | string
    sms_cont?: StringFieldUpdateOperationsInput | string
    atch_img_file_mng_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    aim_trgt_tf?: StringFieldUpdateOperationsInput | string
    clco_trgt_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sv_trmsCreateInput = {
    trms_no?: bigint | number
    clco_no: bigint | number
    trms_knd_cd: string
    esntl_agr_tf: string
    sort_seq: number
    trms_cont: string
    use_tf: string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
    trms_ttl: string
  }

  export type sv_trmsUncheckedCreateInput = {
    trms_no?: bigint | number
    clco_no: bigint | number
    trms_knd_cd: string
    esntl_agr_tf: string
    sort_seq: number
    trms_cont: string
    use_tf: string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
    trms_ttl: string
  }

  export type sv_trmsUpdateInput = {
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_knd_cd?: StringFieldUpdateOperationsInput | string
    esntl_agr_tf?: StringFieldUpdateOperationsInput | string
    sort_seq?: IntFieldUpdateOperationsInput | number
    trms_cont?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    trms_ttl?: StringFieldUpdateOperationsInput | string
  }

  export type sv_trmsUncheckedUpdateInput = {
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_knd_cd?: StringFieldUpdateOperationsInput | string
    esntl_agr_tf?: StringFieldUpdateOperationsInput | string
    sort_seq?: IntFieldUpdateOperationsInput | number
    trms_cont?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    trms_ttl?: StringFieldUpdateOperationsInput | string
  }

  export type sv_trmsCreateManyInput = {
    trms_no?: bigint | number
    clco_no: bigint | number
    trms_knd_cd: string
    esntl_agr_tf: string
    sort_seq: number
    trms_cont: string
    use_tf: string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
    trms_ttl: string
  }

  export type sv_trmsUpdateManyMutationInput = {
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_knd_cd?: StringFieldUpdateOperationsInput | string
    esntl_agr_tf?: StringFieldUpdateOperationsInput | string
    sort_seq?: IntFieldUpdateOperationsInput | number
    trms_cont?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    trms_ttl?: StringFieldUpdateOperationsInput | string
  }

  export type sv_trmsUncheckedUpdateManyInput = {
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_knd_cd?: StringFieldUpdateOperationsInput | string
    esntl_agr_tf?: StringFieldUpdateOperationsInput | string
    sort_seq?: IntFieldUpdateOperationsInput | number
    trms_cont?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    trms_ttl?: StringFieldUpdateOperationsInput | string
  }

  export type sv_trms_histCreateInput = {
    hist_no?: bigint | number
    trms_no: bigint | number
    clco_no: bigint | number
    trms_knd_cd: string
    esntl_agr_tf: string
    sort_seq: number
    trms_cont: string
    use_tf: string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
    trms_ttl: string
  }

  export type sv_trms_histUncheckedCreateInput = {
    hist_no?: bigint | number
    trms_no: bigint | number
    clco_no: bigint | number
    trms_knd_cd: string
    esntl_agr_tf: string
    sort_seq: number
    trms_cont: string
    use_tf: string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
    trms_ttl: string
  }

  export type sv_trms_histUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_knd_cd?: StringFieldUpdateOperationsInput | string
    esntl_agr_tf?: StringFieldUpdateOperationsInput | string
    sort_seq?: IntFieldUpdateOperationsInput | number
    trms_cont?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    trms_ttl?: StringFieldUpdateOperationsInput | string
  }

  export type sv_trms_histUncheckedUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_knd_cd?: StringFieldUpdateOperationsInput | string
    esntl_agr_tf?: StringFieldUpdateOperationsInput | string
    sort_seq?: IntFieldUpdateOperationsInput | number
    trms_cont?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    trms_ttl?: StringFieldUpdateOperationsInput | string
  }

  export type sv_trms_histCreateManyInput = {
    hist_no?: bigint | number
    trms_no: bigint | number
    clco_no: bigint | number
    trms_knd_cd: string
    esntl_agr_tf: string
    sort_seq: number
    trms_cont: string
    use_tf: string
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
    trms_ttl: string
  }

  export type sv_trms_histUpdateManyMutationInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_knd_cd?: StringFieldUpdateOperationsInput | string
    esntl_agr_tf?: StringFieldUpdateOperationsInput | string
    sort_seq?: IntFieldUpdateOperationsInput | number
    trms_cont?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    trms_ttl?: StringFieldUpdateOperationsInput | string
  }

  export type sv_trms_histUncheckedUpdateManyInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_no?: BigIntFieldUpdateOperationsInput | bigint | number
    clco_no?: BigIntFieldUpdateOperationsInput | bigint | number
    trms_knd_cd?: StringFieldUpdateOperationsInput | string
    esntl_agr_tf?: StringFieldUpdateOperationsInput | string
    sort_seq?: IntFieldUpdateOperationsInput | number
    trms_cont?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    trms_ttl?: StringFieldUpdateOperationsInput | string
  }

  export type sy_atch_file_mngCreateInput = {
    file_mng_no?: bigint | number
    file_path_nm: string
    uld_file_nm: string
    strg_file_nm: string
    file_sz: bigint | number
    extn_nm?: string | null
    mbr_no?: bigint | number | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sy_atch_file_mngUncheckedCreateInput = {
    file_mng_no?: bigint | number
    file_path_nm: string
    uld_file_nm: string
    strg_file_nm: string
    file_sz: bigint | number
    extn_nm?: string | null
    mbr_no?: bigint | number | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sy_atch_file_mngUpdateInput = {
    file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    file_path_nm?: StringFieldUpdateOperationsInput | string
    uld_file_nm?: StringFieldUpdateOperationsInput | string
    strg_file_nm?: StringFieldUpdateOperationsInput | string
    file_sz?: BigIntFieldUpdateOperationsInput | bigint | number
    extn_nm?: NullableStringFieldUpdateOperationsInput | string | null
    mbr_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_atch_file_mngUncheckedUpdateInput = {
    file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    file_path_nm?: StringFieldUpdateOperationsInput | string
    uld_file_nm?: StringFieldUpdateOperationsInput | string
    strg_file_nm?: StringFieldUpdateOperationsInput | string
    file_sz?: BigIntFieldUpdateOperationsInput | bigint | number
    extn_nm?: NullableStringFieldUpdateOperationsInput | string | null
    mbr_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_atch_file_mngCreateManyInput = {
    file_mng_no?: bigint | number
    file_path_nm: string
    uld_file_nm: string
    strg_file_nm: string
    file_sz: bigint | number
    extn_nm?: string | null
    mbr_no?: bigint | number | null
    regr_no: bigint | number
    reg_dt: Date | string
    modr_no: bigint | number
    mod_dt: Date | string
  }

  export type sy_atch_file_mngUpdateManyMutationInput = {
    file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    file_path_nm?: StringFieldUpdateOperationsInput | string
    uld_file_nm?: StringFieldUpdateOperationsInput | string
    strg_file_nm?: StringFieldUpdateOperationsInput | string
    file_sz?: BigIntFieldUpdateOperationsInput | bigint | number
    extn_nm?: NullableStringFieldUpdateOperationsInput | string | null
    mbr_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_atch_file_mngUncheckedUpdateManyInput = {
    file_mng_no?: BigIntFieldUpdateOperationsInput | bigint | number
    file_path_nm?: StringFieldUpdateOperationsInput | string
    uld_file_nm?: StringFieldUpdateOperationsInput | string
    strg_file_nm?: StringFieldUpdateOperationsInput | string
    file_sz?: BigIntFieldUpdateOperationsInput | bigint | number
    extn_nm?: NullableStringFieldUpdateOperationsInput | string | null
    mbr_no?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_authCreateInput = {
    auth_trgt_sctn_cd: string
    auth_grnt_sctn_cd: string
    scrn_no?: number | null
    menu_no?: number | null
    auth_yn: string
    auth_grp_no?: number | null
    mngr_no?: number | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_authUncheckedCreateInput = {
    auth_no?: number
    auth_trgt_sctn_cd: string
    auth_grnt_sctn_cd: string
    scrn_no?: number | null
    menu_no?: number | null
    auth_yn: string
    auth_grp_no?: number | null
    mngr_no?: number | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_authUpdateInput = {
    auth_trgt_sctn_cd?: StringFieldUpdateOperationsInput | string
    auth_grnt_sctn_cd?: StringFieldUpdateOperationsInput | string
    scrn_no?: NullableIntFieldUpdateOperationsInput | number | null
    menu_no?: NullableIntFieldUpdateOperationsInput | number | null
    auth_yn?: StringFieldUpdateOperationsInput | string
    auth_grp_no?: NullableIntFieldUpdateOperationsInput | number | null
    mngr_no?: NullableIntFieldUpdateOperationsInput | number | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_authUncheckedUpdateInput = {
    auth_no?: IntFieldUpdateOperationsInput | number
    auth_trgt_sctn_cd?: StringFieldUpdateOperationsInput | string
    auth_grnt_sctn_cd?: StringFieldUpdateOperationsInput | string
    scrn_no?: NullableIntFieldUpdateOperationsInput | number | null
    menu_no?: NullableIntFieldUpdateOperationsInput | number | null
    auth_yn?: StringFieldUpdateOperationsInput | string
    auth_grp_no?: NullableIntFieldUpdateOperationsInput | number | null
    mngr_no?: NullableIntFieldUpdateOperationsInput | number | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_authCreateManyInput = {
    auth_no?: number
    auth_trgt_sctn_cd: string
    auth_grnt_sctn_cd: string
    scrn_no?: number | null
    menu_no?: number | null
    auth_yn: string
    auth_grp_no?: number | null
    mngr_no?: number | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_authUpdateManyMutationInput = {
    auth_trgt_sctn_cd?: StringFieldUpdateOperationsInput | string
    auth_grnt_sctn_cd?: StringFieldUpdateOperationsInput | string
    scrn_no?: NullableIntFieldUpdateOperationsInput | number | null
    menu_no?: NullableIntFieldUpdateOperationsInput | number | null
    auth_yn?: StringFieldUpdateOperationsInput | string
    auth_grp_no?: NullableIntFieldUpdateOperationsInput | number | null
    mngr_no?: NullableIntFieldUpdateOperationsInput | number | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_authUncheckedUpdateManyInput = {
    auth_no?: IntFieldUpdateOperationsInput | number
    auth_trgt_sctn_cd?: StringFieldUpdateOperationsInput | string
    auth_grnt_sctn_cd?: StringFieldUpdateOperationsInput | string
    scrn_no?: NullableIntFieldUpdateOperationsInput | number | null
    menu_no?: NullableIntFieldUpdateOperationsInput | number | null
    auth_yn?: StringFieldUpdateOperationsInput | string
    auth_grp_no?: NullableIntFieldUpdateOperationsInput | number | null
    mngr_no?: NullableIntFieldUpdateOperationsInput | number | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_auth_grpCreateInput = {
    auth_grp_nm: string
    auth_grp_sctn_cd: string
    auth_grp_desc?: string | null
    use_tf?: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_auth_grpUncheckedCreateInput = {
    auth_grp_no?: number
    auth_grp_nm: string
    auth_grp_sctn_cd: string
    auth_grp_desc?: string | null
    use_tf?: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_auth_grpUpdateInput = {
    auth_grp_nm?: StringFieldUpdateOperationsInput | string
    auth_grp_sctn_cd?: StringFieldUpdateOperationsInput | string
    auth_grp_desc?: NullableStringFieldUpdateOperationsInput | string | null
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_auth_grpUncheckedUpdateInput = {
    auth_grp_no?: IntFieldUpdateOperationsInput | number
    auth_grp_nm?: StringFieldUpdateOperationsInput | string
    auth_grp_sctn_cd?: StringFieldUpdateOperationsInput | string
    auth_grp_desc?: NullableStringFieldUpdateOperationsInput | string | null
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_auth_grpCreateManyInput = {
    auth_grp_no?: number
    auth_grp_nm: string
    auth_grp_sctn_cd: string
    auth_grp_desc?: string | null
    use_tf?: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_auth_grpUpdateManyMutationInput = {
    auth_grp_nm?: StringFieldUpdateOperationsInput | string
    auth_grp_sctn_cd?: StringFieldUpdateOperationsInput | string
    auth_grp_desc?: NullableStringFieldUpdateOperationsInput | string | null
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_auth_grpUncheckedUpdateManyInput = {
    auth_grp_no?: IntFieldUpdateOperationsInput | number
    auth_grp_nm?: StringFieldUpdateOperationsInput | string
    auth_grp_sctn_cd?: StringFieldUpdateOperationsInput | string
    auth_grp_desc?: NullableStringFieldUpdateOperationsInput | string | null
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_clcoCreateInput = {
    clco_nm: string
    clco_sctn_cd?: string | null
    use_url?: string | null
    hlth_rsrv_url?: string | null
    use_bgng_ymd: Date | string
    use_end_ymd: Date | string
    use_stts_cd: string
    pic_nm?: string | null
    pic_dept_nm?: string | null
    pic_telno?: string | null
    b2b_type?: string | null
    comp_code?: string | null
    bot_code?: string | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_clcoUncheckedCreateInput = {
    clco_no?: number
    clco_nm: string
    clco_sctn_cd?: string | null
    use_url?: string | null
    hlth_rsrv_url?: string | null
    use_bgng_ymd: Date | string
    use_end_ymd: Date | string
    use_stts_cd: string
    pic_nm?: string | null
    pic_dept_nm?: string | null
    pic_telno?: string | null
    b2b_type?: string | null
    comp_code?: string | null
    bot_code?: string | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_clcoUpdateInput = {
    clco_nm?: StringFieldUpdateOperationsInput | string
    clco_sctn_cd?: NullableStringFieldUpdateOperationsInput | string | null
    use_url?: NullableStringFieldUpdateOperationsInput | string | null
    hlth_rsrv_url?: NullableStringFieldUpdateOperationsInput | string | null
    use_bgng_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    use_end_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    use_stts_cd?: StringFieldUpdateOperationsInput | string
    pic_nm?: NullableStringFieldUpdateOperationsInput | string | null
    pic_dept_nm?: NullableStringFieldUpdateOperationsInput | string | null
    pic_telno?: NullableStringFieldUpdateOperationsInput | string | null
    b2b_type?: NullableStringFieldUpdateOperationsInput | string | null
    comp_code?: NullableStringFieldUpdateOperationsInput | string | null
    bot_code?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_clcoUncheckedUpdateInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    clco_nm?: StringFieldUpdateOperationsInput | string
    clco_sctn_cd?: NullableStringFieldUpdateOperationsInput | string | null
    use_url?: NullableStringFieldUpdateOperationsInput | string | null
    hlth_rsrv_url?: NullableStringFieldUpdateOperationsInput | string | null
    use_bgng_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    use_end_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    use_stts_cd?: StringFieldUpdateOperationsInput | string
    pic_nm?: NullableStringFieldUpdateOperationsInput | string | null
    pic_dept_nm?: NullableStringFieldUpdateOperationsInput | string | null
    pic_telno?: NullableStringFieldUpdateOperationsInput | string | null
    b2b_type?: NullableStringFieldUpdateOperationsInput | string | null
    comp_code?: NullableStringFieldUpdateOperationsInput | string | null
    bot_code?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_clcoCreateManyInput = {
    clco_no?: number
    clco_nm: string
    clco_sctn_cd?: string | null
    use_url?: string | null
    hlth_rsrv_url?: string | null
    use_bgng_ymd: Date | string
    use_end_ymd: Date | string
    use_stts_cd: string
    pic_nm?: string | null
    pic_dept_nm?: string | null
    pic_telno?: string | null
    b2b_type?: string | null
    comp_code?: string | null
    bot_code?: string | null
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_clcoUpdateManyMutationInput = {
    clco_nm?: StringFieldUpdateOperationsInput | string
    clco_sctn_cd?: NullableStringFieldUpdateOperationsInput | string | null
    use_url?: NullableStringFieldUpdateOperationsInput | string | null
    hlth_rsrv_url?: NullableStringFieldUpdateOperationsInput | string | null
    use_bgng_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    use_end_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    use_stts_cd?: StringFieldUpdateOperationsInput | string
    pic_nm?: NullableStringFieldUpdateOperationsInput | string | null
    pic_dept_nm?: NullableStringFieldUpdateOperationsInput | string | null
    pic_telno?: NullableStringFieldUpdateOperationsInput | string | null
    b2b_type?: NullableStringFieldUpdateOperationsInput | string | null
    comp_code?: NullableStringFieldUpdateOperationsInput | string | null
    bot_code?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_clcoUncheckedUpdateManyInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    clco_nm?: StringFieldUpdateOperationsInput | string
    clco_sctn_cd?: NullableStringFieldUpdateOperationsInput | string | null
    use_url?: NullableStringFieldUpdateOperationsInput | string | null
    hlth_rsrv_url?: NullableStringFieldUpdateOperationsInput | string | null
    use_bgng_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    use_end_ymd?: DateTimeFieldUpdateOperationsInput | Date | string
    use_stts_cd?: StringFieldUpdateOperationsInput | string
    pic_nm?: NullableStringFieldUpdateOperationsInput | string | null
    pic_dept_nm?: NullableStringFieldUpdateOperationsInput | string | null
    pic_telno?: NullableStringFieldUpdateOperationsInput | string | null
    b2b_type?: NullableStringFieldUpdateOperationsInput | string | null
    comp_code?: NullableStringFieldUpdateOperationsInput | string | null
    bot_code?: NullableStringFieldUpdateOperationsInput | string | null
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_clco_deptCreateInput = {
    clco_no: number
    clco_dept_cd: string
    clco_dept_nm: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_clco_deptUncheckedCreateInput = {
    clco_no: number
    clco_dept_cd: string
    clco_dept_nm: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_clco_deptUpdateInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    clco_dept_cd?: StringFieldUpdateOperationsInput | string
    clco_dept_nm?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_clco_deptUncheckedUpdateInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    clco_dept_cd?: StringFieldUpdateOperationsInput | string
    clco_dept_nm?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_clco_deptCreateManyInput = {
    clco_no: number
    clco_dept_cd: string
    clco_dept_nm: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_clco_deptUpdateManyMutationInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    clco_dept_cd?: StringFieldUpdateOperationsInput | string
    clco_dept_nm?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_clco_deptUncheckedUpdateManyInput = {
    clco_no?: IntFieldUpdateOperationsInput | number
    clco_dept_cd?: StringFieldUpdateOperationsInput | string
    clco_dept_nm?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_dtl_cdCreateInput = {
    grp_cd: string
    cd: string
    cd_nm: string
    cd_desc?: string | null
    sort_seq?: number | null
    use_tf: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_dtl_cdUncheckedCreateInput = {
    grp_cd: string
    cd: string
    cd_nm: string
    cd_desc?: string | null
    sort_seq?: number | null
    use_tf: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_dtl_cdUpdateInput = {
    grp_cd?: StringFieldUpdateOperationsInput | string
    cd?: StringFieldUpdateOperationsInput | string
    cd_nm?: StringFieldUpdateOperationsInput | string
    cd_desc?: NullableStringFieldUpdateOperationsInput | string | null
    sort_seq?: NullableIntFieldUpdateOperationsInput | number | null
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_dtl_cdUncheckedUpdateInput = {
    grp_cd?: StringFieldUpdateOperationsInput | string
    cd?: StringFieldUpdateOperationsInput | string
    cd_nm?: StringFieldUpdateOperationsInput | string
    cd_desc?: NullableStringFieldUpdateOperationsInput | string | null
    sort_seq?: NullableIntFieldUpdateOperationsInput | number | null
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_dtl_cdCreateManyInput = {
    grp_cd: string
    cd: string
    cd_nm: string
    cd_desc?: string | null
    sort_seq?: number | null
    use_tf: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_dtl_cdUpdateManyMutationInput = {
    grp_cd?: StringFieldUpdateOperationsInput | string
    cd?: StringFieldUpdateOperationsInput | string
    cd_nm?: StringFieldUpdateOperationsInput | string
    cd_desc?: NullableStringFieldUpdateOperationsInput | string | null
    sort_seq?: NullableIntFieldUpdateOperationsInput | number | null
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_dtl_cdUncheckedUpdateManyInput = {
    grp_cd?: StringFieldUpdateOperationsInput | string
    cd?: StringFieldUpdateOperationsInput | string
    cd_nm?: StringFieldUpdateOperationsInput | string
    cd_desc?: NullableStringFieldUpdateOperationsInput | string | null
    sort_seq?: NullableIntFieldUpdateOperationsInput | number | null
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_excel_histCreateInput = {
    hist_no?: bigint | number
    file_nm: string
    row_cnt: number
    regr_no: bigint | number
    reg_dt: Date | string
  }

  export type sy_excel_histUncheckedCreateInput = {
    hist_no?: bigint | number
    file_nm: string
    row_cnt: number
    regr_no: bigint | number
    reg_dt: Date | string
  }

  export type sy_excel_histUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    file_nm?: StringFieldUpdateOperationsInput | string
    row_cnt?: IntFieldUpdateOperationsInput | number
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_excel_histUncheckedUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    file_nm?: StringFieldUpdateOperationsInput | string
    row_cnt?: IntFieldUpdateOperationsInput | number
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_excel_histCreateManyInput = {
    hist_no?: bigint | number
    file_nm: string
    row_cnt: number
    regr_no: bigint | number
    reg_dt: Date | string
  }

  export type sy_excel_histUpdateManyMutationInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    file_nm?: StringFieldUpdateOperationsInput | string
    row_cnt?: IntFieldUpdateOperationsInput | number
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_excel_histUncheckedUpdateManyInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    file_nm?: StringFieldUpdateOperationsInput | string
    row_cnt?: IntFieldUpdateOperationsInput | number
    regr_no?: BigIntFieldUpdateOperationsInput | bigint | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_grp_cdCreateInput = {
    grp_cd: string
    grp_cd_nm: string
    grp_cd_desc?: string | null
    use_tf: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_grp_cdUncheckedCreateInput = {
    grp_cd: string
    grp_cd_nm: string
    grp_cd_desc?: string | null
    use_tf: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_grp_cdUpdateInput = {
    grp_cd?: StringFieldUpdateOperationsInput | string
    grp_cd_nm?: StringFieldUpdateOperationsInput | string
    grp_cd_desc?: NullableStringFieldUpdateOperationsInput | string | null
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_grp_cdUncheckedUpdateInput = {
    grp_cd?: StringFieldUpdateOperationsInput | string
    grp_cd_nm?: StringFieldUpdateOperationsInput | string
    grp_cd_desc?: NullableStringFieldUpdateOperationsInput | string | null
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_grp_cdCreateManyInput = {
    grp_cd: string
    grp_cd_nm: string
    grp_cd_desc?: string | null
    use_tf: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_grp_cdUpdateManyMutationInput = {
    grp_cd?: StringFieldUpdateOperationsInput | string
    grp_cd_nm?: StringFieldUpdateOperationsInput | string
    grp_cd_desc?: NullableStringFieldUpdateOperationsInput | string | null
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_grp_cdUncheckedUpdateManyInput = {
    grp_cd?: StringFieldUpdateOperationsInput | string
    grp_cd_nm?: StringFieldUpdateOperationsInput | string
    grp_cd_desc?: NullableStringFieldUpdateOperationsInput | string | null
    use_tf?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_menuCreateInput = {
    menu_nm: string
    use_tf: string
    expsr_tf: string
    indct_seq: number
    menu_desc?: string | null
    up_menu_no?: number | null
    note_cont?: string | null
    link_scrn_no?: number | null
    icon_nm?: string | null
    menu_url?: string | null
    vrsn: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_menuUncheckedCreateInput = {
    menu_no?: number
    menu_nm: string
    use_tf: string
    expsr_tf: string
    indct_seq: number
    menu_desc?: string | null
    up_menu_no?: number | null
    note_cont?: string | null
    link_scrn_no?: number | null
    icon_nm?: string | null
    menu_url?: string | null
    vrsn: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_menuUpdateInput = {
    menu_nm?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    expsr_tf?: StringFieldUpdateOperationsInput | string
    indct_seq?: IntFieldUpdateOperationsInput | number
    menu_desc?: NullableStringFieldUpdateOperationsInput | string | null
    up_menu_no?: NullableIntFieldUpdateOperationsInput | number | null
    note_cont?: NullableStringFieldUpdateOperationsInput | string | null
    link_scrn_no?: NullableIntFieldUpdateOperationsInput | number | null
    icon_nm?: NullableStringFieldUpdateOperationsInput | string | null
    menu_url?: NullableStringFieldUpdateOperationsInput | string | null
    vrsn?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_menuUncheckedUpdateInput = {
    menu_no?: IntFieldUpdateOperationsInput | number
    menu_nm?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    expsr_tf?: StringFieldUpdateOperationsInput | string
    indct_seq?: IntFieldUpdateOperationsInput | number
    menu_desc?: NullableStringFieldUpdateOperationsInput | string | null
    up_menu_no?: NullableIntFieldUpdateOperationsInput | number | null
    note_cont?: NullableStringFieldUpdateOperationsInput | string | null
    link_scrn_no?: NullableIntFieldUpdateOperationsInput | number | null
    icon_nm?: NullableStringFieldUpdateOperationsInput | string | null
    menu_url?: NullableStringFieldUpdateOperationsInput | string | null
    vrsn?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_menuCreateManyInput = {
    menu_no?: number
    menu_nm: string
    use_tf: string
    expsr_tf: string
    indct_seq: number
    menu_desc?: string | null
    up_menu_no?: number | null
    note_cont?: string | null
    link_scrn_no?: number | null
    icon_nm?: string | null
    menu_url?: string | null
    vrsn: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_menuUpdateManyMutationInput = {
    menu_nm?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    expsr_tf?: StringFieldUpdateOperationsInput | string
    indct_seq?: IntFieldUpdateOperationsInput | number
    menu_desc?: NullableStringFieldUpdateOperationsInput | string | null
    up_menu_no?: NullableIntFieldUpdateOperationsInput | number | null
    note_cont?: NullableStringFieldUpdateOperationsInput | string | null
    link_scrn_no?: NullableIntFieldUpdateOperationsInput | number | null
    icon_nm?: NullableStringFieldUpdateOperationsInput | string | null
    menu_url?: NullableStringFieldUpdateOperationsInput | string | null
    vrsn?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_menuUncheckedUpdateManyInput = {
    menu_no?: IntFieldUpdateOperationsInput | number
    menu_nm?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    expsr_tf?: StringFieldUpdateOperationsInput | string
    indct_seq?: IntFieldUpdateOperationsInput | number
    menu_desc?: NullableStringFieldUpdateOperationsInput | string | null
    up_menu_no?: NullableIntFieldUpdateOperationsInput | number | null
    note_cont?: NullableStringFieldUpdateOperationsInput | string | null
    link_scrn_no?: NullableIntFieldUpdateOperationsInput | number | null
    icon_nm?: NullableStringFieldUpdateOperationsInput | string | null
    menu_url?: NullableStringFieldUpdateOperationsInput | string | null
    vrsn?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngrCreateInput = {
    mngr_id: string
    mngr_pswd: string
    mngr_nm: string
    mngr_sctn_cd: string
    mngr_stts_cd?: string | null
    email: string
    mbph_no: string
    use_tf: string
    clco_no?: number | null
    clco_dept_cd?: string | null
    use_bgng_ymd?: Date | string | null
    use_end_ymd?: Date | string | null
    salt_val?: string | null
    cnsr_sctn_cd?: string | null
    fail_cnt?: number | null
    auth_suces_tf?: string | null
    auth_key?: string | null
    auth_token?: string | null
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
    regr_no: number
  }

  export type sy_mngrUncheckedCreateInput = {
    mngr_no?: number
    mngr_id: string
    mngr_pswd: string
    mngr_nm: string
    mngr_sctn_cd: string
    mngr_stts_cd?: string | null
    email: string
    mbph_no: string
    use_tf: string
    clco_no?: number | null
    clco_dept_cd?: string | null
    use_bgng_ymd?: Date | string | null
    use_end_ymd?: Date | string | null
    salt_val?: string | null
    cnsr_sctn_cd?: string | null
    fail_cnt?: number | null
    auth_suces_tf?: string | null
    auth_key?: string | null
    auth_token?: string | null
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
    regr_no: number
  }

  export type sy_mngrUpdateInput = {
    mngr_id?: StringFieldUpdateOperationsInput | string
    mngr_pswd?: StringFieldUpdateOperationsInput | string
    mngr_nm?: StringFieldUpdateOperationsInput | string
    mngr_sctn_cd?: StringFieldUpdateOperationsInput | string
    mngr_stts_cd?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    mbph_no?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    clco_no?: NullableIntFieldUpdateOperationsInput | number | null
    clco_dept_cd?: NullableStringFieldUpdateOperationsInput | string | null
    use_bgng_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    use_end_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    salt_val?: NullableStringFieldUpdateOperationsInput | string | null
    cnsr_sctn_cd?: NullableStringFieldUpdateOperationsInput | string | null
    fail_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    auth_suces_tf?: NullableStringFieldUpdateOperationsInput | string | null
    auth_key?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token?: NullableStringFieldUpdateOperationsInput | string | null
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: IntFieldUpdateOperationsInput | number
  }

  export type sy_mngrUncheckedUpdateInput = {
    mngr_no?: IntFieldUpdateOperationsInput | number
    mngr_id?: StringFieldUpdateOperationsInput | string
    mngr_pswd?: StringFieldUpdateOperationsInput | string
    mngr_nm?: StringFieldUpdateOperationsInput | string
    mngr_sctn_cd?: StringFieldUpdateOperationsInput | string
    mngr_stts_cd?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    mbph_no?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    clco_no?: NullableIntFieldUpdateOperationsInput | number | null
    clco_dept_cd?: NullableStringFieldUpdateOperationsInput | string | null
    use_bgng_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    use_end_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    salt_val?: NullableStringFieldUpdateOperationsInput | string | null
    cnsr_sctn_cd?: NullableStringFieldUpdateOperationsInput | string | null
    fail_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    auth_suces_tf?: NullableStringFieldUpdateOperationsInput | string | null
    auth_key?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token?: NullableStringFieldUpdateOperationsInput | string | null
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: IntFieldUpdateOperationsInput | number
  }

  export type sy_mngrCreateManyInput = {
    mngr_no?: number
    mngr_id: string
    mngr_pswd: string
    mngr_nm: string
    mngr_sctn_cd: string
    mngr_stts_cd?: string | null
    email: string
    mbph_no: string
    use_tf: string
    clco_no?: number | null
    clco_dept_cd?: string | null
    use_bgng_ymd?: Date | string | null
    use_end_ymd?: Date | string | null
    salt_val?: string | null
    cnsr_sctn_cd?: string | null
    fail_cnt?: number | null
    auth_suces_tf?: string | null
    auth_key?: string | null
    auth_token?: string | null
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
    regr_no: number
  }

  export type sy_mngrUpdateManyMutationInput = {
    mngr_id?: StringFieldUpdateOperationsInput | string
    mngr_pswd?: StringFieldUpdateOperationsInput | string
    mngr_nm?: StringFieldUpdateOperationsInput | string
    mngr_sctn_cd?: StringFieldUpdateOperationsInput | string
    mngr_stts_cd?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    mbph_no?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    clco_no?: NullableIntFieldUpdateOperationsInput | number | null
    clco_dept_cd?: NullableStringFieldUpdateOperationsInput | string | null
    use_bgng_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    use_end_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    salt_val?: NullableStringFieldUpdateOperationsInput | string | null
    cnsr_sctn_cd?: NullableStringFieldUpdateOperationsInput | string | null
    fail_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    auth_suces_tf?: NullableStringFieldUpdateOperationsInput | string | null
    auth_key?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token?: NullableStringFieldUpdateOperationsInput | string | null
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: IntFieldUpdateOperationsInput | number
  }

  export type sy_mngrUncheckedUpdateManyInput = {
    mngr_no?: IntFieldUpdateOperationsInput | number
    mngr_id?: StringFieldUpdateOperationsInput | string
    mngr_pswd?: StringFieldUpdateOperationsInput | string
    mngr_nm?: StringFieldUpdateOperationsInput | string
    mngr_sctn_cd?: StringFieldUpdateOperationsInput | string
    mngr_stts_cd?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    mbph_no?: StringFieldUpdateOperationsInput | string
    use_tf?: StringFieldUpdateOperationsInput | string
    clco_no?: NullableIntFieldUpdateOperationsInput | number | null
    clco_dept_cd?: NullableStringFieldUpdateOperationsInput | string | null
    use_bgng_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    use_end_ymd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    salt_val?: NullableStringFieldUpdateOperationsInput | string | null
    cnsr_sctn_cd?: NullableStringFieldUpdateOperationsInput | string | null
    fail_cnt?: NullableIntFieldUpdateOperationsInput | number | null
    auth_suces_tf?: NullableStringFieldUpdateOperationsInput | string | null
    auth_key?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token?: NullableStringFieldUpdateOperationsInput | string | null
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: IntFieldUpdateOperationsInput | number
  }

  export type sy_mngr_auth_grpCreateInput = {
    mngr_no: number
    auth_grp_no: number
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_mngr_auth_grpUncheckedCreateInput = {
    mngr_no: number
    auth_grp_no: number
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_mngr_auth_grpUpdateInput = {
    mngr_no?: IntFieldUpdateOperationsInput | number
    auth_grp_no?: IntFieldUpdateOperationsInput | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngr_auth_grpUncheckedUpdateInput = {
    mngr_no?: IntFieldUpdateOperationsInput | number
    auth_grp_no?: IntFieldUpdateOperationsInput | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngr_auth_grpCreateManyInput = {
    mngr_no: number
    auth_grp_no: number
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_mngr_auth_grpUpdateManyMutationInput = {
    mngr_no?: IntFieldUpdateOperationsInput | number
    auth_grp_no?: IntFieldUpdateOperationsInput | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngr_auth_grpUncheckedUpdateManyInput = {
    mngr_no?: IntFieldUpdateOperationsInput | number
    auth_grp_no?: IntFieldUpdateOperationsInput | number
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngr_auth_grp_histCreateInput = {
    hist_no?: bigint | number
    mngr_no: number
    auth_grp_no: number
    type: string
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
    regr_no: number
  }

  export type sy_mngr_auth_grp_histUncheckedCreateInput = {
    hist_no?: bigint | number
    mngr_no: number
    auth_grp_no: number
    type: string
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
    regr_no: number
  }

  export type sy_mngr_auth_grp_histUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    auth_grp_no?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: IntFieldUpdateOperationsInput | number
  }

  export type sy_mngr_auth_grp_histUncheckedUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    auth_grp_no?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: IntFieldUpdateOperationsInput | number
  }

  export type sy_mngr_auth_grp_histCreateManyInput = {
    hist_no?: bigint | number
    mngr_no: number
    auth_grp_no: number
    type: string
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
    regr_no: number
  }

  export type sy_mngr_auth_grp_histUpdateManyMutationInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    auth_grp_no?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: IntFieldUpdateOperationsInput | number
  }

  export type sy_mngr_auth_grp_histUncheckedUpdateManyInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    auth_grp_no?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    regr_no?: IntFieldUpdateOperationsInput | number
  }

  export type sy_mngr_lgn_histCreateInput = {
    hist_no?: bigint | number
    mngr_no: number
    lgn_dt: Date | string
    lgn_ip_addr: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_mngr_lgn_histUncheckedCreateInput = {
    hist_no?: bigint | number
    mngr_no: number
    lgn_dt: Date | string
    lgn_ip_addr: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_mngr_lgn_histUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    lgn_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    lgn_ip_addr?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngr_lgn_histUncheckedUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    lgn_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    lgn_ip_addr?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngr_lgn_histCreateManyInput = {
    hist_no?: bigint | number
    mngr_no: number
    lgn_dt: Date | string
    lgn_ip_addr: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_mngr_lgn_histUpdateManyMutationInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    lgn_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    lgn_ip_addr?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngr_lgn_histUncheckedUpdateManyInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    lgn_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    lgn_ip_addr?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngr_pwd_histCreateInput = {
    hist_no?: bigint | number
    mngr_no: number
    modr_tp_cd: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_mngr_pwd_histUncheckedCreateInput = {
    hist_no?: bigint | number
    mngr_no: number
    modr_tp_cd: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_mngr_pwd_histUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    modr_tp_cd?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngr_pwd_histUncheckedUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    modr_tp_cd?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngr_pwd_histCreateManyInput = {
    hist_no?: bigint | number
    mngr_no: number
    modr_tp_cd: string
    regr_no: number
    reg_dt: Date | string
    modr_no: number
    mod_dt: Date | string
  }

  export type sy_mngr_pwd_histUpdateManyMutationInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    modr_tp_cd?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngr_pwd_histUncheckedUpdateManyInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    modr_tp_cd?: StringFieldUpdateOperationsInput | string
    regr_no?: IntFieldUpdateOperationsInput | number
    reg_dt?: DateTimeFieldUpdateOperationsInput | Date | string
    modr_no?: IntFieldUpdateOperationsInput | number
    mod_dt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sy_mngr_req_histCreateInput = {
    hist_no?: bigint | number
    mngr_no: number
    mngr_nm: string
    auth_grp_nm: string
    ip_addr: string
    req_uri: string
    req_method?: string | null
    req_body?: string | null
    reg_dt?: Date | string | null
    regr_no?: number | null
    mod_dt?: Date | string | null
    modr_no?: number | null
  }

  export type sy_mngr_req_histUncheckedCreateInput = {
    hist_no?: bigint | number
    mngr_no: number
    mngr_nm: string
    auth_grp_nm: string
    ip_addr: string
    req_uri: string
    req_method?: string | null
    req_body?: string | null
    reg_dt?: Date | string | null
    regr_no?: number | null
    mod_dt?: Date | string | null
    modr_no?: number | null
  }

  export type sy_mngr_req_histUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    mngr_nm?: StringFieldUpdateOperationsInput | string
    auth_grp_nm?: StringFieldUpdateOperationsInput | string
    ip_addr?: StringFieldUpdateOperationsInput | string
    req_uri?: StringFieldUpdateOperationsInput | string
    req_method?: NullableStringFieldUpdateOperationsInput | string | null
    req_body?: NullableStringFieldUpdateOperationsInput | string | null
    reg_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    regr_no?: NullableIntFieldUpdateOperationsInput | number | null
    mod_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modr_no?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sy_mngr_req_histUncheckedUpdateInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    mngr_nm?: StringFieldUpdateOperationsInput | string
    auth_grp_nm?: StringFieldUpdateOperationsInput | string
    ip_addr?: StringFieldUpdateOperationsInput | string
    req_uri?: StringFieldUpdateOperationsInput | string
    req_method?: NullableStringFieldUpdateOperationsInput | string | null
    req_body?: NullableStringFieldUpdateOperationsInput | string | null
    reg_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    regr_no?: NullableIntFieldUpdateOperationsInput | number | null
    mod_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modr_no?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sy_mngr_req_histCreateManyInput = {
    hist_no?: bigint | number
    mngr_no: number
    mngr_nm: string
    auth_grp_nm: string
    ip_addr: string
    req_uri: string
    req_method?: string | null
    req_body?: string | null
    reg_dt?: Date | string | null
    regr_no?: number | null
    mod_dt?: Date | string | null
    modr_no?: number | null
  }

  export type sy_mngr_req_histUpdateManyMutationInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    mngr_nm?: StringFieldUpdateOperationsInput | string
    auth_grp_nm?: StringFieldUpdateOperationsInput | string
    ip_addr?: StringFieldUpdateOperationsInput | string
    req_uri?: StringFieldUpdateOperationsInput | string
    req_method?: NullableStringFieldUpdateOperationsInput | string | null
    req_body?: NullableStringFieldUpdateOperationsInput | string | null
    reg_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    regr_no?: NullableIntFieldUpdateOperationsInput | number | null
    mod_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modr_no?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sy_mngr_req_histUncheckedUpdateManyInput = {
    hist_no?: BigIntFieldUpdateOperationsInput | bigint | number
    mngr_no?: IntFieldUpdateOperationsInput | number
    mngr_nm?: StringFieldUpdateOperationsInput | string
    auth_grp_nm?: StringFieldUpdateOperationsInput | string
    ip_addr?: StringFieldUpdateOperationsInput | string
    req_uri?: StringFieldUpdateOperationsInput | string
    req_method?: NullableStringFieldUpdateOperationsInput | string | null
    req_body?: NullableStringFieldUpdateOperationsInput | string | null
    reg_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    regr_no?: NullableIntFieldUpdateOperationsInput | number | null
    mod_dt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modr_no?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type test_userCreateInput = {
    id: string
    pw: string
    salt_val?: string | null
    auth_token?: string | null
    kakao_user_token?: string | null
    comp_code?: string | null
    name?: string | null
    gender?: $Enums.test_user_gender | null
    birth_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type test_userUncheckedCreateInput = {
    user_no?: number
    id: string
    pw: string
    salt_val?: string | null
    auth_token?: string | null
    kakao_user_token?: string | null
    comp_code?: string | null
    name?: string | null
    gender?: $Enums.test_user_gender | null
    birth_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type test_userUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    pw?: StringFieldUpdateOperationsInput | string
    salt_val?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token?: NullableStringFieldUpdateOperationsInput | string | null
    kakao_user_token?: NullableStringFieldUpdateOperationsInput | string | null
    comp_code?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableEnumtest_user_genderFieldUpdateOperationsInput | $Enums.test_user_gender | null
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type test_userUncheckedUpdateInput = {
    user_no?: IntFieldUpdateOperationsInput | number
    id?: StringFieldUpdateOperationsInput | string
    pw?: StringFieldUpdateOperationsInput | string
    salt_val?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token?: NullableStringFieldUpdateOperationsInput | string | null
    kakao_user_token?: NullableStringFieldUpdateOperationsInput | string | null
    comp_code?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableEnumtest_user_genderFieldUpdateOperationsInput | $Enums.test_user_gender | null
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type test_userCreateManyInput = {
    user_no?: number
    id: string
    pw: string
    salt_val?: string | null
    auth_token?: string | null
    kakao_user_token?: string | null
    comp_code?: string | null
    name?: string | null
    gender?: $Enums.test_user_gender | null
    birth_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type test_userUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    pw?: StringFieldUpdateOperationsInput | string
    salt_val?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token?: NullableStringFieldUpdateOperationsInput | string | null
    kakao_user_token?: NullableStringFieldUpdateOperationsInput | string | null
    comp_code?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableEnumtest_user_genderFieldUpdateOperationsInput | $Enums.test_user_gender | null
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type test_userUncheckedUpdateManyInput = {
    user_no?: IntFieldUpdateOperationsInput | number
    id?: StringFieldUpdateOperationsInput | string
    pw?: StringFieldUpdateOperationsInput | string
    salt_val?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token?: NullableStringFieldUpdateOperationsInput | string | null
    kakao_user_token?: NullableStringFieldUpdateOperationsInput | string | null
    comp_code?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableEnumtest_user_genderFieldUpdateOperationsInput | $Enums.test_user_gender | null
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type aim_example_testOrderByRelevanceInput = {
    fields: aim_example_testOrderByRelevanceFieldEnum | aim_example_testOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type aim_example_testCountOrderByAggregateInput = {
    no?: SortOrder
    col1?: SortOrder
    col2?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type aim_example_testAvgOrderByAggregateInput = {
    no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type aim_example_testMaxOrderByAggregateInput = {
    no?: SortOrder
    col1?: SortOrder
    col2?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type aim_example_testMinOrderByAggregateInput = {
    no?: SortOrder
    col1?: SortOrder
    col2?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type aim_example_testSumOrderByAggregateInput = {
    no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type sc_mbrOrderByRelevanceInput = {
    fields: sc_mbrOrderByRelevanceFieldEnum | sc_mbrOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sc_mbrCountOrderByAggregateInput = {
    mbr_no?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    emp_no?: SortOrder
    mbr_id?: SortOrder
    mbr_pswd?: SortOrder
    mbr_nm?: SortOrder
    brdt?: SortOrder
    gen_cd?: SortOrder
    mbph_no?: SortOrder
    email_addr?: SortOrder
    fail_pswd_cnt?: SortOrder
    join_dt?: SortOrder
    rcnt_cntn_dt?: SortOrder
    drmc_cnvs_dt?: SortOrder
    chge_pswd_dt?: SortOrder
    mbr_stts_cd?: SortOrder
    tmnl_tkn_val?: SortOrder
    tmnl_os_nm?: SortOrder
    tmnl_app_ver_nm?: SortOrder
    last_tmnl_sync_dt?: SortOrder
    aos_permission?: SortOrder
    push_status?: SortOrder
    mbr_photo_file_mng_no?: SortOrder
    app_prgrs_stag_val?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    out_tp_cd?: SortOrder
    out_tp_ttl?: SortOrder
    out_join_dt?: SortOrder
    mbr_sctn_cd?: SortOrder
  }

  export type sc_mbrAvgOrderByAggregateInput = {
    mbr_no?: SortOrder
    clco_no?: SortOrder
    fail_pswd_cnt?: SortOrder
    aos_permission?: SortOrder
    push_status?: SortOrder
    mbr_photo_file_mng_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sc_mbrMaxOrderByAggregateInput = {
    mbr_no?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    emp_no?: SortOrder
    mbr_id?: SortOrder
    mbr_pswd?: SortOrder
    mbr_nm?: SortOrder
    brdt?: SortOrder
    gen_cd?: SortOrder
    mbph_no?: SortOrder
    email_addr?: SortOrder
    fail_pswd_cnt?: SortOrder
    join_dt?: SortOrder
    rcnt_cntn_dt?: SortOrder
    drmc_cnvs_dt?: SortOrder
    chge_pswd_dt?: SortOrder
    mbr_stts_cd?: SortOrder
    tmnl_tkn_val?: SortOrder
    tmnl_os_nm?: SortOrder
    tmnl_app_ver_nm?: SortOrder
    last_tmnl_sync_dt?: SortOrder
    aos_permission?: SortOrder
    push_status?: SortOrder
    mbr_photo_file_mng_no?: SortOrder
    app_prgrs_stag_val?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    out_tp_cd?: SortOrder
    out_tp_ttl?: SortOrder
    out_join_dt?: SortOrder
    mbr_sctn_cd?: SortOrder
  }

  export type sc_mbrMinOrderByAggregateInput = {
    mbr_no?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    emp_no?: SortOrder
    mbr_id?: SortOrder
    mbr_pswd?: SortOrder
    mbr_nm?: SortOrder
    brdt?: SortOrder
    gen_cd?: SortOrder
    mbph_no?: SortOrder
    email_addr?: SortOrder
    fail_pswd_cnt?: SortOrder
    join_dt?: SortOrder
    rcnt_cntn_dt?: SortOrder
    drmc_cnvs_dt?: SortOrder
    chge_pswd_dt?: SortOrder
    mbr_stts_cd?: SortOrder
    tmnl_tkn_val?: SortOrder
    tmnl_os_nm?: SortOrder
    tmnl_app_ver_nm?: SortOrder
    last_tmnl_sync_dt?: SortOrder
    aos_permission?: SortOrder
    push_status?: SortOrder
    mbr_photo_file_mng_no?: SortOrder
    app_prgrs_stag_val?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    out_tp_cd?: SortOrder
    out_tp_ttl?: SortOrder
    out_join_dt?: SortOrder
    mbr_sctn_cd?: SortOrder
  }

  export type sc_mbrSumOrderByAggregateInput = {
    mbr_no?: SortOrder
    clco_no?: SortOrder
    fail_pswd_cnt?: SortOrder
    aos_permission?: SortOrder
    push_status?: SortOrder
    mbr_photo_file_mng_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type sc_mbr_lgn_histCountOrderByAggregateInput = {
    hist_no?: SortOrder
    mbr_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_lgn_histAvgOrderByAggregateInput = {
    hist_no?: SortOrder
    mbr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sc_mbr_lgn_histMaxOrderByAggregateInput = {
    hist_no?: SortOrder
    mbr_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_lgn_histMinOrderByAggregateInput = {
    hist_no?: SortOrder
    mbr_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_lgn_histSumOrderByAggregateInput = {
    hist_no?: SortOrder
    mbr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sc_mbr_logOrderByRelevanceInput = {
    fields: sc_mbr_logOrderByRelevanceFieldEnum | sc_mbr_logOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sc_mbr_logCountOrderByAggregateInput = {
    log_no?: SortOrder
    log_cd?: SortOrder
    mbr_no?: SortOrder
    uri?: SortOrder
    origin?: SortOrder
    desc?: SortOrder
    reg_dt?: SortOrder
  }

  export type sc_mbr_logAvgOrderByAggregateInput = {
    log_no?: SortOrder
    mbr_no?: SortOrder
  }

  export type sc_mbr_logMaxOrderByAggregateInput = {
    log_no?: SortOrder
    log_cd?: SortOrder
    mbr_no?: SortOrder
    uri?: SortOrder
    origin?: SortOrder
    desc?: SortOrder
    reg_dt?: SortOrder
  }

  export type sc_mbr_logMinOrderByAggregateInput = {
    log_no?: SortOrder
    log_cd?: SortOrder
    mbr_no?: SortOrder
    uri?: SortOrder
    origin?: SortOrder
    desc?: SortOrder
    reg_dt?: SortOrder
  }

  export type sc_mbr_logSumOrderByAggregateInput = {
    log_no?: SortOrder
    mbr_no?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type sc_mbr_prjtOrderByRelevanceInput = {
    fields: sc_mbr_prjtOrderByRelevanceFieldEnum | sc_mbr_prjtOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sc_mbr_prjtMbr_noPrjt_noCompoundUniqueInput = {
    mbr_no: bigint | number
    prjt_no: bigint | number
  }

  export type sc_mbr_prjtCountOrderByAggregateInput = {
    mbr_no?: SortOrder
    prjt_no?: SortOrder
    prtpnt_sctn_cd?: SortOrder
    prgrs_stop_tf?: SortOrder
    prgrs_stop_dt?: SortOrder
    prgrs_stop_caus_desc?: SortOrder
    ptcp_bgng_ymd?: SortOrder
    ptcp_end_ymd?: SortOrder
    frst_bmi_val?: SortOrder
    end_bmi_val?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_prjtAvgOrderByAggregateInput = {
    mbr_no?: SortOrder
    prjt_no?: SortOrder
    frst_bmi_val?: SortOrder
    end_bmi_val?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sc_mbr_prjtMaxOrderByAggregateInput = {
    mbr_no?: SortOrder
    prjt_no?: SortOrder
    prtpnt_sctn_cd?: SortOrder
    prgrs_stop_tf?: SortOrder
    prgrs_stop_dt?: SortOrder
    prgrs_stop_caus_desc?: SortOrder
    ptcp_bgng_ymd?: SortOrder
    ptcp_end_ymd?: SortOrder
    frst_bmi_val?: SortOrder
    end_bmi_val?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_prjtMinOrderByAggregateInput = {
    mbr_no?: SortOrder
    prjt_no?: SortOrder
    prtpnt_sctn_cd?: SortOrder
    prgrs_stop_tf?: SortOrder
    prgrs_stop_dt?: SortOrder
    prgrs_stop_caus_desc?: SortOrder
    ptcp_bgng_ymd?: SortOrder
    ptcp_end_ymd?: SortOrder
    frst_bmi_val?: SortOrder
    end_bmi_val?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_prjtSumOrderByAggregateInput = {
    mbr_no?: SortOrder
    prjt_no?: SortOrder
    frst_bmi_val?: SortOrder
    end_bmi_val?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type sc_mbr_trms_agr_histMbr_noTrms_noCompoundUniqueInput = {
    mbr_no: bigint | number
    trms_no: bigint | number
  }

  export type sc_mbr_trms_agr_histCountOrderByAggregateInput = {
    mbr_no?: SortOrder
    trms_no?: SortOrder
    agr_dt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_trms_agr_histAvgOrderByAggregateInput = {
    mbr_no?: SortOrder
    trms_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sc_mbr_trms_agr_histMaxOrderByAggregateInput = {
    mbr_no?: SortOrder
    trms_no?: SortOrder
    agr_dt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_trms_agr_histMinOrderByAggregateInput = {
    mbr_no?: SortOrder
    trms_no?: SortOrder
    agr_dt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_trms_agr_histSumOrderByAggregateInput = {
    mbr_no?: SortOrder
    trms_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sc_mbr_trms_agr_scr_histOrderByRelevanceInput = {
    fields: sc_mbr_trms_agr_scr_histOrderByRelevanceFieldEnum | sc_mbr_trms_agr_scr_histOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sc_mbr_trms_agr_scr_histCountOrderByAggregateInput = {
    agr_no?: SortOrder
    clco_no?: SortOrder
    emp_no?: SortOrder
    trms_no?: SortOrder
    agr_dt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_trms_agr_scr_histAvgOrderByAggregateInput = {
    agr_no?: SortOrder
    clco_no?: SortOrder
    trms_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sc_mbr_trms_agr_scr_histMaxOrderByAggregateInput = {
    agr_no?: SortOrder
    clco_no?: SortOrder
    emp_no?: SortOrder
    trms_no?: SortOrder
    agr_dt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_trms_agr_scr_histMinOrderByAggregateInput = {
    agr_no?: SortOrder
    clco_no?: SortOrder
    emp_no?: SortOrder
    trms_no?: SortOrder
    agr_dt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_mbr_trms_agr_scr_histSumOrderByAggregateInput = {
    agr_no?: SortOrder
    clco_no?: SortOrder
    trms_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sc_prjtOrderByRelevanceInput = {
    fields: sc_prjtOrderByRelevanceFieldEnum | sc_prjtOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sc_prjtCountOrderByAggregateInput = {
    prjt_no?: SortOrder
    clco_no?: SortOrder
    prjt_nm?: SortOrder
    prjt_stts_cd?: SortOrder
    prtc_aply_stng_tf?: SortOrder
    prtc_aply_bgng_dt?: SortOrder
    prtc_aply_end_dt?: SortOrder
    rsvt_stng_tf?: SortOrder
    prjt_bgng_dt?: SortOrder
    prjt_end_dt?: SortOrder
    main_logo_file_mng_no?: SortOrder
    bgng_mebi_no?: SortOrder
    cmps_prgm_cnt?: SortOrder
    gnrl_prtpnt_cnt?: SortOrder
    mng_prtpnt_cnt?: SortOrder
    gnrl_fnsr_cnt?: SortOrder
    mng_fnsr_cnt?: SortOrder
    main_clr_val?: SortOrder
    sub_clr_val?: SortOrder
    add_clr_val?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_prjtAvgOrderByAggregateInput = {
    prjt_no?: SortOrder
    clco_no?: SortOrder
    main_logo_file_mng_no?: SortOrder
    bgng_mebi_no?: SortOrder
    cmps_prgm_cnt?: SortOrder
    gnrl_prtpnt_cnt?: SortOrder
    mng_prtpnt_cnt?: SortOrder
    gnrl_fnsr_cnt?: SortOrder
    mng_fnsr_cnt?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sc_prjtMaxOrderByAggregateInput = {
    prjt_no?: SortOrder
    clco_no?: SortOrder
    prjt_nm?: SortOrder
    prjt_stts_cd?: SortOrder
    prtc_aply_stng_tf?: SortOrder
    prtc_aply_bgng_dt?: SortOrder
    prtc_aply_end_dt?: SortOrder
    rsvt_stng_tf?: SortOrder
    prjt_bgng_dt?: SortOrder
    prjt_end_dt?: SortOrder
    main_logo_file_mng_no?: SortOrder
    bgng_mebi_no?: SortOrder
    cmps_prgm_cnt?: SortOrder
    gnrl_prtpnt_cnt?: SortOrder
    mng_prtpnt_cnt?: SortOrder
    gnrl_fnsr_cnt?: SortOrder
    mng_fnsr_cnt?: SortOrder
    main_clr_val?: SortOrder
    sub_clr_val?: SortOrder
    add_clr_val?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_prjtMinOrderByAggregateInput = {
    prjt_no?: SortOrder
    clco_no?: SortOrder
    prjt_nm?: SortOrder
    prjt_stts_cd?: SortOrder
    prtc_aply_stng_tf?: SortOrder
    prtc_aply_bgng_dt?: SortOrder
    prtc_aply_end_dt?: SortOrder
    rsvt_stng_tf?: SortOrder
    prjt_bgng_dt?: SortOrder
    prjt_end_dt?: SortOrder
    main_logo_file_mng_no?: SortOrder
    bgng_mebi_no?: SortOrder
    cmps_prgm_cnt?: SortOrder
    gnrl_prtpnt_cnt?: SortOrder
    mng_prtpnt_cnt?: SortOrder
    gnrl_fnsr_cnt?: SortOrder
    mng_fnsr_cnt?: SortOrder
    main_clr_val?: SortOrder
    sub_clr_val?: SortOrder
    add_clr_val?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_prjtSumOrderByAggregateInput = {
    prjt_no?: SortOrder
    clco_no?: SortOrder
    main_logo_file_mng_no?: SortOrder
    bgng_mebi_no?: SortOrder
    cmps_prgm_cnt?: SortOrder
    gnrl_prtpnt_cnt?: SortOrder
    mng_prtpnt_cnt?: SortOrder
    gnrl_fnsr_cnt?: SortOrder
    mng_fnsr_cnt?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sc_token_histOrderByRelevanceInput = {
    fields: sc_token_histOrderByRelevanceFieldEnum | sc_token_histOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sc_token_histCountOrderByAggregateInput = {
    token_num?: SortOrder
    access_token?: SortOrder
    expiration_time?: SortOrder
    reg_dt?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_token_histAvgOrderByAggregateInput = {
    token_num?: SortOrder
  }

  export type sc_token_histMaxOrderByAggregateInput = {
    token_num?: SortOrder
    access_token?: SortOrder
    expiration_time?: SortOrder
    reg_dt?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_token_histMinOrderByAggregateInput = {
    token_num?: SortOrder
    access_token?: SortOrder
    expiration_time?: SortOrder
    reg_dt?: SortOrder
    mod_dt?: SortOrder
  }

  export type sc_token_histSumOrderByAggregateInput = {
    token_num?: SortOrder
  }

  export type sv_faqOrderByRelevanceInput = {
    fields: sv_faqOrderByRelevanceFieldEnum | sv_faqOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_faqCountOrderByAggregateInput = {
    faq_no?: SortOrder
    clco_no?: SortOrder
    progm_no?: SortOrder
    faq_cate_cd?: SortOrder
    expsr_div?: SortOrder
    expsr_tf?: SortOrder
    uprw_fix_tf?: SortOrder
    faq_ttl?: SortOrder
    faq_cont?: SortOrder
    srch_weight?: SortOrder
    mngr_memo?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faqAvgOrderByAggregateInput = {
    faq_no?: SortOrder
    clco_no?: SortOrder
    progm_no?: SortOrder
    srch_weight?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_faqMaxOrderByAggregateInput = {
    faq_no?: SortOrder
    clco_no?: SortOrder
    progm_no?: SortOrder
    faq_cate_cd?: SortOrder
    expsr_div?: SortOrder
    expsr_tf?: SortOrder
    uprw_fix_tf?: SortOrder
    faq_ttl?: SortOrder
    faq_cont?: SortOrder
    srch_weight?: SortOrder
    mngr_memo?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faqMinOrderByAggregateInput = {
    faq_no?: SortOrder
    clco_no?: SortOrder
    progm_no?: SortOrder
    faq_cate_cd?: SortOrder
    expsr_div?: SortOrder
    expsr_tf?: SortOrder
    uprw_fix_tf?: SortOrder
    faq_ttl?: SortOrder
    faq_cont?: SortOrder
    srch_weight?: SortOrder
    mngr_memo?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faqSumOrderByAggregateInput = {
    faq_no?: SortOrder
    clco_no?: SortOrder
    progm_no?: SortOrder
    srch_weight?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_faq_atch_fileCountOrderByAggregateInput = {
    faq_file_no?: SortOrder
    faq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_atch_fileAvgOrderByAggregateInput = {
    faq_file_no?: SortOrder
    faq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_faq_atch_fileMaxOrderByAggregateInput = {
    faq_file_no?: SortOrder
    faq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_atch_fileMinOrderByAggregateInput = {
    faq_file_no?: SortOrder
    faq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_atch_fileSumOrderByAggregateInput = {
    faq_file_no?: SortOrder
    faq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_faq_cate_cdOrderByRelevanceInput = {
    fields: sv_faq_cate_cdOrderByRelevanceFieldEnum | sv_faq_cate_cdOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_faq_cate_cdProgm_noCdCompoundUniqueInput = {
    progm_no: number
    cd: string
  }

  export type sv_faq_cate_cdCountOrderByAggregateInput = {
    progm_no?: SortOrder
    cd?: SortOrder
    cd_nm?: SortOrder
    cd_desc?: SortOrder
    grp_cd?: SortOrder
    clco_no?: SortOrder
    sort_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_cate_cdAvgOrderByAggregateInput = {
    progm_no?: SortOrder
    clco_no?: SortOrder
    sort_seq?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_faq_cate_cdMaxOrderByAggregateInput = {
    progm_no?: SortOrder
    cd?: SortOrder
    cd_nm?: SortOrder
    cd_desc?: SortOrder
    grp_cd?: SortOrder
    clco_no?: SortOrder
    sort_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_cate_cdMinOrderByAggregateInput = {
    progm_no?: SortOrder
    cd?: SortOrder
    cd_nm?: SortOrder
    cd_desc?: SortOrder
    grp_cd?: SortOrder
    clco_no?: SortOrder
    sort_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_cate_cdSumOrderByAggregateInput = {
    progm_no?: SortOrder
    clco_no?: SortOrder
    sort_seq?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_faq_keywordOrderByRelevanceInput = {
    fields: sv_faq_keywordOrderByRelevanceFieldEnum | sv_faq_keywordOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_faq_keywordFaq_noKeywordCompoundUniqueInput = {
    faq_no: number
    keyword: string
  }

  export type sv_faq_keywordCountOrderByAggregateInput = {
    faq_no?: SortOrder
    keyword?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_keywordAvgOrderByAggregateInput = {
    faq_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_faq_keywordMaxOrderByAggregateInput = {
    faq_no?: SortOrder
    keyword?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_keywordMinOrderByAggregateInput = {
    faq_no?: SortOrder
    keyword?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_keywordSumOrderByAggregateInput = {
    faq_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_faq_rel_faqFaq_noRel_faq_noCompoundUniqueInput = {
    faq_no: number
    rel_faq_no: number
  }

  export type sv_faq_rel_faqCountOrderByAggregateInput = {
    faq_no?: SortOrder
    rel_faq_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_rel_faqAvgOrderByAggregateInput = {
    faq_no?: SortOrder
    rel_faq_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_faq_rel_faqMaxOrderByAggregateInput = {
    faq_no?: SortOrder
    rel_faq_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_rel_faqMinOrderByAggregateInput = {
    faq_no?: SortOrder
    rel_faq_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_faq_rel_faqSumOrderByAggregateInput = {
    faq_no?: SortOrder
    rel_faq_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_inqOrderByRelevanceInput = {
    fields: sv_inqOrderByRelevanceFieldEnum | sv_inqOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_inqCountOrderByAggregateInput = {
    inq_no?: SortOrder
    inq_mbr_no?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    inq_clsf_no?: SortOrder
    inq_ttl?: SortOrder
    inq_cont?: SortOrder
    rls_tf?: SortOrder
    ans_stts_cd?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inqAvgOrderByAggregateInput = {
    inq_no?: SortOrder
    inq_mbr_no?: SortOrder
    clco_no?: SortOrder
    inq_clsf_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_inqMaxOrderByAggregateInput = {
    inq_no?: SortOrder
    inq_mbr_no?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    inq_clsf_no?: SortOrder
    inq_ttl?: SortOrder
    inq_cont?: SortOrder
    rls_tf?: SortOrder
    ans_stts_cd?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inqMinOrderByAggregateInput = {
    inq_no?: SortOrder
    inq_mbr_no?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    inq_clsf_no?: SortOrder
    inq_ttl?: SortOrder
    inq_cont?: SortOrder
    rls_tf?: SortOrder
    ans_stts_cd?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inqSumOrderByAggregateInput = {
    inq_no?: SortOrder
    inq_mbr_no?: SortOrder
    clco_no?: SortOrder
    inq_clsf_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_inq_ansOrderByRelevanceInput = {
    fields: sv_inq_ansOrderByRelevanceFieldEnum | sv_inq_ansOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_inq_ansCountOrderByAggregateInput = {
    ans_no?: SortOrder
    inq_no?: SortOrder
    ans_mngr_no?: SortOrder
    ans_cont?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inq_ansAvgOrderByAggregateInput = {
    ans_no?: SortOrder
    inq_no?: SortOrder
    ans_mngr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_inq_ansMaxOrderByAggregateInput = {
    ans_no?: SortOrder
    inq_no?: SortOrder
    ans_mngr_no?: SortOrder
    ans_cont?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inq_ansMinOrderByAggregateInput = {
    ans_no?: SortOrder
    inq_no?: SortOrder
    ans_mngr_no?: SortOrder
    ans_cont?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inq_ansSumOrderByAggregateInput = {
    ans_no?: SortOrder
    inq_no?: SortOrder
    ans_mngr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_inq_atch_fileCountOrderByAggregateInput = {
    atch_file_no?: SortOrder
    inq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inq_atch_fileAvgOrderByAggregateInput = {
    atch_file_no?: SortOrder
    inq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_inq_atch_fileMaxOrderByAggregateInput = {
    atch_file_no?: SortOrder
    inq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inq_atch_fileMinOrderByAggregateInput = {
    atch_file_no?: SortOrder
    inq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inq_atch_fileSumOrderByAggregateInput = {
    atch_file_no?: SortOrder
    inq_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_inq_clsfOrderByRelevanceInput = {
    fields: sv_inq_clsfOrderByRelevanceFieldEnum | sv_inq_clsfOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_inq_clsfCountOrderByAggregateInput = {
    inq_clsf_no?: SortOrder
    clco_no?: SortOrder
    inq_clsf_nm?: SortOrder
    expsr_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inq_clsfAvgOrderByAggregateInput = {
    inq_clsf_no?: SortOrder
    clco_no?: SortOrder
    expsr_seq?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_inq_clsfMaxOrderByAggregateInput = {
    inq_clsf_no?: SortOrder
    clco_no?: SortOrder
    inq_clsf_nm?: SortOrder
    expsr_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inq_clsfMinOrderByAggregateInput = {
    inq_clsf_no?: SortOrder
    clco_no?: SortOrder
    inq_clsf_nm?: SortOrder
    expsr_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_inq_clsfSumOrderByAggregateInput = {
    inq_clsf_no?: SortOrder
    clco_no?: SortOrder
    expsr_seq?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_ntcOrderByRelevanceInput = {
    fields: sv_ntcOrderByRelevanceFieldEnum | sv_ntcOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_ntcCountOrderByAggregateInput = {
    ntc_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    expsr_tf?: SortOrder
    uprw_fix_tf?: SortOrder
    ntc_ttl?: SortOrder
    expsr_end_dt_stng_tf?: SortOrder
    expsr_bgng_dt?: SortOrder
    expsr_end_dt?: SortOrder
    ntc_cont?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_ntcAvgOrderByAggregateInput = {
    ntc_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_ntcMaxOrderByAggregateInput = {
    ntc_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    expsr_tf?: SortOrder
    uprw_fix_tf?: SortOrder
    ntc_ttl?: SortOrder
    expsr_end_dt_stng_tf?: SortOrder
    expsr_bgng_dt?: SortOrder
    expsr_end_dt?: SortOrder
    ntc_cont?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_ntcMinOrderByAggregateInput = {
    ntc_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    expsr_tf?: SortOrder
    uprw_fix_tf?: SortOrder
    ntc_ttl?: SortOrder
    expsr_end_dt_stng_tf?: SortOrder
    expsr_bgng_dt?: SortOrder
    expsr_end_dt?: SortOrder
    ntc_cont?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_ntcSumOrderByAggregateInput = {
    ntc_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_ntc_atch_fileCountOrderByAggregateInput = {
    atch_file_no?: SortOrder
    ntc_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_ntc_atch_fileAvgOrderByAggregateInput = {
    atch_file_no?: SortOrder
    ntc_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_ntc_atch_fileMaxOrderByAggregateInput = {
    atch_file_no?: SortOrder
    ntc_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_ntc_atch_fileMinOrderByAggregateInput = {
    atch_file_no?: SortOrder
    ntc_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_ntc_atch_fileSumOrderByAggregateInput = {
    atch_file_no?: SortOrder
    ntc_no?: SortOrder
    atch_file_mng_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_popupOrderByRelevanceInput = {
    fields: sv_popupOrderByRelevanceFieldEnum | sv_popupOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_popupCountOrderByAggregateInput = {
    popup_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    ttl?: SortOrder
    expsr_tf?: SortOrder
    expsr_bgng_ymd?: SortOrder
    expsr_end_ymd?: SortOrder
    img_file_mng_no?: SortOrder
    cls_btn_use_tf?: SortOrder
    re_expsr_phbt_cd?: SortOrder
    btn_stng_cd?: SortOrder
    popup_tp_cd?: SortOrder
    dtl_url?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_popupAvgOrderByAggregateInput = {
    popup_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    img_file_mng_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_popupMaxOrderByAggregateInput = {
    popup_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    ttl?: SortOrder
    expsr_tf?: SortOrder
    expsr_bgng_ymd?: SortOrder
    expsr_end_ymd?: SortOrder
    img_file_mng_no?: SortOrder
    cls_btn_use_tf?: SortOrder
    re_expsr_phbt_cd?: SortOrder
    btn_stng_cd?: SortOrder
    popup_tp_cd?: SortOrder
    dtl_url?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_popupMinOrderByAggregateInput = {
    popup_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    ttl?: SortOrder
    expsr_tf?: SortOrder
    expsr_bgng_ymd?: SortOrder
    expsr_end_ymd?: SortOrder
    img_file_mng_no?: SortOrder
    cls_btn_use_tf?: SortOrder
    re_expsr_phbt_cd?: SortOrder
    btn_stng_cd?: SortOrder
    popup_tp_cd?: SortOrder
    dtl_url?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_popupSumOrderByAggregateInput = {
    popup_no?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    img_file_mng_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_progmOrderByRelevanceInput = {
    fields: sv_progmOrderByRelevanceFieldEnum | sv_progmOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_progmCountOrderByAggregateInput = {
    progm_no?: SortOrder
    clco_no?: SortOrder
    progm_nm?: SortOrder
    mngr_memo?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_progmAvgOrderByAggregateInput = {
    progm_no?: SortOrder
    clco_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_progmMaxOrderByAggregateInput = {
    progm_no?: SortOrder
    clco_no?: SortOrder
    progm_nm?: SortOrder
    mngr_memo?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_progmMinOrderByAggregateInput = {
    progm_no?: SortOrder
    clco_no?: SortOrder
    progm_nm?: SortOrder
    mngr_memo?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_progmSumOrderByAggregateInput = {
    progm_no?: SortOrder
    clco_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_sms_sndngOrderByRelevanceInput = {
    fields: sv_sms_sndngOrderByRelevanceFieldEnum | sv_sms_sndngOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_sms_sndngCountOrderByAggregateInput = {
    sms_sndng_no?: SortOrder
    sndng_trgt_cd?: SortOrder
    sms_ttl?: SortOrder
    sms_cont?: SortOrder
    atch_img_file_mng_no?: SortOrder
    sndng_tp_cd?: SortOrder
    rsvt_sndng_dt?: SortOrder
    sndng_stts_cd?: SortOrder
    ttlt_sndng_cnt?: SortOrder
    sndng_fail_cnt?: SortOrder
    rcptn_idnty_cnt?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    prgm_no?: SortOrder
    week?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_sms_sndngAvgOrderByAggregateInput = {
    sms_sndng_no?: SortOrder
    atch_img_file_mng_no?: SortOrder
    ttlt_sndng_cnt?: SortOrder
    sndng_fail_cnt?: SortOrder
    rcptn_idnty_cnt?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    prgm_no?: SortOrder
    week?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_sms_sndngMaxOrderByAggregateInput = {
    sms_sndng_no?: SortOrder
    sndng_trgt_cd?: SortOrder
    sms_ttl?: SortOrder
    sms_cont?: SortOrder
    atch_img_file_mng_no?: SortOrder
    sndng_tp_cd?: SortOrder
    rsvt_sndng_dt?: SortOrder
    sndng_stts_cd?: SortOrder
    ttlt_sndng_cnt?: SortOrder
    sndng_fail_cnt?: SortOrder
    rcptn_idnty_cnt?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    prgm_no?: SortOrder
    week?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_sms_sndngMinOrderByAggregateInput = {
    sms_sndng_no?: SortOrder
    sndng_trgt_cd?: SortOrder
    sms_ttl?: SortOrder
    sms_cont?: SortOrder
    atch_img_file_mng_no?: SortOrder
    sndng_tp_cd?: SortOrder
    rsvt_sndng_dt?: SortOrder
    sndng_stts_cd?: SortOrder
    ttlt_sndng_cnt?: SortOrder
    sndng_fail_cnt?: SortOrder
    rcptn_idnty_cnt?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    prgm_no?: SortOrder
    week?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_sms_sndngSumOrderByAggregateInput = {
    sms_sndng_no?: SortOrder
    atch_img_file_mng_no?: SortOrder
    ttlt_sndng_cnt?: SortOrder
    sndng_fail_cnt?: SortOrder
    rcptn_idnty_cnt?: SortOrder
    clco_no?: SortOrder
    prjt_no?: SortOrder
    prgm_no?: SortOrder
    week?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_sms_tmplOrderByRelevanceInput = {
    fields: sv_sms_tmplOrderByRelevanceFieldEnum | sv_sms_tmplOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_sms_tmplCountOrderByAggregateInput = {
    sms_tmpl_no?: SortOrder
    sms_tmpl_sctn_cd?: SortOrder
    sms_ttl?: SortOrder
    sms_cont?: SortOrder
    atch_img_file_mng_no?: SortOrder
    aim_trgt_tf?: SortOrder
    clco_trgt_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_sms_tmplAvgOrderByAggregateInput = {
    sms_tmpl_no?: SortOrder
    atch_img_file_mng_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_sms_tmplMaxOrderByAggregateInput = {
    sms_tmpl_no?: SortOrder
    sms_tmpl_sctn_cd?: SortOrder
    sms_ttl?: SortOrder
    sms_cont?: SortOrder
    atch_img_file_mng_no?: SortOrder
    aim_trgt_tf?: SortOrder
    clco_trgt_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_sms_tmplMinOrderByAggregateInput = {
    sms_tmpl_no?: SortOrder
    sms_tmpl_sctn_cd?: SortOrder
    sms_ttl?: SortOrder
    sms_cont?: SortOrder
    atch_img_file_mng_no?: SortOrder
    aim_trgt_tf?: SortOrder
    clco_trgt_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sv_sms_tmplSumOrderByAggregateInput = {
    sms_tmpl_no?: SortOrder
    atch_img_file_mng_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_trmsOrderByRelevanceInput = {
    fields: sv_trmsOrderByRelevanceFieldEnum | sv_trmsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_trmsCountOrderByAggregateInput = {
    trms_no?: SortOrder
    clco_no?: SortOrder
    trms_knd_cd?: SortOrder
    esntl_agr_tf?: SortOrder
    sort_seq?: SortOrder
    trms_cont?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    trms_ttl?: SortOrder
  }

  export type sv_trmsAvgOrderByAggregateInput = {
    trms_no?: SortOrder
    clco_no?: SortOrder
    sort_seq?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_trmsMaxOrderByAggregateInput = {
    trms_no?: SortOrder
    clco_no?: SortOrder
    trms_knd_cd?: SortOrder
    esntl_agr_tf?: SortOrder
    sort_seq?: SortOrder
    trms_cont?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    trms_ttl?: SortOrder
  }

  export type sv_trmsMinOrderByAggregateInput = {
    trms_no?: SortOrder
    clco_no?: SortOrder
    trms_knd_cd?: SortOrder
    esntl_agr_tf?: SortOrder
    sort_seq?: SortOrder
    trms_cont?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    trms_ttl?: SortOrder
  }

  export type sv_trmsSumOrderByAggregateInput = {
    trms_no?: SortOrder
    clco_no?: SortOrder
    sort_seq?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_trms_histOrderByRelevanceInput = {
    fields: sv_trms_histOrderByRelevanceFieldEnum | sv_trms_histOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sv_trms_histCountOrderByAggregateInput = {
    hist_no?: SortOrder
    trms_no?: SortOrder
    clco_no?: SortOrder
    trms_knd_cd?: SortOrder
    esntl_agr_tf?: SortOrder
    sort_seq?: SortOrder
    trms_cont?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    trms_ttl?: SortOrder
  }

  export type sv_trms_histAvgOrderByAggregateInput = {
    hist_no?: SortOrder
    trms_no?: SortOrder
    clco_no?: SortOrder
    sort_seq?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sv_trms_histMaxOrderByAggregateInput = {
    hist_no?: SortOrder
    trms_no?: SortOrder
    clco_no?: SortOrder
    trms_knd_cd?: SortOrder
    esntl_agr_tf?: SortOrder
    sort_seq?: SortOrder
    trms_cont?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    trms_ttl?: SortOrder
  }

  export type sv_trms_histMinOrderByAggregateInput = {
    hist_no?: SortOrder
    trms_no?: SortOrder
    clco_no?: SortOrder
    trms_knd_cd?: SortOrder
    esntl_agr_tf?: SortOrder
    sort_seq?: SortOrder
    trms_cont?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    trms_ttl?: SortOrder
  }

  export type sv_trms_histSumOrderByAggregateInput = {
    hist_no?: SortOrder
    trms_no?: SortOrder
    clco_no?: SortOrder
    sort_seq?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_atch_file_mngOrderByRelevanceInput = {
    fields: sy_atch_file_mngOrderByRelevanceFieldEnum | sy_atch_file_mngOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_atch_file_mngCountOrderByAggregateInput = {
    file_mng_no?: SortOrder
    file_path_nm?: SortOrder
    uld_file_nm?: SortOrder
    strg_file_nm?: SortOrder
    file_sz?: SortOrder
    extn_nm?: SortOrder
    mbr_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_atch_file_mngAvgOrderByAggregateInput = {
    file_mng_no?: SortOrder
    file_sz?: SortOrder
    mbr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_atch_file_mngMaxOrderByAggregateInput = {
    file_mng_no?: SortOrder
    file_path_nm?: SortOrder
    uld_file_nm?: SortOrder
    strg_file_nm?: SortOrder
    file_sz?: SortOrder
    extn_nm?: SortOrder
    mbr_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_atch_file_mngMinOrderByAggregateInput = {
    file_mng_no?: SortOrder
    file_path_nm?: SortOrder
    uld_file_nm?: SortOrder
    strg_file_nm?: SortOrder
    file_sz?: SortOrder
    extn_nm?: SortOrder
    mbr_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_atch_file_mngSumOrderByAggregateInput = {
    file_mng_no?: SortOrder
    file_sz?: SortOrder
    mbr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_authOrderByRelevanceInput = {
    fields: sy_authOrderByRelevanceFieldEnum | sy_authOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_authCountOrderByAggregateInput = {
    auth_no?: SortOrder
    auth_trgt_sctn_cd?: SortOrder
    auth_grnt_sctn_cd?: SortOrder
    scrn_no?: SortOrder
    menu_no?: SortOrder
    auth_yn?: SortOrder
    auth_grp_no?: SortOrder
    mngr_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_authAvgOrderByAggregateInput = {
    auth_no?: SortOrder
    scrn_no?: SortOrder
    menu_no?: SortOrder
    auth_grp_no?: SortOrder
    mngr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_authMaxOrderByAggregateInput = {
    auth_no?: SortOrder
    auth_trgt_sctn_cd?: SortOrder
    auth_grnt_sctn_cd?: SortOrder
    scrn_no?: SortOrder
    menu_no?: SortOrder
    auth_yn?: SortOrder
    auth_grp_no?: SortOrder
    mngr_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_authMinOrderByAggregateInput = {
    auth_no?: SortOrder
    auth_trgt_sctn_cd?: SortOrder
    auth_grnt_sctn_cd?: SortOrder
    scrn_no?: SortOrder
    menu_no?: SortOrder
    auth_yn?: SortOrder
    auth_grp_no?: SortOrder
    mngr_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_authSumOrderByAggregateInput = {
    auth_no?: SortOrder
    scrn_no?: SortOrder
    menu_no?: SortOrder
    auth_grp_no?: SortOrder
    mngr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_auth_grpOrderByRelevanceInput = {
    fields: sy_auth_grpOrderByRelevanceFieldEnum | sy_auth_grpOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_auth_grpCountOrderByAggregateInput = {
    auth_grp_no?: SortOrder
    auth_grp_nm?: SortOrder
    auth_grp_sctn_cd?: SortOrder
    auth_grp_desc?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_auth_grpAvgOrderByAggregateInput = {
    auth_grp_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_auth_grpMaxOrderByAggregateInput = {
    auth_grp_no?: SortOrder
    auth_grp_nm?: SortOrder
    auth_grp_sctn_cd?: SortOrder
    auth_grp_desc?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_auth_grpMinOrderByAggregateInput = {
    auth_grp_no?: SortOrder
    auth_grp_nm?: SortOrder
    auth_grp_sctn_cd?: SortOrder
    auth_grp_desc?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_auth_grpSumOrderByAggregateInput = {
    auth_grp_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_clcoOrderByRelevanceInput = {
    fields: sy_clcoOrderByRelevanceFieldEnum | sy_clcoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_clcoCountOrderByAggregateInput = {
    clco_no?: SortOrder
    clco_nm?: SortOrder
    clco_sctn_cd?: SortOrder
    use_url?: SortOrder
    hlth_rsrv_url?: SortOrder
    use_bgng_ymd?: SortOrder
    use_end_ymd?: SortOrder
    use_stts_cd?: SortOrder
    pic_nm?: SortOrder
    pic_dept_nm?: SortOrder
    pic_telno?: SortOrder
    b2b_type?: SortOrder
    comp_code?: SortOrder
    bot_code?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_clcoAvgOrderByAggregateInput = {
    clco_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_clcoMaxOrderByAggregateInput = {
    clco_no?: SortOrder
    clco_nm?: SortOrder
    clco_sctn_cd?: SortOrder
    use_url?: SortOrder
    hlth_rsrv_url?: SortOrder
    use_bgng_ymd?: SortOrder
    use_end_ymd?: SortOrder
    use_stts_cd?: SortOrder
    pic_nm?: SortOrder
    pic_dept_nm?: SortOrder
    pic_telno?: SortOrder
    b2b_type?: SortOrder
    comp_code?: SortOrder
    bot_code?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_clcoMinOrderByAggregateInput = {
    clco_no?: SortOrder
    clco_nm?: SortOrder
    clco_sctn_cd?: SortOrder
    use_url?: SortOrder
    hlth_rsrv_url?: SortOrder
    use_bgng_ymd?: SortOrder
    use_end_ymd?: SortOrder
    use_stts_cd?: SortOrder
    pic_nm?: SortOrder
    pic_dept_nm?: SortOrder
    pic_telno?: SortOrder
    b2b_type?: SortOrder
    comp_code?: SortOrder
    bot_code?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_clcoSumOrderByAggregateInput = {
    clco_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_clco_deptOrderByRelevanceInput = {
    fields: sy_clco_deptOrderByRelevanceFieldEnum | sy_clco_deptOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_clco_deptClco_noClco_dept_cdCompoundUniqueInput = {
    clco_no: number
    clco_dept_cd: string
  }

  export type sy_clco_deptCountOrderByAggregateInput = {
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    clco_dept_nm?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_clco_deptAvgOrderByAggregateInput = {
    clco_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_clco_deptMaxOrderByAggregateInput = {
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    clco_dept_nm?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_clco_deptMinOrderByAggregateInput = {
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    clco_dept_nm?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_clco_deptSumOrderByAggregateInput = {
    clco_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_dtl_cdOrderByRelevanceInput = {
    fields: sy_dtl_cdOrderByRelevanceFieldEnum | sy_dtl_cdOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_dtl_cdGrp_cdCdCompoundUniqueInput = {
    grp_cd: string
    cd: string
  }

  export type sy_dtl_cdCountOrderByAggregateInput = {
    grp_cd?: SortOrder
    cd?: SortOrder
    cd_nm?: SortOrder
    cd_desc?: SortOrder
    sort_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_dtl_cdAvgOrderByAggregateInput = {
    sort_seq?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_dtl_cdMaxOrderByAggregateInput = {
    grp_cd?: SortOrder
    cd?: SortOrder
    cd_nm?: SortOrder
    cd_desc?: SortOrder
    sort_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_dtl_cdMinOrderByAggregateInput = {
    grp_cd?: SortOrder
    cd?: SortOrder
    cd_nm?: SortOrder
    cd_desc?: SortOrder
    sort_seq?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_dtl_cdSumOrderByAggregateInput = {
    sort_seq?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_excel_histOrderByRelevanceInput = {
    fields: sy_excel_histOrderByRelevanceFieldEnum | sy_excel_histOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_excel_histCountOrderByAggregateInput = {
    hist_no?: SortOrder
    file_nm?: SortOrder
    row_cnt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
  }

  export type sy_excel_histAvgOrderByAggregateInput = {
    hist_no?: SortOrder
    row_cnt?: SortOrder
    regr_no?: SortOrder
  }

  export type sy_excel_histMaxOrderByAggregateInput = {
    hist_no?: SortOrder
    file_nm?: SortOrder
    row_cnt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
  }

  export type sy_excel_histMinOrderByAggregateInput = {
    hist_no?: SortOrder
    file_nm?: SortOrder
    row_cnt?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
  }

  export type sy_excel_histSumOrderByAggregateInput = {
    hist_no?: SortOrder
    row_cnt?: SortOrder
    regr_no?: SortOrder
  }

  export type sy_grp_cdOrderByRelevanceInput = {
    fields: sy_grp_cdOrderByRelevanceFieldEnum | sy_grp_cdOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_grp_cdCountOrderByAggregateInput = {
    grp_cd?: SortOrder
    grp_cd_nm?: SortOrder
    grp_cd_desc?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_grp_cdAvgOrderByAggregateInput = {
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_grp_cdMaxOrderByAggregateInput = {
    grp_cd?: SortOrder
    grp_cd_nm?: SortOrder
    grp_cd_desc?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_grp_cdMinOrderByAggregateInput = {
    grp_cd?: SortOrder
    grp_cd_nm?: SortOrder
    grp_cd_desc?: SortOrder
    use_tf?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_grp_cdSumOrderByAggregateInput = {
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_menuOrderByRelevanceInput = {
    fields: sy_menuOrderByRelevanceFieldEnum | sy_menuOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_menuCountOrderByAggregateInput = {
    menu_no?: SortOrder
    menu_nm?: SortOrder
    use_tf?: SortOrder
    expsr_tf?: SortOrder
    indct_seq?: SortOrder
    menu_desc?: SortOrder
    up_menu_no?: SortOrder
    note_cont?: SortOrder
    link_scrn_no?: SortOrder
    icon_nm?: SortOrder
    menu_url?: SortOrder
    vrsn?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_menuAvgOrderByAggregateInput = {
    menu_no?: SortOrder
    indct_seq?: SortOrder
    up_menu_no?: SortOrder
    link_scrn_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_menuMaxOrderByAggregateInput = {
    menu_no?: SortOrder
    menu_nm?: SortOrder
    use_tf?: SortOrder
    expsr_tf?: SortOrder
    indct_seq?: SortOrder
    menu_desc?: SortOrder
    up_menu_no?: SortOrder
    note_cont?: SortOrder
    link_scrn_no?: SortOrder
    icon_nm?: SortOrder
    menu_url?: SortOrder
    vrsn?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_menuMinOrderByAggregateInput = {
    menu_no?: SortOrder
    menu_nm?: SortOrder
    use_tf?: SortOrder
    expsr_tf?: SortOrder
    indct_seq?: SortOrder
    menu_desc?: SortOrder
    up_menu_no?: SortOrder
    note_cont?: SortOrder
    link_scrn_no?: SortOrder
    icon_nm?: SortOrder
    menu_url?: SortOrder
    vrsn?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_menuSumOrderByAggregateInput = {
    menu_no?: SortOrder
    indct_seq?: SortOrder
    up_menu_no?: SortOrder
    link_scrn_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_mngrOrderByRelevanceInput = {
    fields: sy_mngrOrderByRelevanceFieldEnum | sy_mngrOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_mngrCountOrderByAggregateInput = {
    mngr_no?: SortOrder
    mngr_id?: SortOrder
    mngr_pswd?: SortOrder
    mngr_nm?: SortOrder
    mngr_sctn_cd?: SortOrder
    mngr_stts_cd?: SortOrder
    email?: SortOrder
    mbph_no?: SortOrder
    use_tf?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    use_bgng_ymd?: SortOrder
    use_end_ymd?: SortOrder
    salt_val?: SortOrder
    cnsr_sctn_cd?: SortOrder
    fail_cnt?: SortOrder
    auth_suces_tf?: SortOrder
    auth_key?: SortOrder
    auth_token?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    regr_no?: SortOrder
  }

  export type sy_mngrAvgOrderByAggregateInput = {
    mngr_no?: SortOrder
    clco_no?: SortOrder
    fail_cnt?: SortOrder
    modr_no?: SortOrder
    regr_no?: SortOrder
  }

  export type sy_mngrMaxOrderByAggregateInput = {
    mngr_no?: SortOrder
    mngr_id?: SortOrder
    mngr_pswd?: SortOrder
    mngr_nm?: SortOrder
    mngr_sctn_cd?: SortOrder
    mngr_stts_cd?: SortOrder
    email?: SortOrder
    mbph_no?: SortOrder
    use_tf?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    use_bgng_ymd?: SortOrder
    use_end_ymd?: SortOrder
    salt_val?: SortOrder
    cnsr_sctn_cd?: SortOrder
    fail_cnt?: SortOrder
    auth_suces_tf?: SortOrder
    auth_key?: SortOrder
    auth_token?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    regr_no?: SortOrder
  }

  export type sy_mngrMinOrderByAggregateInput = {
    mngr_no?: SortOrder
    mngr_id?: SortOrder
    mngr_pswd?: SortOrder
    mngr_nm?: SortOrder
    mngr_sctn_cd?: SortOrder
    mngr_stts_cd?: SortOrder
    email?: SortOrder
    mbph_no?: SortOrder
    use_tf?: SortOrder
    clco_no?: SortOrder
    clco_dept_cd?: SortOrder
    use_bgng_ymd?: SortOrder
    use_end_ymd?: SortOrder
    salt_val?: SortOrder
    cnsr_sctn_cd?: SortOrder
    fail_cnt?: SortOrder
    auth_suces_tf?: SortOrder
    auth_key?: SortOrder
    auth_token?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    regr_no?: SortOrder
  }

  export type sy_mngrSumOrderByAggregateInput = {
    mngr_no?: SortOrder
    clco_no?: SortOrder
    fail_cnt?: SortOrder
    modr_no?: SortOrder
    regr_no?: SortOrder
  }

  export type sy_mngr_auth_grpMngr_noAuth_grp_noCompoundUniqueInput = {
    mngr_no: number
    auth_grp_no: number
  }

  export type sy_mngr_auth_grpCountOrderByAggregateInput = {
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_mngr_auth_grpAvgOrderByAggregateInput = {
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_mngr_auth_grpMaxOrderByAggregateInput = {
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_mngr_auth_grpMinOrderByAggregateInput = {
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_mngr_auth_grpSumOrderByAggregateInput = {
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_mngr_auth_grp_histOrderByRelevanceInput = {
    fields: sy_mngr_auth_grp_histOrderByRelevanceFieldEnum | sy_mngr_auth_grp_histOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_mngr_auth_grp_histCountOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    type?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    regr_no?: SortOrder
  }

  export type sy_mngr_auth_grp_histAvgOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    modr_no?: SortOrder
    regr_no?: SortOrder
  }

  export type sy_mngr_auth_grp_histMaxOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    type?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    regr_no?: SortOrder
  }

  export type sy_mngr_auth_grp_histMinOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    type?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
    regr_no?: SortOrder
  }

  export type sy_mngr_auth_grp_histSumOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    auth_grp_no?: SortOrder
    modr_no?: SortOrder
    regr_no?: SortOrder
  }

  export type sy_mngr_lgn_histOrderByRelevanceInput = {
    fields: sy_mngr_lgn_histOrderByRelevanceFieldEnum | sy_mngr_lgn_histOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_mngr_lgn_histCountOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    lgn_dt?: SortOrder
    lgn_ip_addr?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_mngr_lgn_histAvgOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_mngr_lgn_histMaxOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    lgn_dt?: SortOrder
    lgn_ip_addr?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_mngr_lgn_histMinOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    lgn_dt?: SortOrder
    lgn_ip_addr?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_mngr_lgn_histSumOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_mngr_pwd_histOrderByRelevanceInput = {
    fields: sy_mngr_pwd_histOrderByRelevanceFieldEnum | sy_mngr_pwd_histOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_mngr_pwd_histCountOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    modr_tp_cd?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_mngr_pwd_histAvgOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_mngr_pwd_histMaxOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    modr_tp_cd?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_mngr_pwd_histMinOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    modr_tp_cd?: SortOrder
    regr_no?: SortOrder
    reg_dt?: SortOrder
    modr_no?: SortOrder
    mod_dt?: SortOrder
  }

  export type sy_mngr_pwd_histSumOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_mngr_req_histOrderByRelevanceInput = {
    fields: sy_mngr_req_histOrderByRelevanceFieldEnum | sy_mngr_req_histOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sy_mngr_req_histCountOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    mngr_nm?: SortOrder
    auth_grp_nm?: SortOrder
    ip_addr?: SortOrder
    req_uri?: SortOrder
    req_method?: SortOrder
    req_body?: SortOrder
    reg_dt?: SortOrder
    regr_no?: SortOrder
    mod_dt?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_mngr_req_histAvgOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_mngr_req_histMaxOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    mngr_nm?: SortOrder
    auth_grp_nm?: SortOrder
    ip_addr?: SortOrder
    req_uri?: SortOrder
    req_method?: SortOrder
    req_body?: SortOrder
    reg_dt?: SortOrder
    regr_no?: SortOrder
    mod_dt?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_mngr_req_histMinOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    mngr_nm?: SortOrder
    auth_grp_nm?: SortOrder
    ip_addr?: SortOrder
    req_uri?: SortOrder
    req_method?: SortOrder
    req_body?: SortOrder
    reg_dt?: SortOrder
    regr_no?: SortOrder
    mod_dt?: SortOrder
    modr_no?: SortOrder
  }

  export type sy_mngr_req_histSumOrderByAggregateInput = {
    hist_no?: SortOrder
    mngr_no?: SortOrder
    regr_no?: SortOrder
    modr_no?: SortOrder
  }

  export type Enumtest_user_genderNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.test_user_gender | Enumtest_user_genderFieldRefInput<$PrismaModel> | null
    in?: $Enums.test_user_gender[] | null
    notIn?: $Enums.test_user_gender[] | null
    not?: NestedEnumtest_user_genderNullableFilter<$PrismaModel> | $Enums.test_user_gender | null
  }

  export type test_userOrderByRelevanceInput = {
    fields: test_userOrderByRelevanceFieldEnum | test_userOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type test_userCountOrderByAggregateInput = {
    user_no?: SortOrder
    id?: SortOrder
    pw?: SortOrder
    salt_val?: SortOrder
    auth_token?: SortOrder
    kakao_user_token?: SortOrder
    comp_code?: SortOrder
    name?: SortOrder
    gender?: SortOrder
    birth_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type test_userAvgOrderByAggregateInput = {
    user_no?: SortOrder
  }

  export type test_userMaxOrderByAggregateInput = {
    user_no?: SortOrder
    id?: SortOrder
    pw?: SortOrder
    salt_val?: SortOrder
    auth_token?: SortOrder
    kakao_user_token?: SortOrder
    comp_code?: SortOrder
    name?: SortOrder
    gender?: SortOrder
    birth_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type test_userMinOrderByAggregateInput = {
    user_no?: SortOrder
    id?: SortOrder
    pw?: SortOrder
    salt_val?: SortOrder
    auth_token?: SortOrder
    kakao_user_token?: SortOrder
    comp_code?: SortOrder
    name?: SortOrder
    gender?: SortOrder
    birth_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type test_userSumOrderByAggregateInput = {
    user_no?: SortOrder
  }

  export type Enumtest_user_genderNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.test_user_gender | Enumtest_user_genderFieldRefInput<$PrismaModel> | null
    in?: $Enums.test_user_gender[] | null
    notIn?: $Enums.test_user_gender[] | null
    not?: NestedEnumtest_user_genderNullableWithAggregatesFilter<$PrismaModel> | $Enums.test_user_gender | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtest_user_genderNullableFilter<$PrismaModel>
    _max?: NestedEnumtest_user_genderNullableFilter<$PrismaModel>
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableEnumtest_user_genderFieldUpdateOperationsInput = {
    set?: $Enums.test_user_gender | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumtest_user_genderNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.test_user_gender | Enumtest_user_genderFieldRefInput<$PrismaModel> | null
    in?: $Enums.test_user_gender[] | null
    notIn?: $Enums.test_user_gender[] | null
    not?: NestedEnumtest_user_genderNullableFilter<$PrismaModel> | $Enums.test_user_gender | null
  }

  export type NestedEnumtest_user_genderNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.test_user_gender | Enumtest_user_genderFieldRefInput<$PrismaModel> | null
    in?: $Enums.test_user_gender[] | null
    notIn?: $Enums.test_user_gender[] | null
    not?: NestedEnumtest_user_genderNullableWithAggregatesFilter<$PrismaModel> | $Enums.test_user_gender | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtest_user_genderNullableFilter<$PrismaModel>
    _max?: NestedEnumtest_user_genderNullableFilter<$PrismaModel>
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}